2021-03-11 12:59:20,906 [main:66] - Compilation checking started
2021-03-11 12:59:24,280 [main:52] - Trying to change 1563 nodes
2021-03-11 12:59:24,280 [main:56] - replacing (aByte[0], Byte)
2021-03-11 12:59:24,281 [main:38] - replacing aByte[0] Byte
2021-03-11 12:59:24,282 [main:42] - Getting value of type Byte
2021-03-11 12:59:24,449 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:24,451 [main:46] - GENERATED VALUE OF TYPE Byte = -91
2021-03-11 12:59:24,452 [main:49] - GENERATED IS CALL =false
2021-03-11 12:59:25,350 [main:55] - randomType = Sequence<Float>
2021-03-11 12:59:25,367 [main:94] - GETTING Byte from Long
2021-03-11 12:59:25,501 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]]
2021-03-11 12:59:25,502 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 12:59:25,502 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]
2021-03-11 12:59:25,503 [main:105] - GENERATED CALL = (aLong[0]--).toByte().inv()
2021-03-11 12:59:25,503 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]]
2021-03-11 12:59:25,503 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 12:59:25,503 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 12:59:25,503 [main:105] - GENERATED CALL = (aLong[0]--).toChar().toByte()
2021-03-11 12:59:25,505 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]]
2021-03-11 12:59:25,505 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 12:59:25,505 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]
2021-03-11 12:59:25,505 [main:105] - GENERATED CALL = (aLong[0]--).toByte().takeLowestOneBit()
2021-03-11 12:59:25,506 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun inc(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@49ecd74f]]
2021-03-11 12:59:25,506 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 12:59:25,506 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@49ecd74f]
2021-03-11 12:59:25,506 [main:105] - GENERATED CALL = (aLong[0]--).toByte().inc()
2021-03-11 12:59:25,506 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]]
2021-03-11 12:59:25,506 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 12:59:25,507 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 12:59:25,507 [main:105] - GENERATED CALL = (aLong[0]--).toShort().toByte()
2021-03-11 12:59:25,507 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateRight(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@60497689]]
2021-03-11 12:59:25,507 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 12:59:25,507 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateRight(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@60497689]
2021-03-11 12:59:25,677 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:25,678 [main:105] - GENERATED CALL = (aLong[0]--).toByte().rotateRight(1020321332)
2021-03-11 12:59:25,679 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]]
2021-03-11 12:59:25,679 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 12:59:25,679 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]
2021-03-11 12:59:25,680 [main:105] - GENERATED CALL = (aLong[0]--).toByte().dec()
2021-03-11 12:59:25,680 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeHighestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc8d02]]
2021-03-11 12:59:25,680 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 12:59:25,680 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeHighestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc8d02]
2021-03-11 12:59:25,681 [main:105] - GENERATED CALL = (aLong[0]--).toByte().takeHighestOneBit()
2021-03-11 12:59:25,681 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]]
2021-03-11 12:59:25,681 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 12:59:25,681 [main:105] - GENERATED CALL = (aLong[0]--).toByte()
2021-03-11 12:59:25,681 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public open fun toByte(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@134162cc]]
2021-03-11 12:59:25,681 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 12:59:25,681 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@134162cc]
2021-03-11 12:59:25,682 [main:105] - GENERATED CALL = (aLong[0]--).toByte().toByte()
2021-03-11 12:59:25,682 [main:63] - replacement of aByte[0] of type Byte is (aLong[0]--).toByte().dec()
2021-03-11 12:59:25,895 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:59:25,895 [main:66] - Compilation checking started
2021-03-11 12:59:26,718 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>(1)
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${bByte[0]}"

    aByte[0]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${aShort[0]} != ${bShort[0]}"
    
    aInt[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${aInt[0]} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aDouble[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[0]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}
2021-03-11 12:59:26,726 [main:56] - replacing (0, Int)
2021-03-11 12:59:26,727 [main:38] - replacing 0 Int
2021-03-11 12:59:26,728 [main:42] - Getting value of type Int
2021-03-11 12:59:26,914 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:26,914 [main:46] - GENERATED VALUE OF TYPE Int = -613822366
2021-03-11 12:59:26,915 [main:49] - GENERATED IS CALL =false
2021-03-11 12:59:27,487 [main:55] - randomType = Collection<Int?>?
2021-03-11 12:59:27,488 [main:94] - GETTING Int from Int
2021-03-11 12:59:27,575 [main:101] - Case = [public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 12:59:27,575 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 12:59:27,575 [main:105] - GENERATED CALL = (bInt[0]++).inv()
2021-03-11 12:59:27,576 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 12:59:27,576 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:27,576 [main:105] - GENERATED CALL = (bInt[0]++).toInt().absoluteValue
2021-03-11 12:59:27,576 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 12:59:27,577 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 12:59:27,743 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:27,744 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 12:59:27,935 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:27,937 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(1154373693).or(-2000725912)
2021-03-11 12:59:27,937 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]]
2021-03-11 12:59:27,937 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 12:59:27,937 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]
2021-03-11 12:59:27,937 [main:105] - GENERATED CALL = (bInt[0]++).toFloat().roundToInt()
2021-03-11 12:59:27,938 [main:101] - Case = [public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 12:59:27,938 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 12:59:27,938 [main:105] - GENERATED CALL = (bInt[0]++).inc()
2021-03-11 12:59:27,938 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 12:59:27,938 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:27,938 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 12:59:27,939 [main:105] - GENERATED CALL = (bInt[0]++).toInt().takeHighestOneBit()
2021-03-11 12:59:27,939 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 12:59:27,939 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 12:59:28,080 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:28,082 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(-462189363).sign
2021-03-11 12:59:28,082 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@5f449f3f]]
2021-03-11 12:59:28,082 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 12:59:28,082 [main:105] - GENERATED CALL = (bInt[0]++).toLong().sign
2021-03-11 12:59:28,082 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 12:59:28,083 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 12:59:28,294 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:28,296 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 12:59:28,477 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:28,478 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(90718041).shr(646364890)
2021-03-11 12:59:28,478 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 12:59:28,478 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 12:59:28,478 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 12:59:28,680 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:28,681 [main:105] - GENERATED CALL = (bInt[0]++).toShort().times(101)
2021-03-11 12:59:28,681 [main:63] - replacement of 0 of type Int is (bInt[0]++).toShort().times(101)
2021-03-11 12:59:28,837 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:59:28,838 [main:66] - Compilation checking started
2021-03-11 12:59:29,443 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>(1)
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${bByte[0]}"

    aByte[0]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${aShort[0]} != ${bShort[0]}"
    
    aInt[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${aInt[0]} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aDouble[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}
2021-03-11 12:59:29,449 [main:56] - replacing (aDouble, Array<Double>)
2021-03-11 12:59:29,451 [main:38] - replacing aDouble Array<Double>
2021-03-11 12:59:29,451 [main:42] - Getting value of type Array<Double>
2021-03-11 12:59:29,637 [main:302] - generating value of type = Array<Double> false depth = 0
2021-03-11 12:59:29,783 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Double): Array<Double> = TODO()
2021-03-11 12:59:29,789 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Double): Array<Double> = TODO()
2021-03-11 12:59:29,964 [main:302] - generating value of type = Double true depth = 3
2021-03-11 12:59:29,967 [main:95] - GENERATED = arrayOf<Double>(0.6114108611106692)
2021-03-11 12:59:29,967 [main:46] - GENERATED VALUE OF TYPE Array<Double> = arrayOf<Double>(0.6114108611106692)
2021-03-11 12:59:29,967 [main:49] - GENERATED IS CALL =true
2021-03-11 12:59:29,970 [main:55] - randomType = Double
2021-03-11 12:59:30,147 [main:302] - generating value of type = Double true depth = 0
2021-03-11 12:59:30,205 [main:94] - GETTING Array<Double> from Long
2021-03-11 12:59:30,268 [main:94] - GETTING Array<Double> from Long
2021-03-11 12:59:30,270 [main:94] - GETTING Array<Double> from Array<Short>
2021-03-11 12:59:30,289 [main:63] - replacement of aDouble of type Array<Double> is aShort
2021-03-11 12:59:30,464 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:59:30,465 [main:66] - Compilation checking started
2021-03-11 12:59:31,062 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>(1)
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${bByte[0]}"

    aByte[0]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${aShort[0]} != ${bShort[0]}"
    
    aInt[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${aInt[0]} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:31,068 [main:56] - replacing (0, Int)
2021-03-11 12:59:31,069 [main:38] - replacing 0 Int
2021-03-11 12:59:31,069 [main:42] - Getting value of type Int
2021-03-11 12:59:31,212 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:31,213 [main:46] - GENERATED VALUE OF TYPE Int = 701001685
2021-03-11 12:59:31,213 [main:49] - GENERATED IS CALL =false
2021-03-11 12:59:32,240 [main:55] - randomType = Function2<Int, LinkedHashSet<Function2<Float, Collection<String>, UByte>>, Array<Char>>
2021-03-11 12:59:32,242 [main:94] - GETTING Int from Byte
2021-03-11 12:59:32,305 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]]
2021-03-11 12:59:32,305 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:32,305 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 12:59:32,421 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:32,423 [main:105] - GENERATED CALL = (aByte[0]++).toInt().and(-825878729)
2021-03-11 12:59:32,423 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2ecd32f2], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]]
2021-03-11 12:59:32,423 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2ecd32f2]
2021-03-11 12:59:32,423 [main:137] - GENERATING call of type @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]
2021-03-11 12:59:32,423 [main:105] - GENERATED CALL = (aByte[0]++).toChar().digitToInt()
2021-03-11 12:59:32,424 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 12:59:32,424 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:32,424 [main:105] - GENERATED CALL = (aByte[0]++).toInt().absoluteValue
2021-03-11 12:59:32,424 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 12:59:32,424 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:32,424 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 12:59:32,634 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:32,636 [main:105] - GENERATED CALL = (aByte[0]++).toInt().coerceAtMost(936915014)
2021-03-11 12:59:32,637 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]]
2021-03-11 12:59:32,637 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 12:59:32,637 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]
2021-03-11 12:59:32,789 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:32,790 [main:105] - GENERATED CALL = (aByte[0]++).toShort().rem(93)
2021-03-11 12:59:32,790 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 12:59:32,790 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 12:59:32,904 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:32,905 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 12:59:33,021 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:33,022 [main:105] - GENERATED CALL = (aByte[0]++).compareTo(125).times(-29)
2021-03-11 12:59:33,022 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]]
2021-03-11 12:59:33,022 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 12:59:33,130 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:59:33,131 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]
2021-03-11 12:59:33,132 [main:105] - GENERATED CALL = (aByte[0]++).div(0.27717453f).toBits()
2021-03-11 12:59:33,132 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]]
2021-03-11 12:59:33,132 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 12:59:33,132 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]
2021-03-11 12:59:33,132 [main:105] - GENERATED CALL = (aByte[0]++).toByte().toInt()
2021-03-11 12:59:33,132 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]]
2021-03-11 12:59:33,132 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 12:59:33,133 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 12:59:33,268 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:33,270 [main:105] - GENERATED CALL = (aByte[0]++).toShort().compareTo(-56)
2021-03-11 12:59:33,270 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 12:59:33,271 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 12:59:33,391 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:33,392 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 12:59:33,392 [main:105] - GENERATED CALL = (aByte[0]++).compareTo(-52).countLeadingZeroBits()
2021-03-11 12:59:33,392 [main:63] - replacement of 0 of type Int is (aByte[0]++).div(0.27717453f).toBits()
2021-03-11 12:59:33,494 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:59:33,495 [main:66] - Compilation checking started
2021-03-11 12:59:34,057 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>(1)
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${bByte[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${aShort[0]} != ${bShort[0]}"
    
    aInt[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${aInt[0]} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:34,061 [main:56] - replacing (bByte, ByteArray)
2021-03-11 12:59:34,062 [main:38] - replacing bByte ByteArray
2021-03-11 12:59:34,062 [main:42] - Getting value of type ByteArray
2021-03-11 12:59:34,190 [main:302] - generating value of type = ByteArray false depth = 0
2021-03-11 12:59:34,302 [main:43] - GENERATING CALL OF fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 12:59:34,304 [main:61] - WITHOUT TYPE PARAMS = fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 12:59:34,417 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 12:59:34,418 [main:95] - GENERATED = byteArrayOf(65)
2021-03-11 12:59:34,418 [main:46] - GENERATED VALUE OF TYPE ByteArray = byteArrayOf(65)
2021-03-11 12:59:34,418 [main:49] - GENERATED IS CALL =true
2021-03-11 12:59:34,420 [main:55] - randomType = String
2021-03-11 12:59:34,525 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:59:34,556 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.String.encodeToByteArray(): kotlin.ByteArray defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4cbc77b3]
2021-03-11 12:59:34,557 [main:66] - Generated call from random type = ("taohs").encodeToByteArray()
2021-03-11 12:59:34,557 [main:63] - replacement of bByte of type ByteArray is ("taohs").encodeToByteArray()
2021-03-11 12:59:34,661 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:59:34,662 [main:66] - Compilation checking started
2021-03-11 12:59:35,200 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>(1)
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${aShort[0]} != ${bShort[0]}"
    
    aInt[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${aInt[0]} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:35,206 [main:56] - replacing (1, Int)
2021-03-11 12:59:35,207 [main:38] - replacing 1 Int
2021-03-11 12:59:35,208 [main:42] - Getting value of type Int
2021-03-11 12:59:35,334 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:35,335 [main:46] - GENERATED VALUE OF TYPE Int = 677551709
2021-03-11 12:59:35,335 [main:49] - GENERATED IS CALL =false
2021-03-11 12:59:35,337 [main:55] - randomType = Long
2021-03-11 12:59:35,448 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:59:35,499 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 12:59:35,608 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:35,609 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 12:59:35,721 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:35,722 [main:66] - Generated call from random type = (8556213756910274601).compareTo(-28).and(867346585)
2021-03-11 12:59:35,723 [main:94] - GETTING Int from Byte
2021-03-11 12:59:35,781 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@5f449f3f]]
2021-03-11 12:59:35,781 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 12:59:35,898 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:59:35,899 [main:105] - GENERATED CALL = (aByte[0]--).div(-7386665716229036472).sign
2021-03-11 12:59:35,900 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 12:59:35,900 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:35,900 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 12:59:36,029 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:36,030 [main:105] - GENERATED CALL = (aByte[0]--).toInt().minus(-47)
2021-03-11 12:59:36,030 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 12:59:36,030 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:36,030 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 12:59:36,031 [main:105] - GENERATED CALL = (aByte[0]--).toInt().countLeadingZeroBits()
2021-03-11 12:59:36,031 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]]
2021-03-11 12:59:36,031 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 12:59:36,137 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:59:36,138 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]
2021-03-11 12:59:36,138 [main:105] - GENERATED CALL = (aByte[0]--).div(0.83252156f).toBits()
2021-03-11 12:59:36,138 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 12:59:36,138 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:36,138 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 12:59:36,244 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:36,245 [main:105] - GENERATED CALL = (aByte[0]--).toInt().plus(72)
2021-03-11 12:59:36,245 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]]
2021-03-11 12:59:36,245 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 12:59:36,246 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]
2021-03-11 12:59:36,246 [main:105] - GENERATED CALL = (aByte[0]--).toShort().unaryPlus()
2021-03-11 12:59:36,246 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 12:59:36,246 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 12:59:36,348 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:36,349 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 12:59:36,451 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:36,452 [main:105] - GENERATED CALL = (aByte[0]--).compareTo(43).rotateRight(1088804234)
2021-03-11 12:59:36,452 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]]
2021-03-11 12:59:36,452 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 12:59:36,453 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]
2021-03-11 12:59:36,453 [main:105] - GENERATED CALL = (aByte[0]--).toShort().countOneBits()
2021-03-11 12:59:36,453 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 12:59:36,453 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 12:59:36,556 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:36,558 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 12:59:36,558 [main:105] - GENERATED CALL = (aByte[0]--).compareTo(-65).toInt()
2021-03-11 12:59:36,558 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 12:59:36,558 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 12:59:36,710 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:36,712 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 12:59:36,827 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:36,828 [main:105] - GENERATED CALL = (aByte[0]--).compareTo(77).coerceAtMost(722529874)
2021-03-11 12:59:36,828 [main:63] - replacement of 1 of type Int is (aByte[0]--).compareTo(77).coerceAtMost(722529874)
2021-03-11 12:59:36,933 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:59:36,933 [main:66] - Compilation checking started
2021-03-11 12:59:37,447 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${aShort[0]} != ${bShort[0]}"
    
    aInt[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${aInt[0]} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:37,451 [main:56] - replacing (aInt, Array<Int>)
2021-03-11 12:59:37,452 [main:38] - replacing aInt Array<Int>
2021-03-11 12:59:37,452 [main:42] - Getting value of type Array<Int>
2021-03-11 12:59:37,565 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 12:59:37,703 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Int): Array<Int> = TODO()
2021-03-11 12:59:37,705 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Int): Array<Int> = TODO()
2021-03-11 12:59:38,058 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:59:38,059 [main:302] - generating value of type = Function1<Int, Int> false depth = 3
2021-03-11 12:59:38,060 [main:302] - generating value of type = Int true depth = 4
2021-03-11 12:59:38,062 [main:95] - GENERATED = Array<Int>(1981781603, {a: Int -> 1300800566})
2021-03-11 12:59:38,062 [main:46] - GENERATED VALUE OF TYPE Array<Int> = Array<Int>(1981781603, {a: Int -> 1300800566})
2021-03-11 12:59:38,062 [main:49] - GENERATED IS CALL =true
2021-03-11 12:59:38,186 [main:55] - randomType = ULong
2021-03-11 12:59:38,303 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 12:59:38,355 [main:94] - GETTING Array<Int> from Float
2021-03-11 12:59:38,410 [main:94] - GETTING Array<Int> from Short
2021-03-11 12:59:38,466 [main:94] - GETTING Array<Int> from Long
2021-03-11 12:59:38,542 [main:94] - GETTING Array<Int> from DoubleArray
2021-03-11 12:59:38,565 [main:94] - GETTING Array<Int> from Double
2021-03-11 12:59:38,614 [main:94] - GETTING Array<Int> from Short
2021-03-11 12:59:38,615 [main:94] - GETTING Array<Int> from Byte
2021-03-11 12:59:38,659 [main:94] - GETTING Array<Int> from Float
2021-03-11 12:59:38,660 [main:94] - GETTING Array<Int> from Array<Byte>
2021-03-11 12:59:38,673 [main:63] - replacement of aInt of type Array<Int> is Array<Int>(1981781603, {a: Int -> 1300800566})
2021-03-11 12:59:38,790 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:59:38,791 [main:66] - Compilation checking started
2021-03-11 12:59:39,451 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${aShort[0]} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${aInt[0]} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:39,461 [main:56] - replacing (aInt[0], Int)
2021-03-11 12:59:39,462 [main:38] - replacing aInt[0] Int
2021-03-11 12:59:39,462 [main:42] - Getting value of type Int
2021-03-11 12:59:39,606 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:39,606 [main:46] - GENERATED VALUE OF TYPE Int = 317683914
2021-03-11 12:59:39,607 [main:49] - GENERATED IS CALL =false
2021-03-11 12:59:40,085 [main:55] - randomType = Array<UShort>
2021-03-11 12:59:40,210 [main:302] - generating value of type = Array<UShort> false depth = 0
2021-03-11 12:59:40,334 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: UShort): Array<UShort> = TODO()
2021-03-11 12:59:40,337 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: UShort): Array<UShort> = TODO()
2021-03-11 12:59:40,502 [main:302] - generating value of type = UShort true depth = 3
2021-03-11 12:59:40,504 [main:95] - GENERATED = arrayOf<UShort>(11337.toUShort())
2021-03-11 12:59:40,522 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 12:59:40,523 [main:66] - Generated call from random type = (arrayOf<UShort>(11337.toUShort())).size.inc()
2021-03-11 12:59:40,524 [main:94] - GETTING Int from Long
2021-03-11 12:59:40,557 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 12:59:40,557 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 12:59:40,679 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:40,680 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 12:59:40,680 [main:105] - GENERATED CALL = (bLong[0]).compareTo(-124).takeHighestOneBit()
2021-03-11 12:59:40,680 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]]
2021-03-11 12:59:40,681 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 12:59:40,681 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]
2021-03-11 12:59:40,855 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:40,857 [main:105] - GENERATED CALL = (bLong[0]).toShort().div(-110)
2021-03-11 12:59:40,857 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 12:59:40,857 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:40,857 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 12:59:41,016 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:41,018 [main:105] - GENERATED CALL = (bLong[0]).toInt().coerceAtMost(286117308)
2021-03-11 12:59:41,018 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@674e1c07]]
2021-03-11 12:59:41,018 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 12:59:41,018 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@674e1c07]
2021-03-11 12:59:41,141 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:41,142 [main:105] - GENERATED CALL = (bLong[0]).toByte().minus(-89)
2021-03-11 12:59:41,142 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]]
2021-03-11 12:59:41,143 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 12:59:41,143 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]
2021-03-11 12:59:41,264 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:41,266 [main:105] - GENERATED CALL = (bLong[0]).toShort().rem(66)
2021-03-11 12:59:41,266 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 12:59:41,266 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:41,266 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 12:59:41,387 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:41,389 [main:105] - GENERATED CALL = (bLong[0]).toInt().shr(-331358716)
2021-03-11 12:59:41,389 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 12:59:41,389 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:41,389 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 12:59:41,389 [main:105] - GENERATED CALL = (bLong[0]).toInt().inv()
2021-03-11 12:59:41,389 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 12:59:41,389 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 12:59:41,558 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:41,559 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 12:59:41,560 [main:105] - GENERATED CALL = (bLong[0]).compareTo(80).unaryMinus()
2021-03-11 12:59:41,560 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]]
2021-03-11 12:59:41,560 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 12:59:41,560 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]
2021-03-11 12:59:41,560 [main:105] - GENERATED CALL = (bLong[0]).toDouble().toInt()
2021-03-11 12:59:41,561 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 12:59:41,561 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 12:59:41,690 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:41,691 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 12:59:41,806 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:41,807 [main:105] - GENERATED CALL = (bLong[0]).compareTo(100).compareTo(92)
2021-03-11 12:59:41,807 [main:63] - replacement of aInt[0] of type Int is (bLong[0]).toShort().div(-110)
2021-03-11 12:59:41,915 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:59:41,916 [main:66] - Compilation checking started
2021-03-11 12:59:42,441 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${aShort[0]} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:42,448 [main:56] - replacing (aShort[0], Short)
2021-03-11 12:59:42,450 [main:38] - replacing aShort[0] Short
2021-03-11 12:59:42,450 [main:42] - Getting value of type Short
2021-03-11 12:59:42,618 [main:302] - generating value of type = Short true depth = 0
2021-03-11 12:59:42,619 [main:46] - GENERATED VALUE OF TYPE Short = 16319
2021-03-11 12:59:42,619 [main:49] - GENERATED IS CALL =false
2021-03-11 12:59:42,898 [main:55] - randomType = Map<Boolean, Float>
2021-03-11 12:59:42,899 [main:94] - GETTING Short from ByteArray
2021-03-11 12:59:42,914 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ByteArray[DeserializedPropertyDescriptor@232001db], public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]]
2021-03-11 12:59:42,915 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 12:59:42,915 [main:105] - GENERATED CALL = (bByte).size.toShort()
2021-03-11 12:59:42,915 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@791a2fb8], public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]]
2021-03-11 12:59:42,915 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@791a2fb8]
2021-03-11 12:59:43,033 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:43,034 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 12:59:43,034 [main:105] - GENERATED CALL = (bByte).get(-1204664375).toShort()
2021-03-11 12:59:43,034 [main:63] - replacement of aShort[0] of type Short is (bByte).get(-1204664375).toShort()
2021-03-11 12:59:43,150 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:59:43,150 [main:66] - Compilation checking started
2021-03-11 12:59:43,749 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:43,756 [main:56] - replacing ("Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}", String)
2021-03-11 12:59:43,758 [main:38] - replacing "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}" String
2021-03-11 12:59:43,758 [main:42] - Getting value of type String
2021-03-11 12:59:43,886 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:59:43,887 [main:46] - GENERATED VALUE OF TYPE String = "fiqjb"
2021-03-11 12:59:43,887 [main:49] - GENERATED IS CALL =false
2021-03-11 12:59:44,404 [main:55] - randomType = List<Function1<UInt, HashSet<Byte>>>
2021-03-11 12:59:44,406 [main:94] - GETTING String from Array<Int>
2021-03-11 12:59:44,425 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 12:59:44,425 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 12:59:44,569 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:44,571 [main:105] - GENERATED CALL = (aInt).size.toString(888526661)
2021-03-11 12:59:44,571 [main:101] - Case = [@kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@656a8c8d]]
2021-03-11 12:59:44,572 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@656a8c8d]
2021-03-11 12:59:44,572 [main:105] - GENERATED CALL = (aInt).contentToString()
2021-03-11 12:59:44,572 [main:101] - Case = [public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@153a7805]]
2021-03-11 12:59:44,573 [main:137] - GENERATING call of type public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@153a7805]
2021-03-11 12:59:44,701 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:59:44,815 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:59:44,926 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:59:44,929 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:59:45,174 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:59:45,175 [main:95] - GENERATED = StringBuilder("rucwz")
2021-03-11 12:59:45,305 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:59:45,417 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:45,529 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 12:59:45,636 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 12:59:45,637 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 12:59:45,752 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:59:45,754 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 12:59:46,015 [main:302] - generating value of type = String true depth = 4
2021-03-11 12:59:46,017 [main:95] - GENERATED = StringBuilder("mtzjk")
2021-03-11 12:59:46,018 [main:105] - GENERATED CALL = (aInt).joinToString("qzrji", StringBuilder("rucwz"), "ugcwv", 871196404, "yzgzu", {a: T -> StringBuilder("mtzjk")})
2021-03-11 12:59:46,018 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2544f6f1]]
2021-03-11 12:59:46,018 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2544f6f1]
2021-03-11 12:59:46,019 [main:105] - GENERATED CALL = (aInt).contentDeepToString()
2021-03-11 12:59:46,019 [main:63] - replacement of "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}" of type String is (aInt).joinToString("qzrji", StringBuilder("rucwz"), "ugcwv", 871196404, "yzgzu", {a: T -> StringBuilder("mtzjk")})
2021-03-11 12:59:46,122 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:59:46,122 [main:66] - Compilation checking started
2021-03-11 12:59:46,511 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (aInt).joinToString("qzrji", StringBuilder("rucwz"), "ugcwv", 871196404, "yzgzu", {a: T -> StringBuilder("mtzjk")})

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:46,516 [main:56] - replacing (aByte, Array<Byte>)
2021-03-11 12:59:46,517 [main:38] - replacing aByte Array<Byte>
2021-03-11 12:59:46,517 [main:42] - Getting value of type Array<Byte>
2021-03-11 12:59:46,656 [main:302] - generating value of type = Array<Byte> false depth = 0
2021-03-11 12:59:46,788 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Byte> = TODO()
2021-03-11 12:59:46,791 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Byte> = TODO()
2021-03-11 12:59:46,936 [main:95] - GENERATED = emptyArray<Byte>()
2021-03-11 12:59:46,937 [main:46] - GENERATED VALUE OF TYPE Array<Byte> = emptyArray<Byte>()
2021-03-11 12:59:46,937 [main:49] - GENERATED IS CALL =true
2021-03-11 12:59:46,939 [main:55] - randomType = String
2021-03-11 12:59:47,081 [main:302] - generating value of type = String true depth = 0
2021-03-11 12:59:47,117 [main:94] - GETTING Array<Byte> from Short
2021-03-11 12:59:47,180 [main:94] - GETTING Array<Byte> from Byte
2021-03-11 12:59:47,243 [main:94] - GETTING Array<Byte> from Short
2021-03-11 12:59:47,245 [main:94] - GETTING Array<Byte> from Float
2021-03-11 12:59:47,303 [main:94] - GETTING Array<Byte> from Int
2021-03-11 12:59:47,366 [main:94] - GETTING Array<Byte> from Int
2021-03-11 12:59:47,367 [main:94] - GETTING Array<Byte> from Double
2021-03-11 12:59:47,417 [main:94] - GETTING Array<Byte> from Array<Float>
2021-03-11 12:59:47,433 [main:63] - replacement of aByte of type Array<Byte> is aFloat
2021-03-11 12:59:47,554 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 12:59:47,555 [main:66] - Compilation checking started
2021-03-11 12:59:47,878 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (aFloat[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:47,883 [main:56] - replacing (doubleArrayOf(1.0), DoubleArray)
2021-03-11 12:59:47,884 [main:38] - replacing doubleArrayOf(1.0) DoubleArray
2021-03-11 12:59:47,884 [main:42] - Getting value of type DoubleArray
2021-03-11 12:59:48,007 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 12:59:48,139 [main:43] - GENERATING CALL OF fun DoubleArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Double): DoubleArray = TODO()
2021-03-11 12:59:48,141 [main:61] - WITHOUT TYPE PARAMS = fun DoubleArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Double): DoubleArray = TODO()
2021-03-11 12:59:48,521 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:59:48,522 [main:302] - generating value of type = Function1<Int, Double> false depth = 3
2021-03-11 12:59:48,522 [main:302] - generating value of type = Double true depth = 4
2021-03-11 12:59:48,523 [main:95] - GENERATED = DoubleArray(-1608727403, {a: Int -> 0.008749912890284706})
2021-03-11 12:59:48,524 [main:46] - GENERATED VALUE OF TYPE DoubleArray = DoubleArray(-1608727403, {a: Int -> 0.008749912890284706})
2021-03-11 12:59:48,524 [main:49] - GENERATED IS CALL =true
2021-03-11 12:59:48,641 [main:55] - randomType = UShort
2021-03-11 12:59:48,745 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 12:59:48,784 [main:94] - GETTING DoubleArray from Double
2021-03-11 12:59:48,813 [main:94] - GETTING DoubleArray from Float
2021-03-11 12:59:48,849 [main:94] - GETTING DoubleArray from Array<Float>
2021-03-11 12:59:48,862 [main:101] - Case = [public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]]
2021-03-11 12:59:48,862 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]
2021-03-11 12:59:48,863 [main:105] - GENERATED CALL = (aFloat).toDoubleArray()
2021-03-11 12:59:48,863 [main:63] - replacement of doubleArrayOf(1.0) of type DoubleArray is (aFloat).toDoubleArray()
2021-03-11 12:59:49,026 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:59:49,026 [main:66] - Compilation checking started
2021-03-11 12:59:49,342 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = (aFloat).toDoubleArray()

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (aByte[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:49,348 [main:56] - replacing (aByte, Array<Byte>)
2021-03-11 12:59:49,350 [main:38] - replacing aByte Array<Byte>
2021-03-11 12:59:49,350 [main:42] - Getting value of type Array<Byte>
2021-03-11 12:59:49,468 [main:302] - generating value of type = Array<Byte> false depth = 0
2021-03-11 12:59:49,581 [main:43] - GENERATING CALL OF fun <T> arrayOfNulls(size: kotlin.Int): Array<Byte> = TODO()
2021-03-11 12:59:49,583 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOfNulls(size: kotlin.Int): Array<Byte> = TODO()
2021-03-11 12:59:49,808 [main:302] - generating value of type = Int true depth = 3
2021-03-11 12:59:49,809 [main:95] - GENERATED = arrayOfNulls<Byte>(-356669437)
2021-03-11 12:59:49,809 [main:46] - GENERATED VALUE OF TYPE Array<Byte> = arrayOfNulls<Byte>(-356669437)
2021-03-11 12:59:49,809 [main:49] - GENERATED IS CALL =true
2021-03-11 12:59:50,267 [main:55] - randomType = ArrayList<Function1<Char, Double?>>
2021-03-11 12:59:50,373 [main:302] - generating value of type = ArrayList<Function1<Char, Double?>> false depth = 0
2021-03-11 12:59:50,484 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: Function1<Char, Double?>): ArrayList<Function1<Char, Double?>> = TODO()
2021-03-11 12:59:50,486 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: Function1<Char, Double?>): ArrayList<Function1<Char, Double?>> = TODO()
2021-03-11 12:59:50,667 [main:302] - generating value of type = Function1<Char, Double?> false depth = 3
2021-03-11 12:59:50,668 [main:302] - generating value of type = Double true depth = 4
2021-03-11 12:59:50,670 [main:95] - GENERATED = arrayListOf<Function1<Char, Double?>>({a: Char -> 0.9922030228881782})
2021-03-11 12:59:50,959 [main:94] - GETTING Array<Byte> from Int
2021-03-11 12:59:51,027 [main:94] - GETTING Array<Byte> from Float
2021-03-11 12:59:51,091 [main:94] - GETTING Array<Byte> from Float
2021-03-11 12:59:51,092 [main:94] - GETTING Array<Byte> from Double
2021-03-11 12:59:51,148 [main:94] - GETTING Array<Byte> from Byte
2021-03-11 12:59:51,202 [main:94] - GETTING Array<Byte> from DoubleArray
2021-03-11 12:59:51,219 [main:94] - GETTING Array<Byte> from Float
2021-03-11 12:59:51,220 [main:94] - GETTING Array<Byte> from Int
2021-03-11 12:59:51,222 [main:94] - GETTING Array<Byte> from Short
2021-03-11 12:59:51,279 [main:94] - GETTING Array<Byte> from Int
2021-03-11 12:59:51,280 [main:94] - GETTING Array<Byte> from Float
2021-03-11 12:59:51,282 [main:94] - GETTING Array<Byte> from LongArray
2021-03-11 12:59:51,300 [main:94] - GETTING Array<Byte> from ShortArray
2021-03-11 12:59:51,318 [main:94] - GETTING Array<Byte> from Double
2021-03-11 12:59:51,320 [main:94] - GETTING Array<Byte> from Short
2021-03-11 12:59:51,321 [main:94] - GETTING Array<Byte> from Long
2021-03-11 12:59:51,378 [main:94] - GETTING Array<Byte> from FloatArray
2021-03-11 12:59:51,395 [main:94] - GETTING Array<Byte> from Long
2021-03-11 12:59:51,396 [main:94] - GETTING Array<Byte> from Double
2021-03-11 12:59:51,397 [main:94] - GETTING Array<Byte> from Array<Double>
2021-03-11 12:59:51,416 [main:63] - replacement of aByte of type Array<Byte> is arrayOfNulls<Byte>(-356669437)
2021-03-11 12:59:51,523 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:59:51,523 [main:66] - Compilation checking started
2021-03-11 12:59:52,030 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:52,034 [main:56] - replacing (aInt[0], Int)
2021-03-11 12:59:52,035 [main:38] - replacing aInt[0] Int
2021-03-11 12:59:52,035 [main:42] - Getting value of type Int
2021-03-11 12:59:52,170 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:52,172 [main:46] - GENERATED VALUE OF TYPE Int = 1300876766
2021-03-11 12:59:52,172 [main:49] - GENERATED IS CALL =false
2021-03-11 12:59:52,668 [main:55] - randomType = ArrayList<UShort?>?
2021-03-11 12:59:52,784 [main:302] - generating value of type = ArrayList<UShort?> false depth = 0
2021-03-11 12:59:52,893 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: UShort?): ArrayList<UShort?> = TODO()
2021-03-11 12:59:52,895 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: UShort?): ArrayList<UShort?> = TODO()
2021-03-11 12:59:53,004 [main:302] - generating value of type = UShort true depth = 3
2021-03-11 12:59:53,005 [main:95] - GENERATED = arrayListOf<UShort?>(14229.toUShort())
2021-03-11 12:59:53,215 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 12:59:53,327 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:53,328 [main:66] - Generated call from random type = (arrayListOf<UShort?>(14229.toUShort()))?.size.coerceAtLeast(1867930843)
2021-03-11 12:59:53,328 [main:94] - GETTING Int from Int
2021-03-11 12:59:53,386 [main:101] - Case = [public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 12:59:53,386 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 12:59:53,503 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:53,505 [main:105] - GENERATED CALL = (aInt[0]++).shr(834828135)
2021-03-11 12:59:53,505 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 12:59:53,505 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 12:59:53,635 [main:302] - generating value of type = Long true depth = 0
2021-03-11 12:59:53,636 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 12:59:53,636 [main:105] - GENERATED CALL = (aInt[0]++).div(-4608664369268327371).countOneBits()
2021-03-11 12:59:53,636 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 12:59:53,636 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:53,637 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 12:59:53,754 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:53,755 [main:105] - GENERATED CALL = (aInt[0]++).toInt().rotateLeft(-320799214)
2021-03-11 12:59:53,755 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]]
2021-03-11 12:59:53,755 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 12:59:53,755 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]
2021-03-11 12:59:53,755 [main:105] - GENERATED CALL = (aInt[0]++).toShort().countTrailingZeroBits()
2021-03-11 12:59:53,755 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 12:59:53,756 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:53,756 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 12:59:53,756 [main:105] - GENERATED CALL = (aInt[0]++).toInt().takeLowestOneBit()
2021-03-11 12:59:53,756 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 12:59:53,756 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 12:59:53,871 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:53,872 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 12:59:53,986 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:53,987 [main:105] - GENERATED CALL = (aInt[0]++).compareTo(123718409).ushr(992019186)
2021-03-11 12:59:53,987 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 12:59:53,987 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 12:59:53,987 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 12:59:54,091 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:54,092 [main:105] - GENERATED CALL = (aInt[0]++).toShort().times(19)
2021-03-11 12:59:54,092 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 12:59:54,092 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 12:59:54,197 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:59:54,198 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 12:59:54,198 [main:105] - GENERATED CALL = (aInt[0]++).div(0.26741624f).toRawBits()
2021-03-11 12:59:54,198 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]]
2021-03-11 12:59:54,198 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 12:59:54,198 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]
2021-03-11 12:59:54,198 [main:105] - GENERATED CALL = (aInt[0]++).toLong().toInt()
2021-03-11 12:59:54,198 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ranges.IntRange.random(): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1b3d5354]]
2021-03-11 12:59:54,198 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111]
2021-03-11 12:59:54,303 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:54,304 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ranges.IntRange.random(): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1b3d5354]
2021-03-11 12:59:54,304 [main:105] - GENERATED CALL = (aInt[0]++).rangeTo(-33).random()
2021-03-11 12:59:54,304 [main:63] - replacement of aInt[0] of type Int is aInt[0]++
2021-03-11 12:59:54,426 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(POSTFIX_EXPRESSION)
2021-03-11 12:59:54,427 [main:66] - Compilation checking started
2021-03-11 12:59:54,860 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[0]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:54,866 [main:56] - replacing (0, Int)
2021-03-11 12:59:54,867 [main:38] - replacing 0 Int
2021-03-11 12:59:54,868 [main:42] - Getting value of type Int
2021-03-11 12:59:54,999 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:55,000 [main:46] - GENERATED VALUE OF TYPE Int = -732090137
2021-03-11 12:59:55,000 [main:49] - GENERATED IS CALL =false
2021-03-11 12:59:55,002 [main:55] - randomType = Double
2021-03-11 12:59:55,110 [main:302] - generating value of type = Double true depth = 0
2021-03-11 12:59:55,162 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:55,162 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 12:59:55,162 [main:66] - Generated call from random type = (0.2684320980518823).toInt().countLeadingZeroBits()
2021-03-11 12:59:55,163 [main:94] - GETTING Int from FloatArray
2021-03-11 12:59:55,178 [main:101] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun kotlin.FloatArray.indexOf(element: kotlin.Float): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@269d8be5]]
2021-03-11 12:59:55,178 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun kotlin.FloatArray.indexOf(element: kotlin.Float): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@269d8be5]
2021-03-11 12:59:55,299 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:59:55,300 [main:105] - GENERATED CALL = (bFloat).indexOf(0.45506948f)
2021-03-11 12:59:55,301 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 12:59:55,301 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 12:59:55,301 [main:105] - GENERATED CALL = (bFloat).size.countOneBits()
2021-03-11 12:59:55,301 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 12:59:55,301 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 12:59:55,301 [main:105] - GENERATED CALL = (bFloat).size.countLeadingZeroBits()
2021-03-11 12:59:55,301 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 12:59:55,301 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 12:59:55,302 [main:105] - GENERATED CALL = (bFloat).size.toInt()
2021-03-11 12:59:55,302 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 12:59:55,302 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 12:59:55,424 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:55,425 [main:105] - GENERATED CALL = (bFloat).size.xor(888743933)
2021-03-11 12:59:55,425 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]]
2021-03-11 12:59:55,425 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 12:59:55,529 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:55,531 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]
2021-03-11 12:59:55,531 [main:105] - GENERATED CALL = (bFloat).get(-1648384297).toInt()
2021-03-11 12:59:55,531 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 12:59:55,531 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 12:59:55,532 [main:105] - GENERATED CALL = (bFloat).size.takeHighestOneBit()
2021-03-11 12:59:55,532 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 12:59:55,532 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 12:59:55,632 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:55,633 [main:105] - GENERATED CALL = (bFloat).size.coerceAtLeast(-1804847771)
2021-03-11 12:59:55,634 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 12:59:55,634 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 12:59:55,634 [main:105] - GENERATED CALL = (bFloat).size.unaryMinus()
2021-03-11 12:59:55,634 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 12:59:55,634 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 12:59:55,735 [main:302] - generating value of type = Int true depth = 0
2021-03-11 12:59:55,736 [main:105] - GENERATED CALL = (bFloat).size.shr(794072600)
2021-03-11 12:59:55,736 [main:63] - replacement of 0 of type Int is (bFloat).size.countLeadingZeroBits()
2021-03-11 12:59:55,843 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 12:59:55,844 [main:66] - Compilation checking started
2021-03-11 12:59:56,311 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    bLong[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:56,316 [main:56] - replacing (bLong, LongArray)
2021-03-11 12:59:56,317 [main:38] - replacing bLong LongArray
2021-03-11 12:59:56,317 [main:42] - Getting value of type LongArray
2021-03-11 12:59:56,442 [main:302] - generating value of type = LongArray false depth = 0
2021-03-11 12:59:56,570 [main:43] - GENERATING CALL OF fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 12:59:56,573 [main:61] - WITHOUT TYPE PARAMS = fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 12:59:56,696 [main:302] - generating value of type = Long true depth = 3
2021-03-11 12:59:56,697 [main:95] - GENERATED = longArrayOf(-9188166699576211219)
2021-03-11 12:59:56,697 [main:46] - GENERATED VALUE OF TYPE LongArray = longArrayOf(-9188166699576211219)
2021-03-11 12:59:56,698 [main:49] - GENERATED IS CALL =true
2021-03-11 12:59:56,934 [main:55] - randomType = Pair<String, Short>
2021-03-11 12:59:57,038 [main:302] - generating value of type = Pair<String, Short> false depth = 0
2021-03-11 12:59:57,149 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: String, second: Short): Pair<String, Short> = TODO()
2021-03-11 12:59:57,151 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: String, second: Short): Pair<String, Short> = TODO()
2021-03-11 12:59:57,304 [main:302] - generating value of type = String true depth = 3
2021-03-11 12:59:57,305 [main:302] - generating value of type = Short true depth = 3
2021-03-11 12:59:57,306 [main:95] - GENERATED = Pair<String, Short>("xhxvz", -15836)
2021-03-11 12:59:57,331 [main:94] - GETTING LongArray from Double
2021-03-11 12:59:57,378 [main:94] - GETTING LongArray from Double
2021-03-11 12:59:57,379 [main:94] - GETTING LongArray from Byte
2021-03-11 12:59:57,412 [main:94] - GETTING LongArray from Float
2021-03-11 12:59:57,440 [main:94] - GETTING LongArray from Double
2021-03-11 12:59:57,440 [main:94] - GETTING LongArray from ShortArray
2021-03-11 12:59:57,449 [main:94] - GETTING LongArray from IntArray
2021-03-11 12:59:57,456 [main:94] - GETTING LongArray from Int
2021-03-11 12:59:57,486 [main:94] - GETTING LongArray from Long
2021-03-11 12:59:57,515 [main:94] - GETTING LongArray from Float
2021-03-11 12:59:57,516 [main:94] - GETTING LongArray from Byte
2021-03-11 12:59:57,517 [main:94] - GETTING LongArray from Long
2021-03-11 12:59:57,517 [main:94] - GETTING LongArray from Array<Int>
2021-03-11 12:59:57,527 [main:101] - Case = [public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]]
2021-03-11 12:59:57,527 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]
2021-03-11 12:59:57,527 [main:105] - GENERATED CALL = (aInt).toLongArray()
2021-03-11 12:59:57,527 [main:63] - replacement of bLong of type LongArray is longArrayOf(-9188166699576211219)
2021-03-11 12:59:57,630 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 12:59:57,630 [main:66] - Compilation checking started
2021-03-11 12:59:58,085 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != bFloat[0]) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 12:59:58,092 [main:56] - replacing (bFloat[0], Float)
2021-03-11 12:59:58,093 [main:38] - replacing bFloat[0] Float
2021-03-11 12:59:58,094 [main:42] - Getting value of type Float
2021-03-11 12:59:58,243 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:59:58,244 [main:46] - GENERATED VALUE OF TYPE Float = 0.67147285f
2021-03-11 12:59:58,244 [main:49] - GENERATED IS CALL =false
2021-03-11 12:59:59,203 [main:55] - randomType = Function2<Function1<UByte, Long?>, ArrayList<UInt>, ULong?>
2021-03-11 12:59:59,204 [main:94] - GETTING Float from Int
2021-03-11 12:59:59,254 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]]
2021-03-11 12:59:59,254 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 12:59:59,255 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]
2021-03-11 12:59:59,363 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:59:59,364 [main:105] - GENERATED CALL = (bInt[0]).toLong().minus(0.37784863f)
2021-03-11 12:59:59,364 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public fun kotlin.Float.coerceIn(minimumValue: kotlin.Float, maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@54e32b98]]
2021-03-11 12:59:59,364 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 12:59:59,364 [main:137] - GENERATING call of type public fun kotlin.Float.coerceIn(minimumValue: kotlin.Float, maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@54e32b98]
2021-03-11 12:59:59,466 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:59:59,581 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:59:59,582 [main:105] - GENERATED CALL = (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)
2021-03-11 12:59:59,582 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]]
2021-03-11 12:59:59,582 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 12:59:59,582 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]
2021-03-11 12:59:59,688 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:59:59,689 [main:105] - GENERATED CALL = (bInt[0]).toFloat().coerceAtLeast(0.7537813f)
2021-03-11 12:59:59,689 [main:101] - Case = [public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]]
2021-03-11 12:59:59,689 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 12:59:59,811 [main:302] - generating value of type = Float true depth = 0
2021-03-11 12:59:59,812 [main:105] - GENERATED CALL = (bInt[0]).minus(0.07687372f)
2021-03-11 12:59:59,812 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Float.sign: kotlin.Float defined in kotlin.math[DeserializedPropertyDescriptor@57448ff4]]
2021-03-11 12:59:59,812 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 12:59:59,813 [main:105] - GENERATED CALL = (bInt[0]).toFloat().sign
2021-03-11 12:59:59,813 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@69e9a86b]]
2021-03-11 12:59:59,813 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 12:59:59,813 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@69e9a86b]
2021-03-11 12:59:59,923 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 12:59:59,924 [main:105] - GENERATED CALL = (bInt[0]).toFloat().rem(-53)
2021-03-11 12:59:59,924 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Float.absoluteValue: kotlin.Float defined in kotlin.math[DeserializedPropertyDescriptor@5c5658e0]]
2021-03-11 12:59:59,924 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 12:59:59,924 [main:105] - GENERATED CALL = (bInt[0]).toFloat().absoluteValue
2021-03-11 12:59:59,924 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]]
2021-03-11 12:59:59,924 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 12:59:59,924 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]
2021-03-11 13:00:00,026 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:00:00,027 [main:105] - GENERATED CALL = (bInt[0]).toInt().plus(0.7705034f)
2021-03-11 13:00:00,027 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]]
2021-03-11 13:00:00,027 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:00:00,027 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:00:00,128 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:00:00,129 [main:105] - GENERATED CALL = (bInt[0]).toLong().div(0.16017705f)
2021-03-11 13:00:00,130 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2d6223d0]]
2021-03-11 13:00:00,130 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:00:00,130 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2d6223d0]
2021-03-11 13:00:00,232 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:00:00,233 [main:105] - GENERATED CALL = (bInt[0]).toByte().plus(0.106858075f)
2021-03-11 13:00:00,233 [main:63] - replacement of bFloat[0] of type Float is (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)
2021-03-11 13:00:00,337 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:00,337 [main:66] - Compilation checking started
2021-03-11 13:00:00,962 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${bDouble[0]}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:00,966 [main:56] - replacing (bDouble[0], Double)
2021-03-11 13:00:00,967 [main:38] - replacing bDouble[0] Double
2021-03-11 13:00:00,967 [main:42] - Getting value of type Double
2021-03-11 13:00:01,071 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:01,072 [main:46] - GENERATED VALUE OF TYPE Double = 0.7112733707430307
2021-03-11 13:00:01,072 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:01,186 [main:55] - randomType = UShort
2021-03-11 13:00:01,289 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:00:01,324 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@5eb4428c]
2021-03-11 13:00:01,325 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]
2021-03-11 13:00:01,429 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:01,430 [main:66] - Generated call from random type = (3563.toUShort()).toDouble().pow(0.24706148658556937)
2021-03-11 13:00:01,431 [main:94] - GETTING Double from Short
2021-03-11 13:00:01,465 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public final operator fun unaryMinus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@56f78035]]
2021-03-11 13:00:01,466 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:00:01,567 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:01,568 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@56f78035]
2021-03-11 13:00:01,568 [main:105] - GENERATED CALL = (aShort[0]).div(0.6126304508160785).unaryMinus()
2021-03-11 13:00:01,569 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6076b1a3]]
2021-03-11 13:00:01,569 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:00:01,569 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6076b1a3]
2021-03-11 13:00:01,672 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:01,673 [main:105] - GENERATED CALL = (aShort[0]).toShort().minus(0.25776293954506724)
2021-03-11 13:00:01,673 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@546b593c]]
2021-03-11 13:00:01,673 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:00:01,673 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@546b593c]
2021-03-11 13:00:01,799 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:01,800 [main:105] - GENERATED CALL = (aShort[0]).toFloat().times(0.8662733268941603)
2021-03-11 13:00:01,800 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4d0648d8]]
2021-03-11 13:00:01,800 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:00:01,801 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4d0648d8]
2021-03-11 13:00:01,801 [main:105] - GENERATED CALL = (aShort[0]).toDouble().dec()
2021-03-11 13:00:01,801 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1c850bdd]]
2021-03-11 13:00:01,801 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:00:01,801 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1c850bdd]
2021-03-11 13:00:01,917 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:01,918 [main:105] - GENERATED CALL = (aShort[0]).toShort().plus(0.08374300660188982)
2021-03-11 13:00:01,918 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]]
2021-03-11 13:00:01,918 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:01,918 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]
2021-03-11 13:00:02,023 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:02,024 [main:105] - GENERATED CALL = (aShort[0]).toInt().plus(0.5411269925051208)
2021-03-11 13:00:02,025 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.withSign(sign: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@5792b835]]
2021-03-11 13:00:02,025 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:00:02,025 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.withSign(sign: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@5792b835]
2021-03-11 13:00:02,129 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:02,130 [main:105] - GENERATED CALL = (aShort[0]).toDouble().withSign(0.5300741372003176)
2021-03-11 13:00:02,130 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]]
2021-03-11 13:00:02,130 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:00:02,234 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:02,235 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]
2021-03-11 13:00:02,338 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:02,339 [main:105] - GENERATED CALL = (aShort[0]).compareTo(71).minus(0.9629906462555125)
2021-03-11 13:00:02,340 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public fun kotlin.Double.coerceAtLeast(minimumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dbe6c2f]]
2021-03-11 13:00:02,340 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:00:02,464 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:02,465 [main:137] - GENERATING call of type public fun kotlin.Double.coerceAtLeast(minimumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dbe6c2f]
2021-03-11 13:00:02,578 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:02,579 [main:105] - GENERATED CALL = (aShort[0]).div(0.5676058467207554).coerceAtLeast(0.0273845399728887)
2021-03-11 13:00:02,579 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]]
2021-03-11 13:00:02,580 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:00:02,580 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]
2021-03-11 13:00:02,693 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:02,694 [main:105] - GENERATED CALL = (aShort[0]).toDouble().pow(0.35255147769192985)
2021-03-11 13:00:02,694 [main:63] - replacement of bDouble[0] of type Double is (aShort[0]).toShort().minus(0.25776293954506724)
2021-03-11 13:00:02,797 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:02,797 [main:66] - Compilation checking started
2021-03-11 13:00:03,214 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[0]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:03,218 [main:56] - replacing (0, Int)
2021-03-11 13:00:03,219 [main:38] - replacing 0 Int
2021-03-11 13:00:03,219 [main:42] - Getting value of type Int
2021-03-11 13:00:03,336 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:03,337 [main:46] - GENERATED VALUE OF TYPE Int = -2120390308
2021-03-11 13:00:03,337 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:03,481 [main:55] - randomType = Char
2021-03-11 13:00:03,584 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:00:03,605 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]
2021-03-11 13:00:03,709 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:00:03,710 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:00:03,710 [main:66] - Generated call from random type = ('').compareTo('ᄼ').dec()
2021-03-11 13:00:03,711 [main:94] - GETTING Int from Int
2021-03-11 13:00:03,748 [main:101] - Case = [public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]]
2021-03-11 13:00:03,748 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:00:03,749 [main:105] - GENERATED CALL = (bInt[0]).dec()
2021-03-11 13:00:03,749 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:00:03,749 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:00:03,854 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:03,855 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:00:03,959 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:03,960 [main:105] - GENERATED CALL = (bInt[0]).compareTo(-1403169113).ushr(-742288695)
2021-03-11 13:00:03,961 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]]
2021-03-11 13:00:03,961 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:00:03,961 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]
2021-03-11 13:00:03,961 [main:105] - GENERATED CALL = (bInt[0]).toFloat().toInt()
2021-03-11 13:00:03,961 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111], public open val start: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@21cfdb17]]
2021-03-11 13:00:03,961 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111]
2021-03-11 13:00:04,063 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:04,064 [main:105] - GENERATED CALL = (bInt[0]).rangeTo(-95).start
2021-03-11 13:00:04,064 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]]
2021-03-11 13:00:04,064 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:00:04,064 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]
2021-03-11 13:00:04,168 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:00:04,169 [main:105] - GENERATED CALL = (bInt[0]).toChar().compareTo('뎞')
2021-03-11 13:00:04,169 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:00:04,169 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:04,169 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:00:04,306 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:04,308 [main:105] - GENERATED CALL = (bInt[0]).toInt().compareTo(-6)
2021-03-11 13:00:04,308 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:00:04,308 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:00:04,430 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:04,431 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:00:04,533 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:04,534 [main:105] - GENERATED CALL = (bInt[0]).compareTo(182785826).rem(75)
2021-03-11 13:00:04,534 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:00:04,534 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:04,534 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:00:04,638 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:04,639 [main:105] - GENERATED CALL = (bInt[0]).toInt().xor(-1951834452)
2021-03-11 13:00:04,639 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:00:04,639 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:00:04,742 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:04,743 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:00:04,743 [main:105] - GENERATED CALL = (bInt[0]).compareTo(-1976921592).countOneBits()
2021-03-11 13:00:04,744 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111], public final val first: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@42e9ff13]]
2021-03-11 13:00:04,744 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111]
2021-03-11 13:00:04,848 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:04,849 [main:105] - GENERATED CALL = (bInt[0]).rangeTo(38).first
2021-03-11 13:00:04,849 [main:63] - replacement of 0 of type Int is (bInt[0]).compareTo(-1403169113).ushr(-742288695)
2021-03-11 13:00:04,980 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:04,980 [main:66] - Compilation checking started
2021-03-11 13:00:05,397 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:05,402 [main:56] - replacing (0, Int)
2021-03-11 13:00:05,403 [main:38] - replacing 0 Int
2021-03-11 13:00:05,403 [main:42] - Getting value of type Int
2021-03-11 13:00:05,512 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:05,513 [main:46] - GENERATED VALUE OF TYPE Int = -1185644193
2021-03-11 13:00:05,513 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:05,652 [main:55] - randomType = ULong
2021-03-11 13:00:05,756 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 13:00:05,797 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@1ac4c46a]
2021-03-11 13:00:05,919 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:00:05,920 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:00:06,025 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:06,026 [main:66] - Generated call from random type = (1738389639376219326.toULong()).compareTo(53.toUByte()).coerceAtMost(1782463686)
2021-03-11 13:00:06,027 [main:94] - GETTING Int from Array<Int>
2021-03-11 13:00:06,040 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:00:06,040 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:00:06,142 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:06,143 [main:105] - GENERATED CALL = (aInt).size.rotateRight(-1826344862)
2021-03-11 13:00:06,143 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:00:06,143 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:00:06,144 [main:105] - GENERATED CALL = (aInt).size.toInt()
2021-03-11 13:00:06,144 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5e741bad]]
2021-03-11 13:00:06,144 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5e741bad]
2021-03-11 13:00:06,144 [main:105] - GENERATED CALL = (aInt).count()
2021-03-11 13:00:06,144 [main:101] - Case = [public inline fun <T> kotlin.Array<out T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@48d35c40]]
2021-03-11 13:00:06,144 [main:137] - GENERATING call of type public inline fun <T> kotlin.Array<out T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@48d35c40]
2021-03-11 13:00:06,253 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 13:00:06,254 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 13:00:06,255 [main:105] - GENERATED CALL = (aInt).indexOfFirst({a: T -> true})
2021-03-11 13:00:06,255 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29]]
2021-03-11 13:00:06,255 [main:105] - GENERATED CALL = (aInt).size
2021-03-11 13:00:06,255 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:00:06,255 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:00:06,362 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:06,363 [main:105] - GENERATED CALL = (aInt).size.ushr(-397315235)
2021-03-11 13:00:06,364 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 13:00:06,364 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 13:00:06,364 [main:105] - GENERATED CALL = (aInt).size.countLeadingZeroBits()
2021-03-11 13:00:06,364 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:00:06,364 [main:105] - GENERATED CALL = (aInt).size.sign
2021-03-11 13:00:06,364 [main:101] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.Array<out T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@51b25bfd]]
2021-03-11 13:00:06,364 [main:137] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.Array<out T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@51b25bfd]
2021-03-11 13:00:06,470 [main:302] - generating value of type = T false depth = 0
2021-03-11 13:00:06,601 [main:43] - GENERATING CALL OF fun <T> enumValueOf(name: kotlin.String): T = TODO()
2021-03-11 13:00:06,603 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValueOf(name: kotlin.String): T = TODO()
2021-03-11 13:00:06,888 [main:302] - generating value of type = String true depth = 3
2021-03-11 13:00:06,889 [main:95] - GENERATED = enumValueOf<Enum<T>>("ngacg")
2021-03-11 13:00:06,890 [main:105] - GENERATED CALL = (aInt).lastIndexOf(enumValueOf<Enum<T>>("ngacg"))
2021-03-11 13:00:06,890 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:00:06,890 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:00:06,999 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:07,001 [main:105] - GENERATED CALL = (aInt).size.rem(62)
2021-03-11 13:00:07,001 [main:63] - replacement of 0 of type Int is (aInt).size.sign
2021-03-11 13:00:07,112 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:07,113 [main:66] - Compilation checking started
2021-03-11 13:00:07,434 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[(aInt).size.sign]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[0]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:07,442 [main:56] - replacing (0, Int)
2021-03-11 13:00:07,444 [main:38] - replacing 0 Int
2021-03-11 13:00:07,444 [main:42] - Getting value of type Int
2021-03-11 13:00:07,595 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:07,596 [main:46] - GENERATED VALUE OF TYPE Int = -2137515462
2021-03-11 13:00:07,596 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:08,430 [main:55] - randomType = Function2<HashMap<Int, UShort>, Float?, HashSet<LinkedHashSet<Char>>>
2021-03-11 13:00:08,431 [main:94] - GETTING Int from Long
2021-03-11 13:00:08,466 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2db55aa3]]
2021-03-11 13:00:08,466 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:00:08,466 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2db55aa3]
2021-03-11 13:00:08,596 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:08,598 [main:105] - GENERATED CALL = (bLong[0]).toByte().times(21)
2021-03-11 13:00:08,598 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:00:08,598 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:00:08,721 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:00:08,722 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:00:08,723 [main:105] - GENERATED CALL = (bLong[0]).div(0.27183592f).toRawBits()
2021-03-11 13:00:08,723 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 13:00:08,723 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:00:08,828 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:08,829 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 13:00:08,829 [main:105] - GENERATED CALL = (bLong[0]).compareTo(-49).takeLowestOneBit()
2021-03-11 13:00:08,829 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]]
2021-03-11 13:00:08,829 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:00:08,829 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]
2021-03-11 13:00:08,829 [main:105] - GENERATED CALL = (bLong[0]).toByte().unaryMinus()
2021-03-11 13:00:08,829 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:00:08,829 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:08,830 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:00:08,830 [main:105] - GENERATED CALL = (bLong[0]).toInt().takeHighestOneBit()
2021-03-11 13:00:08,830 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:00:08,830 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:08,830 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:00:08,934 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:08,935 [main:105] - GENERATED CALL = (bLong[0]).toInt().ushr(-1675054282)
2021-03-11 13:00:08,935 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:00:08,935 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:00:09,040 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:09,041 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:00:09,042 [main:105] - GENERATED CALL = (bLong[0]).compareTo(-39).unaryPlus()
2021-03-11 13:00:09,042 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:00:09,042 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:09,042 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:00:09,145 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:09,146 [main:105] - GENERATED CALL = (bLong[0]).toInt().times(85)
2021-03-11 13:00:09,146 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:00:09,147 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:00:09,250 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:09,251 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:00:09,376 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:09,377 [main:105] - GENERATED CALL = (bLong[0]).compareTo(34).plus(36)
2021-03-11 13:00:09,377 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:00:09,378 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:00:09,509 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:09,510 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:00:09,511 [main:105] - GENERATED CALL = (bLong[0]).compareTo(5).countTrailingZeroBits()
2021-03-11 13:00:09,511 [main:63] - replacement of 0 of type Int is -2137515462
2021-03-11 13:00:09,615 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 13:00:09,616 [main:66] - Compilation checking started
2021-03-11 13:00:10,026 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:10,035 [main:56] - replacing (bByte, ByteArray)
2021-03-11 13:00:10,036 [main:38] - replacing bByte ByteArray
2021-03-11 13:00:10,036 [main:42] - Getting value of type ByteArray
2021-03-11 13:00:10,162 [main:302] - generating value of type = ByteArray false depth = 0
2021-03-11 13:00:10,279 [main:43] - GENERATING CALL OF fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 13:00:10,281 [main:61] - WITHOUT TYPE PARAMS = fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 13:00:10,412 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 13:00:10,414 [main:95] - GENERATED = byteArrayOf(118)
2021-03-11 13:00:10,414 [main:46] - GENERATED VALUE OF TYPE ByteArray = byteArrayOf(118)
2021-03-11 13:00:10,414 [main:49] - GENERATED IS CALL =true
2021-03-11 13:00:10,415 [main:55] - randomType = Float
2021-03-11 13:00:10,518 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:00:10,557 [main:94] - GETTING ByteArray from Long
2021-03-11 13:00:10,591 [main:94] - GETTING ByteArray from Int
2021-03-11 13:00:10,621 [main:94] - GETTING ByteArray from Long
2021-03-11 13:00:10,621 [main:94] - GETTING ByteArray from Short
2021-03-11 13:00:10,652 [main:94] - GETTING ByteArray from Byte
2021-03-11 13:00:10,682 [main:94] - GETTING ByteArray from Byte
2021-03-11 13:00:10,683 [main:94] - GETTING ByteArray from Byte
2021-03-11 13:00:10,683 [main:94] - GETTING ByteArray from Long
2021-03-11 13:00:10,684 [main:94] - GETTING ByteArray from Byte
2021-03-11 13:00:10,685 [main:94] - GETTING ByteArray from Short
2021-03-11 13:00:10,685 [main:94] - GETTING ByteArray from Long
2021-03-11 13:00:10,686 [main:94] - GETTING ByteArray from Long
2021-03-11 13:00:10,687 [main:94] - GETTING ByteArray from Int
2021-03-11 13:00:10,687 [main:94] - GETTING ByteArray from Array<Int>
2021-03-11 13:00:10,696 [main:101] - Case = [public fun kotlin.Array<out kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d16787e]]
2021-03-11 13:00:10,696 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d16787e]
2021-03-11 13:00:10,697 [main:105] - GENERATED CALL = (aInt).toByteArray()
2021-03-11 13:00:10,697 [main:63] - replacement of bByte of type ByteArray is (aInt).toByteArray()
2021-03-11 13:00:10,800 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:10,801 [main:66] - Compilation checking started
2021-03-11 13:00:11,117 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != (aInt).toByteArray()[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:11,125 [main:56] - replacing (aByte[0], Byte)
2021-03-11 13:00:11,127 [main:38] - replacing aByte[0] Byte
2021-03-11 13:00:11,127 [main:42] - Getting value of type Byte
2021-03-11 13:00:11,252 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:11,253 [main:46] - GENERATED VALUE OF TYPE Byte = 57
2021-03-11 13:00:11,253 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:11,255 [main:55] - randomType = Int
2021-03-11 13:00:11,385 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:11,453 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:00:11,454 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]
2021-03-11 13:00:11,567 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:11,568 [main:66] - Generated call from random type = (-839673458).toByte().and(-41)
2021-03-11 13:00:11,569 [main:94] - GETTING Byte from Short
2021-03-11 13:00:11,626 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]]
2021-03-11 13:00:11,626 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:00:11,626 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:00:11,626 [main:105] - GENERATED CALL = (bShort[0]++).toChar().toByte()
2021-03-11 13:00:11,627 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeHighestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc8d02]]
2021-03-11 13:00:11,627 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:00:11,627 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeHighestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc8d02]
2021-03-11 13:00:11,627 [main:105] - GENERATED CALL = (bShort[0]++).toByte().takeHighestOneBit()
2021-03-11 13:00:11,627 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]]
2021-03-11 13:00:11,627 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:00:11,627 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]
2021-03-11 13:00:11,733 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:11,734 [main:105] - GENERATED CALL = (bShort[0]++).toByte().or(-91)
2021-03-11 13:00:11,734 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]]
2021-03-11 13:00:11,734 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:00:11,735 [main:105] - GENERATED CALL = (bShort[0]++).toByte()
2021-03-11 13:00:11,735 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]]
2021-03-11 13:00:11,735 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:00:11,735 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:00:11,735 [main:105] - GENERATED CALL = (bShort[0]++).toFloat().toByte()
2021-03-11 13:00:11,735 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]]
2021-03-11 13:00:11,735 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:00:11,735 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:00:11,735 [main:105] - GENERATED CALL = (bShort[0]++).toLong().toByte()
2021-03-11 13:00:11,735 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateLeft(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@5b08d322]]
2021-03-11 13:00:11,735 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:00:11,736 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateLeft(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@5b08d322]
2021-03-11 13:00:11,850 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:11,852 [main:105] - GENERATED CALL = (bShort[0]++).toByte().rotateLeft(-998220114)
2021-03-11 13:00:11,852 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public fun kotlin.Byte.coerceAtMost(maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7d7437d2]]
2021-03-11 13:00:11,852 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:00:11,852 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtMost(maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7d7437d2]
2021-03-11 13:00:11,971 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:11,973 [main:105] - GENERATED CALL = (bShort[0]++).toByte().coerceAtMost(-80)
2021-03-11 13:00:11,973 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]]
2021-03-11 13:00:11,973 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:00:11,974 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]
2021-03-11 13:00:12,097 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:12,202 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:12,203 [main:105] - GENERATED CALL = (bShort[0]++).toByte().coerceIn(-105, -128)
2021-03-11 13:00:12,203 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateRight(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@60497689]]
2021-03-11 13:00:12,203 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:00:12,203 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateRight(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@60497689]
2021-03-11 13:00:12,309 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:12,310 [main:105] - GENERATED CALL = (bShort[0]++).toByte().rotateRight(1017247221)
2021-03-11 13:00:12,310 [main:63] - replacement of aByte[0] of type Byte is (bShort[0]++).toByte()
2021-03-11 13:00:12,431 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:12,431 [main:66] - Compilation checking started
2021-03-11 13:00:12,699 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    (bShort[0]++).toByte()--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}"

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:12,707 [main:56] - replacing ("Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}", String)
2021-03-11 13:00:12,708 [main:38] - replacing "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}" String
2021-03-11 13:00:12,708 [main:42] - Getting value of type String
2021-03-11 13:00:12,824 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:00:12,825 [main:46] - GENERATED VALUE OF TYPE String = "adztr"
2021-03-11 13:00:12,825 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:12,937 [main:55] - randomType = UShort
2021-03-11 13:00:13,041 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:00:13,072 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@3a41c429]
2021-03-11 13:00:13,073 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:00:13,177 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:13,178 [main:66] - Generated call from random type = (5116.toUShort()).toByte().toString(-1198589814)
2021-03-11 13:00:13,179 [main:94] - GETTING String from Short
2021-03-11 13:00:13,237 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:00:13,237 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:00:13,343 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:13,345 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:00:13,479 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:13,481 [main:105] - GENERATED CALL = (bShort[0]--).div(205463725804282583).toString(518305038)
2021-03-11 13:00:13,481 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]]
2021-03-11 13:00:13,481 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:00:13,481 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]
2021-03-11 13:00:13,481 [main:105] - GENERATED CALL = (bShort[0]--).toChar().titlecase()
2021-03-11 13:00:13,481 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]]
2021-03-11 13:00:13,481 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]
2021-03-11 13:00:13,586 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:13,587 [main:105] - GENERATED CALL = (bShort[0]--).toString(-1638383535)
2021-03-11 13:00:13,587 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:00:13,588 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:00:13,588 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:00:13,693 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:13,694 [main:105] - GENERATED CALL = (bShort[0]--).toLong().toString(1285578334)
2021-03-11 13:00:13,695 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:00:13,695 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:13,695 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:00:13,801 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:13,802 [main:105] - GENERATED CALL = (bShort[0]--).toInt().toString(-231831283)
2021-03-11 13:00:13,802 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]]
2021-03-11 13:00:13,802 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:00:13,802 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:00:13,917 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:13,919 [main:105] - GENERATED CALL = (bShort[0]--).toByte().toString(326622437)
2021-03-11 13:00:13,919 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]]
2021-03-11 13:00:13,919 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:00:13,919 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]
2021-03-11 13:00:13,919 [main:105] - GENERATED CALL = (bShort[0]--).toChar().uppercase()
2021-03-11 13:00:13,919 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:00:13,919 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:00:14,026 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:14,027 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:00:14,132 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:14,134 [main:105] - GENERATED CALL = (bShort[0]--).compareTo(49).toString(1478972596)
2021-03-11 13:00:14,134 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]]
2021-03-11 13:00:14,134 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:00:14,134 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]
2021-03-11 13:00:14,236 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:00:14,238 [main:105] - GENERATED CALL = (bShort[0]--).toChar().plus("dvwhd")
2021-03-11 13:00:14,238 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]]
2021-03-11 13:00:14,238 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:00:14,238 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]
2021-03-11 13:00:14,340 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:14,341 [main:105] - GENERATED CALL = (bShort[0]--).toShort().toString(2129508101)
2021-03-11 13:00:14,341 [main:63] - replacement of "Failed post-increment Float: ${aFloat[0]} != ${bFloat[0]}" of type String is (bShort[0]--).toChar().uppercase()
2021-03-11 13:00:14,467 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:14,467 [main:66] - Compilation checking started
2021-03-11 13:00:14,881 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[0]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:14,889 [main:56] - replacing (0, Int)
2021-03-11 13:00:14,891 [main:38] - replacing 0 Int
2021-03-11 13:00:14,891 [main:42] - Getting value of type Int
2021-03-11 13:00:15,004 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:15,004 [main:46] - GENERATED VALUE OF TYPE Int = -414014824
2021-03-11 13:00:15,005 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:15,006 [main:55] - randomType = Double
2021-03-11 13:00:15,111 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:15,148 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:15,148 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:00:15,149 [main:66] - Generated call from random type = (0.73492005391268).toInt().countOneBits()
2021-03-11 13:00:15,150 [main:94] - GETTING Int from Byte
2021-03-11 13:00:15,182 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2ecd32f2], public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]]
2021-03-11 13:00:15,183 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2ecd32f2]
2021-03-11 13:00:15,183 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]
2021-03-11 13:00:15,286 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:00:15,287 [main:105] - GENERATED CALL = (aByte[0]--).toChar().compareTo('镇')
2021-03-11 13:00:15,287 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]]
2021-03-11 13:00:15,287 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:15,287 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 13:00:15,391 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:15,392 [main:105] - GENERATED CALL = (aByte[0]--).toInt().and(-1981906527)
2021-03-11 13:00:15,393 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]]
2021-03-11 13:00:15,393 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:00:15,393 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]
2021-03-11 13:00:15,393 [main:105] - GENERATED CALL = (aByte[0]--).toLong().countLeadingZeroBits()
2021-03-11 13:00:15,393 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]]
2021-03-11 13:00:15,393 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:00:15,515 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:15,516 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]
2021-03-11 13:00:15,516 [main:105] - GENERATED CALL = (aByte[0]--).div(-5867722800543031425).countTrailingZeroBits()
2021-03-11 13:00:15,516 [main:101] - Case = [public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]]
2021-03-11 13:00:15,516 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]
2021-03-11 13:00:15,516 [main:105] - GENERATED CALL = (aByte[0]--).toInt()
2021-03-11 13:00:15,516 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:00:15,516 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:00:15,516 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:00:15,517 [main:105] - GENERATED CALL = (aByte[0]--).toFloat().toRawBits()
2021-03-11 13:00:15,517 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 13:00:15,517 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:15,517 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:00:15,623 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:15,624 [main:105] - GENERATED CALL = (aByte[0]--).toInt().coerceAtMost(252153490)
2021-03-11 13:00:15,624 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]]
2021-03-11 13:00:15,624 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:00:15,624 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:00:15,727 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:15,728 [main:105] - GENERATED CALL = (aByte[0]--).toLong().compareTo(-125)
2021-03-11 13:00:15,728 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:00:15,728 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:00:15,832 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:15,833 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:00:15,833 [main:105] - GENERATED CALL = (aByte[0]--).compareTo(110).toInt()
2021-03-11 13:00:15,833 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:00:15,833 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:15,833 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:00:15,936 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:15,937 [main:105] - GENERATED CALL = (aByte[0]--).toInt().rotateLeft(-715165105)
2021-03-11 13:00:15,938 [main:63] - replacement of 0 of type Int is (0.73492005391268).toInt().countOneBits()
2021-03-11 13:00:16,040 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:16,041 [main:66] - Compilation checking started
2021-03-11 13:00:16,439 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${aLong[0]} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:16,444 [main:56] - replacing (aLong[0], Long)
2021-03-11 13:00:16,445 [main:38] - replacing aLong[0] Long
2021-03-11 13:00:16,445 [main:42] - Getting value of type Long
2021-03-11 13:00:16,573 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:16,574 [main:46] - GENERATED VALUE OF TYPE Long = 2538797315305901334
2021-03-11 13:00:16,574 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:16,817 [main:55] - randomType = UInt?
2021-03-11 13:00:16,927 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:00:16,972 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@799673b4]
2021-03-11 13:00:16,973 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@315b5cc]
2021-03-11 13:00:17,077 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:17,079 [main:66] - Generated call from random type = (996795235.toUInt())?.toByte().plus(8663070590252143549)
2021-03-11 13:00:17,080 [main:94] - GETTING Long from Short
2021-03-11 13:00:17,122 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7c8ff6b9]]
2021-03-11 13:00:17,122 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:00:17,122 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7c8ff6b9]
2021-03-11 13:00:17,243 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:17,244 [main:105] - GENERATED CALL = (aShort[0]).toByte().times(-5904880309705852294)
2021-03-11 13:00:17,245 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5191e0c7], public final val step: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@51740384]]
2021-03-11 13:00:17,245 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5191e0c7]
2021-03-11 13:00:17,366 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:17,367 [main:105] - GENERATED CALL = (aShort[0]).rangeTo(-928096144571561321).step
2021-03-11 13:00:17,367 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@4202af59]]
2021-03-11 13:00:17,367 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:00:17,477 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:17,478 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@4202af59]
2021-03-11 13:00:17,478 [main:105] - GENERATED CALL = (aShort[0]).div(0.32920554659202783).toBits()
2021-03-11 13:00:17,478 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5191e0c7], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ranges.LongRange.random(): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@85b2e37]]
2021-03-11 13:00:17,478 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5191e0c7]
2021-03-11 13:00:17,613 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:17,614 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ranges.LongRange.random(): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@85b2e37]
2021-03-11 13:00:17,615 [main:105] - GENERATED CALL = (aShort[0]).rangeTo(5669472963105270765).random()
2021-03-11 13:00:17,615 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public fun kotlin.Long.coerceAtMost(maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@491cf48c]]
2021-03-11 13:00:17,615 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:00:17,615 [main:137] - GENERATING call of type public fun kotlin.Long.coerceAtMost(maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@491cf48c]
2021-03-11 13:00:17,736 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:17,737 [main:105] - GENERATED CALL = (aShort[0]).toLong().coerceAtMost(-4250115190042633660)
2021-03-11 13:00:17,737 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2f1de9d8]]
2021-03-11 13:00:17,737 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:00:17,737 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2f1de9d8]
2021-03-11 13:00:17,843 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:17,844 [main:105] - GENERATED CALL = (aShort[0]).toLong().and(-8204157801808399755)
2021-03-11 13:00:17,845 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@20fa06fc]]
2021-03-11 13:00:17,845 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:00:17,947 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:17,948 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@20fa06fc]
2021-03-11 13:00:18,051 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:18,052 [main:105] - GENERATED CALL = (aShort[0]).div(4559438550190053388).rem(-97)
2021-03-11 13:00:18,052 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@40584aff]]
2021-03-11 13:00:18,052 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:00:18,053 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@40584aff]
2021-03-11 13:00:18,155 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:18,156 [main:105] - GENERATED CALL = (aShort[0]).toByte().rem(-2846691970843238582)
2021-03-11 13:00:18,156 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64], public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c59df0a]]
2021-03-11 13:00:18,156 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:00:18,259 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:18,260 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c59df0a]
2021-03-11 13:00:18,364 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:18,365 [main:105] - GENERATED CALL = (aShort[0]).div(3015244690202498176).or(-6790882977607456496)
2021-03-11 13:00:18,365 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5191e0c7], public final val last: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@2f139405]]
2021-03-11 13:00:18,365 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5191e0c7]
2021-03-11 13:00:18,494 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:18,496 [main:105] - GENERATED CALL = (aShort[0]).rangeTo(7049973728533610241).last
2021-03-11 13:00:18,496 [main:63] - replacement of aLong[0] of type Long is (aShort[0]).div(0.32920554659202783).toBits()
2021-03-11 13:00:18,615 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:18,616 [main:66] - Compilation checking started
2021-03-11 13:00:19,012 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[0]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:19,020 [main:56] - replacing (0, Int)
2021-03-11 13:00:19,022 [main:38] - replacing 0 Int
2021-03-11 13:00:19,022 [main:42] - Getting value of type Int
2021-03-11 13:00:19,158 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:19,159 [main:46] - GENERATED VALUE OF TYPE Int = -1424939111
2021-03-11 13:00:19,159 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:19,276 [main:55] - randomType = Float?
2021-03-11 13:00:19,382 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:00:19,433 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:19,433 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:00:19,433 [main:66] - Generated call from random type = (0.34972888f)?.toInt().takeHighestOneBit()
2021-03-11 13:00:19,434 [main:94] - GETTING Int from Double
2021-03-11 13:00:19,485 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]]
2021-03-11 13:00:19,485 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]
2021-03-11 13:00:19,608 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:00:19,608 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:00:19,713 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:00:19,714 [main:105] - GENERATED CALL = (aDouble[0]++).equals("nblpd").compareTo(true)
2021-03-11 13:00:19,714 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]]
2021-03-11 13:00:19,714 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:00:19,818 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:19,819 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:00:19,820 [main:105] - GENERATED CALL = (aDouble[0]++).compareTo(-19).dec()
2021-03-11 13:00:19,820 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:00:19,820 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:19,820 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:00:19,922 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:19,923 [main:105] - GENERATED CALL = (aDouble[0]++).toInt().plus(31)
2021-03-11 13:00:19,923 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 13:00:19,923 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:00:20,027 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:20,029 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 13:00:20,029 [main:105] - GENERATED CALL = (aDouble[0]++).compareTo(-59).takeLowestOneBit()
2021-03-11 13:00:20,029 [main:101] - Case = [public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]]
2021-03-11 13:00:20,029 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]
2021-03-11 13:00:20,029 [main:105] - GENERATED CALL = (aDouble[0]++).toInt()
2021-03-11 13:00:20,029 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:00:20,029 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:00:20,134 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:20,135 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:00:20,240 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:20,241 [main:105] - GENERATED CALL = (aDouble[0]++).compareTo(-54).compareTo(-113)
2021-03-11 13:00:20,242 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:00:20,242 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:00:20,345 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:20,346 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:00:20,346 [main:105] - GENERATED CALL = (aDouble[0]++).compareTo(111).unaryMinus()
2021-03-11 13:00:20,346 [main:101] - Case = [@kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]]
2021-03-11 13:00:20,346 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]
2021-03-11 13:00:20,346 [main:105] - GENERATED CALL = (aDouble[0]++).roundToInt()
2021-03-11 13:00:20,346 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]]
2021-03-11 13:00:20,346 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:00:20,346 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]
2021-03-11 13:00:20,472 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:20,473 [main:105] - GENERATED CALL = (aDouble[0]++).toShort().div(-71)
2021-03-11 13:00:20,473 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]]
2021-03-11 13:00:20,473 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:00:20,473 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]
2021-03-11 13:00:20,473 [main:105] - GENERATED CALL = (aDouble[0]++).toShort().countTrailingZeroBits()
2021-03-11 13:00:20,473 [main:63] - replacement of 0 of type Int is (aDouble[0]++).toInt().plus(31)
2021-03-11 13:00:20,591 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:20,592 [main:66] - Compilation checking started
2021-03-11 13:00:21,009 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[0]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:21,014 [main:56] - replacing (0, Int)
2021-03-11 13:00:21,015 [main:38] - replacing 0 Int
2021-03-11 13:00:21,015 [main:42] - Getting value of type Int
2021-03-11 13:00:21,127 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:21,128 [main:46] - GENERATED VALUE OF TYPE Int = 1618951404
2021-03-11 13:00:21,129 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:21,374 [main:55] - randomType = HashSet<UShort>
2021-03-11 13:00:21,476 [main:302] - generating value of type = HashSet<UShort> false depth = 0
2021-03-11 13:00:21,601 [main:43] - GENERATING CALL OF fun <E> LinkedHashSet(initialCapacity: kotlin.Int): HashSet<UShort> = TODO()
2021-03-11 13:00:21,603 [main:61] - WITHOUT TYPE PARAMS = fun <E> LinkedHashSet(initialCapacity: kotlin.Int): HashSet<UShort> = TODO()
2021-03-11 13:00:21,823 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:00:21,824 [main:95] - GENERATED = LinkedHashSet<UShort>(587005393)
2021-03-11 13:00:21,923 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:00:22,027 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:22,028 [main:66] - Generated call from random type = (LinkedHashSet<UShort>(587005393)).size.times(-98)
2021-03-11 13:00:22,028 [main:63] - replacement of 0 of type Int is (LinkedHashSet<UShort>(587005393)).size.times(-98)
2021-03-11 13:00:22,132 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:22,132 [main:66] - Compilation checking started
2021-03-11 13:00:22,648 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != bShort[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:22,657 [main:56] - replacing (bShort, ShortArray)
2021-03-11 13:00:22,659 [main:38] - replacing bShort ShortArray
2021-03-11 13:00:22,659 [main:42] - Getting value of type ShortArray
2021-03-11 13:00:22,829 [main:302] - generating value of type = ShortArray false depth = 0
2021-03-11 13:00:22,956 [main:43] - GENERATING CALL OF fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:00:22,958 [main:61] - WITHOUT TYPE PARAMS = fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:00:23,085 [main:302] - generating value of type = Short true depth = 3
2021-03-11 13:00:23,086 [main:95] - GENERATED = shortArrayOf(25659)
2021-03-11 13:00:23,086 [main:46] - GENERATED VALUE OF TYPE ShortArray = shortArrayOf(25659)
2021-03-11 13:00:23,086 [main:49] - GENERATED IS CALL =true
2021-03-11 13:00:23,090 [main:55] - randomType = Byte?
2021-03-11 13:00:23,208 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:23,261 [main:94] - GETTING ShortArray from IntArray
2021-03-11 13:00:23,270 [main:94] - GETTING ShortArray from ShortArray
2021-03-11 13:00:23,278 [main:101] - Case = [public inline fun kotlin.ShortArray.copyOf(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e985960]]
2021-03-11 13:00:23,278 [main:137] - GENERATING call of type public inline fun kotlin.ShortArray.copyOf(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4e985960]
2021-03-11 13:00:23,278 [main:105] - GENERATED CALL = (bShort).copyOf()
2021-03-11 13:00:23,278 [main:101] - Case = [public fun kotlin.ShortArray.sortedArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@341a0d4a]]
2021-03-11 13:00:23,278 [main:137] - GENERATING call of type public fun kotlin.ShortArray.sortedArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@341a0d4a]
2021-03-11 13:00:23,278 [main:105] - GENERATED CALL = (bShort).sortedArray()
2021-03-11 13:00:23,278 [main:101] - Case = [public fun kotlin.ShortArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2b1128a7]]
2021-03-11 13:00:23,278 [main:137] - GENERATING call of type public fun kotlin.ShortArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2b1128a7]
2021-03-11 13:00:23,392 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:00:23,513 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Int): Collection<Int> = TODO()
2021-03-11 13:00:23,515 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Int): Collection<Int> = TODO()
2021-03-11 13:00:23,634 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:00:23,635 [main:95] - GENERATED = linkedSetOf<Int>(-1103502163)
2021-03-11 13:00:23,636 [main:105] - GENERATED CALL = (bShort).sliceArray(linkedSetOf<Int>(-1103502163))
2021-03-11 13:00:23,636 [main:101] - Case = [public fun kotlin.ShortArray.sortedArrayDescending(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@55f7ee10]]
2021-03-11 13:00:23,636 [main:137] - GENERATING call of type public fun kotlin.ShortArray.sortedArrayDescending(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@55f7ee10]
2021-03-11 13:00:23,636 [main:105] - GENERATED CALL = (bShort).sortedArrayDescending()
2021-03-11 13:00:23,636 [main:101] - Case = [public fun kotlin.ShortArray.reversedArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c156c81]]
2021-03-11 13:00:23,636 [main:137] - GENERATING call of type public fun kotlin.ShortArray.reversedArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c156c81]
2021-03-11 13:00:23,636 [main:105] - GENERATED CALL = (bShort).reversedArray()
2021-03-11 13:00:23,636 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.onEach(action: (kotlin.Short) -> kotlin.Unit): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292d5a21]]
2021-03-11 13:00:23,636 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.onEach(action: (kotlin.Short) -> kotlin.Unit): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292d5a21]
2021-03-11 13:00:23,750 [main:302] - generating value of type = Function1<Short, Unit> false depth = 0
2021-03-11 13:00:23,751 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:00:23,870 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 13:00:23,872 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 13:00:24,265 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 13:00:24,266 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 13:00:24,267 [main:302] - generating value of type = Any false depth = 5
2021-03-11 13:00:24,268 [main:95] - GENERATED = require(true, { "drthj"})
2021-03-11 13:00:24,268 [main:105] - GENERATED CALL = (bShort).onEach({a: Short -> require(true, { "drthj"})})
2021-03-11 13:00:24,269 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.copyInto(destination: kotlin.ShortArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@44c0a46]]
2021-03-11 13:00:24,269 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.copyInto(destination: kotlin.ShortArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@44c0a46]
2021-03-11 13:00:24,390 [main:302] - generating value of type = ShortArray false depth = 0
2021-03-11 13:00:24,507 [main:43] - GENERATING CALL OF fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:00:24,509 [main:61] - WITHOUT TYPE PARAMS = fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:00:24,626 [main:302] - generating value of type = Short true depth = 3
2021-03-11 13:00:24,627 [main:95] - GENERATED = shortArrayOf(6073)
2021-03-11 13:00:24,738 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:24,850 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:24,989 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:24,991 [main:105] - GENERATED CALL = (bShort).copyInto(shortArrayOf(6073), 1297977539, 534844995, -686407705)
2021-03-11 13:00:24,991 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Short) -> kotlin.Unit): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@683cbf21]]
2021-03-11 13:00:24,991 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Short) -> kotlin.Unit): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@683cbf21]
2021-03-11 13:00:25,137 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Short, Unit> false depth = 0
2021-03-11 13:00:25,138 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:00:25,252 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 13:00:25,254 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 13:00:25,605 [main:302] - generating value of type = Int true depth = 4
2021-03-11 13:00:25,606 [main:302] - generating value of type = Function1<Int, Unit> false depth = 4
2021-03-11 13:00:25,607 [main:302] - generating value of type = Unit false depth = 5
2021-03-11 13:00:25,717 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 13:00:25,719 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 13:00:25,991 [main:302] - generating value of type = Boolean true depth = 8
2021-03-11 13:00:25,993 [main:95] - GENERATED = require(true)
2021-03-11 13:00:25,993 [main:95] - GENERATED = repeat(1103090808, {a: Int -> require(true)})
2021-03-11 13:00:25,993 [main:105] - GENERATED CALL = (bShort).onEachIndexed({a: Int, b: Short -> repeat(1103090808, {a: Int -> require(true)})})
2021-03-11 13:00:25,993 [main:101] - Case = [public inline operator fun kotlin.ShortArray.plus(element: kotlin.Short): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e2f3bc6]]
2021-03-11 13:00:25,993 [main:137] - GENERATING call of type public inline operator fun kotlin.ShortArray.plus(element: kotlin.Short): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e2f3bc6]
2021-03-11 13:00:26,102 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:00:26,103 [main:105] - GENERATED CALL = (bShort).plus(-2797)
2021-03-11 13:00:26,103 [main:101] - Case = [public fun kotlin.ShortArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7b14cac6]]
2021-03-11 13:00:26,103 [main:137] - GENERATING call of type public fun kotlin.ShortArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7b14cac6]
2021-03-11 13:00:26,212 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:26,320 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:26,321 [main:105] - GENERATED CALL = (bShort).copyOfRange(-1129193164, -821436367)
2021-03-11 13:00:26,321 [main:63] - replacement of bShort of type ShortArray is (bShort).sliceArray(linkedSetOf<Int>(-1103502163))
2021-03-11 13:00:26,429 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:26,430 [main:66] - Compilation checking started
2021-03-11 13:00:26,920 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[0]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:26,943 [main:56] - replacing (0, Int)
2021-03-11 13:00:26,945 [main:38] - replacing 0 Int
2021-03-11 13:00:26,945 [main:42] - Getting value of type Int
2021-03-11 13:00:27,079 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:27,080 [main:46] - GENERATED VALUE OF TYPE Int = -1129864130
2021-03-11 13:00:27,081 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:27,217 [main:55] - randomType = Function1<Boolean, Boolean>
2021-03-11 13:00:27,217 [main:94] - GETTING Int from Int
2021-03-11 13:00:27,273 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:00:27,274 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:27,274 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:00:27,391 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:27,392 [main:105] - GENERATED CALL = (aInt[0]++).toInt().times(93)
2021-03-11 13:00:27,392 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 13:00:27,392 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:00:27,505 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:27,506 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:00:27,619 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:27,621 [main:105] - GENERATED CALL = (aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)
2021-03-11 13:00:27,621 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:00:27,621 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:27,621 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:00:27,733 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:27,734 [main:105] - GENERATED CALL = (aInt[0]++).toInt().ushr(2009447314)
2021-03-11 13:00:27,734 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]]
2021-03-11 13:00:27,734 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:00:27,847 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:27,848 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]
2021-03-11 13:00:27,848 [main:105] - GENERATED CALL = (aInt[0]++).div(0.46775810473129387).roundToInt()
2021-03-11 13:00:27,848 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]]
2021-03-11 13:00:27,848 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:00:27,849 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]
2021-03-11 13:00:27,849 [main:105] - GENERATED CALL = (aInt[0]++).toFloat().toBits()
2021-03-11 13:00:27,849 [main:101] - Case = [public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:00:27,849 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:00:28,034 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:28,037 [main:105] - GENERATED CALL = (aInt[0]++).div(-41)
2021-03-11 13:00:28,037 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 13:00:28,037 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:00:28,157 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:28,158 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 13:00:28,158 [main:105] - GENERATED CALL = (aInt[0]++).compareTo(-1304038484).countLeadingZeroBits()
2021-03-11 13:00:28,158 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]]
2021-03-11 13:00:28,158 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:28,158 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 13:00:28,267 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:28,268 [main:105] - GENERATED CALL = (aInt[0]++).toInt().and(1470567875)
2021-03-11 13:00:28,268 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:00:28,269 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:00:28,380 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:00:28,382 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:00:28,382 [main:105] - GENERATED CALL = (aInt[0]++).div(0.9208926f).toRawBits()
2021-03-11 13:00:28,382 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Char.code: kotlin.Int defined in kotlin[DeserializedPropertyDescriptor@3fb27dce]]
2021-03-11 13:00:28,382 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:00:28,383 [main:105] - GENERATED CALL = (aInt[0]++).toChar().code
2021-03-11 13:00:28,383 [main:63] - replacement of 0 of type Int is (aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)
2021-03-11 13:00:28,504 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:28,504 [main:66] - Compilation checking started
2021-03-11 13:00:28,959 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    aByte[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:28,968 [main:56] - replacing (aByte, Array<Byte>)
2021-03-11 13:00:28,970 [main:38] - replacing aByte Array<Byte>
2021-03-11 13:00:28,970 [main:42] - Getting value of type Array<Byte>
2021-03-11 13:00:29,117 [main:302] - generating value of type = Array<Byte> false depth = 0
2021-03-11 13:00:29,251 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Byte> = TODO()
2021-03-11 13:00:29,254 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Byte> = TODO()
2021-03-11 13:00:29,383 [main:95] - GENERATED = emptyArray<Byte>()
2021-03-11 13:00:29,383 [main:46] - GENERATED VALUE OF TYPE Array<Byte> = emptyArray<Byte>()
2021-03-11 13:00:29,383 [main:49] - GENERATED IS CALL =true
2021-03-11 13:00:29,511 [main:55] - randomType = List<Short>
2021-03-11 13:00:29,513 [main:94] - GETTING Array<Byte> from Byte
2021-03-11 13:00:29,561 [main:94] - GETTING Array<Byte> from FloatArray
2021-03-11 13:00:29,576 [main:94] - GETTING Array<Byte> from Float
2021-03-11 13:00:29,626 [main:94] - GETTING Array<Byte> from DoubleArray
2021-03-11 13:00:29,642 [main:94] - GETTING Array<Byte> from Array<Double>
2021-03-11 13:00:29,658 [main:63] - replacement of aByte of type Array<Byte> is emptyArray<Byte>()
2021-03-11 13:00:29,769 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:00:29,770 [main:66] - Compilation checking started
2021-03-11 13:00:30,258 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:30,264 [main:56] - replacing (aDouble[0], Double)
2021-03-11 13:00:30,265 [main:38] - replacing aDouble[0] Double
2021-03-11 13:00:30,265 [main:42] - Getting value of type Double
2021-03-11 13:00:30,383 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:30,384 [main:46] - GENERATED VALUE OF TYPE Double = 0.6845149747290498
2021-03-11 13:00:30,384 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:30,386 [main:55] - randomType = UShort
2021-03-11 13:00:30,510 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:00:30,541 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@33f1d0b8]
2021-03-11 13:00:30,542 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@68b7f942]
2021-03-11 13:00:30,542 [main:66] - Generated call from random type = (23348.toUShort()).toDouble().nextUp()
2021-03-11 13:00:30,542 [main:63] - replacement of aDouble[0] of type Double is (23348.toUShort()).toDouble().nextUp()
2021-03-11 13:00:30,654 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:30,655 [main:66] - Compilation checking started
2021-03-11 13:00:30,973 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    bByte[0]++
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${(23348.toUShort()).toDouble().nextUp()} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:30,978 [main:56] - replacing (bByte[0]++, Byte)
2021-03-11 13:00:30,979 [main:38] - replacing bByte[0]++ Byte
2021-03-11 13:00:30,979 [main:42] - Getting value of type Byte
2021-03-11 13:00:31,093 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:31,094 [main:46] - GENERATED VALUE OF TYPE Byte = 48
2021-03-11 13:00:31,094 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:31,096 [main:55] - randomType = Boolean
2021-03-11 13:00:31,207 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:00:31,218 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:00:31,330 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:00:31,331 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:00:31,332 [main:66] - Generated call from random type = (false).compareTo(false).toByte()
2021-03-11 13:00:31,332 [main:63] - replacement of bByte[0]++ of type Byte is (false).compareTo(false).toByte()
2021-03-11 13:00:31,443 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:31,444 [main:66] - Compilation checking started
2021-03-11 13:00:31,917 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[0]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:31,922 [main:56] - replacing (0, Int)
2021-03-11 13:00:31,923 [main:38] - replacing 0 Int
2021-03-11 13:00:31,923 [main:42] - Getting value of type Int
2021-03-11 13:00:32,042 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:32,043 [main:46] - GENERATED VALUE OF TYPE Int = 447973985
2021-03-11 13:00:32,043 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:32,165 [main:55] - randomType = Short?
2021-03-11 13:00:32,276 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:00:32,310 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]
2021-03-11 13:00:32,310 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]
2021-03-11 13:00:32,311 [main:66] - Generated call from random type = (-32306)?.dec().countLeadingZeroBits()
2021-03-11 13:00:32,311 [main:63] - replacement of 0 of type Int is (-32306)?.dec().countLeadingZeroBits()
2021-03-11 13:00:32,420 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:32,420 [main:66] - Compilation checking started
2021-03-11 13:00:32,895 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if (aFloat[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:32,901 [main:56] - replacing (aFloat, Array<Float>)
2021-03-11 13:00:32,902 [main:38] - replacing aFloat Array<Float>
2021-03-11 13:00:32,902 [main:42] - Getting value of type Array<Float>
2021-03-11 13:00:33,023 [main:302] - generating value of type = Array<Float> false depth = 0
2021-03-11 13:00:33,141 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Float> = TODO()
2021-03-11 13:00:33,143 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Float> = TODO()
2021-03-11 13:00:33,263 [main:95] - GENERATED = enumValues<Float>()
2021-03-11 13:00:33,263 [main:46] - GENERATED VALUE OF TYPE Array<Float> = enumValues<Float>()
2021-03-11 13:00:33,263 [main:49] - GENERATED IS CALL =true
2021-03-11 13:00:33,265 [main:55] - randomType = Float
2021-03-11 13:00:33,380 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:00:33,409 [main:94] - GETTING Array<Float> from DoubleArray
2021-03-11 13:00:33,419 [main:94] - GETTING Array<Float> from Float
2021-03-11 13:00:33,447 [main:94] - GETTING Array<Float> from Short
2021-03-11 13:00:33,478 [main:94] - GETTING Array<Float> from Short
2021-03-11 13:00:33,479 [main:94] - GETTING Array<Float> from Int
2021-03-11 13:00:33,510 [main:94] - GETTING Array<Float> from IntArray
2021-03-11 13:00:33,518 [main:94] - GETTING Array<Float> from Long
2021-03-11 13:00:33,547 [main:94] - GETTING Array<Float> from Float
2021-03-11 13:00:33,549 [main:94] - GETTING Array<Float> from FloatArray
2021-03-11 13:00:33,558 [main:101] - Case = [public fun kotlin.FloatArray.toTypedArray(): kotlin.Array<kotlin.Float> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9053b33]]
2021-03-11 13:00:33,558 [main:137] - GENERATING call of type public fun kotlin.FloatArray.toTypedArray(): kotlin.Array<kotlin.Float> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9053b33]
2021-03-11 13:00:33,558 [main:105] - GENERATED CALL = (bFloat).toTypedArray()
2021-03-11 13:00:33,558 [main:63] - replacement of aFloat of type Array<Float> is (bFloat).toTypedArray()
2021-03-11 13:00:33,673 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:33,674 [main:66] - Compilation checking started
2021-03-11 13:00:34,130 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${bDouble[0]}"

    return "OK"
}


2021-03-11 13:00:34,136 [main:56] - replacing (bDouble[0], Double)
2021-03-11 13:00:34,137 [main:38] - replacing bDouble[0] Double
2021-03-11 13:00:34,137 [main:42] - Getting value of type Double
2021-03-11 13:00:34,259 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:34,260 [main:46] - GENERATED VALUE OF TYPE Double = 0.6257423433043448
2021-03-11 13:00:34,260 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:34,391 [main:55] - randomType = ULong
2021-03-11 13:00:34,510 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 13:00:34,545 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@21169907]
2021-03-11 13:00:34,545 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]
2021-03-11 13:00:34,658 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:34,659 [main:66] - Generated call from random type = (8821400986060963798.toULong()).toDouble().pow(0.9507435657275926)
2021-03-11 13:00:34,660 [main:94] - GETTING Double from Array<Float>
2021-03-11 13:00:34,671 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@267bf28], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@40f9cf69]]
2021-03-11 13:00:34,671 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@267bf28]
2021-03-11 13:00:34,784 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:34,785 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@40f9cf69]
2021-03-11 13:00:34,897 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:34,899 [main:105] - GENERATED CALL = (aFloat).get(724579922).plus(0.7080008786386248)
2021-03-11 13:00:34,899 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@55e69343], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]]
2021-03-11 13:00:34,899 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]
2021-03-11 13:00:35,016 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:35,017 [main:105] - GENERATED CALL = (aFloat).size.minus(0.8401413031106498)
2021-03-11 13:00:35,017 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@55e69343], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]]
2021-03-11 13:00:35,017 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]
2021-03-11 13:00:35,157 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:35,158 [main:105] - GENERATED CALL = (aFloat).size.times(0.5084219981835861)
2021-03-11 13:00:35,158 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@55e69343], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]]
2021-03-11 13:00:35,158 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:00:35,271 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:35,272 [main:105] - GENERATED CALL = (aFloat).size.div(0.22808007207222702)
2021-03-11 13:00:35,273 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@55e69343], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]]
2021-03-11 13:00:35,273 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]
2021-03-11 13:00:35,383 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:35,385 [main:105] - GENERATED CALL = (aFloat).size.plus(0.7801267949320358)
2021-03-11 13:00:35,385 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@267bf28], public open fun toDouble(): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@359b1f57]]
2021-03-11 13:00:35,385 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@267bf28]
2021-03-11 13:00:35,495 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:35,496 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@359b1f57]
2021-03-11 13:00:35,496 [main:105] - GENERATED CALL = (aFloat).get(-1518193477).toDouble()
2021-03-11 13:00:35,497 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Byte>.average(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626dcea4]]
2021-03-11 13:00:35,497 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Byte>.average(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626dcea4]
2021-03-11 13:00:35,497 [main:105] - GENERATED CALL = (aFloat).average()
2021-03-11 13:00:35,497 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@267bf28], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@611f4707]]
2021-03-11 13:00:35,497 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@267bf28]
2021-03-11 13:00:35,608 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:35,610 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@611f4707]
2021-03-11 13:00:35,721 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:35,723 [main:105] - GENERATED CALL = (aFloat).get(-1977176320).minus(0.7237208263064604)
2021-03-11 13:00:35,723 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@55e69343], public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]]
2021-03-11 13:00:35,723 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]
2021-03-11 13:00:35,723 [main:105] - GENERATED CALL = (aFloat).size.toDouble()
2021-03-11 13:00:35,723 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Double>.sum(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@469b8a8a]]
2021-03-11 13:00:35,723 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Double>.sum(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@469b8a8a]
2021-03-11 13:00:35,723 [main:105] - GENERATED CALL = (aFloat).sum()
2021-03-11 13:00:35,723 [main:63] - replacement of bDouble[0] of type Double is (aFloat).size.times(0.5084219981835861)
2021-03-11 13:00:35,835 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:35,835 [main:66] - Compilation checking started
2021-03-11 13:00:36,452 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    aShort[0]++
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:36,457 [main:56] - replacing (aShort[0]++, Short)
2021-03-11 13:00:36,459 [main:38] - replacing aShort[0]++ Short
2021-03-11 13:00:36,459 [main:42] - Getting value of type Short
2021-03-11 13:00:36,572 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:00:36,573 [main:46] - GENERATED VALUE OF TYPE Short = 32615
2021-03-11 13:00:36,574 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:36,710 [main:55] - randomType = Int?
2021-03-11 13:00:36,822 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:36,870 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:00:36,871 [main:66] - Generated call from random type = (322618648)?.toShort()
2021-03-11 13:00:36,871 [main:94] - GETTING Short from Long
2021-03-11 13:00:36,902 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]]
2021-03-11 13:00:36,902 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:00:36,902 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:00:36,902 [main:105] - GENERATED CALL = (aLong[0]).toByte().toShort()
2021-03-11 13:00:36,902 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]]
2021-03-11 13:00:36,902 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:36,903 [main:105] - GENERATED CALL = (aLong[0]).toShort()
2021-03-11 13:00:36,903 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]]
2021-03-11 13:00:36,903 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:36,903 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]
2021-03-11 13:00:36,903 [main:105] - GENERATED CALL = (aLong[0]).toShort().takeHighestOneBit()
2021-03-11 13:00:36,903 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun inc(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@37ca9861]]
2021-03-11 13:00:36,903 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:36,903 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@37ca9861]
2021-03-11 13:00:36,903 [main:105] - GENERATED CALL = (aLong[0]).toShort().inc()
2021-03-11 13:00:36,903 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.or(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@6f857cd8]]
2021-03-11 13:00:36,903 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:36,903 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.or(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@6f857cd8]
2021-03-11 13:00:37,020 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:00:37,022 [main:105] - GENERATED CALL = (aLong[0]).toShort().or(-27872)
2021-03-11 13:00:37,022 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]]
2021-03-11 13:00:37,022 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:37,022 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]
2021-03-11 13:00:37,022 [main:105] - GENERATED CALL = (aLong[0]).toShort().toShort()
2021-03-11 13:00:37,022 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]]
2021-03-11 13:00:37,022 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:37,022 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]
2021-03-11 13:00:37,023 [main:105] - GENERATED CALL = (aLong[0]).toShort().inv()
2021-03-11 13:00:37,023 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]]
2021-03-11 13:00:37,023 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:37,023 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]
2021-03-11 13:00:37,023 [main:105] - GENERATED CALL = (aLong[0]).toShort().takeLowestOneBit()
2021-03-11 13:00:37,023 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]]
2021-03-11 13:00:37,023 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:37,023 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:00:37,023 [main:105] - GENERATED CALL = (aLong[0]).toInt().toShort()
2021-03-11 13:00:37,023 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:00:37,023 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:00:37,023 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:00:37,023 [main:105] - GENERATED CALL = (aLong[0]).toDouble().toShort()
2021-03-11 13:00:37,023 [main:63] - replacement of aShort[0]++ of type Short is (aLong[0]).toShort().toShort()
2021-03-11 13:00:37,140 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:37,141 [main:66] - Compilation checking started
2021-03-11 13:00:37,563 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[0]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:37,569 [main:56] - replacing (0, Int)
2021-03-11 13:00:37,570 [main:38] - replacing 0 Int
2021-03-11 13:00:37,570 [main:42] - Getting value of type Int
2021-03-11 13:00:37,692 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:37,694 [main:46] - GENERATED VALUE OF TYPE Int = -1047352243
2021-03-11 13:00:37,694 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:37,696 [main:55] - randomType = Boolean
2021-03-11 13:00:37,831 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:00:37,845 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:00:37,958 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:00:37,959 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:00:37,959 [main:66] - Generated call from random type = (false).compareTo(true).toInt()
2021-03-11 13:00:37,960 [main:94] - GETTING Int from Long
2021-03-11 13:00:37,990 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 13:00:37,990 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:37,991 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 13:00:38,101 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:38,103 [main:105] - GENERATED CALL = (bLong[0]--).toShort().times(49)
2021-03-11 13:00:38,103 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:00:38,103 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:00:38,214 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:38,215 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:00:38,215 [main:105] - GENERATED CALL = (bLong[0]--).compareTo(104).inc()
2021-03-11 13:00:38,215 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:00:38,215 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:00:38,326 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:38,328 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:00:38,328 [main:105] - GENERATED CALL = (bLong[0]--).compareTo(23).countTrailingZeroBits()
2021-03-11 13:00:38,328 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]]
2021-03-11 13:00:38,328 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:00:38,328 [main:137] - GENERATING call of type @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]
2021-03-11 13:00:38,328 [main:105] - GENERATED CALL = (bLong[0]--).toChar().digitToInt()
2021-03-11 13:00:38,328 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:00:38,328 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:38,328 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:00:38,440 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:38,441 [main:105] - GENERATED CALL = (bLong[0]--).toInt().div(71)
2021-03-11 13:00:38,441 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:00:38,441 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:38,442 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:00:38,442 [main:105] - GENERATED CALL = (bLong[0]--).toInt().unaryPlus()
2021-03-11 13:00:38,442 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]]
2021-03-11 13:00:38,442 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]
2021-03-11 13:00:38,442 [main:105] - GENERATED CALL = (bLong[0]--).countTrailingZeroBits()
2021-03-11 13:00:38,442 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]]
2021-03-11 13:00:38,442 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:00:38,442 [main:137] - GENERATING call of type public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]
2021-03-11 13:00:38,442 [main:105] - GENERATED CALL = (bLong[0]--).toChar().toInt()
2021-03-11 13:00:38,442 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:00:38,442 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:00:38,552 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:38,554 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:00:38,664 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:38,665 [main:105] - GENERATED CALL = (bLong[0]--).compareTo(100).times(73)
2021-03-11 13:00:38,665 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:00:38,665 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:38,665 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:00:38,665 [main:105] - GENERATED CALL = (bLong[0]--).toInt().inv()
2021-03-11 13:00:38,666 [main:63] - replacement of 0 of type Int is (bLong[0]--).toInt().unaryPlus()
2021-03-11 13:00:38,798 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:38,798 [main:66] - Compilation checking started
2021-03-11 13:00:39,240 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[0] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:39,246 [main:56] - replacing (0, Int)
2021-03-11 13:00:39,247 [main:38] - replacing 0 Int
2021-03-11 13:00:39,247 [main:42] - Getting value of type Int
2021-03-11 13:00:39,362 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:39,364 [main:46] - GENERATED VALUE OF TYPE Int = -1194074503
2021-03-11 13:00:39,364 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:39,367 [main:55] - randomType = Double
2021-03-11 13:00:39,479 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:39,509 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:00:39,621 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:39,623 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:00:39,623 [main:66] - Generated call from random type = (0.8265564060209546).compareTo(37).takeHighestOneBit()
2021-03-11 13:00:39,624 [main:94] - GETTING Int from Byte
2021-03-11 13:00:39,656 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:00:39,656 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:39,656 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:00:39,656 [main:105] - GENERATED CALL = (bByte[0]).toInt().countOneBits()
2021-03-11 13:00:39,656 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]]
2021-03-11 13:00:39,656 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:00:39,656 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]
2021-03-11 13:00:39,768 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:39,769 [main:105] - GENERATED CALL = (bByte[0]).toByte().rem(106)
2021-03-11 13:00:39,769 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:00:39,769 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:39,769 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:00:39,881 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:39,882 [main:105] - GENERATED CALL = (bByte[0]).toInt().ushr(-1920598294)
2021-03-11 13:00:39,883 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 13:00:39,883 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:00:40,012 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:40,013 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 13:00:40,013 [main:105] - GENERATED CALL = (bByte[0]).compareTo(-40).takeLowestOneBit()
2021-03-11 13:00:40,013 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]]
2021-03-11 13:00:40,013 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:00:40,013 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]
2021-03-11 13:00:40,014 [main:105] - GENERATED CALL = (bByte[0]).toByte().unaryMinus()
2021-03-11 13:00:40,014 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d4ebc37]]
2021-03-11 13:00:40,014 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:00:40,014 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d4ebc37]
2021-03-11 13:00:40,014 [main:105] - GENERATED CALL = (bByte[0]).toShort().toInt()
2021-03-11 13:00:40,014 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:00:40,014 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:00:40,128 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:40,130 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:00:40,242 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:40,243 [main:105] - GENERATED CALL = (bByte[0]).compareTo(-3).rem(53)
2021-03-11 13:00:40,243 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@5f449f3f]]
2021-03-11 13:00:40,243 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:00:40,353 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:40,355 [main:105] - GENERATED CALL = (bByte[0]).div(1815343214098103137).sign
2021-03-11 13:00:40,355 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:00:40,355 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:40,355 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:00:40,466 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:40,467 [main:105] - GENERATED CALL = (bByte[0]).toInt().times(-69)
2021-03-11 13:00:40,467 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:00:40,468 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:40,468 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:00:40,468 [main:105] - GENERATED CALL = (bByte[0]).toInt().inv()
2021-03-11 13:00:40,468 [main:63] - replacement of 0 of type Int is (0.8265564060209546).compareTo(37).takeHighestOneBit()
2021-03-11 13:00:40,582 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:40,582 [main:66] - Compilation checking started
2021-03-11 13:00:40,991 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:41,000 [main:56] - replacing (1, Int)
2021-03-11 13:00:41,002 [main:38] - replacing 1 Int
2021-03-11 13:00:41,002 [main:42] - Getting value of type Int
2021-03-11 13:00:41,131 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:41,133 [main:46] - GENERATED VALUE OF TYPE Int = -2018586370
2021-03-11 13:00:41,133 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:41,135 [main:55] - randomType = UShort
2021-03-11 13:00:41,265 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:00:41,292 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@1c6df7d4]
2021-03-11 13:00:41,292 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]
2021-03-11 13:00:41,406 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:41,408 [main:66] - Generated call from random type = (7313.toUShort()).toShort().rem(-109)
2021-03-11 13:00:41,409 [main:94] - GETTING Int from Double
2021-03-11 13:00:41,437 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 13:00:41,437 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:00:41,548 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:41,549 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(4).absoluteValue
2021-03-11 13:00:41,549 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]]
2021-03-11 13:00:41,549 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:00:41,549 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]
2021-03-11 13:00:41,550 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().countOneBits()
2021-03-11 13:00:41,550 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:00:41,550 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:00:41,661 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:41,662 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:00:41,662 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-17).countOneBits()
2021-03-11 13:00:41,662 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]]
2021-03-11 13:00:41,662 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:00:41,662 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]
2021-03-11 13:00:41,773 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:00:41,775 [main:105] - GENERATED CALL = (bDouble[0]++).toChar().minus('赓')
2021-03-11 13:00:41,775 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:00:41,775 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:41,775 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:00:41,886 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:41,888 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().rotateLeft(305393116)
2021-03-11 13:00:41,888 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:00:41,888 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:00:41,999 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:42,000 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:00:42,111 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:42,112 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(37).rotateRight(685824044)
2021-03-11 13:00:42,112 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:00:42,112 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:42,112 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:00:42,112 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().inv()
2021-03-11 13:00:42,112 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]]
2021-03-11 13:00:42,112 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:00:42,112 [main:137] - GENERATING call of type public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]
2021-03-11 13:00:42,113 [main:105] - GENERATED CALL = (bDouble[0]++).toChar().toInt()
2021-03-11 13:00:42,113 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]]
2021-03-11 13:00:42,113 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:00:42,113 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]
2021-03-11 13:00:42,224 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:42,225 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().div(43)
2021-03-11 13:00:42,225 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]]
2021-03-11 13:00:42,225 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:42,225 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:00:42,354 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:42,355 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().shl(2085762072)
2021-03-11 13:00:42,356 [main:63] - replacement of 1 of type Int is (bDouble[0]++).toChar().toInt()
2021-03-11 13:00:42,468 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:42,469 [main:66] - Compilation checking started
2021-03-11 13:00:42,808 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bDouble[0]++).toChar().toInt())
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    bFloat[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:42,814 [main:56] - replacing (bFloat, FloatArray)
2021-03-11 13:00:42,815 [main:38] - replacing bFloat FloatArray
2021-03-11 13:00:42,815 [main:42] - Getting value of type FloatArray
2021-03-11 13:00:42,930 [main:302] - generating value of type = FloatArray false depth = 0
2021-03-11 13:00:43,047 [main:43] - GENERATING CALL OF fun floatArrayOf(elements: Float): FloatArray = TODO()
2021-03-11 13:00:43,049 [main:61] - WITHOUT TYPE PARAMS = fun floatArrayOf(elements: Float): FloatArray = TODO()
2021-03-11 13:00:43,168 [main:302] - generating value of type = Float true depth = 3
2021-03-11 13:00:43,169 [main:95] - GENERATED = floatArrayOf(0.3158462f)
2021-03-11 13:00:43,169 [main:46] - GENERATED VALUE OF TYPE FloatArray = floatArrayOf(0.3158462f)
2021-03-11 13:00:43,170 [main:49] - GENERATED IS CALL =true
2021-03-11 13:00:43,417 [main:55] - randomType = Collection<UShort>
2021-03-11 13:00:43,418 [main:94] - GETTING FloatArray from Array<Byte>
2021-03-11 13:00:43,428 [main:101] - Case = [public fun kotlin.Array<out kotlin.Float>.toFloatArray(): kotlin.FloatArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c77afa7]]
2021-03-11 13:00:43,428 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Float>.toFloatArray(): kotlin.FloatArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c77afa7]
2021-03-11 13:00:43,429 [main:105] - GENERATED CALL = (aByte).toFloatArray()
2021-03-11 13:00:43,429 [main:63] - replacement of bFloat of type FloatArray is floatArrayOf(0.3158462f)
2021-03-11 13:00:43,540 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:00:43,541 [main:66] - Compilation checking started
2021-03-11 13:00:43,983 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != bLong[0]) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:43,989 [main:56] - replacing (bLong[0], Long)
2021-03-11 13:00:43,990 [main:38] - replacing bLong[0] Long
2021-03-11 13:00:43,990 [main:42] - Getting value of type Long
2021-03-11 13:00:44,111 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:44,112 [main:46] - GENERATED VALUE OF TYPE Long = 9089102327552709615
2021-03-11 13:00:44,112 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:44,234 [main:55] - randomType = UInt
2021-03-11 13:00:44,346 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:00:44,375 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@1772a620]
2021-03-11 13:00:44,375 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2e8e0d1d]
2021-03-11 13:00:44,487 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:44,489 [main:66] - Generated call from random type = (533700362.toUInt()).toShort().minus(7263988428214513740)
2021-03-11 13:00:44,489 [main:94] - GETTING Long from IntArray
2021-03-11 13:00:44,496 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.sumOf(selector: (kotlin.Int) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f55dea2]]
2021-03-11 13:00:44,497 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.sumOf(selector: (kotlin.Int) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f55dea2]
2021-03-11 13:00:44,609 [main:302] - generating value of type = Function1<Int, Long> false depth = 0
2021-03-11 13:00:44,610 [main:302] - generating value of type = Long true depth = 1
2021-03-11 13:00:44,611 [main:105] - GENERATED CALL = (bInt).sumOf({a: Int -> -1341802559053142088})
2021-03-11 13:00:44,612 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]]
2021-03-11 13:00:44,612 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]
2021-03-11 13:00:44,612 [main:105] - GENERATED CALL = (bInt).size.toLong()
2021-03-11 13:00:44,612 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]]
2021-03-11 13:00:44,612 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:00:44,725 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:44,726 [main:105] - GENERATED CALL = (bInt).size.div(-1680195858111150787)
2021-03-11 13:00:44,727 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]]
2021-03-11 13:00:44,727 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]
2021-03-11 13:00:44,840 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:44,841 [main:105] - GENERATED CALL = (bInt).size.times(-4380240670466308066)
2021-03-11 13:00:44,841 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]]
2021-03-11 13:00:44,841 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]
2021-03-11 13:00:44,955 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:44,956 [main:105] - GENERATED CALL = (bInt).size.plus(7794245396433284430)
2021-03-11 13:00:44,956 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]]
2021-03-11 13:00:44,957 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]
2021-03-11 13:00:45,090 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:45,092 [main:105] - GENERATED CALL = (bInt).size.rem(2585094212249158975)
2021-03-11 13:00:45,092 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6297a364]]
2021-03-11 13:00:45,092 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6297a364]
2021-03-11 13:00:45,208 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:45,209 [main:105] - GENERATED CALL = (bInt).size.minus(-8395591059220543614)
2021-03-11 13:00:45,209 [main:63] - replacement of bLong[0] of type Long is (bInt).sumOf({a: Int -> -1341802559053142088})
2021-03-11 13:00:45,323 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:45,323 [main:66] - Compilation checking started
2021-03-11 13:00:45,908 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[0]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:45,918 [main:56] - replacing (0, Int)
2021-03-11 13:00:45,919 [main:38] - replacing 0 Int
2021-03-11 13:00:45,919 [main:42] - Getting value of type Int
2021-03-11 13:00:46,060 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:46,061 [main:46] - GENERATED VALUE OF TYPE Int = 1338248268
2021-03-11 13:00:46,061 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:46,211 [main:55] - randomType = Sequence<Float>
2021-03-11 13:00:46,212 [main:94] - GETTING Int from Short
2021-03-11 13:00:46,270 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 13:00:46,270 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:46,270 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:00:46,399 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:46,400 [main:105] - GENERATED CALL = (bShort[0]--).toInt().minus(-18)
2021-03-11 13:00:46,400 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 13:00:46,400 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:00:46,521 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:46,522 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 13:00:46,522 [main:105] - GENERATED CALL = (bShort[0]--).compareTo(44).countLeadingZeroBits()
2021-03-11 13:00:46,522 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]]
2021-03-11 13:00:46,522 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:00:46,522 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]
2021-03-11 13:00:46,522 [main:105] - GENERATED CALL = (bShort[0]--).toDouble().roundToInt()
2021-03-11 13:00:46,522 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:00:46,522 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:46,523 [main:105] - GENERATED CALL = (bShort[0]--).toInt().sign
2021-03-11 13:00:46,523 [main:101] - Case = [@kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]]
2021-03-11 13:00:46,523 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]
2021-03-11 13:00:46,668 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:46,669 [main:105] - GENERATED CALL = (bShort[0]--).rem(64)
2021-03-11 13:00:46,669 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:00:46,669 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:00:46,792 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:46,793 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:00:46,793 [main:105] - GENERATED CALL = (bShort[0]--).compareTo(-112).toInt()
2021-03-11 13:00:46,793 [main:101] - Case = [public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 13:00:46,793 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 13:00:46,917 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:46,919 [main:105] - GENERATED CALL = (bShort[0]--).times(-105)
2021-03-11 13:00:46,919 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]]
2021-03-11 13:00:46,919 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:00:46,919 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]
2021-03-11 13:00:46,919 [main:105] - GENERATED CALL = (bShort[0]--).toLong().toInt()
2021-03-11 13:00:46,919 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]]
2021-03-11 13:00:46,919 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:46,919 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:00:46,920 [main:105] - GENERATED CALL = (bShort[0]--).toInt().dec()
2021-03-11 13:00:46,920 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:00:46,920 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:46,920 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:00:47,041 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:47,043 [main:105] - GENERATED CALL = (bShort[0]--).toInt().shr(607788163)
2021-03-11 13:00:47,043 [main:63] - replacement of 0 of type Int is (bShort[0]--).compareTo(44).countLeadingZeroBits()
2021-03-11 13:00:47,169 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:47,169 [main:66] - Compilation checking started
2021-03-11 13:00:47,621 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:47,628 [main:56] - replacing (bInt[0], Int)
2021-03-11 13:00:47,629 [main:38] - replacing bInt[0] Int
2021-03-11 13:00:47,629 [main:42] - Getting value of type Int
2021-03-11 13:00:47,754 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:47,756 [main:46] - GENERATED VALUE OF TYPE Int = -638491223
2021-03-11 13:00:47,756 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:47,758 [main:55] - randomType = Char
2021-03-11 13:00:47,877 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:00:47,896 [main:137] - GENERATING call of type public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@76592c22]
2021-03-11 13:00:47,896 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]
2021-03-11 13:00:47,896 [main:66] - Generated call from random type = ('飐').toFloat().roundToInt()
2021-03-11 13:00:47,897 [main:94] - GETTING Int from Float
2021-03-11 13:00:47,924 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:00:47,925 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:47,925 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:00:48,058 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:48,060 [main:105] - GENERATED CALL = (aFloat[0]--).toInt().xor(2139474339)
2021-03-11 13:00:48,060 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]]
2021-03-11 13:00:48,060 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:00:48,060 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]
2021-03-11 13:00:48,060 [main:105] - GENERATED CALL = (aFloat[0]--).toLong().countLeadingZeroBits()
2021-03-11 13:00:48,060 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:00:48,060 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:00:48,178 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:48,179 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:00:48,300 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:48,302 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(-128).times(70)
2021-03-11 13:00:48,302 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]]
2021-03-11 13:00:48,302 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:00:48,302 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]
2021-03-11 13:00:48,302 [main:105] - GENERATED CALL = (aFloat[0]--).toFloat().roundToInt()
2021-03-11 13:00:48,302 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:00:48,302 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:48,302 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:00:48,424 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:48,425 [main:105] - GENERATED CALL = (aFloat[0]--).toInt().rotateLeft(-746032592)
2021-03-11 13:00:48,425 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]]
2021-03-11 13:00:48,426 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:00:48,426 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]
2021-03-11 13:00:48,426 [main:105] - GENERATED CALL = (aFloat[0]--).toByte().unaryMinus()
2021-03-11 13:00:48,426 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]]
2021-03-11 13:00:48,426 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:00:48,545 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:48,546 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:00:48,546 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(11).dec()
2021-03-11 13:00:48,547 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:00:48,547 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:48,547 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:00:48,667 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:48,668 [main:105] - GENERATED CALL = (aFloat[0]--).toInt().or(1804598807)
2021-03-11 13:00:48,668 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:00:48,668 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:00:48,790 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:48,791 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:00:48,791 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(101).inc()
2021-03-11 13:00:48,791 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:00:48,791 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:48,791 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:00:48,792 [main:105] - GENERATED CALL = (aFloat[0]--).toInt().unaryMinus()
2021-03-11 13:00:48,792 [main:63] - replacement of bInt[0] of type Int is (aFloat[0]--).toFloat().roundToInt()
2021-03-11 13:00:48,911 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:48,911 [main:66] - Compilation checking started
2021-03-11 13:00:49,254 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[0]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${(aFloat[0]--).toFloat().roundToInt()}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:49,260 [main:56] - replacing (0, Int)
2021-03-11 13:00:49,261 [main:38] - replacing 0 Int
2021-03-11 13:00:49,261 [main:42] - Getting value of type Int
2021-03-11 13:00:49,381 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:49,382 [main:46] - GENERATED VALUE OF TYPE Int = 277920667
2021-03-11 13:00:49,382 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:50,194 [main:55] - randomType = HashSet<Function2<HashSet<String?>, Array<Short>, Float?>>?
2021-03-11 13:00:50,312 [main:302] - generating value of type = HashSet<Function2<HashSet<String?>, Array<Short>, Float?>> false depth = 0
2021-03-11 13:00:50,438 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): HashSet<Function2<HashSet<Strg?>, Array<Short>, Float?>> = TODO()
2021-03-11 13:00:50,440 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): HashSet<Function2<HashSet<Strg?>, Array<Short>, Float?>> = TODO()
2021-03-11 13:00:50,563 [main:95] - GENERATED = linkedSetOf<Function2<HashSet<String?>, Array<Short>, Float?>>()
2021-03-11 13:00:50,770 [main:137] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.HashSet[DeserializedSimpleFunctionDescriptor@129038d3]
2021-03-11 13:00:50,770 [main:137] - GENERATING call of type public inline fun <T> kotlin.Array<out T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4fc20ae9]
2021-03-11 13:00:50,888 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 13:00:50,889 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 13:00:50,891 [main:66] - Generated call from random type = (linkedSetOf<Function2<HashSet<String?>, Array<Short>, Float?>>())?.toArray().indexOfLast({a: T -> true})
2021-03-11 13:00:50,891 [main:94] - GETTING Int from Int
2021-03-11 13:00:50,923 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 13:00:50,923 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 13:00:50,923 [main:105] - GENERATED CALL = (aInt[0]--).countLeadingZeroBits()
2021-03-11 13:00:50,923 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:00:50,923 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:00:51,043 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:51,044 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:00:51,045 [main:105] - GENERATED CALL = (aInt[0]--).compareTo(-1845651459).unaryPlus()
2021-03-11 13:00:51,045 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]]
2021-03-11 13:00:51,045 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:00:51,045 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]
2021-03-11 13:00:51,045 [main:105] - GENERATED CALL = (aInt[0]--).toDouble().toInt()
2021-03-11 13:00:51,045 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]]
2021-03-11 13:00:51,045 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:00:51,045 [main:137] - GENERATING call of type public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]
2021-03-11 13:00:51,045 [main:105] - GENERATED CALL = (aInt[0]--).toChar().toInt()
2021-03-11 13:00:51,045 [main:101] - Case = [public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:00:51,046 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:00:51,165 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:51,287 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:51,288 [main:105] - GENERATED CALL = (aInt[0]--).coerceIn(987987816, -1472191295)
2021-03-11 13:00:51,288 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]]
2021-03-11 13:00:51,289 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:00:51,289 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]
2021-03-11 13:00:51,414 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:51,416 [main:105] - GENERATED CALL = (aInt[0]--).toByte().plus(-17)
2021-03-11 13:00:51,416 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]]
2021-03-11 13:00:51,416 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:00:51,416 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:00:51,536 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:51,537 [main:105] - GENERATED CALL = (aInt[0]--).toByte().compareTo(-42)
2021-03-11 13:00:51,537 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]]
2021-03-11 13:00:51,537 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:00:51,537 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]
2021-03-11 13:00:51,538 [main:105] - GENERATED CALL = (aInt[0]--).toShort().countLeadingZeroBits()
2021-03-11 13:00:51,538 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:00:51,538 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:00:51,657 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:51,658 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:00:51,778 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:51,779 [main:105] - GENERATED CALL = (aInt[0]--).compareTo(2077698197).div(-16)
2021-03-11 13:00:51,780 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:00:51,780 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:00:51,898 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:00:51,899 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:00:52,018 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:52,019 [main:105] - GENERATED CALL = (aInt[0]--).compareTo(-261964629).rem(49)
2021-03-11 13:00:52,019 [main:63] - replacement of 0 of type Int is 277920667
2021-03-11 13:00:52,157 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 13:00:52,157 [main:66] - Compilation checking started
2021-03-11 13:00:52,619 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (aShort[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:52,625 [main:56] - replacing (aShort, Array<Short>)
2021-03-11 13:00:52,626 [main:38] - replacing aShort Array<Short>
2021-03-11 13:00:52,626 [main:42] - Getting value of type Array<Short>
2021-03-11 13:00:52,744 [main:302] - generating value of type = Array<Short> false depth = 0
2021-03-11 13:00:52,875 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Short> = TODO()
2021-03-11 13:00:52,877 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Short> = TODO()
2021-03-11 13:00:52,999 [main:95] - GENERATED = emptyArray<Short>()
2021-03-11 13:00:52,999 [main:46] - GENERATED VALUE OF TYPE Array<Short> = emptyArray<Short>()
2021-03-11 13:00:52,999 [main:49] - GENERATED IS CALL =true
2021-03-11 13:00:53,126 [main:55] - randomType = UByte
2021-03-11 13:00:53,243 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:00:53,271 [main:94] - GETTING Array<Short> from Short
2021-03-11 13:00:53,301 [main:94] - GETTING Array<Short> from Double
2021-03-11 13:00:53,329 [main:94] - GETTING Array<Short> from Short
2021-03-11 13:00:53,330 [main:94] - GETTING Array<Short> from Int
2021-03-11 13:00:53,363 [main:94] - GETTING Array<Short> from Int
2021-03-11 13:00:53,364 [main:94] - GETTING Array<Short> from Array<Int>
2021-03-11 13:00:53,373 [main:63] - replacement of aShort of type Array<Short> is emptyArray<Short>()
2021-03-11 13:00:53,490 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:00:53,491 [main:66] - Compilation checking started
2021-03-11 13:00:53,954 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (emptyArray<Short>()[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${aDouble[0]} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:53,960 [main:56] - replacing (aDouble[0], Double)
2021-03-11 13:00:53,961 [main:38] - replacing aDouble[0] Double
2021-03-11 13:00:53,961 [main:42] - Getting value of type Double
2021-03-11 13:00:54,084 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:54,085 [main:46] - GENERATED VALUE OF TYPE Double = 0.4630365253273958
2021-03-11 13:00:54,086 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:54,219 [main:55] - randomType = ULong
2021-03-11 13:00:54,342 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 13:00:54,377 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@74e5b4ca]
2021-03-11 13:00:54,377 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6076b1a3]
2021-03-11 13:00:54,495 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:54,496 [main:66] - Generated call from random type = (8490251646980732564.toULong()).toShort().minus(0.0873657581645958)
2021-03-11 13:00:54,497 [main:94] - GETTING Double from Double
2021-03-11 13:00:54,525 [main:101] - Case = [public final operator fun times(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5b7c2113]]
2021-03-11 13:00:54,525 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5b7c2113]
2021-03-11 13:00:54,642 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:54,643 [main:105] - GENERATED CALL = (bDouble[0]--).times(52)
2021-03-11 13:00:54,643 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4d0648d8]]
2021-03-11 13:00:54,643 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:00:54,643 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4d0648d8]
2021-03-11 13:00:54,643 [main:105] - GENERATED CALL = (bDouble[0]--).toDouble().dec()
2021-03-11 13:00:54,643 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@40f9cf69]]
2021-03-11 13:00:54,643 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:00:54,644 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@40f9cf69]
2021-03-11 13:00:54,760 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:54,762 [main:105] - GENERATED CALL = (bDouble[0]--).toFloat().plus(0.8087567477380319)
2021-03-11 13:00:54,762 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.sign: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@23395b41]]
2021-03-11 13:00:54,762 [main:105] - GENERATED CALL = (bDouble[0]--).sign
2021-03-11 13:00:54,762 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]]
2021-03-11 13:00:54,762 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:00:54,762 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:00:54,880 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:54,881 [main:105] - GENERATED CALL = (bDouble[0]--).toLong().div(0.01555016432244194)
2021-03-11 13:00:54,881 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]]
2021-03-11 13:00:54,881 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:00:54,998 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:54,999 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]
2021-03-11 13:00:55,134 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:55,136 [main:105] - GENERATED CALL = (bDouble[0]--).compareTo(-4).plus(0.5098028968574115)
2021-03-11 13:00:55,136 [main:101] - Case = [public final operator fun inc(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@58e28efd]]
2021-03-11 13:00:55,136 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@58e28efd]
2021-03-11 13:00:55,136 [main:105] - GENERATED CALL = (bDouble[0]--).inc()
2021-03-11 13:00:55,136 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]]
2021-03-11 13:00:55,136 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]
2021-03-11 13:00:55,255 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:55,256 [main:105] - GENERATED CALL = (bDouble[0]--).pow(0.11213720570958674)
2021-03-11 13:00:55,256 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@68b7f942]]
2021-03-11 13:00:55,256 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:00:55,256 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@68b7f942]
2021-03-11 13:00:55,256 [main:105] - GENERATED CALL = (bDouble[0]--).toDouble().nextUp()
2021-03-11 13:00:55,257 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]]
2021-03-11 13:00:55,257 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:00:55,257 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:00:55,375 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:55,376 [main:105] - GENERATED CALL = (bDouble[0]--).toInt().div(0.17152066355048712)
2021-03-11 13:00:55,376 [main:63] - replacement of aDouble[0] of type Double is (bDouble[0]--).toFloat().plus(0.8087567477380319)
2021-03-11 13:00:55,492 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:55,493 [main:66] - Compilation checking started
2021-03-11 13:00:55,968 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (emptyArray<Short>()[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    aFloat[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:55,978 [main:56] - replacing (bLong[0], Long)
2021-03-11 13:00:55,980 [main:38] - replacing bLong[0] Long
2021-03-11 13:00:55,980 [main:42] - Getting value of type Long
2021-03-11 13:00:56,113 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:56,114 [main:46] - GENERATED VALUE OF TYPE Long = 8842750674178976052
2021-03-11 13:00:56,114 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:56,117 [main:55] - randomType = Double
2021-03-11 13:00:56,237 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:56,269 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:00:56,270 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]
2021-03-11 13:00:56,270 [main:66] - Generated call from random type = (0.5963090630066442).toDouble().roundToLong()
2021-03-11 13:00:56,270 [main:63] - replacement of bLong[0] of type Long is (0.5963090630066442).toDouble().roundToLong()
2021-03-11 13:00:56,387 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:56,387 [main:66] - Compilation checking started
2021-03-11 13:00:56,748 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (emptyArray<Short>()[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${(0.5963090630066442).toDouble().roundToLong()}"

    aFloat[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:56,755 [main:56] - replacing (aFloat, Array<Float>)
2021-03-11 13:00:56,756 [main:38] - replacing aFloat Array<Float>
2021-03-11 13:00:56,756 [main:42] - Getting value of type Array<Float>
2021-03-11 13:00:56,893 [main:302] - generating value of type = Array<Float> false depth = 0
2021-03-11 13:00:57,018 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Float): Array<Float> = TODO()
2021-03-11 13:00:57,020 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Float): Array<Float> = TODO()
2021-03-11 13:00:57,142 [main:302] - generating value of type = Float true depth = 3
2021-03-11 13:00:57,144 [main:95] - GENERATED = arrayOf<Float>(0.851604f)
2021-03-11 13:00:57,144 [main:46] - GENERATED VALUE OF TYPE Array<Float> = arrayOf<Float>(0.851604f)
2021-03-11 13:00:57,144 [main:49] - GENERATED IS CALL =true
2021-03-11 13:00:57,398 [main:55] - randomType = ULong?
2021-03-11 13:00:57,517 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 13:00:57,547 [main:94] - GETTING Array<Float> from Byte
2021-03-11 13:00:57,577 [main:94] - GETTING Array<Float> from FloatArray
2021-03-11 13:00:57,586 [main:101] - Case = [public fun kotlin.FloatArray.toTypedArray(): kotlin.Array<kotlin.Float> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9053b33]]
2021-03-11 13:00:57,586 [main:137] - GENERATING call of type public fun kotlin.FloatArray.toTypedArray(): kotlin.Array<kotlin.Float> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@9053b33]
2021-03-11 13:00:57,586 [main:105] - GENERATED CALL = (bFloat).toTypedArray()
2021-03-11 13:00:57,586 [main:63] - replacement of aFloat of type Array<Float> is (bFloat).toTypedArray()
2021-03-11 13:00:57,703 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:57,704 [main:66] - Compilation checking started
2021-03-11 13:00:58,159 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${bShort[(bFloat).size.countLeadingZeroBits()]}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (emptyArray<Short>()[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:58,165 [main:56] - replacing (bShort[(bFloat).size.countLeadingZeroBits()], Short)
2021-03-11 13:00:58,167 [main:38] - replacing bShort[(bFloat).size.countLeadingZeroBits()] Short
2021-03-11 13:00:58,167 [main:42] - Getting value of type Short
2021-03-11 13:00:58,288 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:00:58,289 [main:46] - GENERATED VALUE OF TYPE Short = -22827
2021-03-11 13:00:58,289 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:58,292 [main:55] - randomType = Short
2021-03-11 13:00:58,411 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:00:58,442 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]
2021-03-11 13:00:58,442 [main:66] - Generated call from random type = (14714).takeLowestOneBit()
2021-03-11 13:00:58,443 [main:94] - GETTING Short from Long
2021-03-11 13:00:58,473 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]]
2021-03-11 13:00:58,473 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:00:58,473 [main:137] - GENERATING call of type public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]
2021-03-11 13:00:58,473 [main:105] - GENERATED CALL = (aLong[0]--).toChar().toShort()
2021-03-11 13:00:58,473 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]]
2021-03-11 13:00:58,473 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:58,473 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]
2021-03-11 13:00:58,473 [main:105] - GENERATED CALL = (aLong[0]--).toShort().inv()
2021-03-11 13:00:58,473 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]]
2021-03-11 13:00:58,474 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:58,474 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]
2021-03-11 13:00:58,597 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:00:58,598 [main:105] - GENERATED CALL = (aLong[0]--).toShort().and(-1649)
2021-03-11 13:00:58,599 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]]
2021-03-11 13:00:58,599 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:58,599 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]
2021-03-11 13:00:58,599 [main:105] - GENERATED CALL = (aLong[0]--).toShort().takeHighestOneBit()
2021-03-11 13:00:58,599 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:00:58,599 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:00:58,718 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:00:58,719 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:00:58,719 [main:105] - GENERATED CALL = (aLong[0]--).div(0.25537828086286696).toShort()
2021-03-11 13:00:58,719 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]]
2021-03-11 13:00:58,719 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:00:58,836 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:00:58,838 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:00:58,838 [main:105] - GENERATED CALL = (aLong[0]--).compareTo(9).toShort()
2021-03-11 13:00:58,838 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:00:58,838 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:00:58,838 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:00:58,838 [main:105] - GENERATED CALL = (aLong[0]--).toFloat().toShort()
2021-03-11 13:00:58,838 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]]
2021-03-11 13:00:58,838 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:58,838 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]
2021-03-11 13:00:58,956 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:00:58,957 [main:105] - GENERATED CALL = (aLong[0]--).toShort().coerceAtLeast(28273)
2021-03-11 13:00:58,957 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public fun kotlin.Short.coerceAtMost(maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@74aec5e7]]
2021-03-11 13:00:58,957 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:58,957 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtMost(maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@74aec5e7]
2021-03-11 13:00:59,083 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:00:59,084 [main:105] - GENERATED CALL = (aLong[0]--).toShort().coerceAtMost(-15805)
2021-03-11 13:00:59,084 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]]
2021-03-11 13:00:59,084 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:00:59,084 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]
2021-03-11 13:00:59,085 [main:105] - GENERATED CALL = (aLong[0]--).toShort().takeLowestOneBit()
2021-03-11 13:00:59,085 [main:63] - replacement of bShort[(bFloat).size.countLeadingZeroBits()] of type Short is (aLong[0]--).toFloat().toShort()
2021-03-11 13:00:59,203 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:00:59,204 [main:66] - Compilation checking started
2021-03-11 13:00:59,680 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (emptyArray<Short>()[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if (aLong[0] != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:00:59,687 [main:56] - replacing (aLong[0], Long)
2021-03-11 13:00:59,688 [main:38] - replacing aLong[0] Long
2021-03-11 13:00:59,688 [main:42] - Getting value of type Long
2021-03-11 13:00:59,809 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:00:59,810 [main:46] - GENERATED VALUE OF TYPE Long = -2567342986583268667
2021-03-11 13:00:59,810 [main:49] - GENERATED IS CALL =false
2021-03-11 13:00:59,812 [main:55] - randomType = Char
2021-03-11 13:00:59,932 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:00:59,958 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:00:59,958 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7c8ff6b9]
2021-03-11 13:01:00,077 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:00,078 [main:66] - Generated call from random type = ('쪝').toByte().times(-4980327900253941776)
2021-03-11 13:01:00,079 [main:94] - GETTING Long from Short
2021-03-11 13:01:00,110 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@4202af59]]
2021-03-11 13:01:00,110 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:00,110 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@4202af59]
2021-03-11 13:01:00,111 [main:105] - GENERATED CALL = (bShort[0]).toDouble().toBits()
2021-03-11 13:01:00,111 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64], public final operator fun times(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@108b5d04]]
2021-03-11 13:01:00,111 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:01:00,230 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:00,231 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@108b5d04]
2021-03-11 13:01:00,350 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:00,351 [main:105] - GENERATED CALL = (bShort[0]).div(-7421137152357473839).times(0)
2021-03-11 13:01:00,351 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun unaryMinus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@28246de9]]
2021-03-11 13:01:00,351 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:01:00,351 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@28246de9]
2021-03-11 13:01:00,351 [main:105] - GENERATED CALL = (bShort[0]).toLong().unaryMinus()
2021-03-11 13:01:00,352 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]]
2021-03-11 13:01:00,352 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:00,352 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]
2021-03-11 13:01:00,352 [main:105] - GENERATED CALL = (bShort[0]).toDouble().roundToLong()
2021-03-11 13:01:00,352 [main:101] - Case = [public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2e8e0d1d]]
2021-03-11 13:01:00,352 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2e8e0d1d]
2021-03-11 13:01:00,478 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:00,480 [main:105] - GENERATED CALL = (bShort[0]).minus(1533773867373158986)
2021-03-11 13:01:00,480 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Long.absoluteValue: kotlin.Long defined in kotlin.math[DeserializedPropertyDescriptor@317d957f]]
2021-03-11 13:01:00,480 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:01:00,480 [main:105] - GENERATED CALL = (bShort[0]).toLong().absoluteValue
2021-03-11 13:01:00,480 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@23c7f542]]
2021-03-11 13:01:00,480 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:01:00,480 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@23c7f542]
2021-03-11 13:01:00,480 [main:105] - GENERATED CALL = (bShort[0]).toLong().unaryPlus()
2021-03-11 13:01:00,480 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]]
2021-03-11 13:01:00,480 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:01:00,600 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:01:00,601 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]
2021-03-11 13:01:00,602 [main:105] - GENERATED CALL = (bShort[0]).div(0.7534919977195123).roundToLong()
2021-03-11 13:01:00,602 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun times(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@108b5d04]]
2021-03-11 13:01:00,602 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:01:00,602 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@108b5d04]
2021-03-11 13:01:00,720 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:00,722 [main:105] - GENERATED CALL = (bShort[0]).toLong().times(72)
2021-03-11 13:01:00,722 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d418e37]]
2021-03-11 13:01:00,722 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:01:00,722 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d418e37]
2021-03-11 13:01:00,841 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:00,842 [main:105] - GENERATED CALL = (bShort[0]).toShort().times(6234517252722031408)
2021-03-11 13:01:00,842 [main:63] - replacement of aLong[0] of type Long is (bShort[0]).div(-7421137152357473839).times(0)
2021-03-11 13:01:00,960 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:00,960 [main:66] - Compilation checking started
2021-03-11 13:01:01,429 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (emptyArray<Short>()[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    aLong[(-32306)?.dec().countLeadingZeroBits()]++
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:01,438 [main:56] - replacing (aLong[(-32306)?.dec().countLeadingZeroBits()]++, Long)
2021-03-11 13:01:01,440 [main:38] - replacing aLong[(-32306)?.dec().countLeadingZeroBits()]++ Long
2021-03-11 13:01:01,440 [main:42] - Getting value of type Long
2021-03-11 13:01:01,596 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:01,597 [main:46] - GENERATED VALUE OF TYPE Long = 1971163935463359350
2021-03-11 13:01:01,597 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:01,727 [main:55] - randomType = ULong
2021-03-11 13:01:01,848 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 13:01:01,892 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@452220ff]
2021-03-11 13:01:02,022 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:01:02,023 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]
2021-03-11 13:01:02,145 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:02,146 [main:66] - Generated call from random type = (7929118259864707573.toULong()).compareTo(46.toUByte()).times(-2847783910090558491)
2021-03-11 13:01:02,147 [main:94] - GETTING Long from Byte
2021-03-11 13:01:02,189 [main:101] - Case = [public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@efa4745]]
2021-03-11 13:01:02,189 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@efa4745]
2021-03-11 13:01:02,311 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:02,312 [main:105] - GENERATED CALL = (aByte[0]++).minus(-2293056017931606941)
2021-03-11 13:01:02,312 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]]
2021-03-11 13:01:02,312 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:01:02,433 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:02,435 [main:105] - GENERATED CALL = (aByte[0]++).div(-8613204556744720665)
2021-03-11 13:01:02,435 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun plus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5378b5ec]]
2021-03-11 13:01:02,435 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:01:02,435 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5378b5ec]
2021-03-11 13:01:02,554 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:02,555 [main:105] - GENERATED CALL = (aByte[0]++).toLong().plus(-38)
2021-03-11 13:01:02,555 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], public fun kotlin.Long.coerceIn(minimumValue: kotlin.Long, maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5df68f70]]
2021-03-11 13:01:02,555 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:01:02,674 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:02,675 [main:137] - GENERATING call of type public fun kotlin.Long.coerceIn(minimumValue: kotlin.Long, maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5df68f70]
2021-03-11 13:01:02,840 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:02,964 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:02,966 [main:105] - GENERATED CALL = (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
2021-03-11 13:01:02,966 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun dec(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@54411f09]]
2021-03-11 13:01:02,966 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:01:02,966 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@54411f09]
2021-03-11 13:01:02,966 [main:105] - GENERATED CALL = (aByte[0]++).toLong().dec()
2021-03-11 13:01:02,966 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@70058b8b]]
2021-03-11 13:01:02,966 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:01:02,966 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@70058b8b]
2021-03-11 13:01:03,092 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:03,094 [main:105] - GENERATED CALL = (aByte[0]++).toShort().rem(-7361796180865489577)
2021-03-11 13:01:03,094 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Long.absoluteValue: kotlin.Long defined in kotlin.math[DeserializedPropertyDescriptor@317d957f]]
2021-03-11 13:01:03,094 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:01:03,215 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:03,216 [main:105] - GENERATED CALL = (aByte[0]++).div(5253149911294201659).absoluteValue
2021-03-11 13:01:03,216 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@508564d4]]
2021-03-11 13:01:03,216 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:01:03,335 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:03,336 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@508564d4]
2021-03-11 13:01:03,456 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:03,457 [main:105] - GENERATED CALL = (aByte[0]++).div(-696653517342047593).rotateRight(-45709796)
2021-03-11 13:01:03,458 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], public final operator fun minus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@19797838]]
2021-03-11 13:01:03,458 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:01:03,582 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:03,584 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@19797838]
2021-03-11 13:01:03,705 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:03,706 [main:105] - GENERATED CALL = (aByte[0]++).div(8131209687268305787).minus(-16)
2021-03-11 13:01:03,706 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], public final operator fun dec(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@54411f09]]
2021-03-11 13:01:03,707 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:01:03,826 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:03,828 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@54411f09]
2021-03-11 13:01:03,828 [main:105] - GENERATED CALL = (aByte[0]++).div(-4865467183174528425).dec()
2021-03-11 13:01:03,828 [main:63] - replacement of aLong[(-32306)?.dec().countLeadingZeroBits()]++ of type Long is (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
2021-03-11 13:01:03,947 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:03,948 [main:66] - Compilation checking started
2021-03-11 13:01:04,397 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (emptyArray<Short>()[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[0]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:04,403 [main:56] - replacing (0, Int)
2021-03-11 13:01:04,405 [main:38] - replacing 0 Int
2021-03-11 13:01:04,405 [main:42] - Getting value of type Int
2021-03-11 13:01:04,545 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:04,546 [main:46] - GENERATED VALUE OF TYPE Int = -600766510
2021-03-11 13:01:04,546 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:04,677 [main:55] - randomType = Boolean?
2021-03-11 13:01:04,798 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:04,808 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:01:04,927 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:04,928 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:01:05,049 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:05,050 [main:66] - Generated call from random type = (true)?.compareTo(true).shr(-685211436)
2021-03-11 13:01:05,050 [main:63] - replacement of 0 of type Int is (true)?.compareTo(true).shr(-685211436)
2021-03-11 13:01:05,170 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:05,170 [main:66] - Compilation checking started
2021-03-11 13:01:05,613 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[0]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (emptyArray<Short>()[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:05,619 [main:56] - replacing (0, Int)
2021-03-11 13:01:05,620 [main:38] - replacing 0 Int
2021-03-11 13:01:05,620 [main:42] - Getting value of type Int
2021-03-11 13:01:05,741 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:05,742 [main:46] - GENERATED VALUE OF TYPE Int = 1732558983
2021-03-11 13:01:05,742 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:05,744 [main:55] - randomType = Char
2021-03-11 13:01:05,865 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:05,884 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:01:05,884 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]
2021-03-11 13:01:06,005 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:06,007 [main:66] - Generated call from random type = ('蟖').toByte().rem(-28)
2021-03-11 13:01:06,007 [main:63] - replacement of 0 of type Int is ('蟖').toByte().rem(-28)
2021-03-11 13:01:06,147 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:06,148 [main:66] - Compilation checking started
2021-03-11 13:01:06,617 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (emptyArray<Short>()[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:06,623 [main:56] - replacing (bDouble, DoubleArray)
2021-03-11 13:01:06,625 [main:38] - replacing bDouble DoubleArray
2021-03-11 13:01:06,625 [main:42] - Getting value of type DoubleArray
2021-03-11 13:01:06,754 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:01:06,883 [main:43] - GENERATING CALL OF fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:01:06,885 [main:61] - WITHOUT TYPE PARAMS = fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:01:07,013 [main:302] - generating value of type = Double true depth = 3
2021-03-11 13:01:07,014 [main:95] - GENERATED = doubleArrayOf(0.49468650290228167)
2021-03-11 13:01:07,014 [main:46] - GENERATED VALUE OF TYPE DoubleArray = doubleArrayOf(0.49468650290228167)
2021-03-11 13:01:07,014 [main:49] - GENERATED IS CALL =true
2021-03-11 13:01:07,017 [main:55] - randomType = Boolean
2021-03-11 13:01:07,139 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:07,153 [main:94] - GETTING DoubleArray from Int
2021-03-11 13:01:07,186 [main:94] - GETTING DoubleArray from Array<Byte>
2021-03-11 13:01:07,195 [main:101] - Case = [public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]]
2021-03-11 13:01:07,195 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]
2021-03-11 13:01:07,196 [main:105] - GENERATED CALL = (aByte).toDoubleArray()
2021-03-11 13:01:07,196 [main:63] - replacement of bDouble of type DoubleArray is (aByte).toDoubleArray()
2021-03-11 13:01:07,315 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:07,315 [main:66] - Compilation checking started
2021-03-11 13:01:07,661 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if (emptyArray<Short>()[0] != bShort[0]) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != (aByte).toDoubleArray()[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:07,667 [main:56] - replacing (emptyArray<Short>()[0] != bShort[0], Boolean)
2021-03-11 13:01:07,668 [main:38] - replacing emptyArray<Short>()[0] != bShort[0] Boolean
2021-03-11 13:01:07,668 [main:42] - Getting value of type Boolean
2021-03-11 13:01:07,789 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:07,790 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 13:01:07,790 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:07,792 [main:55] - randomType = Float
2021-03-11 13:01:07,928 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:07,962 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:01:07,963 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@493658fa]
2021-03-11 13:01:08,084 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:08,084 [main:66] - Generated call from random type = (0.14796329f).toLong().equals("qwspp")
2021-03-11 13:01:08,085 [main:94] - GETTING Boolean from Int
2021-03-11 13:01:08,119 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]]
2021-03-11 13:01:08,119 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:08,119 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]
2021-03-11 13:01:08,245 [main:105] - GENERATED CALL = (bInt[0]++).toDouble().equals(null)
2021-03-11 13:01:08,245 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41806110]]
2021-03-11 13:01:08,245 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:01:08,370 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:08,370 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41806110]
2021-03-11 13:01:08,492 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:08,492 [main:105] - GENERATED CALL = (bInt[0]++).equals("xusda").equals("sfpwk")
2021-03-11 13:01:08,492 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public fun kotlin.Char.isDefined(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@791198ad]]
2021-03-11 13:01:08,492 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:01:08,492 [main:137] - GENERATING call of type public fun kotlin.Char.isDefined(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@791198ad]
2021-03-11 13:01:08,492 [main:105] - GENERATED CALL = (bInt[0]++).toChar().isDefined()
2021-03-11 13:01:08,493 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@63e55d39]]
2021-03-11 13:01:08,493 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:08,493 [main:137] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@63e55d39]
2021-03-11 13:01:08,493 [main:105] - GENERATED CALL = (bInt[0]++).toDouble().isFinite()
2021-03-11 13:01:08,493 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23], public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@54c8a898]]
2021-03-11 13:01:08,493 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:01:08,613 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:01:08,615 [main:137] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@54c8a898]
2021-03-11 13:01:08,615 [main:105] - GENERATED CALL = (bInt[0]++).div(0.9254320439775451).isInfinite()
2021-03-11 13:01:08,615 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@15d87a4a]]
2021-03-11 13:01:08,615 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:08,615 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@15d87a4a]
2021-03-11 13:01:08,736 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:08,736 [main:105] - GENERATED CALL = (bInt[0]++).toFloat().equals("hiane")
2021-03-11 13:01:08,736 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public fun kotlin.Char.isISOControl(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@462bd05f]]
2021-03-11 13:01:08,736 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:01:08,737 [main:137] - GENERATING call of type public fun kotlin.Char.isISOControl(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@462bd05f]
2021-03-11 13:01:08,737 [main:105] - GENERATED CALL = (bInt[0]++).toChar().isISOControl()
2021-03-11 13:01:08,737 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@a6f06e6]]
2021-03-11 13:01:08,737 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111]
2021-03-11 13:01:08,858 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:08,859 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@a6f06e6]
2021-03-11 13:01:08,982 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:08,982 [main:105] - GENERATED CALL = (bInt[0]++).rangeTo(116).equals("plojt")
2021-03-11 13:01:08,982 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public fun kotlin.Char.isLowerCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1083bd24]]
2021-03-11 13:01:08,982 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:01:08,982 [main:137] - GENERATING call of type public fun kotlin.Char.isLowerCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1083bd24]
2021-03-11 13:01:08,982 [main:105] - GENERATED CALL = (bInt[0]++).toChar().isLowerCase()
2021-03-11 13:01:08,982 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@55053252]]
2021-03-11 13:01:08,982 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:01:09,103 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:09,103 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@55053252]
2021-03-11 13:01:09,224 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:09,226 [main:105] - GENERATED CALL = (bInt[0]++).equals("ouncr").and(true)
2021-03-11 13:01:09,226 [main:63] - replacement of emptyArray<Short>()[0] != bShort[0] of type Boolean is (bInt[0]++).toChar().isISOControl()
2021-03-11 13:01:09,346 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:09,346 [main:66] - Compilation checking started
2021-03-11 13:01:09,814 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:09,821 [main:56] - replacing (bLong, LongArray)
2021-03-11 13:01:09,822 [main:38] - replacing bLong LongArray
2021-03-11 13:01:09,822 [main:42] - Getting value of type LongArray
2021-03-11 13:01:09,945 [main:302] - generating value of type = LongArray false depth = 0
2021-03-11 13:01:10,069 [main:43] - GENERATING CALL OF fun LongArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Long): LongArray = TODO()
2021-03-11 13:01:10,071 [main:61] - WITHOUT TYPE PARAMS = fun LongArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Long): LongArray = TODO()
2021-03-11 13:01:10,463 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:01:10,465 [main:302] - generating value of type = Function1<Int, Long> false depth = 3
2021-03-11 13:01:10,466 [main:302] - generating value of type = Long true depth = 4
2021-03-11 13:01:10,467 [main:95] - GENERATED = LongArray(-1501817517, {a: Int -> 7052971432277212976})
2021-03-11 13:01:10,467 [main:46] - GENERATED VALUE OF TYPE LongArray = LongArray(-1501817517, {a: Int -> 7052971432277212976})
2021-03-11 13:01:10,467 [main:49] - GENERATED IS CALL =true
2021-03-11 13:01:10,864 [main:55] - randomType = Array<List<Byte>>
2021-03-11 13:01:10,985 [main:302] - generating value of type = Array<List<Byte>> false depth = 0
2021-03-11 13:01:11,119 [main:43] - GENERATING CALL OF fun <T> arrayOfNulls(size: kotlin.Int): Array<List<Byte>> = TODO()
2021-03-11 13:01:11,122 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOfNulls(size: kotlin.Int): Array<List<Byte>> = TODO()
2021-03-11 13:01:11,415 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:01:11,416 [main:95] - GENERATED = arrayOfNulls<List<Byte>>(-2090398138)
2021-03-11 13:01:11,435 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]
2021-03-11 13:01:11,435 [main:66] - Generated call from random type = (arrayOfNulls<List<Byte>>(-2090398138)).toLongArray()
2021-03-11 13:01:11,436 [main:63] - replacement of bLong of type LongArray is (arrayOfNulls<List<Byte>>(-2090398138)).toLongArray()
2021-03-11 13:01:11,558 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:11,558 [main:66] - Compilation checking started
2021-03-11 13:01:11,918 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${(arrayOfNulls<List<Byte>>(-2090398138)).toLongArray()[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:11,928 [main:56] - replacing ("Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}", String)
2021-03-11 13:01:11,929 [main:38] - replacing "Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}" String
2021-03-11 13:01:11,929 [main:42] - Getting value of type String
2021-03-11 13:01:12,054 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:01:12,055 [main:46] - GENERATED VALUE OF TYPE String = "uixkk"
2021-03-11 13:01:12,055 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:12,058 [main:55] - randomType = UShort
2021-03-11 13:01:12,180 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:01:12,210 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@44759173]
2021-03-11 13:01:12,210 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:01:12,336 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:12,339 [main:66] - Generated call from random type = (2970.toUShort()).toByte().toString(-1352991530)
2021-03-11 13:01:12,339 [main:94] - GETTING String from Double
2021-03-11 13:01:12,373 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]]
2021-03-11 13:01:12,373 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:01:12,373 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:01:12,495 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:12,496 [main:105] - GENERATED CALL = (bDouble[0]++).toByte().toString(1971045739)
2021-03-11 13:01:12,496 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:01:12,496 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:01:12,496 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:01:12,618 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:12,620 [main:105] - GENERATED CALL = (bDouble[0]++).toLong().toString(519146683)
2021-03-11 13:01:12,620 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]]
2021-03-11 13:01:12,620 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:01:12,620 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]
2021-03-11 13:01:12,758 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:12,760 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().toString(-11936696)
2021-03-11 13:01:12,760 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:01:12,760 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:12,760 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:01:12,879 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:12,881 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().toString(-1998725601)
2021-03-11 13:01:12,881 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]]
2021-03-11 13:01:12,881 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:01:12,881 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]
2021-03-11 13:01:12,881 [main:105] - GENERATED CALL = (bDouble[0]++).toChar().lowercase()
2021-03-11 13:01:12,881 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]]
2021-03-11 13:01:12,881 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:01:12,881 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]
2021-03-11 13:01:12,881 [main:105] - GENERATED CALL = (bDouble[0]++).toChar().uppercase()
2021-03-11 13:01:12,882 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]]
2021-03-11 13:01:12,882 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:01:12,882 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]
2021-03-11 13:01:13,020 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:01:13,022 [main:105] - GENERATED CALL = (bDouble[0]++).toChar().plus("gjoob")
2021-03-11 13:01:13,022 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]]
2021-03-11 13:01:13,022 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:01:13,022 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]
2021-03-11 13:01:13,022 [main:105] - GENERATED CALL = (bDouble[0]++).toChar().titlecase()
2021-03-11 13:01:13,022 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:01:13,023 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:01:13,145 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:13,146 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:01:13,266 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:13,267 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-56).toString(2088457407)
2021-03-11 13:01:13,268 [main:63] - replacement of "Failed post-decrement Short: ${aShort[0]} != ${(aLong[0]--).toFloat().toShort()}" of type String is "uixkk"
2021-03-11 13:01:13,388 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 13:01:13,388 [main:66] - Compilation checking started
2021-03-11 13:01:13,833 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)]) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:13,844 [main:56] - replacing (aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)], Boolean)
2021-03-11 13:01:13,846 [main:38] - replacing aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)] Boolean
2021-03-11 13:01:13,846 [main:42] - Getting value of type Boolean
2021-03-11 13:01:13,967 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:13,969 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 13:01:13,969 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:13,972 [main:55] - randomType = Long
2021-03-11 13:01:14,093 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:14,131 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:01:14,131 [main:137] - GENERATING call of type public fun kotlin.Char.equals(other: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@26e3573e]
2021-03-11 13:01:14,252 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:14,373 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:14,374 [main:66] - Generated call from random type = (-8585756802209058343).toChar().equals('镍', false)
2021-03-11 13:01:14,375 [main:94] - GETTING Boolean from Float
2021-03-11 13:01:14,405 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@2ced1690]]
2021-03-11 13:01:14,405 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:14,405 [main:137] - GENERATING call of type public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@2ced1690]
2021-03-11 13:01:14,405 [main:105] - GENERATED CALL = (bFloat[0]).toFloat().isInfinite()
2021-03-11 13:01:14,405 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@63e55d39]]
2021-03-11 13:01:14,405 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:14,405 [main:137] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@63e55d39]
2021-03-11 13:01:14,405 [main:105] - GENERATED CALL = (bFloat[0]).toDouble().isFinite()
2021-03-11 13:01:14,405 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943], public fun kotlin.Char.isHighSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b6af7c7]]
2021-03-11 13:01:14,405 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943]
2021-03-11 13:01:14,405 [main:137] - GENERATING call of type public fun kotlin.Char.isHighSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b6af7c7]
2021-03-11 13:01:14,406 [main:105] - GENERATED CALL = (bFloat[0]).toChar().isHighSurrogate()
2021-03-11 13:01:14,406 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]]
2021-03-11 13:01:14,406 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:01:14,525 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:01:14,526 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]
2021-03-11 13:01:14,645 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:14,645 [main:105] - GENERATED CALL = (bFloat[0]).div(0.6953326587252905).equals("ragts")
2021-03-11 13:01:14,645 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]]
2021-03-11 13:01:14,645 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:01:14,646 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]
2021-03-11 13:01:14,765 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:14,766 [main:105] - GENERATED CALL = (bFloat[0]).toShort().equals("pmfnr")
2021-03-11 13:01:14,766 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943], public fun kotlin.Char.isTitleCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a1a41aa]]
2021-03-11 13:01:14,766 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943]
2021-03-11 13:01:14,766 [main:137] - GENERATING call of type public fun kotlin.Char.isTitleCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a1a41aa]
2021-03-11 13:01:14,766 [main:105] - GENERATED CALL = (bFloat[0]).toChar().isTitleCase()
2021-03-11 13:01:14,766 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943], public fun kotlin.Char.isLetter(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59a623fa]]
2021-03-11 13:01:14,766 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943]
2021-03-11 13:01:14,766 [main:137] - GENERATING call of type public fun kotlin.Char.isLetter(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59a623fa]
2021-03-11 13:01:14,766 [main:105] - GENERATED CALL = (bFloat[0]).toChar().isLetter()
2021-03-11 13:01:14,766 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]]
2021-03-11 13:01:14,766 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:14,766 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:01:14,902 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:14,903 [main:105] - GENERATED CALL = (bFloat[0]).toInt().equals("kealo")
2021-03-11 13:01:14,903 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@15d87a4a]]
2021-03-11 13:01:14,903 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@15d87a4a]
2021-03-11 13:01:15,022 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:15,022 [main:105] - GENERATED CALL = (bFloat[0]).equals("yoonk")
2021-03-11 13:01:15,022 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@54c8a898]]
2021-03-11 13:01:15,022 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:15,022 [main:137] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@54c8a898]
2021-03-11 13:01:15,023 [main:105] - GENERATED CALL = (bFloat[0]).toDouble().isInfinite()
2021-03-11 13:01:15,023 [main:63] - replacement of aInt[0] != bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)] of type Boolean is (bFloat[0]).toChar().isLetter()
2021-03-11 13:01:15,141 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:15,141 [main:66] - Compilation checking started
2021-03-11 13:01:15,561 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}"

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:15,567 [main:56] - replacing ("Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}", String)
2021-03-11 13:01:15,568 [main:38] - replacing "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}" String
2021-03-11 13:01:15,568 [main:42] - Getting value of type String
2021-03-11 13:01:15,687 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:01:15,689 [main:46] - GENERATED VALUE OF TYPE String = "jmusv"
2021-03-11 13:01:15,689 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:15,818 [main:55] - randomType = UByte
2021-03-11 13:01:15,936 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:01:15,963 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@52d4702e]
2021-03-11 13:01:15,964 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:01:16,082 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:16,083 [main:66] - Generated call from random type = (128.toUByte()).toByte().toString(-1456430103)
2021-03-11 13:01:16,084 [main:94] - GETTING String from Short
2021-03-11 13:01:16,115 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:01:16,115 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:01:16,115 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:01:16,232 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:16,233 [main:105] - GENERATED CALL = (bShort[0]).toLong().toString(-24156188)
2021-03-11 13:01:16,233 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:01:16,234 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:16,234 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:01:16,351 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:16,352 [main:105] - GENERATED CALL = (bShort[0]).toInt().toString(-1987970480)
2021-03-11 13:01:16,352 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]]
2021-03-11 13:01:16,352 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:01:16,352 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]
2021-03-11 13:01:16,353 [main:105] - GENERATED CALL = (bShort[0]).toChar().titlecase()
2021-03-11 13:01:16,353 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:01:16,353 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:01:16,471 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:16,472 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:01:16,612 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:16,614 [main:105] - GENERATED CALL = (bShort[0]).compareTo(43).toString(865747979)
2021-03-11 13:01:16,614 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:01:16,614 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:01:16,731 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:16,732 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:01:16,848 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:16,849 [main:105] - GENERATED CALL = (bShort[0]).div(5922386422039577554).toString(-924370744)
2021-03-11 13:01:16,849 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]]
2021-03-11 13:01:16,849 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:01:16,849 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]
2021-03-11 13:01:16,966 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:01:16,967 [main:105] - GENERATED CALL = (bShort[0]).toChar().plus("clsrr")
2021-03-11 13:01:16,967 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]]
2021-03-11 13:01:16,967 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:01:16,967 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]
2021-03-11 13:01:17,085 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:17,087 [main:105] - GENERATED CALL = (bShort[0]).toShort().toString(-2033087274)
2021-03-11 13:01:17,087 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]]
2021-03-11 13:01:17,087 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:01:17,088 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]
2021-03-11 13:01:17,088 [main:105] - GENERATED CALL = (bShort[0]).toChar().lowercase()
2021-03-11 13:01:17,088 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]]
2021-03-11 13:01:17,088 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:01:17,088 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:01:17,204 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:17,205 [main:105] - GENERATED CALL = (bShort[0]).toByte().toString(-1013887525)
2021-03-11 13:01:17,206 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]]
2021-03-11 13:01:17,206 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:01:17,206 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]
2021-03-11 13:01:17,206 [main:105] - GENERATED CALL = (bShort[0]).toChar().uppercase()
2021-03-11 13:01:17,206 [main:63] - replacement of "Failed post-increment Int: ${(bLong[0]).toShort().div(-110)} != ${bInt[0]}" of type String is (bShort[0]).toLong().toString(-24156188)
2021-03-11 13:01:17,328 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:17,328 [main:66] - Compilation checking started
2021-03-11 13:01:17,766 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[0]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:17,772 [main:56] - replacing (0, Int)
2021-03-11 13:01:17,773 [main:38] - replacing 0 Int
2021-03-11 13:01:17,773 [main:42] - Getting value of type Int
2021-03-11 13:01:17,891 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:17,892 [main:46] - GENERATED VALUE OF TYPE Int = 524959921
2021-03-11 13:01:17,892 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:17,895 [main:55] - randomType = Short
2021-03-11 13:01:18,018 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:01:18,055 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:18,056 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:01:18,173 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:18,174 [main:66] - Generated call from random type = (-51).toInt().compareTo(-63)
2021-03-11 13:01:18,175 [main:94] - GETTING Int from Long
2021-03-11 13:01:18,205 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:01:18,205 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:18,205 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:01:18,323 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:18,324 [main:105] - GENERATED CALL = (aLong[0]--).toInt().or(1300465676)
2021-03-11 13:01:18,324 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3e11389b]]
2021-03-11 13:01:18,324 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:01:18,324 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3e11389b]
2021-03-11 13:01:18,458 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:18,459 [main:105] - GENERATED CALL = (aLong[0]--).toByte().div(-27)
2021-03-11 13:01:18,459 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]]
2021-03-11 13:01:18,459 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:01:18,459 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]
2021-03-11 13:01:18,460 [main:105] - GENERATED CALL = (aLong[0]--).toByte().countLeadingZeroBits()
2021-03-11 13:01:18,460 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:01:18,460 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:18,460 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:01:18,578 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:18,579 [main:105] - GENERATED CALL = (aLong[0]--).toInt().rotateLeft(1412557713)
2021-03-11 13:01:18,580 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]]
2021-03-11 13:01:18,580 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]
2021-03-11 13:01:18,580 [main:105] - GENERATED CALL = (aLong[0]--).countLeadingZeroBits()
2021-03-11 13:01:18,580 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:01:18,580 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:01:18,580 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:01:18,580 [main:105] - GENERATED CALL = (aLong[0]--).toLong().countOneBits()
2021-03-11 13:01:18,580 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]]
2021-03-11 13:01:18,580 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:01:18,580 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]
2021-03-11 13:01:18,697 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:18,699 [main:105] - GENERATED CALL = (aLong[0]--).toChar().minus('⫳')
2021-03-11 13:01:18,699 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 13:01:18,699 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:18,699 [main:105] - GENERATED CALL = (aLong[0]--).toInt().absoluteValue
2021-03-11 13:01:18,699 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]]
2021-03-11 13:01:18,699 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:01:18,824 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:01:18,825 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:01:18,942 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:18,943 [main:105] - GENERATED CALL = (aLong[0]--).div(0.5262022554610053).compareTo(-72)
2021-03-11 13:01:18,943 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:01:18,943 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:18,943 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:01:18,944 [main:105] - GENERATED CALL = (aLong[0]--).toFloat().toRawBits()
2021-03-11 13:01:18,944 [main:63] - replacement of 0 of type Int is (aLong[0]--).toInt().rotateLeft(1412557713)
2021-03-11 13:01:19,060 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:19,061 [main:66] - Compilation checking started
2021-03-11 13:01:19,492 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if (aLong[0] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:19,499 [main:56] - replacing (bFloat[0], Float)
2021-03-11 13:01:19,499 [main:38] - replacing bFloat[0] Float
2021-03-11 13:01:19,499 [main:42] - Getting value of type Float
2021-03-11 13:01:19,619 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:19,621 [main:46] - GENERATED VALUE OF TYPE Float = 0.77242184f
2021-03-11 13:01:19,621 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:19,623 [main:55] - randomType = Float
2021-03-11 13:01:19,743 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:19,777 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3061ada4]
2021-03-11 13:01:19,777 [main:66] - Generated call from random type = (0.94704163f).unaryMinus()
2021-03-11 13:01:19,777 [main:63] - replacement of bFloat[0] of type Float is (0.94704163f).unaryMinus()
2021-03-11 13:01:19,895 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:19,901 [main:56] - replacing (0, Int)
2021-03-11 13:01:19,902 [main:38] - replacing 0 Int
2021-03-11 13:01:19,902 [main:42] - Getting value of type Int
2021-03-11 13:01:20,021 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:20,022 [main:46] - GENERATED VALUE OF TYPE Int = -1952905156
2021-03-11 13:01:20,022 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:20,563 [main:55] - randomType = Pair<LinkedHashSet<ULong>, Float>?
2021-03-11 13:01:20,681 [main:302] - generating value of type = Pair<LinkedHashSet<ULong>, Float> false depth = 0
2021-03-11 13:01:20,805 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: LinkedHashSet<ULong>, second: Float): Pair<LinkedHashSet<ULong>, Float> = TODO()
2021-03-11 13:01:20,807 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: LinkedHashSet<ULong>, second: Float): Pair<LinkedHashSet<ULong>, Float> = TODO()
2021-03-11 13:01:20,930 [main:302] - generating value of type = LinkedHashSet<ULong> false depth = 3
2021-03-11 13:01:21,052 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): LkedHashSet<ULong> = TODO()
2021-03-11 13:01:21,054 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): LkedHashSet<ULong> = TODO()
2021-03-11 13:01:21,177 [main:95] - GENERATED = linkedSetOf<ULong>()
2021-03-11 13:01:21,177 [main:302] - generating value of type = Float true depth = 3
2021-03-11 13:01:21,178 [main:95] - GENERATED = Pair<LinkedHashSet<ULong>, Float>(linkedSetOf<ULong>(), 0.26339215f)
2021-03-11 13:01:21,200 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:01:21,320 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:21,322 [main:66] - Generated call from random type = (Pair<LinkedHashSet<ULong>, Float>(linkedSetOf<ULong>(), 0.26339215f))?.second.compareTo(-61)
2021-03-11 13:01:21,322 [main:63] - replacement of 0 of type Int is (Pair<LinkedHashSet<ULong>, Float>(linkedSetOf<ULong>(), 0.26339215f))?.second.compareTo(-61)
2021-03-11 13:01:21,440 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:21,441 [main:66] - Compilation checking started
2021-03-11 13:01:21,963 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if (aLong[(Pair<LinkedHashSet<ULong>, Float>(linkedSetOf<ULong>(), 0.26339215f))?.second.compareTo(-61)] != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:21,971 [main:56] - replacing (aLong[(Pair<LinkedHashSet<ULong>, Float>(linkedSetOf<ULong>(), 0.26339215f))?.second.compareTo(-61)], Long)
2021-03-11 13:01:21,972 [main:38] - replacing aLong[(Pair<LinkedHashSet<ULong>, Float>(linkedSetOf<ULong>(), 0.26339215f))?.second.compareTo(-61)] Long
2021-03-11 13:01:21,972 [main:42] - Getting value of type Long
2021-03-11 13:01:22,115 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:22,117 [main:46] - GENERATED VALUE OF TYPE Long = -7486014418590398015
2021-03-11 13:01:22,117 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:22,574 [main:55] - randomType = MutableMap<UByte, String?>
2021-03-11 13:01:22,575 [main:94] - GETTING Long from Float
2021-03-11 13:01:22,626 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]]
2021-03-11 13:01:22,626 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:22,626 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]
2021-03-11 13:01:22,626 [main:105] - GENERATED CALL = (bFloat[0]++).toDouble().roundToLong()
2021-03-11 13:01:22,626 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@40045f23]]
2021-03-11 13:01:22,626 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:01:22,627 [main:137] - GENERATING call of type public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@40045f23]
2021-03-11 13:01:22,752 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:22,754 [main:105] - GENERATED CALL = (bFloat[0]++).toLong().coerceAtLeast(1905060330167156844)
2021-03-11 13:01:22,754 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]]
2021-03-11 13:01:22,754 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:01:22,754 [main:105] - GENERATED CALL = (bFloat[0]++).toLong()
2021-03-11 13:01:22,754 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]]
2021-03-11 13:01:22,754 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:01:22,876 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:01:22,878 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:01:22,878 [main:105] - GENERATED CALL = (bFloat[0]++).div(0.47600502614747664).toLong()
2021-03-11 13:01:22,878 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]]
2021-03-11 13:01:22,878 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:22,878 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]
2021-03-11 13:01:23,000 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:23,001 [main:105] - GENERATED CALL = (bFloat[0]++).toInt().plus(-4762476698668761048)
2021-03-11 13:01:23,002 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]]
2021-03-11 13:01:23,002 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:01:23,125 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:01:23,126 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]
2021-03-11 13:01:23,127 [main:105] - GENERATED CALL = (bFloat[0]++).div(0.8381320687582928).roundToLong()
2021-03-11 13:01:23,127 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]]
2021-03-11 13:01:23,127 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:01:23,254 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:23,257 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:01:23,385 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:23,388 [main:105] - GENERATED CALL = (bFloat[0]++).compareTo(121).div(-720959676748432523)
2021-03-11 13:01:23,388 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@24c9fa8e]]
2021-03-11 13:01:23,388 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:01:23,388 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@24c9fa8e]
2021-03-11 13:01:23,511 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:23,513 [main:105] - GENERATED CALL = (bFloat[0]++).toLong().xor(3692446084036773917)
2021-03-11 13:01:23,513 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@508564d4]]
2021-03-11 13:01:23,513 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:01:23,513 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@508564d4]
2021-03-11 13:01:23,636 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:23,637 [main:105] - GENERATED CALL = (bFloat[0]++).toLong().rotateRight(1387708369)
2021-03-11 13:01:23,637 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public final operator fun dec(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@54411f09]]
2021-03-11 13:01:23,637 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:01:23,637 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@54411f09]
2021-03-11 13:01:23,638 [main:105] - GENERATED CALL = (bFloat[0]++).toLong().dec()
2021-03-11 13:01:23,638 [main:63] - replacement of aLong[(Pair<LinkedHashSet<ULong>, Float>(linkedSetOf<ULong>(), 0.26339215f))?.second.compareTo(-61)] of type Long is (bFloat[0]++).toLong().dec()
2021-03-11 13:01:23,758 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:23,759 [main:66] - Compilation checking started
2021-03-11 13:01:24,217 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[0] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:24,228 [main:56] - replacing (aInt[0], Int)
2021-03-11 13:01:24,228 [main:38] - replacing aInt[0] Int
2021-03-11 13:01:24,228 [main:42] - Getting value of type Int
2021-03-11 13:01:24,370 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:24,372 [main:46] - GENERATED VALUE OF TYPE Int = -760402808
2021-03-11 13:01:24,372 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:24,374 [main:55] - randomType = Char
2021-03-11 13:01:24,494 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:24,519 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]
2021-03-11 13:01:24,638 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:24,639 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:01:24,639 [main:66] - Generated call from random type = ('쩂').compareTo('厩').inv()
2021-03-11 13:01:24,640 [main:94] - GETTING Int from Short
2021-03-11 13:01:24,672 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:01:24,672 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:01:24,799 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:24,800 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:01:24,919 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:24,920 [main:105] - GENERATED CALL = (bShort[0]++).compareTo(-70).xor(-1806434723)
2021-03-11 13:01:24,920 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:01:24,920 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:01:25,038 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:25,040 [main:105] - GENERATED CALL = (bShort[0]++).compareTo(52).sign
2021-03-11 13:01:25,040 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:01:25,040 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:25,040 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:01:25,040 [main:105] - GENERATED CALL = (bShort[0]++).toFloat().toRawBits()
2021-03-11 13:01:25,040 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:01:25,040 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:25,040 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:01:25,040 [main:105] - GENERATED CALL = (bShort[0]++).toInt().countTrailingZeroBits()
2021-03-11 13:01:25,040 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:01:25,040 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:25,040 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:01:25,041 [main:105] - GENERATED CALL = (bShort[0]++).toInt().inv()
2021-03-11 13:01:25,041 [main:101] - Case = [public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@668f6e3a]]
2021-03-11 13:01:25,041 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@668f6e3a]
2021-03-11 13:01:25,160 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:25,161 [main:105] - GENERATED CALL = (bShort[0]++).minus(66)
2021-03-11 13:01:25,161 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:01:25,161 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:25,162 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:01:25,162 [main:105] - GENERATED CALL = (bShort[0]++).toInt().toInt()
2021-03-11 13:01:25,162 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]]
2021-03-11 13:01:25,162 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:25,162 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]
2021-03-11 13:01:25,162 [main:105] - GENERATED CALL = (bShort[0]++).toDouble().toInt()
2021-03-11 13:01:25,162 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]]
2021-03-11 13:01:25,162 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:01:25,162 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]
2021-03-11 13:01:25,162 [main:105] - GENERATED CALL = (bShort[0]++).toShort().unaryPlus()
2021-03-11 13:01:25,162 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:01:25,162 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:25,162 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:01:25,282 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:25,284 [main:105] - GENERATED CALL = (bShort[0]++).toInt().or(-1694594920)
2021-03-11 13:01:25,284 [main:63] - replacement of aInt[0] of type Int is (bShort[0]++).toInt().or(-1694594920)
2021-03-11 13:01:25,403 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:25,410 [main:56] - replacing (0, Int)
2021-03-11 13:01:25,411 [main:38] - replacing 0 Int
2021-03-11 13:01:25,411 [main:42] - Getting value of type Int
2021-03-11 13:01:25,529 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:25,531 [main:46] - GENERATED VALUE OF TYPE Int = -846714475
2021-03-11 13:01:25,531 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:25,533 [main:55] - randomType = Char
2021-03-11 13:01:25,653 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:25,673 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]
2021-03-11 13:01:25,793 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:25,794 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:01:25,939 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:25,940 [main:66] - Generated call from random type = ('腓').compareTo('ꚲ').shr(439419121)
2021-03-11 13:01:25,940 [main:94] - GETTING Int from Int
2021-03-11 13:01:25,973 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]]
2021-03-11 13:01:25,973 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:01:25,973 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]
2021-03-11 13:01:25,973 [main:105] - GENERATED CALL = (aInt[0]--).toShort().unaryPlus()
2021-03-11 13:01:25,973 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]]
2021-03-11 13:01:25,973 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:01:25,973 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]
2021-03-11 13:01:25,974 [main:105] - GENERATED CALL = (aInt[0]--).toByte().toInt()
2021-03-11 13:01:25,974 [main:101] - Case = [public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:01:25,974 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:01:26,094 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:26,095 [main:105] - GENERATED CALL = (aInt[0]--).plus(60)
2021-03-11 13:01:26,095 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 13:01:26,095 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:26,096 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 13:01:26,096 [main:105] - GENERATED CALL = (aInt[0]--).toInt().countLeadingZeroBits()
2021-03-11 13:01:26,096 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]]
2021-03-11 13:01:26,096 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:26,096 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]
2021-03-11 13:01:26,096 [main:105] - GENERATED CALL = (aInt[0]--).toDouble().toInt()
2021-03-11 13:01:26,096 [main:101] - Case = [public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:01:26,096 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:01:26,096 [main:105] - GENERATED CALL = (aInt[0]--).unaryPlus()
2021-03-11 13:01:26,096 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:01:26,096 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:26,096 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:01:26,096 [main:105] - GENERATED CALL = (aInt[0]--).toInt().countOneBits()
2021-03-11 13:01:26,096 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]]
2021-03-11 13:01:26,096 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:26,097 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:01:26,217 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:26,218 [main:105] - GENERATED CALL = (aInt[0]--).toDouble().compareTo(78)
2021-03-11 13:01:26,218 [main:101] - Case = [public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:01:26,218 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:01:26,218 [main:105] - GENERATED CALL = (aInt[0]--).unaryMinus()
2021-03-11 13:01:26,218 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:01:26,218 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:01:26,339 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:26,340 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:01:26,340 [main:105] - GENERATED CALL = (aInt[0]--).compareTo(1059881186).unaryPlus()
2021-03-11 13:01:26,340 [main:63] - replacement of 0 of type Int is (aInt[0]--).unaryPlus()
2021-03-11 13:01:26,461 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:26,461 [main:66] - Compilation checking started
2021-03-11 13:01:26,896 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    aInt[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:26,903 [main:56] - replacing (aInt, Array<Int>)
2021-03-11 13:01:26,904 [main:38] - replacing aInt Array<Int>
2021-03-11 13:01:26,904 [main:42] - Getting value of type Array<Int>
2021-03-11 13:01:27,029 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:01:27,157 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Int): Array<Int> = TODO()
2021-03-11 13:01:27,159 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Int): Array<Int> = TODO()
2021-03-11 13:01:27,550 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:01:27,551 [main:302] - generating value of type = Function1<Int, Int> false depth = 3
2021-03-11 13:01:27,552 [main:302] - generating value of type = Int true depth = 4
2021-03-11 13:01:27,554 [main:95] - GENERATED = Array<Int>(-1774323293, {a: Int -> -544864838})
2021-03-11 13:01:27,554 [main:46] - GENERATED VALUE OF TYPE Array<Int> = Array<Int>(-1774323293, {a: Int -> -544864838})
2021-03-11 13:01:27,554 [main:49] - GENERATED IS CALL =true
2021-03-11 13:01:27,684 [main:55] - randomType = UInt
2021-03-11 13:01:27,804 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:01:27,835 [main:94] - GETTING Array<Int> from IntArray
2021-03-11 13:01:27,841 [main:101] - Case = [public fun kotlin.IntArray.toTypedArray(): kotlin.Array<kotlin.Int> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13df83]]
2021-03-11 13:01:27,841 [main:137] - GENERATING call of type public fun kotlin.IntArray.toTypedArray(): kotlin.Array<kotlin.Int> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13df83]
2021-03-11 13:01:27,842 [main:105] - GENERATED CALL = (bInt).toTypedArray()
2021-03-11 13:01:27,842 [main:63] - replacement of aInt of type Array<Int> is Array<Int>(-1774323293, {a: Int -> -544864838})
2021-03-11 13:01:27,984 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:01:27,984 [main:66] - Compilation checking started
2021-03-11 13:01:28,427 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:28,438 [main:56] - replacing (bFloat, FloatArray)
2021-03-11 13:01:28,440 [main:38] - replacing bFloat FloatArray
2021-03-11 13:01:28,440 [main:42] - Getting value of type FloatArray
2021-03-11 13:01:28,569 [main:302] - generating value of type = FloatArray false depth = 0
2021-03-11 13:01:28,692 [main:43] - GENERATING CALL OF fun floatArrayOf(elements: Float): FloatArray = TODO()
2021-03-11 13:01:28,694 [main:61] - WITHOUT TYPE PARAMS = fun floatArrayOf(elements: Float): FloatArray = TODO()
2021-03-11 13:01:28,818 [main:302] - generating value of type = Float true depth = 3
2021-03-11 13:01:28,819 [main:95] - GENERATED = floatArrayOf(0.046527386f)
2021-03-11 13:01:28,819 [main:46] - GENERATED VALUE OF TYPE FloatArray = floatArrayOf(0.046527386f)
2021-03-11 13:01:28,819 [main:49] - GENERATED IS CALL =true
2021-03-11 13:01:28,948 [main:55] - randomType = ULong
2021-03-11 13:01:29,072 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 13:01:29,102 [main:94] - GETTING FloatArray from Float
2021-03-11 13:01:29,129 [main:94] - GETTING FloatArray from ShortArray
2021-03-11 13:01:29,139 [main:94] - GETTING FloatArray from Long
2021-03-11 13:01:29,167 [main:94] - GETTING FloatArray from Int
2021-03-11 13:01:29,197 [main:94] - GETTING FloatArray from Array<Byte>
2021-03-11 13:01:29,207 [main:101] - Case = [public fun kotlin.Array<out kotlin.Float>.toFloatArray(): kotlin.FloatArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c77afa7]]
2021-03-11 13:01:29,207 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Float>.toFloatArray(): kotlin.FloatArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c77afa7]
2021-03-11 13:01:29,207 [main:105] - GENERATED CALL = (aByte).toFloatArray()
2021-03-11 13:01:29,207 [main:63] - replacement of bFloat of type FloatArray is (aByte).toFloatArray()
2021-03-11 13:01:29,337 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:29,337 [main:66] - Compilation checking started
2021-03-11 13:01:29,682 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${(aByte).toFloatArray()[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:29,693 [main:56] - replacing (aShort, Array<Short>)
2021-03-11 13:01:29,695 [main:38] - replacing aShort Array<Short>
2021-03-11 13:01:29,695 [main:42] - Getting value of type Array<Short>
2021-03-11 13:01:29,816 [main:302] - generating value of type = Array<Short> false depth = 0
2021-03-11 13:01:29,960 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Short): Array<Short> = TODO()
2021-03-11 13:01:29,962 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Short): Array<Short> = TODO()
2021-03-11 13:01:30,349 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:01:30,350 [main:302] - generating value of type = Function1<Int, Short> false depth = 3
2021-03-11 13:01:30,351 [main:302] - generating value of type = Short true depth = 4
2021-03-11 13:01:30,352 [main:95] - GENERATED = Array<Short>(856650605, {a: Int -> -22818})
2021-03-11 13:01:30,352 [main:46] - GENERATED VALUE OF TYPE Array<Short> = Array<Short>(856650605, {a: Int -> -22818})
2021-03-11 13:01:30,353 [main:49] - GENERATED IS CALL =true
2021-03-11 13:01:30,356 [main:55] - randomType = Float
2021-03-11 13:01:30,476 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:30,506 [main:94] - GETTING Array<Short> from Byte
2021-03-11 13:01:30,537 [main:94] - GETTING Array<Short> from Short
2021-03-11 13:01:30,566 [main:94] - GETTING Array<Short> from Int
2021-03-11 13:01:30,596 [main:94] - GETTING Array<Short> from IntArray
2021-03-11 13:01:30,604 [main:94] - GETTING Array<Short> from Byte
2021-03-11 13:01:30,605 [main:94] - GETTING Array<Short> from Int
2021-03-11 13:01:30,606 [main:94] - GETTING Array<Short> from Double
2021-03-11 13:01:30,635 [main:94] - GETTING Array<Short> from Long
2021-03-11 13:01:30,664 [main:94] - GETTING Array<Short> from Array<Float>
2021-03-11 13:01:30,674 [main:63] - replacement of aShort of type Array<Short> is aFloat
2021-03-11 13:01:30,793 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:01:30,793 [main:66] - Compilation checking started
2021-03-11 13:01:31,138 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aFloat[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if (aInt[0] != bInt[0]) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:31,145 [main:56] - replacing (aInt[0] != bInt[0], Boolean)
2021-03-11 13:01:31,146 [main:38] - replacing aInt[0] != bInt[0] Boolean
2021-03-11 13:01:31,146 [main:42] - Getting value of type Boolean
2021-03-11 13:01:31,267 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:31,268 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 13:01:31,268 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:31,270 [main:55] - randomType = String
2021-03-11 13:01:31,392 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:01:31,414 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@5ae2b5f8]
2021-03-11 13:01:31,534 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:31,534 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41806110]
2021-03-11 13:01:31,655 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:31,656 [main:66] - Generated call from random type = ("hxtlr").equals("soqph").equals("qimtu")
2021-03-11 13:01:31,656 [main:94] - GETTING Boolean from FloatArray
2021-03-11 13:01:31,665 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@7fc7e21b], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@566ce47e]]
2021-03-11 13:01:31,665 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@7fc7e21b]
2021-03-11 13:01:31,802 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:31,803 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@566ce47e]
2021-03-11 13:01:31,925 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:31,927 [main:105] - GENERATED CALL = (bFloat).equals("ndgzy").or(true)
2021-03-11 13:01:31,927 [main:101] - Case = [@kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public infix fun kotlin.FloatArray.contentEquals(other: kotlin.FloatArray): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58921723]]
2021-03-11 13:01:31,927 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public infix fun kotlin.FloatArray.contentEquals(other: kotlin.FloatArray): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58921723]
2021-03-11 13:01:32,052 [main:302] - generating value of type = FloatArray false depth = 0
2021-03-11 13:01:32,178 [main:43] - GENERATING CALL OF fun floatArrayOf(elements: Float): FloatArray = TODO()
2021-03-11 13:01:32,180 [main:61] - WITHOUT TYPE PARAMS = fun floatArrayOf(elements: Float): FloatArray = TODO()
2021-03-11 13:01:32,305 [main:302] - generating value of type = Float true depth = 3
2021-03-11 13:01:32,306 [main:95] - GENERATED = floatArrayOf(0.6693435f)
2021-03-11 13:01:32,306 [main:105] - GENERATED CALL = (bFloat).contentEquals(floatArrayOf(0.6693435f))
2021-03-11 13:01:32,306 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@15d87a4a]]
2021-03-11 13:01:32,306 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 13:01:32,427 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:32,429 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@15d87a4a]
2021-03-11 13:01:32,558 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:32,558 [main:105] - GENERATED CALL = (bFloat).get(577539174).equals("csodt")
2021-03-11 13:01:32,559 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a6af1c7]]
2021-03-11 13:01:32,559 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 13:01:32,678 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:32,679 [main:137] - GENERATING call of type public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a6af1c7]
2021-03-11 13:01:32,679 [main:105] - GENERATED CALL = (bFloat).get(-1080154255).isNaN()
2021-03-11 13:01:32,679 [main:101] - Case = [public final operator fun set(index: kotlin.Int, value: kotlin.Float): kotlin.Unit defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@22e9424e], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Unit[DeserializedSimpleFunctionDescriptor@57f54ce9]]
2021-03-11 13:01:32,679 [main:137] - GENERATING call of type public final operator fun set(index: kotlin.Int, value: kotlin.Float): kotlin.Unit defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@22e9424e]
2021-03-11 13:01:32,800 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:32,921 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:32,923 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Unit[DeserializedSimpleFunctionDescriptor@57f54ce9]
2021-03-11 13:01:33,042 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:33,043 [main:105] - GENERATED CALL = (bFloat).set(-419858181, 0.048983634f).equals("vrofk")
2021-03-11 13:01:33,043 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@2ced1690]]
2021-03-11 13:01:33,043 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 13:01:33,163 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:33,164 [main:137] - GENERATING call of type public fun kotlin.Float.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@2ced1690]
2021-03-11 13:01:33,164 [main:105] - GENERATED CALL = (bFloat).get(-1999694073).isInfinite()
2021-03-11 13:01:33,164 [main:101] - Case = [public fun kotlin.FloatArray.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c195aaa]]
2021-03-11 13:01:33,165 [main:137] - GENERATING call of type public fun kotlin.FloatArray.none(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c195aaa]
2021-03-11 13:01:33,165 [main:105] - GENERATED CALL = (bFloat).none()
2021-03-11 13:01:33,165 [main:101] - Case = [public final operator fun iterator(): kotlin.collections.FloatIterator defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@71659676], public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.FloatIterator[DeserializedSimpleFunctionDescriptor@57a5fb2d]]
2021-03-11 13:01:33,165 [main:137] - GENERATING call of type public final operator fun iterator(): kotlin.collections.FloatIterator defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@71659676]
2021-03-11 13:01:33,165 [main:137] - GENERATING call of type public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.FloatIterator[DeserializedSimpleFunctionDescriptor@57a5fb2d]
2021-03-11 13:01:33,165 [main:105] - GENERATED CALL = (bFloat).iterator().hasNext()
2021-03-11 13:01:33,165 [main:101] - Case = [public final operator fun iterator(): kotlin.collections.FloatIterator defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@71659676], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.FloatIterator[DeserializedSimpleFunctionDescriptor@332c8b8]]
2021-03-11 13:01:33,165 [main:137] - GENERATING call of type public final operator fun iterator(): kotlin.collections.FloatIterator defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@71659676]
2021-03-11 13:01:33,165 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.FloatIterator[DeserializedSimpleFunctionDescriptor@332c8b8]
2021-03-11 13:01:33,286 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:33,287 [main:105] - GENERATED CALL = (bFloat).iterator().equals("hlqyo")
2021-03-11 13:01:33,287 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.FloatArray.isNotEmpty(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d32399a]]
2021-03-11 13:01:33,287 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.FloatArray.isNotEmpty(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d32399a]
2021-03-11 13:01:33,287 [main:105] - GENERATED CALL = (bFloat).isNotEmpty()
2021-03-11 13:01:33,287 [main:63] - replacement of aInt[0] != bInt[0] of type Boolean is (bFloat).set(-419858181, 0.048983634f).equals("vrofk")
2021-03-11 13:01:33,408 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:33,408 [main:66] - Compilation checking started
2021-03-11 13:01:33,882 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (aDouble[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:33,893 [main:56] - replacing (aDouble, Array<Double>)
2021-03-11 13:01:33,895 [main:38] - replacing aDouble Array<Double>
2021-03-11 13:01:33,895 [main:42] - Getting value of type Array<Double>
2021-03-11 13:01:34,038 [main:302] - generating value of type = Array<Double> false depth = 0
2021-03-11 13:01:34,165 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Double): Array<Double> = TODO()
2021-03-11 13:01:34,167 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Double): Array<Double> = TODO()
2021-03-11 13:01:34,558 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:01:34,559 [main:302] - generating value of type = Function1<Int, Double> false depth = 3
2021-03-11 13:01:34,560 [main:302] - generating value of type = Double true depth = 4
2021-03-11 13:01:34,562 [main:95] - GENERATED = Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})
2021-03-11 13:01:34,562 [main:46] - GENERATED VALUE OF TYPE Array<Double> = Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})
2021-03-11 13:01:34,562 [main:49] - GENERATED IS CALL =true
2021-03-11 13:01:34,692 [main:55] - randomType = UInt
2021-03-11 13:01:34,811 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:01:34,839 [main:94] - GETTING Array<Double> from Short
2021-03-11 13:01:34,869 [main:94] - GETTING Array<Double> from Double
2021-03-11 13:01:34,897 [main:94] - GETTING Array<Double> from Array<Byte>
2021-03-11 13:01:34,908 [main:63] - replacement of aDouble of type Array<Double> is Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})
2021-03-11 13:01:35,028 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:01:35,029 [main:66] - Compilation checking started
2021-03-11 13:01:35,467 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[0]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:35,474 [main:56] - replacing (0, Int)
2021-03-11 13:01:35,475 [main:38] - replacing 0 Int
2021-03-11 13:01:35,475 [main:42] - Getting value of type Int
2021-03-11 13:01:35,596 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:35,598 [main:46] - GENERATED VALUE OF TYPE Int = -1510811692
2021-03-11 13:01:35,598 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:35,600 [main:55] - randomType = Int
2021-03-11 13:01:35,742 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:35,775 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:01:35,896 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:35,897 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:01:36,018 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:36,020 [main:66] - Generated call from random type = (-1250389146).compareTo(185021612).div(-21)
2021-03-11 13:01:36,020 [main:94] - GETTING Int from Int
2021-03-11 13:01:36,050 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:01:36,050 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:36,050 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:01:36,171 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:36,173 [main:105] - GENERATED CALL = (bInt[0]).toInt().div(-71)
2021-03-11 13:01:36,173 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:01:36,173 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:01:36,293 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:36,294 [main:105] - GENERATED CALL = (bInt[0]).compareTo(68)
2021-03-11 13:01:36,295 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:01:36,295 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:01:36,416 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:36,417 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:01:36,417 [main:105] - GENERATED CALL = (bInt[0]).div(7754093358583089734).countOneBits()
2021-03-11 13:01:36,417 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]]
2021-03-11 13:01:36,417 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:01:36,417 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]
2021-03-11 13:01:36,538 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:36,540 [main:105] - GENERATED CALL = (bInt[0]).toShort().rem(-106)
2021-03-11 13:01:36,540 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:01:36,540 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:01:36,662 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:36,663 [main:105] - GENERATED CALL = (bInt[0]).compareTo(-1050953364).sign
2021-03-11 13:01:36,663 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:01:36,663 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:01:36,785 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:36,786 [main:105] - GENERATED CALL = (bInt[0]).rotateRight(-1278027235)
2021-03-11 13:01:36,786 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 13:01:36,786 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:01:36,907 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:36,908 [main:105] - GENERATED CALL = (bInt[0]).compareTo(-1487133797).absoluteValue
2021-03-11 13:01:36,908 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:01:36,909 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:36,909 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:01:37,039 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:37,040 [main:105] - GENERATED CALL = (bInt[0]).toInt().shr(340062146)
2021-03-11 13:01:37,040 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111], public open val start: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@21cfdb17]]
2021-03-11 13:01:37,040 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111]
2021-03-11 13:01:37,161 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:37,163 [main:105] - GENERATED CALL = (bInt[0]).rangeTo(-17).start
2021-03-11 13:01:37,166 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]]
2021-03-11 13:01:37,167 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:01:37,287 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:01:37,410 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:37,411 [main:105] - GENERATED CALL = (bInt[0]).equals(null).compareTo(false)
2021-03-11 13:01:37,411 [main:63] - replacement of 0 of type Int is (bInt[0]).div(7754093358583089734).countOneBits()
2021-03-11 13:01:37,533 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:37,533 [main:66] - Compilation checking started
2021-03-11 13:01:38,028 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>(1.0f)
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:38,038 [main:56] - replacing (1.0f, Float)
2021-03-11 13:01:38,039 [main:38] - replacing 1.0f Float
2021-03-11 13:01:38,039 [main:42] - Getting value of type Float
2021-03-11 13:01:38,166 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:38,168 [main:46] - GENERATED VALUE OF TYPE Float = 0.046420217f
2021-03-11 13:01:38,168 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:38,300 [main:55] - randomType = UShort
2021-03-11 13:01:38,422 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:01:38,455 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@6a2b200d]
2021-03-11 13:01:38,455 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@56e77b1a]
2021-03-11 13:01:38,455 [main:66] - Generated call from random type = (32193.toUShort()).toUByte().toFloat()
2021-03-11 13:01:38,456 [main:94] - GETTING Float from Short
2021-03-11 13:01:38,486 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752], public final operator fun unaryPlus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@62197085]]
2021-03-11 13:01:38,486 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:01:38,609 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:38,610 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@62197085]
2021-03-11 13:01:38,611 [main:105] - GENERATED CALL = (aShort[0]--).div(0.78415126f).unaryPlus()
2021-03-11 13:01:38,611 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]]
2021-03-11 13:01:38,611 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:01:38,611 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]
2021-03-11 13:01:38,733 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:38,734 [main:105] - GENERATED CALL = (aShort[0]--).toLong().minus(0.5648576f)
2021-03-11 13:01:38,734 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]]
2021-03-11 13:01:38,734 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:38,734 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]
2021-03-11 13:01:38,856 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:38,857 [main:105] - GENERATED CALL = (aShort[0]--).toFloat().coerceAtLeast(0.9547156f)
2021-03-11 13:01:38,857 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]]
2021-03-11 13:01:38,857 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:38,857 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]
2021-03-11 13:01:38,978 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:38,980 [main:105] - GENERATED CALL = (aShort[0]--).toFloat().withSign(0.8539116f)
2021-03-11 13:01:38,980 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]]
2021-03-11 13:01:38,980 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:38,980 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]
2021-03-11 13:01:38,980 [main:105] - GENERATED CALL = (aShort[0]--).toFloat().dec()
2021-03-11 13:01:38,980 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]]
2021-03-11 13:01:38,980 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:38,980 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:01:39,104 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:39,105 [main:105] - GENERATED CALL = (aShort[0]--).toInt().div(0.37163758f)
2021-03-11 13:01:39,105 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Float.absoluteValue: kotlin.Float defined in kotlin.math[DeserializedPropertyDescriptor@5c5658e0]]
2021-03-11 13:01:39,105 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:01:39,227 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:39,229 [main:105] - GENERATED CALL = (aShort[0]--).div(0.36242503f).absoluteValue
2021-03-11 13:01:39,229 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@76592c22]]
2021-03-11 13:01:39,229 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:01:39,229 [main:137] - GENERATING call of type public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@76592c22]
2021-03-11 13:01:39,229 [main:105] - GENERATED CALL = (aShort[0]--).toChar().toFloat()
2021-03-11 13:01:39,229 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]]
2021-03-11 13:01:39,229 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:01:39,352 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:01:39,354 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:01:39,354 [main:105] - GENERATED CALL = (aShort[0]--).div(0.9449092495181177).toFloat()
2021-03-11 13:01:39,354 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun inc(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@6361d7d]]
2021-03-11 13:01:39,354 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:39,354 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@6361d7d]
2021-03-11 13:01:39,354 [main:105] - GENERATED CALL = (aShort[0]--).toFloat().inc()
2021-03-11 13:01:39,354 [main:63] - replacement of 1.0f of type Float is (aShort[0]--).toChar().toFloat()
2021-03-11 13:01:39,476 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:39,477 [main:66] - Compilation checking started
2021-03-11 13:01:39,943 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:39,950 [main:56] - replacing (1, Int)
2021-03-11 13:01:39,951 [main:38] - replacing 1 Int
2021-03-11 13:01:39,951 [main:42] - Getting value of type Int
2021-03-11 13:01:40,074 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:40,076 [main:46] - GENERATED VALUE OF TYPE Int = -729263657
2021-03-11 13:01:40,076 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:40,079 [main:55] - randomType = Char
2021-03-11 13:01:40,202 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:40,221 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]
2021-03-11 13:01:40,344 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:40,345 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:01:40,468 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:40,469 [main:66] - Generated call from random type = ('脷').compareTo('롡').rotateRight(-394705943)
2021-03-11 13:01:40,470 [main:94] - GETTING Int from Long
2021-03-11 13:01:40,499 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:01:40,499 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:01:40,499 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:01:40,500 [main:105] - GENERATED CALL = (aLong[0]).toLong().countOneBits()
2021-03-11 13:01:40,500 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]]
2021-03-11 13:01:40,500 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:01:40,500 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]
2021-03-11 13:01:40,624 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:40,625 [main:105] - GENERATED CALL = (aLong[0]).toShort().rem(-23)
2021-03-11 13:01:40,625 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]]
2021-03-11 13:01:40,625 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:01:40,625 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]
2021-03-11 13:01:40,748 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:40,749 [main:105] - GENERATED CALL = (aLong[0]).toByte().plus(12)
2021-03-11 13:01:40,749 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:01:40,749 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:40,749 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:01:40,872 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:40,873 [main:105] - GENERATED CALL = (aLong[0]).toInt().rotateRight(1336587201)
2021-03-11 13:01:40,873 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]]
2021-03-11 13:01:40,873 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:01:40,873 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]
2021-03-11 13:01:40,995 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:40,996 [main:105] - GENERATED CALL = (aLong[0]).toChar().minus('쮲')
2021-03-11 13:01:40,996 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:01:40,996 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:40,996 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:01:41,118 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:41,120 [main:105] - GENERATED CALL = (aLong[0]).toInt().compareTo(120)
2021-03-11 13:01:41,120 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]]
2021-03-11 13:01:41,120 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:41,120 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]
2021-03-11 13:01:41,120 [main:105] - GENERATED CALL = (aLong[0]).toFloat().toInt()
2021-03-11 13:01:41,120 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]]
2021-03-11 13:01:41,120 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:01:41,120 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]
2021-03-11 13:01:41,121 [main:105] - GENERATED CALL = (aLong[0]).toShort().countTrailingZeroBits()
2021-03-11 13:01:41,121 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]]
2021-03-11 13:01:41,121 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:41,121 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]
2021-03-11 13:01:41,121 [main:105] - GENERATED CALL = (aLong[0]).toFloat().toBits()
2021-03-11 13:01:41,121 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:01:41,121 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:41,121 [main:105] - GENERATED CALL = (aLong[0]).toInt().sign
2021-03-11 13:01:41,121 [main:63] - replacement of 1 of type Int is (aLong[0]).toFloat().toBits()
2021-03-11 13:01:41,244 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:41,244 [main:66] - Compilation checking started
2021-03-11 13:01:41,603 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((aLong[0]).toFloat().toBits())
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:41,611 [main:56] - replacing (shortArrayOf(1), ShortArray)
2021-03-11 13:01:41,612 [main:38] - replacing shortArrayOf(1) ShortArray
2021-03-11 13:01:41,612 [main:42] - Getting value of type ShortArray
2021-03-11 13:01:41,735 [main:302] - generating value of type = ShortArray false depth = 0
2021-03-11 13:01:41,862 [main:43] - GENERATING CALL OF fun ShortArray(size: kotlin.Int): ShortArray = TODO()
2021-03-11 13:01:41,864 [main:61] - WITHOUT TYPE PARAMS = fun ShortArray(size: kotlin.Int): ShortArray = TODO()
2021-03-11 13:01:42,147 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:01:42,148 [main:95] - GENERATED = ShortArray(-459293008)
2021-03-11 13:01:42,148 [main:46] - GENERATED VALUE OF TYPE ShortArray = ShortArray(-459293008)
2021-03-11 13:01:42,148 [main:49] - GENERATED IS CALL =true
2021-03-11 13:01:42,286 [main:55] - randomType = Function1<String, Byte>
2021-03-11 13:01:42,287 [main:94] - GETTING ShortArray from IntArray
2021-03-11 13:01:42,295 [main:94] - GETTING ShortArray from Double
2021-03-11 13:01:42,323 [main:94] - GETTING ShortArray from Long
2021-03-11 13:01:42,352 [main:94] - GETTING ShortArray from Long
2021-03-11 13:01:42,352 [main:94] - GETTING ShortArray from Short
2021-03-11 13:01:42,383 [main:94] - GETTING ShortArray from Byte
2021-03-11 13:01:42,414 [main:94] - GETTING ShortArray from Int
2021-03-11 13:01:42,443 [main:94] - GETTING ShortArray from Array<Double>
2021-03-11 13:01:42,453 [main:101] - Case = [public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]]
2021-03-11 13:01:42,453 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]
2021-03-11 13:01:42,453 [main:105] - GENERATED CALL = (aDouble).toShortArray()
2021-03-11 13:01:42,453 [main:63] - replacement of shortArrayOf(1) of type ShortArray is (aDouble).toShortArray()
2021-03-11 13:01:42,574 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:42,575 [main:66] - Compilation checking started
2021-03-11 13:01:42,931 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = (aDouble).toShortArray()
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[0]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:42,938 [main:56] - replacing (0, Int)
2021-03-11 13:01:42,939 [main:38] - replacing 0 Int
2021-03-11 13:01:42,940 [main:42] - Getting value of type Int
2021-03-11 13:01:43,065 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:43,066 [main:46] - GENERATED VALUE OF TYPE Int = -1827400839
2021-03-11 13:01:43,066 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:43,202 [main:55] - randomType = Float?
2021-03-11 13:01:43,324 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:01:43,355 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:01:43,355 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@668f6e3a]
2021-03-11 13:01:43,478 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:43,479 [main:66] - Generated call from random type = (0.51171917f)?.toShort().minus(103)
2021-03-11 13:01:43,480 [main:94] - GETTING Int from Array<Long>
2021-03-11 13:01:43,490 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:01:43,491 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:01:43,613 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:43,737 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:43,739 [main:105] - GENERATED CALL = (aLong).size.coerceIn(473148867, -2061444182)
2021-03-11 13:01:43,739 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:01:43,739 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:01:43,861 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:43,863 [main:105] - GENERATED CALL = (aLong).size.times(20)
2021-03-11 13:01:43,863 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:01:43,863 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:01:44,004 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:44,006 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:01:44,006 [main:105] - GENERATED CALL = (aLong).get(404678993).countOneBits()
2021-03-11 13:01:44,006 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:01:44,006 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:01:44,006 [main:105] - GENERATED CALL = (aLong).size.countTrailingZeroBits()
2021-03-11 13:01:44,006 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2b040329]]
2021-03-11 13:01:44,006 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2b040329]
2021-03-11 13:01:44,006 [main:105] - GENERATED CALL = (aLong).sum()
2021-03-11 13:01:44,006 [main:101] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.Array<out T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2847aa80]]
2021-03-11 13:01:44,006 [main:137] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.Array<out T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2847aa80]
2021-03-11 13:01:44,128 [main:302] - generating value of type = T false depth = 0
2021-03-11 13:01:44,256 [main:43] - GENERATING CALL OF fun <T> maxOf(a: Comparable<T>, other: Comparable<T>): T = TODO()
2021-03-11 13:01:44,258 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: Comparable<T>, other: Comparable<T>): T = TODO()
2021-03-11 13:01:44,385 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-11 13:01:44,390 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-11 13:01:44,395 [main:95] - GENERATED = maxOf<Comparable<T>>(958942164, "atejd")
2021-03-11 13:01:44,395 [main:105] - GENERATED CALL = (aLong).indexOf(maxOf<Comparable<T>>(958942164, "atejd"))
2021-03-11 13:01:44,395 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:01:44,395 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:01:44,518 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:44,519 [main:105] - GENERATED CALL = (aLong).size.rotateLeft(-274465853)
2021-03-11 13:01:44,519 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5e741bad]]
2021-03-11 13:01:44,520 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5e741bad]
2021-03-11 13:01:44,520 [main:105] - GENERATED CALL = (aLong).count()
2021-03-11 13:01:44,520 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:01:44,520 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:01:44,642 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:44,644 [main:105] - GENERATED CALL = (aLong).size.or(-1546084206)
2021-03-11 13:01:44,644 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:01:44,644 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:01:44,767 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:44,768 [main:105] - GENERATED CALL = (aLong).size.coerceAtLeast(975413925)
2021-03-11 13:01:44,768 [main:63] - replacement of 0 of type Int is (0.51171917f)?.toShort().minus(103)
2021-03-11 13:01:44,890 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:44,890 [main:66] - Compilation checking started
2021-03-11 13:01:45,335 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[0]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:45,347 [main:56] - replacing (0, Int)
2021-03-11 13:01:45,349 [main:38] - replacing 0 Int
2021-03-11 13:01:45,349 [main:42] - Getting value of type Int
2021-03-11 13:01:45,480 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:45,481 [main:46] - GENERATED VALUE OF TYPE Int = 1419177406
2021-03-11 13:01:45,481 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:45,614 [main:55] - randomType = UInt
2021-03-11 13:01:45,737 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:01:45,765 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@40dc2cb1]
2021-03-11 13:01:45,891 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:01:45,891 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:01:46,040 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:01:46,042 [main:66] - Generated call from random type = (1383527820.toUInt()).equals("ghjec").compareTo(false)
2021-03-11 13:01:46,042 [main:94] - GETTING Int from Float
2021-03-11 13:01:46,073 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]]
2021-03-11 13:01:46,073 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:01:46,073 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]
2021-03-11 13:01:46,074 [main:105] - GENERATED CALL = (aFloat[0]).toLong().toInt()
2021-03-11 13:01:46,074 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:01:46,074 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:46,074 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:01:46,199 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:46,200 [main:105] - GENERATED CALL = (aFloat[0]).toInt().coerceAtLeast(1608847841)
2021-03-11 13:01:46,200 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:01:46,200 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:01:46,323 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:46,325 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:01:46,325 [main:105] - GENERATED CALL = (aFloat[0]).compareTo(112).unaryPlus()
2021-03-11 13:01:46,325 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:01:46,325 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:01:46,449 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:46,450 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:01:46,451 [main:105] - GENERATED CALL = (aFloat[0]).compareTo(88).takeHighestOneBit()
2021-03-11 13:01:46,451 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:01:46,451 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:01:46,574 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:46,575 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:01:46,576 [main:105] - GENERATED CALL = (aFloat[0]).compareTo(124).toInt()
2021-03-11 13:01:46,576 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:01:46,576 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:46,576 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:01:46,576 [main:105] - GENERATED CALL = (aFloat[0]).toInt().unaryPlus()
2021-03-11 13:01:46,576 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:01:46,576 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:01:46,699 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:46,700 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:01:46,823 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:46,824 [main:105] - GENERATED CALL = (aFloat[0]).compareTo(-10).ushr(146030114)
2021-03-11 13:01:46,824 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]]
2021-03-11 13:01:46,824 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:46,824 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:01:46,824 [main:105] - GENERATED CALL = (aFloat[0]).toInt().dec()
2021-03-11 13:01:46,824 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:01:46,824 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:46,824 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:01:46,947 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:46,948 [main:105] - GENERATED CALL = (aFloat[0]).toInt().div(74)
2021-03-11 13:01:46,948 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:01:46,949 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:01:47,071 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:47,073 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:01:47,195 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:47,197 [main:105] - GENERATED CALL = (aFloat[0]).compareTo(21).or(857980752)
2021-03-11 13:01:47,197 [main:63] - replacement of 0 of type Int is (aFloat[0]).toInt().coerceAtLeast(1608847841)
2021-03-11 13:01:47,319 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:47,319 [main:66] - Compilation checking started
2021-03-11 13:01:47,773 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != bLong[-2137515462]) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:47,785 [main:56] - replacing (bLong[-2137515462], Long)
2021-03-11 13:01:47,787 [main:38] - replacing bLong[-2137515462] Long
2021-03-11 13:01:47,787 [main:42] - Getting value of type Long
2021-03-11 13:01:47,917 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:47,918 [main:46] - GENERATED VALUE OF TYPE Long = 2679580639647958857
2021-03-11 13:01:47,919 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:48,218 [main:55] - randomType = ArrayDeque<Short?>
2021-03-11 13:01:48,345 [main:302] - generating value of type = ArrayDeque<Short?> false depth = 0
2021-03-11 13:01:48,474 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Short?>): ArrayDeque<Short?> = TODO()
2021-03-11 13:01:48,477 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Short?>): ArrayDeque<Short?> = TODO()
2021-03-11 13:01:48,746 [main:302] - generating value of type = Collection<Short?> false depth = 3
2021-03-11 13:01:48,877 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): Collection<Short?> = TODO()
2021-03-11 13:01:48,879 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): Collection<Short?> = TODO()
2021-03-11 13:01:49,008 [main:95] - GENERATED = arrayListOf<Short?>()
2021-03-11 13:01:49,008 [main:95] - GENERATED = ArrayDeque<Short?>(arrayListOf<Short?>())
2021-03-11 13:01:49,132 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]
2021-03-11 13:01:49,132 [main:66] - Generated call from random type = (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()
2021-03-11 13:01:49,132 [main:63] - replacement of bLong[-2137515462] of type Long is (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()
2021-03-11 13:01:49,258 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:49,258 [main:66] - Compilation checking started
2021-03-11 13:01:49,760 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[0]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:49,768 [main:56] - replacing (0, Int)
2021-03-11 13:01:49,769 [main:38] - replacing 0 Int
2021-03-11 13:01:49,769 [main:42] - Getting value of type Int
2021-03-11 13:01:49,915 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:49,917 [main:46] - GENERATED VALUE OF TYPE Int = 39745254
2021-03-11 13:01:49,917 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:50,351 [main:55] - randomType = Pair<List<Float>, String?>
2021-03-11 13:01:50,502 [main:302] - generating value of type = Pair<List<Float>, String?> false depth = 0
2021-03-11 13:01:50,633 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: List<Float>, second: String?): Pair<List<Float>, String?> = TODO()
2021-03-11 13:01:50,636 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: List<Float>, second: String?): Pair<List<Float>, String?> = TODO()
2021-03-11 13:01:50,768 [main:302] - generating value of type = List<Float> false depth = 3
2021-03-11 13:01:50,901 [main:43] - GENERATING CALL OF fun <T> mutableListOf(elements: Float): List<Float> = TODO()
2021-03-11 13:01:50,903 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(elements: Float): List<Float> = TODO()
2021-03-11 13:01:51,034 [main:302] - generating value of type = Float true depth = 6
2021-03-11 13:01:51,035 [main:95] - GENERATED = mutableListOf<Float>(0.2120257f)
2021-03-11 13:01:51,035 [main:302] - generating value of type = String true depth = 3
2021-03-11 13:01:51,037 [main:95] - GENERATED = Pair<List<Float>, String?>(mutableListOf<Float>(0.2120257f), "gnqcx")
2021-03-11 13:01:51,051 [main:137] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@292f1c41]
2021-03-11 13:01:51,177 [main:302] - generating value of type = T false depth = 0
2021-03-11 13:01:51,450 [main:43] - GENERATING CALL OF fun <T> minOf(a: Double?, b: Double?, comparator: kotlin.Comparator<Double?>): T = TODO()
2021-03-11 13:01:51,452 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Double?, b: Double?, comparator: kotlin.Comparator<Double?>): T = TODO()
2021-03-11 13:01:51,722 [main:302] - generating value of type = Double true depth = 3
2021-03-11 13:01:51,724 [main:302] - generating value of type = Double true depth = 3
2021-03-11 13:01:51,725 [main:302] - generating value of type = Comparator<Double?> false depth = 3
2021-03-11 13:01:51,856 [main:43] - GENERATING CALL OF fun <T> compareBy(selectors: Function1<Double?, Comparable<*>?>): Comparator<Double?> = TODO()
2021-03-11 13:01:51,858 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareBy(selectors: Function1<Double?, Comparable<*>?>): Comparator<Double?> = TODO()
2021-03-11 13:01:51,990 [main:302] - generating value of type = Function1<Double?, Comparable<*>?> false depth = 6
2021-03-11 13:01:51,991 [main:302] - generating value of type = Comparable<*> false depth = 7
2021-03-11 13:01:52,123 [main:43] - GENERATING CALL OF fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<*> = TODO()
2021-03-11 13:01:52,126 [main:61] - WITHOUT TYPE PARAMS = fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<*> = TODO()
2021-03-11 13:01:52,581 [main:302] - generating value of type = Int true depth = 10
2021-03-11 13:01:52,583 [main:302] - generating value of type = Int true depth = 10
2021-03-11 13:01:52,584 [main:95] - GENERATED = KotlinVersion(913923807, -325525329)
2021-03-11 13:01:52,584 [main:95] - GENERATED = compareBy<Double?>({a: Double? -> KotlinVersion(913923807, -325525329)})
2021-03-11 13:01:52,585 [main:95] - GENERATED = minOf<Double?>(0.09684999423202456, 0.20588324057961271, compareBy<Double?>({a: Double? -> KotlinVersion(913923807, -325525329)}))
2021-03-11 13:01:52,585 [main:66] - Generated call from random type = (Pair<List<Float>, String?>(mutableListOf<Float>(0.2120257f), "gnqcx")).first.lastIndexOf(minOf<Double?>(0.09684999423202456, 0.20588324057961271, compareBy<Double?>({a: Double? -> KotlinVersion(913923807, -325525329)})))
2021-03-11 13:01:52,586 [main:94] - GETTING Int from Long
2021-03-11 13:01:52,624 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 13:01:52,624 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:01:52,625 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 13:01:52,756 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:52,757 [main:105] - GENERATED CALL = (aLong[0]++).toShort().times(111)
2021-03-11 13:01:52,758 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:01:52,758 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:01:52,890 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:52,891 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:01:53,021 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:53,023 [main:105] - GENERATED CALL = (aLong[0]++).compareTo(-107).xor(-1569020074)
2021-03-11 13:01:53,023 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:01:53,023 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:01:53,149 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:53,150 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:01:53,275 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:53,277 [main:105] - GENERATED CALL = (aLong[0]++).compareTo(107).times(60)
2021-03-11 13:01:53,277 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]]
2021-03-11 13:01:53,277 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:01:53,403 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:01:53,404 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:01:53,531 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:53,532 [main:105] - GENERATED CALL = (aLong[0]++).div(0.45324858317070804).compareTo(49)
2021-03-11 13:01:53,532 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d4ebc37]]
2021-03-11 13:01:53,532 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:01:53,533 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d4ebc37]
2021-03-11 13:01:53,533 [main:105] - GENERATED CALL = (aLong[0]++).toShort().toInt()
2021-03-11 13:01:53,533 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:01:53,533 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:01:53,660 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:53,661 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:01:53,662 [main:105] - GENERATED CALL = (aLong[0]++).compareTo(63).unaryMinus()
2021-03-11 13:01:53,662 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:01:53,662 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:53,662 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:01:53,662 [main:105] - GENERATED CALL = (aLong[0]++).toInt().unaryPlus()
2021-03-11 13:01:53,662 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Char.code: kotlin.Int defined in kotlin[DeserializedPropertyDescriptor@3fb27dce]]
2021-03-11 13:01:53,662 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:01:53,662 [main:105] - GENERATED CALL = (aLong[0]++).toChar().code
2021-03-11 13:01:53,662 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:01:53,662 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:01:53,791 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:53,792 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:01:53,792 [main:105] - GENERATED CALL = (aLong[0]++).compareTo(-108).unaryPlus()
2021-03-11 13:01:53,793 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:01:53,793 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:01:53,793 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:01:53,919 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:53,920 [main:105] - GENERATED CALL = (aLong[0]++).toInt().xor(-3380794)
2021-03-11 13:01:53,920 [main:63] - replacement of 0 of type Int is (aLong[0]++).compareTo(-108).unaryPlus()
2021-03-11 13:01:54,047 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:54,048 [main:66] - Compilation checking started
2021-03-11 13:01:54,513 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}"
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:54,521 [main:56] - replacing ("Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}", String)
2021-03-11 13:01:54,522 [main:38] - replacing "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}" String
2021-03-11 13:01:54,522 [main:42] - Getting value of type String
2021-03-11 13:01:54,653 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:01:54,654 [main:46] - GENERATED VALUE OF TYPE String = "wlyti"
2021-03-11 13:01:54,654 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:54,821 [main:55] - randomType = Char?
2021-03-11 13:01:54,947 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:01:54,968 [main:137] - GENERATING call of type public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@666a61a7]
2021-03-11 13:01:54,968 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:01:55,095 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:55,097 [main:66] - Generated call from random type = ('嫫')?.toLong().toString(-3435780)
2021-03-11 13:01:55,097 [main:94] - GETTING String from FloatArray
2021-03-11 13:01:55,107 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:01:55,107 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:01:55,235 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:55,237 [main:105] - GENERATED CALL = (bFloat).size.toString(2102001077)
2021-03-11 13:01:55,237 [main:101] - Case = [@kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun kotlin.FloatArray.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@75b5809b]]
2021-03-11 13:01:55,237 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun kotlin.FloatArray.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@75b5809b]
2021-03-11 13:01:55,237 [main:105] - GENERATED CALL = (bFloat).contentToString()
2021-03-11 13:01:55,237 [main:101] - Case = [public fun kotlin.FloatArray.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((kotlin.Float) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@51c15fdf]]
2021-03-11 13:01:55,237 [main:137] - GENERATING call of type public fun kotlin.FloatArray.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((kotlin.Float) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@51c15fdf]
2021-03-11 13:01:55,364 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 13:01:55,494 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 13:01:55,626 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 13:01:55,758 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 13:01:55,760 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 13:01:56,030 [main:302] - generating value of type = String true depth = 3
2021-03-11 13:01:56,032 [main:95] - GENERATED = StringBuilder("zphzy")
2021-03-11 13:01:56,159 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:56,286 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 13:01:56,417 [main:302] - generating value of type = Function1<Float, CharSequence> false depth = 0
2021-03-11 13:01:56,418 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 13:01:56,423 [main:105] - GENERATED CALL = (bFloat).joinToString("hewwf", "vwrgg", StringBuilder("zphzy"), -1080937815, "zkjvp", {a: Float -> "xtydk"})
2021-03-11 13:01:56,423 [main:63] - replacement of "Failed post-increment Short: ${(bByte).get(-1204664375).toShort()} != ${bShort[0]}" of type String is (bFloat).size.toString(2102001077)
2021-03-11 13:01:56,550 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:56,551 [main:66] - Compilation checking started
2021-03-11 13:01:57,024 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:57,031 [main:56] - replacing (aInt, Array<Int>)
2021-03-11 13:01:57,031 [main:38] - replacing aInt Array<Int>
2021-03-11 13:01:57,031 [main:42] - Getting value of type Array<Int>
2021-03-11 13:01:57,176 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:01:57,307 [main:43] - GENERATING CALL OF fun <T> arrayOfNulls(size: kotlin.Int): Array<Int> = TODO()
2021-03-11 13:01:57,310 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOfNulls(size: kotlin.Int): Array<Int> = TODO()
2021-03-11 13:01:57,581 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:01:57,582 [main:95] - GENERATED = arrayOfNulls<Int>(1650827357)
2021-03-11 13:01:57,583 [main:46] - GENERATED VALUE OF TYPE Array<Int> = arrayOfNulls<Int>(1650827357)
2021-03-11 13:01:57,583 [main:49] - GENERATED IS CALL =true
2021-03-11 13:01:57,590 [main:55] - randomType = Byte?
2021-03-11 13:01:57,716 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:57,752 [main:94] - GETTING Array<Int> from Array<Double>
2021-03-11 13:01:57,761 [main:63] - replacement of aInt of type Array<Int> is arrayOfNulls<Int>(1650827357)
2021-03-11 13:01:57,888 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:01:57,895 [main:56] - replacing (bLong[0], Long)
2021-03-11 13:01:57,897 [main:38] - replacing bLong[0] Long
2021-03-11 13:01:57,897 [main:42] - Getting value of type Long
2021-03-11 13:01:58,024 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:58,025 [main:46] - GENERATED VALUE OF TYPE Long = 7791510196644834798
2021-03-11 13:01:58,025 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:58,166 [main:55] - randomType = UInt
2021-03-11 13:01:58,301 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:01:58,340 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@157b03a1]
2021-03-11 13:01:58,340 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toRawBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@181bb932]
2021-03-11 13:01:58,340 [main:66] - Generated call from random type = (1912807241.toUInt()).toDouble().toRawBits()
2021-03-11 13:01:58,341 [main:94] - GETTING Long from Double
2021-03-11 13:01:58,369 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], public fun kotlin.Long.coerceAtMost(maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@491cf48c]]
2021-03-11 13:01:58,369 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:01:58,369 [main:137] - GENERATING call of type public fun kotlin.Long.coerceAtMost(maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@491cf48c]
2021-03-11 13:01:58,497 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:58,498 [main:105] - GENERATED CALL = (aDouble[0]--).toLong().coerceAtMost(5671480218234981042)
2021-03-11 13:01:58,498 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@40584aff]]
2021-03-11 13:01:58,498 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:01:58,498 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@40584aff]
2021-03-11 13:01:58,625 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:58,627 [main:105] - GENERATED CALL = (aDouble[0]--).toByte().rem(-7663080575607853466)
2021-03-11 13:01:58,627 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@4202af59]]
2021-03-11 13:01:58,627 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:58,627 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@4202af59]
2021-03-11 13:01:58,627 [main:105] - GENERATED CALL = (aDouble[0]--).toDouble().toBits()
2021-03-11 13:01:58,627 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2f1de9d8]]
2021-03-11 13:01:58,627 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:01:58,627 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2f1de9d8]
2021-03-11 13:01:58,754 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:58,755 [main:105] - GENERATED CALL = (aDouble[0]--).toLong().and(1341853482750225184)
2021-03-11 13:01:58,755 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]]
2021-03-11 13:01:58,755 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:01:58,755 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]
2021-03-11 13:01:58,756 [main:105] - GENERATED CALL = (aDouble[0]--).toDouble().roundToLong()
2021-03-11 13:01:58,756 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], public final infix fun shr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5f8e3995]]
2021-03-11 13:01:58,756 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:01:58,756 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5f8e3995]
2021-03-11 13:01:58,883 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:58,885 [main:105] - GENERATED CALL = (aDouble[0]--).toLong().shr(-977767822)
2021-03-11 13:01:58,885 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public open fun toLong(): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@238f7bfd]]
2021-03-11 13:01:58,885 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:01:58,885 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@238f7bfd]
2021-03-11 13:01:58,885 [main:105] - GENERATED CALL = (aDouble[0]--).toShort().toLong()
2021-03-11 13:01:58,885 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@6eb1a9b2]]
2021-03-11 13:01:58,885 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:01:58,885 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@6eb1a9b2]
2021-03-11 13:01:58,886 [main:105] - GENERATED CALL = (aDouble[0]--).toLong().takeHighestOneBit()
2021-03-11 13:01:58,886 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]]
2021-03-11 13:01:58,886 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:01:58,886 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:01:59,014 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:59,016 [main:105] - GENERATED CALL = (aDouble[0]--).toByte().div(-297642658236737958)
2021-03-11 13:01:59,016 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@70058b8b]]
2021-03-11 13:01:59,016 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:01:59,016 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@70058b8b]
2021-03-11 13:01:59,145 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:01:59,146 [main:105] - GENERATED CALL = (aDouble[0]--).toShort().rem(1322487202619221996)
2021-03-11 13:01:59,146 [main:63] - replacement of bLong[0] of type Long is (aDouble[0]--).toLong().shr(-977767822)
2021-03-11 13:01:59,274 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:01:59,274 [main:66] - Compilation checking started
2021-03-11 13:01:59,661 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    (aDouble[0]--).toLong().shr(-977767822)--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:01:59,669 [main:56] - replacing (0, Int)
2021-03-11 13:01:59,670 [main:38] - replacing 0 Int
2021-03-11 13:01:59,670 [main:42] - Getting value of type Int
2021-03-11 13:01:59,803 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:01:59,804 [main:46] - GENERATED VALUE OF TYPE Int = -2083390313
2021-03-11 13:01:59,805 [main:49] - GENERATED IS CALL =false
2021-03-11 13:01:59,809 [main:55] - randomType = Byte
2021-03-11 13:01:59,951 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:01:59,997 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:01:59,997 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]
2021-03-11 13:01:59,997 [main:66] - Generated call from random type = (-27).toFloat().roundToInt()
2021-03-11 13:01:59,997 [main:63] - replacement of 0 of type Int is (-27).toFloat().roundToInt()
2021-03-11 13:02:00,131 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:00,131 [main:66] - Compilation checking started
2021-03-11 13:02:00,498 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf(1.0)

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[(-27).toFloat().roundToInt()]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:00,506 [main:56] - replacing (1.0, Double)
2021-03-11 13:02:00,507 [main:38] - replacing 1.0 Double
2021-03-11 13:02:00,507 [main:42] - Getting value of type Double
2021-03-11 13:02:00,641 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:00,643 [main:46] - GENERATED VALUE OF TYPE Double = 0.199990928127876
2021-03-11 13:02:00,643 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:00,920 [main:55] - randomType = UInt?
2021-03-11 13:02:01,048 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:02:01,079 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@159cc33b]
2021-03-11 13:02:01,079 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4803d1c0]
2021-03-11 13:02:01,079 [main:66] - Generated call from random type = (1084597938.toUInt())?.toDouble().unaryPlus()
2021-03-11 13:02:01,079 [main:63] - replacement of 1.0 of type Double is (1084597938.toUInt())?.toDouble().unaryPlus()
2021-03-11 13:02:01,208 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:01,209 [main:66] - Compilation checking started
2021-03-11 13:02:01,732 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:01,744 [main:56] - replacing (bLong, LongArray)
2021-03-11 13:02:01,746 [main:38] - replacing bLong LongArray
2021-03-11 13:02:01,746 [main:42] - Getting value of type LongArray
2021-03-11 13:02:01,910 [main:302] - generating value of type = LongArray false depth = 0
2021-03-11 13:02:02,059 [main:43] - GENERATING CALL OF fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:02:02,062 [main:61] - WITHOUT TYPE PARAMS = fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:02:02,195 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:02:02,196 [main:95] - GENERATED = longArrayOf(-1638455454276171164)
2021-03-11 13:02:02,196 [main:46] - GENERATED VALUE OF TYPE LongArray = longArrayOf(-1638455454276171164)
2021-03-11 13:02:02,196 [main:49] - GENERATED IS CALL =true
2021-03-11 13:02:02,761 [main:55] - randomType = Array<HashMap<Byte, UShort?>>
2021-03-11 13:02:02,907 [main:302] - generating value of type = Array<HashMap<Byte, UShort?>> false depth = 0
2021-03-11 13:02:03,042 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<HashMap<Byte, UShort?>> = TODO()
2021-03-11 13:02:03,044 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<HashMap<Byte, UShort?>> = TODO()
2021-03-11 13:02:03,184 [main:95] - GENERATED = emptyArray<HashMap<Byte, UShort?>>()
2021-03-11 13:02:03,211 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]
2021-03-11 13:02:03,212 [main:66] - Generated call from random type = (emptyArray<HashMap<Byte, UShort?>>()).toLongArray()
2021-03-11 13:02:03,212 [main:63] - replacement of bLong of type LongArray is (emptyArray<HashMap<Byte, UShort?>>()).toLongArray()
2021-03-11 13:02:03,348 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:03,348 [main:66] - Compilation checking started
2021-03-11 13:02:03,749 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    (emptyArray<HashMap<Byte, UShort?>>()).toLongArray()[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:03,757 [main:56] - replacing (Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--, Int)
2021-03-11 13:02:03,758 [main:38] - replacing Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]-- Int
2021-03-11 13:02:03,759 [main:42] - Getting value of type Int
2021-03-11 13:02:03,893 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:03,894 [main:46] - GENERATED VALUE OF TYPE Int = -516387672
2021-03-11 13:02:03,894 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:03,897 [main:55] - randomType = Long
2021-03-11 13:02:04,026 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:02:04,060 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:02:04,190 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:04,192 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:02:04,320 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:04,322 [main:66] - Generated call from random type = (1404094367789954844).compareTo(-79).coerceAtLeast(91601882)
2021-03-11 13:02:04,322 [main:94] - GETTING Int from Byte
2021-03-11 13:02:04,372 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 13:02:04,373 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:02:04,501 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:04,502 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 13:02:04,503 [main:105] - GENERATED CALL = (aByte[0]++).compareTo(44).countLeadingZeroBits()
2021-03-11 13:02:04,503 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:02:04,503 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:02:04,630 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:04,632 [main:105] - GENERATED CALL = (aByte[0]++).compareTo(116).sign
2021-03-11 13:02:04,632 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]]
2021-03-11 13:02:04,632 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:02:04,632 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]
2021-03-11 13:02:04,632 [main:105] - GENERATED CALL = (aByte[0]++).toLong().countTrailingZeroBits()
2021-03-11 13:02:04,632 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:02:04,632 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:04,632 [main:105] - GENERATED CALL = (aByte[0]++).toInt().sign
2021-03-11 13:02:04,632 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:02:04,632 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:04,633 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:02:04,759 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:04,761 [main:105] - GENERATED CALL = (aByte[0]++).toInt().xor(359657979)
2021-03-11 13:02:04,761 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]]
2021-03-11 13:02:04,761 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:02:04,761 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]
2021-03-11 13:02:04,888 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:04,890 [main:105] - GENERATED CALL = (aByte[0]++).toShort().div(-51)
2021-03-11 13:02:04,890 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:02:04,890 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:02:05,016 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:05,018 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:02:05,145 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:05,147 [main:105] - GENERATED CALL = (aByte[0]++).compareTo(12).coerceAtLeast(1283373521)
2021-03-11 13:02:05,147 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]]
2021-03-11 13:02:05,147 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]
2021-03-11 13:02:05,274 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:05,275 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]
2021-03-11 13:02:05,275 [main:105] - GENERATED CALL = (aByte[0]++).div(0.5220151949276016).roundToInt()
2021-03-11 13:02:05,276 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]]
2021-03-11 13:02:05,276 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:02:05,276 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]
2021-03-11 13:02:05,276 [main:105] - GENERATED CALL = (aByte[0]++).toByte().unaryMinus()
2021-03-11 13:02:05,276 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]]
2021-03-11 13:02:05,276 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:02:05,276 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]
2021-03-11 13:02:05,276 [main:105] - GENERATED CALL = (aByte[0]++).toShort().unaryPlus()
2021-03-11 13:02:05,276 [main:63] - replacement of Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]-- of type Int is (aByte[0]++).toInt().sign
2021-03-11 13:02:05,403 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:05,403 [main:66] - Compilation checking started
2021-03-11 13:02:05,803 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (aByte[0]++).toInt().sign
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:05,811 [main:56] - replacing (bInt[0], Int)
2021-03-11 13:02:05,812 [main:38] - replacing bInt[0] Int
2021-03-11 13:02:05,812 [main:42] - Getting value of type Int
2021-03-11 13:02:05,941 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:05,942 [main:46] - GENERATED VALUE OF TYPE Int = 767802864
2021-03-11 13:02:05,942 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:05,945 [main:55] - randomType = Float
2021-03-11 13:02:06,072 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:06,103 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:02:06,103 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]
2021-03-11 13:02:06,104 [main:66] - Generated call from random type = (0.6468485f).toLong().countLeadingZeroBits()
2021-03-11 13:02:06,104 [main:94] - GETTING Int from FloatArray
2021-03-11 13:02:06,112 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 13:02:06,112 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 13:02:06,112 [main:105] - GENERATED CALL = (bFloat).size.takeLowestOneBit()
2021-03-11 13:02:06,112 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:02:06,112 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:02:06,239 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:06,240 [main:105] - GENERATED CALL = (bFloat).size.shr(526894696)
2021-03-11 13:02:06,240 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.FloatArray.sumOf(selector: (kotlin.Float) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1b82dc49]]
2021-03-11 13:02:06,241 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.FloatArray.sumOf(selector: (kotlin.Float) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1b82dc49]
2021-03-11 13:02:06,368 [main:302] - generating value of type = Function1<Float, Int> false depth = 0
2021-03-11 13:02:06,369 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:02:06,371 [main:105] - GENERATED CALL = (bFloat).sumOf({a: Float -> 1123508298})
2021-03-11 13:02:06,371 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:02:06,371 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:02:06,506 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:06,508 [main:105] - GENERATED CALL = (bFloat).size.ushr(-776050069)
2021-03-11 13:02:06,508 [main:101] - Case = [public inline fun kotlin.FloatArray.sumBy(selector: (kotlin.Float) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f1ac68f]]
2021-03-11 13:02:06,508 [main:137] - GENERATING call of type public inline fun kotlin.FloatArray.sumBy(selector: (kotlin.Float) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f1ac68f]
2021-03-11 13:02:06,642 [main:302] - generating value of type = Function1<Float, Int> false depth = 0
2021-03-11 13:02:06,644 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:02:06,645 [main:105] - GENERATED CALL = (bFloat).sumBy({a: Float -> 1111092557})
2021-03-11 13:02:06,645 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@7fc7e21b], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]]
2021-03-11 13:02:06,645 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@7fc7e21b]
2021-03-11 13:02:06,794 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:02:06,794 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:02:06,920 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:02:06,922 [main:105] - GENERATED CALL = (bFloat).equals("wfrif").compareTo(false)
2021-03-11 13:02:06,922 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:02:06,922 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:02:07,049 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:07,050 [main:105] - GENERATED CALL = (bFloat).size.compareTo(75)
2021-03-11 13:02:07,050 [main:101] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun kotlin.FloatArray.indexOf(element: kotlin.Float): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@269d8be5]]
2021-03-11 13:02:07,050 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun kotlin.FloatArray.indexOf(element: kotlin.Float): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@269d8be5]
2021-03-11 13:02:07,179 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:07,181 [main:105] - GENERATED CALL = (bFloat).indexOf(0.39501363f)
2021-03-11 13:02:07,181 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:02:07,181 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:02:07,181 [main:105] - GENERATED CALL = (bFloat).size.unaryMinus()
2021-03-11 13:02:07,181 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]]
2021-03-11 13:02:07,181 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 13:02:07,308 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:07,309 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]
2021-03-11 13:02:07,309 [main:105] - GENERATED CALL = (bFloat).get(496864625).toBits()
2021-03-11 13:02:07,309 [main:63] - replacement of bInt[0] of type Int is (0.6468485f).toLong().countLeadingZeroBits()
2021-03-11 13:02:07,436 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:07,437 [main:66] - Compilation checking started
2021-03-11 13:02:07,819 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (0.6468485f).toLong().countLeadingZeroBits()--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    bFloat[0]--
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:07,827 [main:56] - replacing (bFloat[0]--, Float)
2021-03-11 13:02:07,828 [main:38] - replacing bFloat[0]-- Float
2021-03-11 13:02:07,828 [main:42] - Getting value of type Float
2021-03-11 13:02:07,956 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:07,958 [main:46] - GENERATED VALUE OF TYPE Float = 0.8885376f
2021-03-11 13:02:07,958 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:07,962 [main:55] - randomType = String
2021-03-11 13:02:08,090 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:08,108 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1268a8b6]
2021-03-11 13:02:08,235 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:08,237 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:02:08,364 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:08,366 [main:66] - Generated call from random type = ("vvjlp").compareTo("yotdj").times(0.8457173f)
2021-03-11 13:02:08,366 [main:94] - GETTING Float from Int
2021-03-11 13:02:08,397 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3a9bf4ac]]
2021-03-11 13:02:08,397 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:02:08,397 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3a9bf4ac]
2021-03-11 13:02:08,525 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:08,527 [main:105] - GENERATED CALL = (bInt[0]++).toByte().rem(0.627356f)
2021-03-11 13:02:08,527 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5], public fun kotlin.Float.coerceAtMost(maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@24a3b6ac]]
2021-03-11 13:02:08,527 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:02:08,654 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:08,655 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtMost(maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@24a3b6ac]
2021-03-11 13:02:08,783 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:08,785 [main:105] - GENERATED CALL = (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
2021-03-11 13:02:08,785 [main:101] - Case = [public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]]
2021-03-11 13:02:08,785 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:02:08,913 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:08,915 [main:105] - GENERATED CALL = (bInt[0]++).times(0.07735419f)
2021-03-11 13:02:08,915 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@385df728]]
2021-03-11 13:02:08,915 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:02:08,915 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@385df728]
2021-03-11 13:02:09,045 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:09,046 [main:105] - GENERATED CALL = (bInt[0]++).toLong().plus(0.19034147f)
2021-03-11 13:02:09,046 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@18a6b4c0]]
2021-03-11 13:02:09,046 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:02:09,047 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@18a6b4c0]
2021-03-11 13:02:09,201 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:09,203 [main:105] - GENERATED CALL = (bInt[0]++).toShort().rem(0.62434566f)
2021-03-11 13:02:09,203 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5], public final operator fun plus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1bda99b6]]
2021-03-11 13:02:09,203 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:02:09,332 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:09,334 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1bda99b6]
2021-03-11 13:02:09,462 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:09,464 [main:105] - GENERATED CALL = (bInt[0]++).div(0.5508686f).plus(-109)
2021-03-11 13:02:09,464 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:02:09,464 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:09,464 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:02:09,464 [main:105] - GENERATED CALL = (bInt[0]++).toInt().toFloat()
2021-03-11 13:02:09,464 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun toFloat(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@28ec2340]]
2021-03-11 13:02:09,464 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:02:09,464 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@28ec2340]
2021-03-11 13:02:09,464 [main:105] - GENERATED CALL = (bInt[0]++).toFloat().toFloat()
2021-03-11 13:02:09,464 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@6eb3df0b]]
2021-03-11 13:02:09,464 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:02:09,464 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@6eb3df0b]
2021-03-11 13:02:09,593 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:09,595 [main:105] - GENERATED CALL = (bInt[0]++).toByte().minus(0.040733516f)
2021-03-11 13:02:09,595 [main:101] - Case = [@kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]]
2021-03-11 13:02:09,595 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]
2021-03-11 13:02:09,726 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:09,728 [main:105] - GENERATED CALL = (bInt[0]++).rem(0.27361858f)
2021-03-11 13:02:09,728 [main:63] - replacement of bFloat[0]-- of type Float is (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
2021-03-11 13:02:09,858 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:09,859 [main:66] - Compilation checking started
2021-03-11 13:02:10,349 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}"

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:10,362 [main:56] - replacing (0, Int)
2021-03-11 13:02:10,362 [main:38] - replacing 0 Int
2021-03-11 13:02:10,362 [main:42] - Getting value of type Int
2021-03-11 13:02:10,502 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:10,503 [main:46] - GENERATED VALUE OF TYPE Int = 620219633
2021-03-11 13:02:10,503 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:10,930 [main:55] - randomType = Sequence<Function1<Byte, UByte>>
2021-03-11 13:02:10,931 [main:94] - GETTING Int from Short
2021-03-11 13:02:10,961 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:02:10,961 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:10,962 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:02:11,093 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:11,094 [main:105] - GENERATED CALL = (bShort[0]++).toInt().rotateRight(-543961251)
2021-03-11 13:02:11,094 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:02:11,094 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:02:11,222 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:11,224 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:02:11,224 [main:105] - GENERATED CALL = (bShort[0]++).compareTo(18).inc()
2021-03-11 13:02:11,224 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:02:11,224 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:11,224 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:02:11,224 [main:105] - GENERATED CALL = (bShort[0]++).toInt().inc()
2021-03-11 13:02:11,224 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:02:11,224 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:02:11,352 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:11,354 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:02:11,354 [main:105] - GENERATED CALL = (bShort[0]++).compareTo(-36).takeHighestOneBit()
2021-03-11 13:02:11,354 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]]
2021-03-11 13:02:11,354 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]
2021-03-11 13:02:11,354 [main:105] - GENERATED CALL = (bShort[0]++).countTrailingZeroBits()
2021-03-11 13:02:11,354 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]]
2021-03-11 13:02:11,354 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:02:11,354 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]
2021-03-11 13:02:11,482 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:11,484 [main:105] - GENERATED CALL = (bShort[0]++).toByte().plus(103)
2021-03-11 13:02:11,484 [main:101] - Case = [@kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]]
2021-03-11 13:02:11,484 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]
2021-03-11 13:02:11,639 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:11,641 [main:105] - GENERATED CALL = (bShort[0]++).rem(45)
2021-03-11 13:02:11,641 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:02:11,641 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:02:11,770 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:11,772 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:02:11,899 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:11,901 [main:105] - GENERATED CALL = (bShort[0]++).compareTo(115).ushr(1914750679)
2021-03-11 13:02:11,901 [main:101] - Case = [public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]]
2021-03-11 13:02:11,901 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]
2021-03-11 13:02:12,030 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:12,031 [main:105] - GENERATED CALL = (bShort[0]++).plus(98)
2021-03-11 13:02:12,031 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]]
2021-03-11 13:02:12,031 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:02:12,159 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:12,160 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:02:12,289 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:12,291 [main:105] - GENERATED CALL = (bShort[0]++).div(0.5953190381023034).compareTo(86)
2021-03-11 13:02:12,291 [main:63] - replacement of 0 of type Int is (bShort[0]++).countTrailingZeroBits()
2021-03-11 13:02:12,418 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:12,427 [main:56] - replacing ("Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}", String)
2021-03-11 13:02:12,428 [main:38] - replacing "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}" String
2021-03-11 13:02:12,428 [main:42] - Getting value of type String
2021-03-11 13:02:12,561 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:12,562 [main:46] - GENERATED VALUE OF TYPE String = "rceqs"
2021-03-11 13:02:12,562 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:12,565 [main:55] - randomType = Float
2021-03-11 13:02:12,693 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:12,730 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943]
2021-03-11 13:02:12,730 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]
2021-03-11 13:02:12,730 [main:66] - Generated call from random type = (0.27438194f).toChar().lowercase()
2021-03-11 13:02:12,730 [main:63] - replacement of "Failed post-decrement Float: ${aFloat[(bInt[0]).compareTo(-1403169113).ushr(-742288695)]} != ${bFloat[0]}" of type String is (0.27438194f).toChar().lowercase()
2021-03-11 13:02:12,857 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:12,858 [main:66] - Compilation checking started
2021-03-11 13:02:13,335 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[0]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:13,342 [main:56] - replacing (0, Int)
2021-03-11 13:02:13,344 [main:38] - replacing 0 Int
2021-03-11 13:02:13,344 [main:42] - Getting value of type Int
2021-03-11 13:02:13,477 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:13,479 [main:46] - GENERATED VALUE OF TYPE Int = 434057266
2021-03-11 13:02:13,479 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:13,619 [main:55] - randomType = UShort
2021-03-11 13:02:13,747 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:02:13,785 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@23e876bf]
2021-03-11 13:02:13,913 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:02:13,915 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:02:13,915 [main:66] - Generated call from random type = (16540.toUShort()).compareTo(23.toUByte()).takeHighestOneBit()
2021-03-11 13:02:13,916 [main:94] - GETTING Int from ShortArray
2021-03-11 13:02:13,929 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 13:02:13,929 [main:105] - GENERATED CALL = (bShort).size.absoluteValue
2021-03-11 13:02:13,929 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]]
2021-03-11 13:02:13,929 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:02:14,057 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:14,059 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]
2021-03-11 13:02:14,211 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:14,213 [main:105] - GENERATED CALL = (bShort).get(-1736464160).div(81)
2021-03-11 13:02:14,213 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:02:14,213 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:02:14,342 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:14,343 [main:105] - GENERATED CALL = (bShort).size.shr(259376905)
2021-03-11 13:02:14,343 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]]
2021-03-11 13:02:14,343 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:02:14,470 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:14,472 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]
2021-03-11 13:02:14,598 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:14,600 [main:105] - GENERATED CALL = (bShort).get(538976312).rem(-20)
2021-03-11 13:02:14,600 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d4ebc37]]
2021-03-11 13:02:14,600 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:02:14,727 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:14,728 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d4ebc37]
2021-03-11 13:02:14,728 [main:105] - GENERATED CALL = (bShort).get(-852968998).toInt()
2021-03-11 13:02:14,728 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]]
2021-03-11 13:02:14,728 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:02:14,856 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:14,857 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]
2021-03-11 13:02:14,857 [main:105] - GENERATED CALL = (bShort).get(1162032897).unaryMinus()
2021-03-11 13:02:14,858 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@a20d173], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]]
2021-03-11 13:02:14,858 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@a20d173]
2021-03-11 13:02:14,986 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:02:14,986 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:02:15,115 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:02:15,116 [main:105] - GENERATED CALL = (bShort).equals("xloyv").compareTo(false)
2021-03-11 13:02:15,116 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:02:15,116 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:02:15,117 [main:105] - GENERATED CALL = (bShort).size.countOneBits()
2021-03-11 13:02:15,117 [main:101] - Case = [@kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun kotlin.ShortArray.contentHashCode(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@93f507e]]
2021-03-11 13:02:15,117 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun kotlin.ShortArray.contentHashCode(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@93f507e]
2021-03-11 13:02:15,117 [main:105] - GENERATED CALL = (bShort).contentHashCode()
2021-03-11 13:02:15,117 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 13:02:15,117 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 13:02:15,117 [main:105] - GENERATED CALL = (bShort).size.takeLowestOneBit()
2021-03-11 13:02:15,117 [main:63] - replacement of 0 of type Int is (bShort).equals("xloyv").compareTo(false)
2021-03-11 13:02:15,245 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:15,245 [main:66] - Compilation checking started
2021-03-11 13:02:15,713 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:15,721 [main:56] - replacing (arrayOf<Long>(1), Array<Long>)
2021-03-11 13:02:15,722 [main:38] - replacing arrayOf<Long>(1) Array<Long>
2021-03-11 13:02:15,722 [main:42] - Getting value of type Array<Long>
2021-03-11 13:02:15,853 [main:302] - generating value of type = Array<Long> false depth = 0
2021-03-11 13:02:15,987 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Long): Array<Long> = TODO()
2021-03-11 13:02:15,990 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Long): Array<Long> = TODO()
2021-03-11 13:02:16,122 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:02:16,124 [main:95] - GENERATED = arrayOf<Long>(2855192318894905861)
2021-03-11 13:02:16,124 [main:46] - GENERATED VALUE OF TYPE Array<Long> = arrayOf<Long>(2855192318894905861)
2021-03-11 13:02:16,124 [main:49] - GENERATED IS CALL =true
2021-03-11 13:02:16,127 [main:55] - randomType = Double
2021-03-11 13:02:16,254 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:16,286 [main:94] - GETTING Array<Long> from Array<Int>
2021-03-11 13:02:16,294 [main:63] - replacement of arrayOf<Long>(1) of type Array<Long> is aInt
2021-03-11 13:02:16,423 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:02:16,423 [main:66] - Compilation checking started
2021-03-11 13:02:16,822 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = aInt
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:16,830 [main:56] - replacing (1, Short)
2021-03-11 13:02:16,831 [main:38] - replacing 1 Short
2021-03-11 13:02:16,831 [main:42] - Getting value of type Short
2021-03-11 13:02:16,959 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:16,960 [main:46] - GENERATED VALUE OF TYPE Short = 31
2021-03-11 13:02:16,960 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:17,250 [main:55] - randomType = LinkedHashMap<Byte?, ULong>
2021-03-11 13:02:17,378 [main:302] - generating value of type = LinkedHashMap<Byte?, ULong> false depth = 0
2021-03-11 13:02:17,510 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): LkedHashMap<Byte?, ULong> = TODO()
2021-03-11 13:02:17,512 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): LkedHashMap<Byte?, ULong> = TODO()
2021-03-11 13:02:17,645 [main:95] - GENERATED = linkedMapOf<Byte?, ULong>()
2021-03-11 13:02:17,775 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:02:17,776 [main:66] - Generated call from random type = (linkedMapOf<Byte?, ULong>()).size.toShort()
2021-03-11 13:02:17,777 [main:94] - GETTING Short from Float
2021-03-11 13:02:17,816 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:02:17,817 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:02:17,950 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:17,952 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:02:17,952 [main:105] - GENERATED CALL = (aFloat[0]++).div(0.3485048982679082).toShort()
2021-03-11 13:02:17,952 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]]
2021-03-11 13:02:17,952 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:02:17,952 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:02:17,952 [main:105] - GENERATED CALL = (aFloat[0]++).toLong().toShort()
2021-03-11 13:02:17,952 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]]
2021-03-11 13:02:17,952 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:02:17,952 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]
2021-03-11 13:02:18,091 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:18,092 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().rotateRight(-2072929635)
2021-03-11 13:02:18,093 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]]
2021-03-11 13:02:18,093 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:02:18,093 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]
2021-03-11 13:02:18,224 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:18,226 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().coerceAtLeast(-31808)
2021-03-11 13:02:18,226 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]]
2021-03-11 13:02:18,226 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:02:18,227 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]
2021-03-11 13:02:18,227 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().toShort()
2021-03-11 13:02:18,227 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]]
2021-03-11 13:02:18,227 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:02:18,227 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]
2021-03-11 13:02:18,356 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:18,358 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().rotateLeft(-1091290649)
2021-03-11 13:02:18,358 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]]
2021-03-11 13:02:18,358 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:02:18,358 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]
2021-03-11 13:02:18,358 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().takeLowestOneBit()
2021-03-11 13:02:18,358 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.xor(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@461bb21c]]
2021-03-11 13:02:18,358 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:02:18,358 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.xor(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@461bb21c]
2021-03-11 13:02:18,485 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:18,487 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().xor(25991)
2021-03-11 13:02:18,487 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943], public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]]
2021-03-11 13:02:18,487 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943]
2021-03-11 13:02:18,487 [main:137] - GENERATING call of type public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]
2021-03-11 13:02:18,487 [main:105] - GENERATED CALL = (aFloat[0]++).toChar().toShort()
2021-03-11 13:02:18,487 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]]
2021-03-11 13:02:18,487 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:02:18,488 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:02:18,488 [main:105] - GENERATED CALL = (aFloat[0]++).toByte().toShort()
2021-03-11 13:02:18,488 [main:63] - replacement of 1 of type Short is (aFloat[0]++).toShort().coerceAtLeast(-31808)
2021-03-11 13:02:18,616 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:18,616 [main:66] - Compilation checking started
2021-03-11 13:02:19,017 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>((aFloat[0]++).toShort().coerceAtLeast(-31808))
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:19,025 [main:56] - replacing (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()], Byte)
2021-03-11 13:02:19,026 [main:38] - replacing aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] Byte
2021-03-11 13:02:19,027 [main:42] - Getting value of type Byte
2021-03-11 13:02:19,159 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:19,161 [main:46] - GENERATED VALUE OF TYPE Byte = -82
2021-03-11 13:02:19,161 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:19,437 [main:55] - randomType = UByte?
2021-03-11 13:02:19,565 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:02:19,603 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@48b1184a]
2021-03-11 13:02:19,604 [main:66] - Generated call from random type = (48.toUByte())?.toByte()
2021-03-11 13:02:19,605 [main:94] - GETTING Byte from Array<Long>
2021-03-11 13:02:19,618 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:02:19,618 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:02:19,618 [main:105] - GENERATED CALL = (aLong).size.toByte()
2021-03-11 13:02:19,618 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]]
2021-03-11 13:02:19,618 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:02:19,747 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:19,749 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:02:19,749 [main:105] - GENERATED CALL = (aLong).get(1863862181).toByte()
2021-03-11 13:02:19,749 [main:63] - replacement of aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] of type Byte is -82
2021-03-11 13:02:19,876 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 13:02:19,877 [main:66] - Compilation checking started
2021-03-11 13:02:20,245 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (-82 != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:20,253 [main:56] - replacing (1, Int)
2021-03-11 13:02:20,254 [main:38] - replacing 1 Int
2021-03-11 13:02:20,254 [main:42] - Getting value of type Int
2021-03-11 13:02:20,383 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:20,385 [main:46] - GENERATED VALUE OF TYPE Int = 887001893
2021-03-11 13:02:20,385 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:20,526 [main:55] - randomType = String?
2021-03-11 13:02:20,653 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:20,674 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1268a8b6]
2021-03-11 13:02:20,802 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:20,803 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:02:20,804 [main:66] - Generated call from random type = ("xbbmr")?.compareTo("wskzq").inc()
2021-03-11 13:02:20,804 [main:94] - GETTING Int from Long
2021-03-11 13:02:20,835 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@5f449f3f]]
2021-03-11 13:02:20,835 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:02:20,835 [main:105] - GENERATED CALL = (bLong[0]).toLong().sign
2021-03-11 13:02:20,835 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 13:02:20,835 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:02:20,835 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 13:02:20,962 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:20,964 [main:105] - GENERATED CALL = (bLong[0]).toShort().times(108)
2021-03-11 13:02:20,964 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:02:20,964 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:20,964 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:02:21,092 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:21,094 [main:105] - GENERATED CALL = (bLong[0]).toInt().coerceAtLeast(1635648105)
2021-03-11 13:02:21,094 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]]
2021-03-11 13:02:21,094 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:02:21,094 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]
2021-03-11 13:02:21,231 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:21,232 [main:105] - GENERATED CALL = (bLong[0]).toShort().plus(-89)
2021-03-11 13:02:21,232 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]]
2021-03-11 13:02:21,232 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:02:21,233 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]
2021-03-11 13:02:21,384 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:21,386 [main:105] - GENERATED CALL = (bLong[0]).toByte().rem(110)
2021-03-11 13:02:21,386 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]]
2021-03-11 13:02:21,386 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:02:21,386 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]
2021-03-11 13:02:21,386 [main:105] - GENERATED CALL = (bLong[0]).toShort().unaryPlus()
2021-03-11 13:02:21,386 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:02:21,386 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:02:21,514 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:21,516 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:02:21,516 [main:105] - GENERATED CALL = (bLong[0]).compareTo(20).countTrailingZeroBits()
2021-03-11 13:02:21,516 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:02:21,516 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:02:21,643 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:21,645 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:02:21,645 [main:105] - GENERATED CALL = (bLong[0]).compareTo(108).takeHighestOneBit()
2021-03-11 13:02:21,645 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]]
2021-03-11 13:02:21,645 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:02:21,645 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]
2021-03-11 13:02:21,772 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:21,774 [main:105] - GENERATED CALL = (bLong[0]).toByte().plus(-10)
2021-03-11 13:02:21,774 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:02:21,774 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:21,774 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:02:21,902 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:22,031 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:22,032 [main:105] - GENERATED CALL = (bLong[0]).toInt().coerceIn(-671303204, 442595329)
2021-03-11 13:02:22,032 [main:63] - replacement of 1 of type Int is (bLong[0]).toLong().sign
2021-03-11 13:02:22,159 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:22,160 [main:66] - Compilation checking started
2021-03-11 13:02:22,531 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bLong[0]).toLong().sign)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if (aFloat[0] != bFloat[0]) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:22,543 [main:56] - replacing (aFloat[0] != bFloat[0], Boolean)
2021-03-11 13:02:22,545 [main:38] - replacing aFloat[0] != bFloat[0] Boolean
2021-03-11 13:02:22,545 [main:42] - Getting value of type Boolean
2021-03-11 13:02:22,683 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:02:22,684 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 13:02:22,685 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:22,687 [main:55] - randomType = UInt
2021-03-11 13:02:22,816 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:02:22,843 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@dcd6d4c]
2021-03-11 13:02:22,843 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@493658fa]
2021-03-11 13:02:22,971 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:02:22,971 [main:66] - Generated call from random type = (27255845.toUInt()).toLong().equals("lfork")
2021-03-11 13:02:22,972 [main:63] - replacement of aFloat[0] != bFloat[0] of type Boolean is (27255845.toUInt()).toLong().equals("lfork")
2021-03-11 13:02:23,099 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:23,099 [main:66] - Compilation checking started
2021-03-11 13:02:23,586 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aByte[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:23,595 [main:56] - replacing (aByte, Array<Byte>)
2021-03-11 13:02:23,596 [main:38] - replacing aByte Array<Byte>
2021-03-11 13:02:23,596 [main:42] - Getting value of type Array<Byte>
2021-03-11 13:02:23,729 [main:302] - generating value of type = Array<Byte> false depth = 0
2021-03-11 13:02:23,887 [main:43] - GENERATING CALL OF fun <T> arrayOfNulls(size: kotlin.Int): Array<Byte> = TODO()
2021-03-11 13:02:23,889 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOfNulls(size: kotlin.Int): Array<Byte> = TODO()
2021-03-11 13:02:24,168 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:02:24,170 [main:95] - GENERATED = arrayOfNulls<Byte>(755480358)
2021-03-11 13:02:24,170 [main:46] - GENERATED VALUE OF TYPE Array<Byte> = arrayOfNulls<Byte>(755480358)
2021-03-11 13:02:24,170 [main:49] - GENERATED IS CALL =true
2021-03-11 13:02:24,175 [main:55] - randomType = String
2021-03-11 13:02:24,310 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:24,330 [main:94] - GETTING Array<Byte> from Short
2021-03-11 13:02:24,361 [main:94] - GETTING Array<Byte> from Float
2021-03-11 13:02:24,389 [main:94] - GETTING Array<Byte> from Long
2021-03-11 13:02:24,420 [main:94] - GETTING Array<Byte> from Byte
2021-03-11 13:02:24,451 [main:94] - GETTING Array<Byte> from Long
2021-03-11 13:02:24,452 [main:94] - GETTING Array<Byte> from Int
2021-03-11 13:02:24,483 [main:94] - GETTING Array<Byte> from Long
2021-03-11 13:02:24,484 [main:94] - GETTING Array<Byte> from Array<Short>
2021-03-11 13:02:24,497 [main:63] - replacement of aByte of type Array<Byte> is aShort
2021-03-11 13:02:24,624 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:02:24,624 [main:66] - Compilation checking started
2021-03-11 13:02:25,106 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:25,118 [main:56] - replacing (0, Int)
2021-03-11 13:02:25,118 [main:38] - replacing 0 Int
2021-03-11 13:02:25,118 [main:42] - Getting value of type Int
2021-03-11 13:02:25,247 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:25,249 [main:46] - GENERATED VALUE OF TYPE Int = 203701005
2021-03-11 13:02:25,249 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:25,392 [main:55] - randomType = Float?
2021-03-11 13:02:25,520 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:25,553 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:02:25,680 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:25,682 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:02:25,682 [main:66] - Generated call from random type = (0.35801548f)?.compareTo(13).countTrailingZeroBits()
2021-03-11 13:02:25,683 [main:94] - GETTING Int from ShortArray
2021-03-11 13:02:25,691 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:02:25,691 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:02:25,819 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:25,821 [main:105] - GENERATED CALL = (bShort).size.coerceAtLeast(-1275002573)
2021-03-11 13:02:25,821 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 13:02:25,821 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:02:25,951 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:25,952 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 13:02:26,083 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:26,085 [main:105] - GENERATED CALL = (bShort).get(-242505732).times(32)
2021-03-11 13:02:26,085 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:02:26,085 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:02:26,245 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:26,246 [main:105] - GENERATED CALL = (bShort).size.div(-27)
2021-03-11 13:02:26,247 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:02:26,247 [main:105] - GENERATED CALL = (bShort).size.sign
2021-03-11 13:02:26,247 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]]
2021-03-11 13:02:26,247 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:02:26,376 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:26,377 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]
2021-03-11 13:02:26,377 [main:105] - GENERATED CALL = (bShort).get(-518124385).countTrailingZeroBits()
2021-03-11 13:02:26,378 [main:101] - Case = [public inline fun kotlin.ShortArray.indexOfFirst(predicate: (kotlin.Short) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@100c57c9]]
2021-03-11 13:02:26,378 [main:137] - GENERATING call of type public inline fun kotlin.ShortArray.indexOfFirst(predicate: (kotlin.Short) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@100c57c9]
2021-03-11 13:02:26,506 [main:302] - generating value of type = Function1<Short, Boolean> false depth = 0
2021-03-11 13:02:26,507 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 13:02:26,509 [main:105] - GENERATED CALL = (bShort).indexOfFirst({a: Short -> false})
2021-03-11 13:02:26,509 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:02:26,509 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:02:26,509 [main:105] - GENERATED CALL = (bShort).size.takeHighestOneBit()
2021-03-11 13:02:26,509 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:02:26,509 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:02:26,636 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:26,638 [main:105] - GENERATED CALL = (bShort).size.shr(-2108527742)
2021-03-11 13:02:26,638 [main:101] - Case = [public val kotlin.ShortArray.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@495d04a7]]
2021-03-11 13:02:26,638 [main:105] - GENERATED CALL = (bShort).lastIndex
2021-03-11 13:02:26,638 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:02:26,638 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:02:26,766 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:26,767 [main:105] - GENERATED CALL = (bShort).size.xor(631609019)
2021-03-11 13:02:26,767 [main:63] - replacement of 0 of type Int is (bShort).get(-518124385).countTrailingZeroBits()
2021-03-11 13:02:26,894 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:26,902 [main:56] - replacing (Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0], Double)
2021-03-11 13:02:26,904 [main:38] - replacing Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] Double
2021-03-11 13:02:26,904 [main:42] - Getting value of type Double
2021-03-11 13:02:27,031 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:27,032 [main:46] - GENERATED VALUE OF TYPE Double = 0.43149897381803604
2021-03-11 13:02:27,032 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:27,036 [main:55] - randomType = Short
2021-03-11 13:02:27,168 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:27,207 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:02:27,207 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@611f4707]
2021-03-11 13:02:27,337 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:27,339 [main:66] - Generated call from random type = (31872).toFloat().minus(0.20660347503137733)
2021-03-11 13:02:27,339 [main:94] - GETTING Double from Double
2021-03-11 13:02:27,368 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.sign: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@23395b41]]
2021-03-11 13:02:27,368 [main:105] - GENERATED CALL = (bDouble[0]--).sign
2021-03-11 13:02:27,369 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public val kotlin.Double.ulp: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@3844bd6b]]
2021-03-11 13:02:27,369 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:02:27,369 [main:105] - GENERATED CALL = (bDouble[0]--).toDouble().ulp
2021-03-11 13:02:27,369 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]]
2021-03-11 13:02:27,369 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:27,369 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]
2021-03-11 13:02:27,497 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:27,499 [main:105] - GENERATED CALL = (bDouble[0]--).toInt().minus(0.3125268309463489)
2021-03-11 13:02:27,499 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], public open fun toDouble(): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3bf4c059]]
2021-03-11 13:02:27,499 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:02:27,499 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3bf4c059]
2021-03-11 13:02:27,499 [main:105] - GENERATED CALL = (bDouble[0]--).toLong().toDouble()
2021-03-11 13:02:27,499 [main:101] - Case = [public fun kotlin.Double.coerceAtMost(maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ff45f6f]]
2021-03-11 13:02:27,499 [main:137] - GENERATING call of type public fun kotlin.Double.coerceAtMost(maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ff45f6f]
2021-03-11 13:02:27,627 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:27,628 [main:105] - GENERATED CALL = (bDouble[0]--).coerceAtMost(0.08149463680940505)
2021-03-11 13:02:27,628 [main:101] - Case = [public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4d0648d8]]
2021-03-11 13:02:27,628 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4d0648d8]
2021-03-11 13:02:27,628 [main:105] - GENERATED CALL = (bDouble[0]--).dec()
2021-03-11 13:02:27,629 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@6865defc]]
2021-03-11 13:02:27,629 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:02:27,629 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@6865defc]
2021-03-11 13:02:27,757 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:27,758 [main:105] - GENERATED CALL = (bDouble[0]--).toDouble().rem(-1)
2021-03-11 13:02:27,758 [main:101] - Case = [public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]]
2021-03-11 13:02:27,758 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]
2021-03-11 13:02:27,759 [main:105] - GENERATED CALL = (bDouble[0]--).toDouble()
2021-03-11 13:02:27,759 [main:101] - Case = [public final operator fun times(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5b7c2113]]
2021-03-11 13:02:27,759 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5b7c2113]
2021-03-11 13:02:27,886 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:27,888 [main:105] - GENERATED CALL = (bDouble[0]--).times(120)
2021-03-11 13:02:27,888 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]]
2021-03-11 13:02:27,888 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:02:28,016 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:28,017 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]
2021-03-11 13:02:28,146 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:28,147 [main:105] - GENERATED CALL = (bDouble[0]--).compareTo(-20).minus(0.9458055396882776)
2021-03-11 13:02:28,147 [main:63] - replacement of Array<Double>(-1985076122, {a: Int -> 0.13472230668479412})[0] of type Double is (bDouble[0]--).times(120)
2021-03-11 13:02:28,275 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:28,276 [main:66] - Compilation checking started
2021-03-11 13:02:28,781 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if (aDouble[0] != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:28,789 [main:56] - replacing (aDouble[0], Double)
2021-03-11 13:02:28,790 [main:38] - replacing aDouble[0] Double
2021-03-11 13:02:28,790 [main:42] - Getting value of type Double
2021-03-11 13:02:28,917 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:28,919 [main:46] - GENERATED VALUE OF TYPE Double = 0.14597396651346795
2021-03-11 13:02:28,919 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:29,363 [main:55] - randomType = Function1<Function1<Int, Float?>, Double>
2021-03-11 13:02:29,364 [main:94] - GETTING Double from Array<Short>
2021-03-11 13:02:29,374 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@65fe430a], public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]]
2021-03-11 13:02:29,374 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]
2021-03-11 13:02:29,374 [main:105] - GENERATED CALL = (aShort).size.toDouble()
2021-03-11 13:02:29,375 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.maxOf(selector: (T) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2814b2b9]]
2021-03-11 13:02:29,375 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.maxOf(selector: (T) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2814b2b9]
2021-03-11 13:02:29,507 [main:302] - generating value of type = Function1<T, Double> false depth = 0
2021-03-11 13:02:29,508 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:02:29,510 [main:105] - GENERATED CALL = (aShort).maxOf({a: T -> 0.5885684472292989})
2021-03-11 13:02:29,510 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@742e80b6], public open fun toDouble(): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28a1fac9]]
2021-03-11 13:02:29,510 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@742e80b6]
2021-03-11 13:02:29,639 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:29,640 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28a1fac9]
2021-03-11 13:02:29,640 [main:105] - GENERATED CALL = (aShort).get(-533836896).toDouble()
2021-03-11 13:02:29,641 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@742e80b6], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1c850bdd]]
2021-03-11 13:02:29,641 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@742e80b6]
2021-03-11 13:02:29,769 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:29,770 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1c850bdd]
2021-03-11 13:02:29,898 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:29,899 [main:105] - GENERATED CALL = (aShort).get(-1236663757).plus(0.5978920652696913)
2021-03-11 13:02:29,899 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.sumOf(selector: (T) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31c519de]]
2021-03-11 13:02:29,899 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.sumOf(selector: (T) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31c519de]
2021-03-11 13:02:30,026 [main:302] - generating value of type = Function1<T, Double> false depth = 0
2021-03-11 13:02:30,028 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:02:30,029 [main:105] - GENERATED CALL = (aShort).sumOf({a: T -> 0.4148093304769219})
2021-03-11 13:02:30,030 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Byte>.average(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626dcea4]]
2021-03-11 13:02:30,030 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Byte>.average(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626dcea4]
2021-03-11 13:02:30,030 [main:105] - GENERATED CALL = (aShort).average()
2021-03-11 13:02:30,030 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@65fe430a], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@120440d0]]
2021-03-11 13:02:30,030 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@120440d0]
2021-03-11 13:02:30,159 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:30,161 [main:105] - GENERATED CALL = (aShort).size.rem(0.6747310907041951)
2021-03-11 13:02:30,161 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@742e80b6], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@466fe312]]
2021-03-11 13:02:30,161 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@742e80b6]
2021-03-11 13:02:30,304 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:30,305 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@466fe312]
2021-03-11 13:02:30,434 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:30,436 [main:105] - GENERATED CALL = (aShort).get(-1843043003).rem(0.4302777928712125)
2021-03-11 13:02:30,436 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@65fe430a], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]]
2021-03-11 13:02:30,436 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]
2021-03-11 13:02:30,567 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:30,568 [main:105] - GENERATED CALL = (aShort).size.plus(0.14160452960785463)
2021-03-11 13:02:30,569 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@65fe430a], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]]
2021-03-11 13:02:30,569 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]
2021-03-11 13:02:30,699 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:30,700 [main:105] - GENERATED CALL = (aShort).size.times(0.4896277756496614)
2021-03-11 13:02:30,700 [main:63] - replacement of aDouble[0] of type Double is (aShort).get(-1236663757).plus(0.5978920652696913)
2021-03-11 13:02:30,831 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:30,832 [main:66] - Compilation checking started
2021-03-11 13:02:31,352 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[0]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:31,363 [main:56] - replacing (0, Int)
2021-03-11 13:02:31,364 [main:38] - replacing 0 Int
2021-03-11 13:02:31,364 [main:42] - Getting value of type Int
2021-03-11 13:02:31,493 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:31,495 [main:46] - GENERATED VALUE OF TYPE Int = -1297803395
2021-03-11 13:02:31,495 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:31,498 [main:55] - randomType = Boolean
2021-03-11 13:02:31,625 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:02:31,635 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:02:31,762 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:02:31,764 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:02:31,891 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:31,893 [main:66] - Generated call from random type = (false).compareTo(true).shl(-512772460)
2021-03-11 13:02:31,893 [main:63] - replacement of 0 of type Int is (false).compareTo(true).shl(-512772460)
2021-03-11 13:02:32,020 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:32,021 [main:66] - Compilation checking started
2021-03-11 13:02:32,484 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aDouble[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:32,491 [main:56] - replacing (aDouble, Array<Double>)
2021-03-11 13:02:32,493 [main:38] - replacing aDouble Array<Double>
2021-03-11 13:02:32,493 [main:42] - Getting value of type Array<Double>
2021-03-11 13:02:32,621 [main:302] - generating value of type = Array<Double> false depth = 0
2021-03-11 13:02:32,756 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Double): Array<Double> = TODO()
2021-03-11 13:02:32,758 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Double): Array<Double> = TODO()
2021-03-11 13:02:33,174 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:02:33,176 [main:302] - generating value of type = Function1<Int, Double> false depth = 3
2021-03-11 13:02:33,177 [main:302] - generating value of type = Double true depth = 4
2021-03-11 13:02:33,179 [main:95] - GENERATED = Array<Double>(699548865, {a: Int -> 0.4390913281800637})
2021-03-11 13:02:33,179 [main:46] - GENERATED VALUE OF TYPE Array<Double> = Array<Double>(699548865, {a: Int -> 0.4390913281800637})
2021-03-11 13:02:33,179 [main:49] - GENERATED IS CALL =true
2021-03-11 13:02:33,472 [main:55] - randomType = ArrayList<Double>
2021-03-11 13:02:33,601 [main:302] - generating value of type = ArrayList<Double> false depth = 0
2021-03-11 13:02:33,734 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): ArrayList<Double> = TODO()
2021-03-11 13:02:33,736 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): ArrayList<Double> = TODO()
2021-03-11 13:02:33,902 [main:95] - GENERATED = arrayListOf<Double>()
2021-03-11 13:02:34,051 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.toTypedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67ba6388]
2021-03-11 13:02:34,051 [main:66] - Generated call from random type = (arrayListOf<Double>()).toTypedArray()
2021-03-11 13:02:34,052 [main:94] - GETTING Array<Double> from Short
2021-03-11 13:02:34,083 [main:94] - GETTING Array<Double> from Short
2021-03-11 13:02:34,084 [main:94] - GETTING Array<Double> from Array<Long>
2021-03-11 13:02:34,095 [main:63] - replacement of aDouble of type Array<Double> is aLong
2021-03-11 13:02:34,226 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:02:34,227 [main:66] - Compilation checking started
2021-03-11 13:02:34,711 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()]) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:34,719 [main:56] - replacing (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()], Boolean)
2021-03-11 13:02:34,721 [main:38] - replacing arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()] Boolean
2021-03-11 13:02:34,721 [main:42] - Getting value of type Boolean
2021-03-11 13:02:34,856 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:02:34,858 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 13:02:34,858 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:35,146 [main:55] - randomType = ArrayDeque<Short>
2021-03-11 13:02:35,279 [main:302] - generating value of type = ArrayDeque<Short> false depth = 0
2021-03-11 13:02:35,415 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(): ArrayDeque<Short> = TODO()
2021-03-11 13:02:35,417 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(): ArrayDeque<Short> = TODO()
2021-03-11 13:02:35,553 [main:95] - GENERATED = ArrayDeque<Short>()
2021-03-11 13:02:35,676 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.isNotEmpty(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65c5fae6]
2021-03-11 13:02:35,677 [main:66] - Generated call from random type = (ArrayDeque<Short>()).isNotEmpty()
2021-03-11 13:02:35,677 [main:63] - replacement of arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] != bByte[(bInt[0]).div(7754093358583089734).countOneBits()] of type Boolean is (ArrayDeque<Short>()).isNotEmpty()
2021-03-11 13:02:35,804 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:35,805 [main:66] - Compilation checking started
2021-03-11 13:02:36,326 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[0]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:36,338 [main:56] - replacing (0, Int)
2021-03-11 13:02:36,341 [main:38] - replacing 0 Int
2021-03-11 13:02:36,341 [main:42] - Getting value of type Int
2021-03-11 13:02:36,502 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:36,504 [main:46] - GENERATED VALUE OF TYPE Int = -1702358489
2021-03-11 13:02:36,504 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:36,507 [main:55] - randomType = String
2021-03-11 13:02:36,634 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:36,658 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1268a8b6]
2021-03-11 13:02:36,786 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:36,788 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:02:36,914 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:36,916 [main:66] - Generated call from random type = ("hgclp").compareTo("mpggk").compareTo(118)
2021-03-11 13:02:36,916 [main:63] - replacement of 0 of type Int is ("hgclp").compareTo("mpggk").compareTo(118)
2021-03-11 13:02:37,042 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:37,042 [main:66] - Compilation checking started
2021-03-11 13:02:37,510 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:37,518 [main:56] - replacing (aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()], Byte)
2021-03-11 13:02:37,519 [main:38] - replacing aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] Byte
2021-03-11 13:02:37,519 [main:42] - Getting value of type Byte
2021-03-11 13:02:37,646 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:37,648 [main:46] - GENERATED VALUE OF TYPE Byte = -32
2021-03-11 13:02:37,648 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:37,653 [main:55] - randomType = Float
2021-03-11 13:02:37,782 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:02:37,816 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:02:37,816 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]
2021-03-11 13:02:37,945 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:37,947 [main:66] - Generated call from random type = (0.40843165f).toByte().coerceAtLeast(9)
2021-03-11 13:02:37,948 [main:94] - GETTING Byte from Double
2021-03-11 13:02:37,984 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:02:37,984 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:37,985 [main:105] - GENERATED CALL = (bDouble[0]).toByte()
2021-03-11 13:02:37,985 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]]
2021-03-11 13:02:37,985 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:37,985 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]
2021-03-11 13:02:38,113 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:38,115 [main:105] - GENERATED CALL = (bDouble[0]).toByte().xor(-5)
2021-03-11 13:02:38,115 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]]
2021-03-11 13:02:38,115 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:38,115 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]
2021-03-11 13:02:38,242 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:38,371 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:38,372 [main:105] - GENERATED CALL = (bDouble[0]).toByte().coerceIn(88, 5)
2021-03-11 13:02:38,372 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeHighestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc8d02]]
2021-03-11 13:02:38,372 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:38,372 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeHighestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc8d02]
2021-03-11 13:02:38,373 [main:105] - GENERATED CALL = (bDouble[0]).toByte().takeHighestOneBit()
2021-03-11 13:02:38,373 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]]
2021-03-11 13:02:38,373 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:02:38,373 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:02:38,373 [main:105] - GENERATED CALL = (bDouble[0]).toFloat().toByte()
2021-03-11 13:02:38,373 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]]
2021-03-11 13:02:38,373 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:38,373 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]
2021-03-11 13:02:38,373 [main:105] - GENERATED CALL = (bDouble[0]).toByte().dec()
2021-03-11 13:02:38,373 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:02:38,373 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:02:38,500 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:38,502 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:02:38,502 [main:105] - GENERATED CALL = (bDouble[0]).compareTo(84).toByte()
2021-03-11 13:02:38,502 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:02:38,502 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:38,502 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:02:38,502 [main:105] - GENERATED CALL = (bDouble[0]).toInt().toByte()
2021-03-11 13:02:38,502 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]]
2021-03-11 13:02:38,502 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:38,502 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]
2021-03-11 13:02:38,631 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:38,632 [main:105] - GENERATED CALL = (bDouble[0]).toByte().coerceAtLeast(-58)
2021-03-11 13:02:38,632 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]]
2021-03-11 13:02:38,632 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:38,633 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]
2021-03-11 13:02:38,633 [main:105] - GENERATED CALL = (bDouble[0]).toByte().inv()
2021-03-11 13:02:38,633 [main:63] - replacement of aByte[(0.8265564060209546).compareTo(37).takeHighestOneBit()] of type Byte is (bDouble[0]).toFloat().toByte()
2021-03-11 13:02:38,761 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:38,761 [main:66] - Compilation checking started
2021-03-11 13:02:39,245 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[0] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:39,255 [main:56] - replacing (0, Int)
2021-03-11 13:02:39,257 [main:38] - replacing 0 Int
2021-03-11 13:02:39,257 [main:42] - Getting value of type Int
2021-03-11 13:02:39,385 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:39,386 [main:46] - GENERATED VALUE OF TYPE Int = -1708924608
2021-03-11 13:02:39,386 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:39,391 [main:55] - randomType = UInt
2021-03-11 13:02:39,518 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:02:39,551 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toInt(): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@16680970]
2021-03-11 13:02:39,551 [main:66] - Generated call from random type = (1950736272.toUInt()).toInt()
2021-03-11 13:02:39,552 [main:94] - GETTING Int from ShortArray
2021-03-11 13:02:39,560 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]]
2021-03-11 13:02:39,560 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:02:39,687 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:39,689 [main:105] - GENERATED CALL = (bShort).size.shl(-1833155443)
2021-03-11 13:02:39,689 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]]
2021-03-11 13:02:39,689 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:02:39,816 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:39,818 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]
2021-03-11 13:02:39,818 [main:105] - GENERATED CALL = (bShort).get(1878406).countOneBits()
2021-03-11 13:02:39,818 [main:101] - Case = [public val kotlin.ShortArray.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@495d04a7]]
2021-03-11 13:02:39,818 [main:105] - GENERATED CALL = (bShort).lastIndex
2021-03-11 13:02:39,818 [main:101] - Case = [public fun kotlin.ShortArray.indexOf(element: kotlin.Short): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5e452f6e]]
2021-03-11 13:02:39,818 [main:137] - GENERATING call of type public fun kotlin.ShortArray.indexOf(element: kotlin.Short): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5e452f6e]
2021-03-11 13:02:39,946 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:39,947 [main:105] - GENERATED CALL = (bShort).indexOf(-27339)
2021-03-11 13:02:39,948 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:02:39,948 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:02:40,075 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:40,204 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:40,206 [main:105] - GENERATED CALL = (bShort).size.coerceIn(1251553433, 1644666683)
2021-03-11 13:02:40,206 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:02:40,206 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:02:40,206 [main:105] - GENERATED CALL = (bShort).size.inc()
2021-03-11 13:02:40,206 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d4ebc37]]
2021-03-11 13:02:40,206 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:02:40,335 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:40,336 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d4ebc37]
2021-03-11 13:02:40,336 [main:105] - GENERATED CALL = (bShort).get(-1903921230).toInt()
2021-03-11 13:02:40,336 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:02:40,336 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:02:40,337 [main:105] - GENERATED CALL = (bShort).size.countTrailingZeroBits()
2021-03-11 13:02:40,337 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:02:40,337 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:02:40,337 [main:105] - GENERATED CALL = (bShort).size.unaryMinus()
2021-03-11 13:02:40,337 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6abc37f4]]
2021-03-11 13:02:40,337 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6abc37f4]
2021-03-11 13:02:40,337 [main:105] - GENERATED CALL = (bShort).count()
2021-03-11 13:02:40,337 [main:63] - replacement of 0 of type Int is -1708924608
2021-03-11 13:02:40,465 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 13:02:40,466 [main:66] - Compilation checking started
2021-03-11 13:02:40,929 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:40,937 [main:56] - replacing (0, Int)
2021-03-11 13:02:40,938 [main:38] - replacing 0 Int
2021-03-11 13:02:40,938 [main:42] - Getting value of type Int
2021-03-11 13:02:41,067 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:41,069 [main:46] - GENERATED VALUE OF TYPE Int = -1068063011
2021-03-11 13:02:41,069 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:41,075 [main:55] - randomType = LinkedHashSet<Int>
2021-03-11 13:02:41,203 [main:302] - generating value of type = LinkedHashSet<Int> false depth = 0
2021-03-11 13:02:41,341 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Int): LkedHashSet<Int> = TODO()
2021-03-11 13:02:41,344 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Int): LkedHashSet<Int> = TODO()
2021-03-11 13:02:41,484 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:02:41,485 [main:95] - GENERATED = linkedSetOf<Int>(-317369273)
2021-03-11 13:02:41,654 [main:137] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.Iterable<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6401b8a4]
2021-03-11 13:02:41,782 [main:302] - generating value of type = T false depth = 0
2021-03-11 13:02:41,916 [main:43] - GENERATING CALL OF fun <T> minOf(a: Comparable<T>, b: Comparable<T>): T = TODO()
2021-03-11 13:02:41,918 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Comparable<T>, b: Comparable<T>): T = TODO()
2021-03-11 13:02:42,051 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-11 13:02:42,057 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-11 13:02:42,062 [main:95] - GENERATED = minOf<Comparable<T>>(114, -1061221553)
2021-03-11 13:02:42,062 [main:66] - Generated call from random type = (linkedSetOf<Int>(-317369273)).indexOf(minOf<Comparable<T>>(114, -1061221553))
2021-03-11 13:02:42,062 [main:63] - replacement of 0 of type Int is (linkedSetOf<Int>(-317369273)).indexOf(minOf<Comparable<T>>(114, -1061221553))
2021-03-11 13:02:42,200 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:42,200 [main:66] - Compilation checking started
2021-03-11 13:02:42,635 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[(linkedSetOf<Int>(-317369273)).indexOf(minOf<Comparable<T>>(114, -1061221553))]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[0]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:42,643 [main:56] - replacing (0, Int)
2021-03-11 13:02:42,644 [main:38] - replacing 0 Int
2021-03-11 13:02:42,644 [main:42] - Getting value of type Int
2021-03-11 13:02:42,781 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:42,783 [main:46] - GENERATED VALUE OF TYPE Int = 658291514
2021-03-11 13:02:42,783 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:42,787 [main:55] - randomType = Boolean
2021-03-11 13:02:42,921 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:02:42,934 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:02:43,067 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:02:43,069 [main:66] - Generated call from random type = (true).compareTo(false).sign
2021-03-11 13:02:43,070 [main:94] - GETTING Int from Float
2021-03-11 13:02:43,106 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:02:43,106 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:02:43,106 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:02:43,106 [main:105] - GENERATED CALL = (aFloat[0]--).toFloat().toRawBits()
2021-03-11 13:02:43,106 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:02:43,106 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:02:43,241 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:43,242 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:02:43,378 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:43,380 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(21).compareTo(-22)
2021-03-11 13:02:43,380 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]]
2021-03-11 13:02:43,380 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943]
2021-03-11 13:02:43,381 [main:137] - GENERATING call of type @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]
2021-03-11 13:02:43,381 [main:105] - GENERATED CALL = (aFloat[0]--).toChar().digitToInt()
2021-03-11 13:02:43,381 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 13:02:43,381 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:02:43,381 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 13:02:43,514 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:43,516 [main:105] - GENERATED CALL = (aFloat[0]--).toShort().times(-88)
2021-03-11 13:02:43,516 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:02:43,516 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:43,516 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:02:43,645 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:43,646 [main:105] - GENERATED CALL = (aFloat[0]--).toInt().rotateLeft(1859851415)
2021-03-11 13:02:43,647 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:02:43,647 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:02:43,776 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:43,777 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:02:43,905 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:43,907 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(-24).or(1568308511)
2021-03-11 13:02:43,907 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:02:43,907 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:02:44,035 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:44,037 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:02:44,188 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:44,190 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(34).rotateLeft(-617618846)
2021-03-11 13:02:44,190 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]]
2021-03-11 13:02:44,190 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:44,190 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 13:02:44,317 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:44,319 [main:105] - GENERATED CALL = (aFloat[0]--).toInt().and(1168259953)
2021-03-11 13:02:44,319 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 13:02:44,319 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:44,319 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:02:44,448 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:44,449 [main:105] - GENERATED CALL = (aFloat[0]--).toInt().minus(-7)
2021-03-11 13:02:44,449 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:02:44,449 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:02:44,577 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:44,578 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(-48).sign
2021-03-11 13:02:44,578 [main:63] - replacement of 0 of type Int is (aFloat[0]--).toShort().times(-88)
2021-03-11 13:02:44,705 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:44,705 [main:66] - Compilation checking started
2021-03-11 13:02:45,173 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = shortArrayOf(1)
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:45,181 [main:56] - replacing (shortArrayOf(1), ShortArray)
2021-03-11 13:02:45,183 [main:38] - replacing shortArrayOf(1) ShortArray
2021-03-11 13:02:45,183 [main:42] - Getting value of type ShortArray
2021-03-11 13:02:45,311 [main:302] - generating value of type = ShortArray false depth = 0
2021-03-11 13:02:45,443 [main:43] - GENERATING CALL OF fun ShortArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Short): ShortArray = TODO()
2021-03-11 13:02:45,446 [main:61] - WITHOUT TYPE PARAMS = fun ShortArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Short): ShortArray = TODO()
2021-03-11 13:02:45,859 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:02:45,861 [main:302] - generating value of type = Function1<Int, Short> false depth = 3
2021-03-11 13:02:45,862 [main:302] - generating value of type = Short true depth = 4
2021-03-11 13:02:45,864 [main:95] - GENERATED = ShortArray(-1495482079, {a: Int -> 23620})
2021-03-11 13:02:45,864 [main:46] - GENERATED VALUE OF TYPE ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
2021-03-11 13:02:45,864 [main:49] - GENERATED IS CALL =true
2021-03-11 13:02:45,868 [main:55] - randomType = Short
2021-03-11 13:02:45,996 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:46,029 [main:94] - GETTING ShortArray from Int
2021-03-11 13:02:46,061 [main:94] - GETTING ShortArray from Float
2021-03-11 13:02:46,096 [main:94] - GETTING ShortArray from Int
2021-03-11 13:02:46,097 [main:94] - GETTING ShortArray from ByteArray
2021-03-11 13:02:46,106 [main:94] - GETTING ShortArray from Byte
2021-03-11 13:02:46,137 [main:94] - GETTING ShortArray from Double
2021-03-11 13:02:46,166 [main:94] - GETTING ShortArray from Long
2021-03-11 13:02:46,196 [main:94] - GETTING ShortArray from Float
2021-03-11 13:02:46,197 [main:94] - GETTING ShortArray from Long
2021-03-11 13:02:46,197 [main:94] - GETTING ShortArray from Byte
2021-03-11 13:02:46,198 [main:94] - GETTING ShortArray from Short
2021-03-11 13:02:46,229 [main:94] - GETTING ShortArray from Short
2021-03-11 13:02:46,230 [main:94] - GETTING ShortArray from Array<Float>
2021-03-11 13:02:46,241 [main:101] - Case = [public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]]
2021-03-11 13:02:46,241 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]
2021-03-11 13:02:46,241 [main:105] - GENERATED CALL = (aFloat).toShortArray()
2021-03-11 13:02:46,241 [main:63] - replacement of shortArrayOf(1) of type ShortArray is ShortArray(-1495482079, {a: Int -> 23620})
2021-03-11 13:02:46,369 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:02:46,369 [main:66] - Compilation checking started
2021-03-11 13:02:46,869 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}"

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:46,878 [main:56] - replacing ("Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}", String)
2021-03-11 13:02:46,879 [main:38] - replacing "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}" String
2021-03-11 13:02:46,879 [main:42] - Getting value of type String
2021-03-11 13:02:47,017 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:47,019 [main:46] - GENERATED VALUE OF TYPE String = "shgpg"
2021-03-11 13:02:47,019 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:47,022 [main:55] - randomType = Char
2021-03-11 13:02:47,152 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:02:47,171 [main:137] - GENERATING call of type public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@666a61a7]
2021-03-11 13:02:47,171 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:02:47,300 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:47,301 [main:66] - Generated call from random type = ('棡').toLong().toString(1014294261)
2021-03-11 13:02:47,301 [main:63] - replacement of "Failed post-increment Long: ${(aShort[0]).div(0.32920554659202783).toBits()} != ${bLong[(aLong[0]--).toInt().rotateLeft(1412557713)]}" of type String is ('棡').toLong().toString(1014294261)
2021-03-11 13:02:47,430 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:47,431 [main:66] - Compilation checking started
2021-03-11 13:02:47,899 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:47,907 [main:56] - replacing ((bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0], Short)
2021-03-11 13:02:47,908 [main:38] - replacing (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0] Short
2021-03-11 13:02:47,908 [main:42] - Getting value of type Short
2021-03-11 13:02:48,041 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:48,042 [main:46] - GENERATED VALUE OF TYPE Short = 11655
2021-03-11 13:02:48,042 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:48,183 [main:55] - randomType = Int?
2021-03-11 13:02:48,315 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:48,351 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:02:48,351 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]
2021-03-11 13:02:48,478 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:48,480 [main:66] - Generated call from random type = (277539021)?.toShort().and(26028)
2021-03-11 13:02:48,480 [main:63] - replacement of (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0] of type Short is (277539021)?.toShort().and(26028)
2021-03-11 13:02:48,615 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:48,616 [main:66] - Compilation checking started
2021-03-11 13:02:48,978 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>(1)
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (277539021)?.toShort().and(26028)) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:48,986 [main:56] - replacing (1, Byte)
2021-03-11 13:02:48,988 [main:38] - replacing 1 Byte
2021-03-11 13:02:48,988 [main:42] - Getting value of type Byte
2021-03-11 13:02:49,118 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:49,120 [main:46] - GENERATED VALUE OF TYPE Byte = 87
2021-03-11 13:02:49,120 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:49,123 [main:55] - randomType = UInt
2021-03-11 13:02:49,278 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:02:49,311 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@1abea95a]
2021-03-11 13:02:49,312 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateLeft(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@5b08d322]
2021-03-11 13:02:49,457 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:49,459 [main:66] - Generated call from random type = (522247362.toUInt()).toByte().rotateLeft(-480680817)
2021-03-11 13:02:49,460 [main:94] - GETTING Byte from Short
2021-03-11 13:02:49,495 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:02:49,495 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:49,495 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:02:49,495 [main:105] - GENERATED CALL = (aShort[0]--).toInt().toByte()
2021-03-11 13:02:49,495 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]]
2021-03-11 13:02:49,495 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:02:49,495 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]
2021-03-11 13:02:49,623 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:49,624 [main:105] - GENERATED CALL = (aShort[0]--).toByte().coerceAtLeast(-31)
2021-03-11 13:02:49,624 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]]
2021-03-11 13:02:49,624 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:02:49,625 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]
2021-03-11 13:02:49,625 [main:105] - GENERATED CALL = (aShort[0]--).toByte().dec()
2021-03-11 13:02:49,625 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]]
2021-03-11 13:02:49,625 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:02:49,625 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:02:49,625 [main:105] - GENERATED CALL = (aShort[0]--).toShort().toByte()
2021-03-11 13:02:49,625 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:02:49,625 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:02:49,753 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:49,755 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:49,755 [main:105] - GENERATED CALL = (aShort[0]--).div(0.8982874084506164).toByte()
2021-03-11 13:02:49,755 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]]
2021-03-11 13:02:49,755 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:02:49,755 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]
2021-03-11 13:02:49,883 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:49,885 [main:105] - GENERATED CALL = (aShort[0]--).toByte().xor(12)
2021-03-11 13:02:49,885 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]]
2021-03-11 13:02:49,885 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:02:49,885 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]
2021-03-11 13:02:50,013 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:50,143 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:50,145 [main:105] - GENERATED CALL = (aShort[0]--).toByte().coerceIn(-17, -17)
2021-03-11 13:02:50,145 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]]
2021-03-11 13:02:50,145 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:02:50,145 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]
2021-03-11 13:02:50,274 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:50,275 [main:105] - GENERATED CALL = (aShort[0]--).toByte().or(41)
2021-03-11 13:02:50,275 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateRight(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@60497689]]
2021-03-11 13:02:50,275 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:02:50,275 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateRight(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@60497689]
2021-03-11 13:02:50,405 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:50,406 [main:105] - GENERATED CALL = (aShort[0]--).toByte().rotateRight(2050623236)
2021-03-11 13:02:50,406 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]]
2021-03-11 13:02:50,406 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:02:50,407 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:02:50,407 [main:105] - GENERATED CALL = (aShort[0]--).toFloat().toByte()
2021-03-11 13:02:50,407 [main:63] - replacement of 1 of type Byte is (522247362.toUInt()).toByte().rotateLeft(-480680817)
2021-03-11 13:02:50,536 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:50,536 [main:66] - Compilation checking started
2021-03-11 13:02:51,025 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}"

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:51,033 [main:56] - replacing ("Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}", String)
2021-03-11 13:02:51,034 [main:38] - replacing "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}" String
2021-03-11 13:02:51,035 [main:42] - Getting value of type String
2021-03-11 13:02:51,163 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:51,165 [main:46] - GENERATED VALUE OF TYPE String = "ugaxa"
2021-03-11 13:02:51,165 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:51,169 [main:55] - randomType = Char
2021-03-11 13:02:51,298 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:02:51,319 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]
2021-03-11 13:02:51,319 [main:66] - Generated call from random type = ('婘').uppercase()
2021-03-11 13:02:51,320 [main:94] - GETTING String from Double
2021-03-11 13:02:51,348 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]]
2021-03-11 13:02:51,349 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:02:51,349 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]
2021-03-11 13:02:51,349 [main:105] - GENERATED CALL = (bDouble[0]).toChar().lowercase()
2021-03-11 13:02:51,349 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]]
2021-03-11 13:02:51,349 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:02:51,349 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]
2021-03-11 13:02:51,482 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:02:51,483 [main:105] - GENERATED CALL = (bDouble[0]).toChar().plus("vsqyp")
2021-03-11 13:02:51,483 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]]
2021-03-11 13:02:51,483 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:02:51,484 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]
2021-03-11 13:02:51,484 [main:105] - GENERATED CALL = (bDouble[0]).toChar().uppercase()
2021-03-11 13:02:51,484 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:02:51,484 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:02:51,484 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:02:51,622 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:51,624 [main:105] - GENERATED CALL = (bDouble[0]).toLong().toString(-1404390241)
2021-03-11 13:02:51,624 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]]
2021-03-11 13:02:51,624 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:51,624 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:02:51,753 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:51,755 [main:105] - GENERATED CALL = (bDouble[0]).toByte().toString(-559726058)
2021-03-11 13:02:51,755 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]]
2021-03-11 13:02:51,755 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:02:51,755 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]
2021-03-11 13:02:51,906 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:51,908 [main:105] - GENERATED CALL = (bDouble[0]).toShort().toString(839597553)
2021-03-11 13:02:51,908 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:02:51,908 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:02:52,039 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:52,041 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:02:52,169 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:52,170 [main:105] - GENERATED CALL = (bDouble[0]).compareTo(8).toString(-1852348770)
2021-03-11 13:02:52,170 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]]
2021-03-11 13:02:52,170 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:02:52,171 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]
2021-03-11 13:02:52,171 [main:105] - GENERATED CALL = (bDouble[0]).toChar().titlecase()
2021-03-11 13:02:52,171 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:02:52,171 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:52,171 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:02:52,299 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:52,300 [main:105] - GENERATED CALL = (bDouble[0]).toInt().toString(122059552)
2021-03-11 13:02:52,300 [main:63] - replacement of "Failed post-decrement Int: ${aInt[0]++} != ${bInt[0]}" of type String is (bDouble[0]).toChar().plus("vsqyp")
2021-03-11 13:02:52,427 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:52,427 [main:66] - Compilation checking started
2021-03-11 13:02:52,915 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    bShort[0]++
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:52,923 [main:56] - replacing (bShort[0]++, Short)
2021-03-11 13:02:52,924 [main:38] - replacing bShort[0]++ Short
2021-03-11 13:02:52,924 [main:42] - Getting value of type Short
2021-03-11 13:02:53,057 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:53,059 [main:46] - GENERATED VALUE OF TYPE Short = 30092
2021-03-11 13:02:53,059 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:53,062 [main:55] - randomType = Long
2021-03-11 13:02:53,207 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:02:53,238 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:02:53,239 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]
2021-03-11 13:02:53,369 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:53,371 [main:66] - Generated call from random type = (-8200938406427831749).toShort().rotateLeft(1334926967)
2021-03-11 13:02:53,372 [main:94] - GETTING Short from Byte
2021-03-11 13:02:53,404 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]]
2021-03-11 13:02:53,404 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:02:53,404 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]
2021-03-11 13:02:53,404 [main:105] - GENERATED CALL = (bByte[0]++).toShort().takeHighestOneBit()
2021-03-11 13:02:53,404 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]]
2021-03-11 13:02:53,404 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:02:53,404 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]
2021-03-11 13:02:53,404 [main:105] - GENERATED CALL = (bByte[0]++).toShort().toShort()
2021-03-11 13:02:53,404 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:02:53,404 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:02:53,404 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:02:53,404 [main:105] - GENERATED CALL = (bByte[0]++).toDouble().toShort()
2021-03-11 13:02:53,405 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public final operator fun inc(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@37ca9861]]
2021-03-11 13:02:53,405 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:02:53,405 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@37ca9861]
2021-03-11 13:02:53,405 [main:105] - GENERATED CALL = (bByte[0]++).toShort().inc()
2021-03-11 13:02:53,405 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.or(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@6f857cd8]]
2021-03-11 13:02:53,405 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:02:53,405 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.or(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@6f857cd8]
2021-03-11 13:02:53,536 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:53,538 [main:105] - GENERATED CALL = (bByte[0]++).toShort().or(-4633)
2021-03-11 13:02:53,538 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:02:53,538 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:02:53,538 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:02:53,538 [main:105] - GENERATED CALL = (bByte[0]++).toFloat().toShort()
2021-03-11 13:02:53,538 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]]
2021-03-11 13:02:53,538 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:02:53,538 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]
2021-03-11 13:02:53,538 [main:105] - GENERATED CALL = (bByte[0]++).toShort().inv()
2021-03-11 13:02:53,538 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]]
2021-03-11 13:02:53,538 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:02:53,538 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]
2021-03-11 13:02:53,669 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:53,671 [main:105] - GENERATED CALL = (bByte[0]++).toShort().rotateRight(-1499925287)
2021-03-11 13:02:53,671 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public fun kotlin.Short.coerceAtMost(maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@74aec5e7]]
2021-03-11 13:02:53,671 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:02:53,671 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtMost(maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@74aec5e7]
2021-03-11 13:02:53,801 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:02:53,803 [main:105] - GENERATED CALL = (bByte[0]++).toShort().coerceAtMost(-3548)
2021-03-11 13:02:53,803 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]]
2021-03-11 13:02:53,803 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:02:53,803 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:02:53,803 [main:105] - GENERATED CALL = (bByte[0]++).toLong().toShort()
2021-03-11 13:02:53,803 [main:63] - replacement of bShort[0]++ of type Short is (-8200938406427831749).toShort().rotateLeft(1334926967)
2021-03-11 13:02:53,933 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:53,933 [main:66] - Compilation checking started
2021-03-11 13:02:54,405 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:54,413 [main:56] - replacing (bDouble[(0.51171917f)?.toShort().minus(103)], Double)
2021-03-11 13:02:54,414 [main:38] - replacing bDouble[(0.51171917f)?.toShort().minus(103)] Double
2021-03-11 13:02:54,414 [main:42] - Getting value of type Double
2021-03-11 13:02:54,571 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:54,572 [main:46] - GENERATED VALUE OF TYPE Double = 0.8249141483578079
2021-03-11 13:02:54,573 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:54,576 [main:55] - randomType = Int
2021-03-11 13:02:54,715 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:54,747 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:02:54,748 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5fd21683]
2021-03-11 13:02:54,880 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:54,881 [main:66] - Generated call from random type = (-312834213).toDouble().plus(-46)
2021-03-11 13:02:54,882 [main:94] - GETTING Double from Double
2021-03-11 13:02:54,911 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@78436e2a]]
2021-03-11 13:02:54,912 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:02:54,912 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@78436e2a]
2021-03-11 13:02:55,043 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:55,044 [main:105] - GENERATED CALL = (aDouble[0]++).toLong().minus(0.9752907604676171)
2021-03-11 13:02:55,044 [main:101] - Case = [public fun kotlin.Double.coerceAtMost(maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ff45f6f]]
2021-03-11 13:02:55,044 [main:137] - GENERATING call of type public fun kotlin.Double.coerceAtMost(maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ff45f6f]
2021-03-11 13:02:55,175 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:55,177 [main:105] - GENERATED CALL = (aDouble[0]++).coerceAtMost(0.20471007721043377)
2021-03-11 13:02:55,177 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@46f80df6]]
2021-03-11 13:02:55,177 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:55,177 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@46f80df6]
2021-03-11 13:02:55,308 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:55,309 [main:105] - GENERATED CALL = (aDouble[0]++).toByte().times(0.35412430290919616)
2021-03-11 13:02:55,309 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.nextTowards(to: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@12b88c94]]
2021-03-11 13:02:55,309 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:02:55,309 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextTowards(to: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@12b88c94]
2021-03-11 13:02:55,440 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:55,442 [main:105] - GENERATED CALL = (aDouble[0]++).toDouble().nextTowards(0.4022263005251314)
2021-03-11 13:02:55,442 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]]
2021-03-11 13:02:55,442 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:02:55,442 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]
2021-03-11 13:02:55,442 [main:105] - GENERATED CALL = (aDouble[0]++).toInt().toDouble()
2021-03-11 13:02:55,442 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun inc(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@58e28efd]]
2021-03-11 13:02:55,442 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:02:55,442 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@58e28efd]
2021-03-11 13:02:55,442 [main:105] - GENERATED CALL = (aDouble[0]++).toDouble().inc()
2021-03-11 13:02:55,442 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]]
2021-03-11 13:02:55,442 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:02:55,573 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:55,575 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]
2021-03-11 13:02:55,575 [main:105] - GENERATED CALL = (aDouble[0]++).compareTo(112).toDouble()
2021-03-11 13:02:55,575 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1c850bdd]]
2021-03-11 13:02:55,575 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:02:55,575 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1c850bdd]
2021-03-11 13:02:55,706 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:55,707 [main:105] - GENERATED CALL = (aDouble[0]++).toShort().plus(0.751013736012989)
2021-03-11 13:02:55,708 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun unaryMinus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@56f78035]]
2021-03-11 13:02:55,708 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:02:55,708 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@56f78035]
2021-03-11 13:02:55,708 [main:105] - GENERATED CALL = (aDouble[0]++).toDouble().unaryMinus()
2021-03-11 13:02:55,708 [main:101] - Case = [public final operator fun div(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@30770b75]]
2021-03-11 13:02:55,708 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@30770b75]
2021-03-11 13:02:55,839 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:55,841 [main:105] - GENERATED CALL = (aDouble[0]++).div(52)
2021-03-11 13:02:55,841 [main:63] - replacement of bDouble[(0.51171917f)?.toShort().minus(103)] of type Double is (aDouble[0]++).toShort().plus(0.751013736012989)
2021-03-11 13:02:55,972 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:55,972 [main:66] - Compilation checking started
2021-03-11 13:02:56,345 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (aDouble[0]++).toShort().plus(0.751013736012989)--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:56,353 [main:56] - replacing (bByte[0], Byte)
2021-03-11 13:02:56,355 [main:38] - replacing bByte[0] Byte
2021-03-11 13:02:56,355 [main:42] - Getting value of type Byte
2021-03-11 13:02:56,488 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:56,489 [main:46] - GENERATED VALUE OF TYPE Byte = 119
2021-03-11 13:02:56,489 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:56,634 [main:55] - randomType = UInt?
2021-03-11 13:02:56,765 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:02:56,794 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@77ac0d7f]
2021-03-11 13:02:56,794 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]
2021-03-11 13:02:56,926 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:02:56,928 [main:66] - Generated call from random type = (1031051897.toUInt())?.toByte().and(-36)
2021-03-11 13:02:56,928 [main:94] - GETTING Byte from FloatArray
2021-03-11 13:02:56,937 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:02:56,937 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:02:56,937 [main:105] - GENERATED CALL = (bFloat).size.toByte()
2021-03-11 13:02:56,937 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]]
2021-03-11 13:02:56,937 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 13:02:57,092 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:57,094 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:02:57,094 [main:105] - GENERATED CALL = (bFloat).get(899865218).toByte()
2021-03-11 13:02:57,094 [main:63] - replacement of bByte[0] of type Byte is (1031051897.toUInt())?.toByte().and(-36)
2021-03-11 13:02:57,225 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:57,225 [main:66] - Compilation checking started
2021-03-11 13:02:57,627 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    (1031051897.toUInt())?.toByte().and(-36)--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:02:57,635 [main:56] - replacing (bInt[0], Int)
2021-03-11 13:02:57,635 [main:38] - replacing bInt[0] Int
2021-03-11 13:02:57,635 [main:42] - Getting value of type Int
2021-03-11 13:02:57,767 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:02:57,768 [main:46] - GENERATED VALUE OF TYPE Int = -1618665521
2021-03-11 13:02:57,768 [main:49] - GENERATED IS CALL =false
2021-03-11 13:02:57,771 [main:55] - randomType = Double
2021-03-11 13:02:57,902 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:02:57,932 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:02:57,932 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@57941f83]
2021-03-11 13:02:57,932 [main:66] - Generated call from random type = (0.5544708229891365).toByte().countOneBits()
2021-03-11 13:02:57,932 [main:63] - replacement of bInt[0] of type Int is (0.5544708229891365).toByte().countOneBits()
2021-03-11 13:02:58,062 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:02:58,070 [main:56] - replacing (aShort, Array<Short>)
2021-03-11 13:02:58,072 [main:38] - replacing aShort Array<Short>
2021-03-11 13:02:58,072 [main:42] - Getting value of type Array<Short>
2021-03-11 13:02:58,203 [main:302] - generating value of type = Array<Short> false depth = 0
2021-03-11 13:02:58,339 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Short): Array<Short> = TODO()
2021-03-11 13:02:58,342 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Short): Array<Short> = TODO()
2021-03-11 13:02:58,764 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:02:58,766 [main:302] - generating value of type = Function1<Int, Short> false depth = 3
2021-03-11 13:02:58,767 [main:302] - generating value of type = Short true depth = 4
2021-03-11 13:02:58,769 [main:95] - GENERATED = Array<Short>(-27765750, {a: Int -> 1132})
2021-03-11 13:02:58,769 [main:46] - GENERATED VALUE OF TYPE Array<Short> = Array<Short>(-27765750, {a: Int -> 1132})
2021-03-11 13:02:58,769 [main:49] - GENERATED IS CALL =true
2021-03-11 13:02:59,529 [main:55] - randomType = Function1<List<Function2<Function2<Char, Boolean, Float>, Byte, UByte>>, Long>
2021-03-11 13:02:59,530 [main:94] - GETTING Array<Short> from Int
2021-03-11 13:02:59,562 [main:94] - GETTING Array<Short> from Long
2021-03-11 13:02:59,593 [main:94] - GETTING Array<Short> from Array<Long>
2021-03-11 13:02:59,603 [main:63] - replacement of aShort of type Array<Short> is aLong
2021-03-11 13:02:59,757 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:02:59,757 [main:66] - Compilation checking started
2021-03-11 13:03:00,131 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aLong[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[0]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:00,139 [main:56] - replacing (aByte, Array<Byte>)
2021-03-11 13:03:00,140 [main:38] - replacing aByte Array<Byte>
2021-03-11 13:03:00,140 [main:42] - Getting value of type Array<Byte>
2021-03-11 13:03:00,271 [main:302] - generating value of type = Array<Byte> false depth = 0
2021-03-11 13:03:00,406 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Byte): Array<Byte> = TODO()
2021-03-11 13:03:00,409 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Byte): Array<Byte> = TODO()
2021-03-11 13:03:00,544 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 13:03:00,546 [main:95] - GENERATED = arrayOf<Byte>(69)
2021-03-11 13:03:00,546 [main:46] - GENERATED VALUE OF TYPE Array<Byte> = arrayOf<Byte>(69)
2021-03-11 13:03:00,546 [main:49] - GENERATED IS CALL =true
2021-03-11 13:03:00,839 [main:55] - randomType = HashSet<Int>
2021-03-11 13:03:00,970 [main:302] - generating value of type = HashSet<Int> false depth = 0
2021-03-11 13:03:01,106 [main:43] - GENERATING CALL OF fun <T> hashSetOf(): HashSet<Int> = TODO()
2021-03-11 13:03:01,109 [main:61] - WITHOUT TYPE PARAMS = fun <T> hashSetOf(): HashSet<Int> = TODO()
2021-03-11 13:03:01,244 [main:95] - GENERATED = hashSetOf<Int>()
2021-03-11 13:03:01,345 [main:94] - GETTING Array<Byte> from Double
2021-03-11 13:03:01,375 [main:94] - GETTING Array<Byte> from Byte
2021-03-11 13:03:01,406 [main:94] - GETTING Array<Byte> from Long
2021-03-11 13:03:01,437 [main:94] - GETTING Array<Byte> from Float
2021-03-11 13:03:01,465 [main:94] - GETTING Array<Byte> from Array<Byte>
2021-03-11 13:03:01,475 [main:101] - Case = [public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]]
2021-03-11 13:03:01,475 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]
2021-03-11 13:03:01,607 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:03:01,744 [main:43] - GENERATING CALL OF fun <T> mutableSetOf(elements: Int): Collection<Int> = TODO()
2021-03-11 13:03:01,746 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableSetOf(elements: Int): Collection<Int> = TODO()
2021-03-11 13:03:01,881 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:03:01,883 [main:95] - GENERATED = mutableSetOf<Int>(-239587388)
2021-03-11 13:03:01,883 [main:105] - GENERATED CALL = (aByte).sliceArray(mutableSetOf<Int>(-239587388))
2021-03-11 13:03:01,883 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]]
2021-03-11 13:03:01,883 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]
2021-03-11 13:03:01,884 [main:105] - GENERATED CALL = (aByte).sortedArray()
2021-03-11 13:03:01,884 [main:101] - Case = [public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]]
2021-03-11 13:03:01,884 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]
2021-03-11 13:03:01,884 [main:105] - GENERATED CALL = (aByte).reversedArray()
2021-03-11 13:03:01,884 [main:101] - Case = [public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]]
2021-03-11 13:03:01,884 [main:137] - GENERATING call of type public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]
2021-03-11 13:03:01,884 [main:105] - GENERATED CALL = (aByte).requireNoNulls()
2021-03-11 13:03:01,884 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]]
2021-03-11 13:03:01,884 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]
2021-03-11 13:03:01,884 [main:105] - GENERATED CALL = (aByte).sortedArrayDescending()
2021-03-11 13:03:01,884 [main:63] - replacement of aByte of type Array<Byte> is aByte
2021-03-11 13:03:02,015 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:03:02,024 [main:56] - replacing (0, Int)
2021-03-11 13:03:02,025 [main:38] - replacing 0 Int
2021-03-11 13:03:02,025 [main:42] - Getting value of type Int
2021-03-11 13:03:02,180 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:02,181 [main:46] - GENERATED VALUE OF TYPE Int = -1598253545
2021-03-11 13:03:02,181 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:02,184 [main:55] - randomType = Double
2021-03-11 13:03:02,316 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:02,348 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:02,348 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]
2021-03-11 13:03:02,348 [main:66] - Generated call from random type = (0.8369852669301577).toShort().countLeadingZeroBits()
2021-03-11 13:03:02,348 [main:94] - GETTING Int from Int
2021-03-11 13:03:02,380 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]]
2021-03-11 13:03:02,380 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:03:02,380 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]
2021-03-11 13:03:02,510 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:02,512 [main:105] - GENERATED CALL = (aInt[0]).toShort().plus(66)
2021-03-11 13:03:02,512 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@674e1c07]]
2021-03-11 13:03:02,512 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:03:02,512 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@674e1c07]
2021-03-11 13:03:02,642 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:02,643 [main:105] - GENERATED CALL = (aInt[0]).toByte().minus(41)
2021-03-11 13:03:02,644 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]]
2021-03-11 13:03:02,644 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:03:02,644 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]
2021-03-11 13:03:02,773 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:02,775 [main:105] - GENERATED CALL = (aInt[0]).toByte().rem(-85)
2021-03-11 13:03:02,775 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:03:02,775 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:02,775 [main:105] - GENERATED CALL = (aInt[0]).toInt().sign
2021-03-11 13:03:02,775 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:03:02,775 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:03:02,905 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:02,906 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:03:03,036 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:03,168 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:03,169 [main:105] - GENERATED CALL = (aInt[0]).compareTo(-1577188957).coerceIn(-1562600929, 1932264114)
2021-03-11 13:03:03,169 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:03:03,169 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:03:03,299 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:03,301 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:03:03,431 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:03,433 [main:105] - GENERATED CALL = (aInt[0]).compareTo(1536623892).rotateRight(1283159124)
2021-03-11 13:03:03,433 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]]
2021-03-11 13:03:03,433 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:03,433 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]
2021-03-11 13:03:03,433 [main:105] - GENERATED CALL = (aInt[0]).toLong().toInt()
2021-03-11 13:03:03,433 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]]
2021-03-11 13:03:03,433 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:03,433 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:03:03,563 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:03,565 [main:105] - GENERATED CALL = (aInt[0]).toInt().shl(2121031642)
2021-03-11 13:03:03,565 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]]
2021-03-11 13:03:03,565 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:03:03,565 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]
2021-03-11 13:03:03,565 [main:105] - GENERATED CALL = (aInt[0]).toShort().countLeadingZeroBits()
2021-03-11 13:03:03,566 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:03:03,566 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:03:03,695 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:03,697 [main:105] - GENERATED CALL = (aInt[0]).rotateLeft(261033572)
2021-03-11 13:03:03,697 [main:63] - replacement of 0 of type Int is (0.8369852669301577).toShort().countLeadingZeroBits()
2021-03-11 13:03:03,829 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:03,830 [main:66] - Compilation checking started
2021-03-11 13:03:04,465 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}"
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:04,473 [main:56] - replacing ("Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}", String)
2021-03-11 13:03:04,475 [main:38] - replacing "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}" String
2021-03-11 13:03:04,475 [main:42] - Getting value of type String
2021-03-11 13:03:04,606 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:03:04,608 [main:46] - GENERATED VALUE OF TYPE String = "mywbu"
2021-03-11 13:03:04,608 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:04,924 [main:55] - randomType = HashMap<UInt, UByte>
2021-03-11 13:03:05,056 [main:302] - generating value of type = HashMap<UInt, UByte> false depth = 0
2021-03-11 13:03:05,192 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): HashMap<UInt, UByte> = TODO()
2021-03-11 13:03:05,194 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): HashMap<UInt, UByte> = TODO()
2021-03-11 13:03:05,339 [main:95] - GENERATED = linkedMapOf<UInt, UByte>()
2021-03-11 13:03:05,432 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:03:05,563 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:05,565 [main:66] - Generated call from random type = (linkedMapOf<UInt, UByte>()).size.toString(-1809999211)
2021-03-11 13:03:05,566 [main:94] - GETTING String from Int
2021-03-11 13:03:05,596 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]]
2021-03-11 13:03:05,596 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:03:05,596 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:03:05,727 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:05,729 [main:105] - GENERATED CALL = (bInt[0]++).toByte().toString(-1189995745)
2021-03-11 13:03:05,729 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]]
2021-03-11 13:03:05,729 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:03:05,729 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]
2021-03-11 13:03:05,729 [main:105] - GENERATED CALL = (bInt[0]++).toChar().titlecase()
2021-03-11 13:03:05,729 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]]
2021-03-11 13:03:05,729 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:03:05,729 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]
2021-03-11 13:03:05,729 [main:105] - GENERATED CALL = (bInt[0]++).toChar().uppercase()
2021-03-11 13:03:05,729 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]]
2021-03-11 13:03:05,729 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:03:05,729 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]
2021-03-11 13:03:05,730 [main:105] - GENERATED CALL = (bInt[0]++).toChar().lowercase()
2021-03-11 13:03:05,730 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:03:05,730 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:03:05,860 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:05,861 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:03:05,993 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:05,995 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(-960149812).toString(-1820703263)
2021-03-11 13:03:05,995 [main:101] - Case = [@kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:03:05,995 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:03:06,125 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:06,127 [main:105] - GENERATED CALL = (bInt[0]++).toString(-556379553)
2021-03-11 13:03:06,127 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:03:06,127 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:03:06,256 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:06,258 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:03:06,389 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:06,390 [main:105] - GENERATED CALL = (bInt[0]++).div(3482786298443774609).toString(1710960061)
2021-03-11 13:03:06,390 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:03:06,390 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:06,391 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:03:06,522 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:06,523 [main:105] - GENERATED CALL = (bInt[0]++).toLong().toString(-1805654340)
2021-03-11 13:03:06,523 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:03:06,523 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:06,524 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:03:06,655 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:06,657 [main:105] - GENERATED CALL = (bInt[0]++).toInt().toString(-979103959)
2021-03-11 13:03:06,657 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]]
2021-03-11 13:03:06,657 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:03:06,657 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]
2021-03-11 13:03:06,787 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:06,789 [main:105] - GENERATED CALL = (bInt[0]++).toShort().toString(493988537)
2021-03-11 13:03:06,789 [main:63] - replacement of "Failed post-increment Byte: ${(aLong[0]--).toByte().dec()} != ${bByte[(bLong[0]--).toInt().unaryPlus()]}" of type String is (bInt[0]++).toLong().toString(-1805654340)
2021-03-11 13:03:06,921 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:06,922 [main:66] - Compilation checking started
2021-03-11 13:03:07,397 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:07,405 [main:56] - replacing (aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)], Short)
2021-03-11 13:03:07,406 [main:38] - replacing aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)] Short
2021-03-11 13:03:07,406 [main:42] - Getting value of type Short
2021-03-11 13:03:07,560 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:03:07,561 [main:46] - GENERATED VALUE OF TYPE Short = 2221
2021-03-11 13:03:07,561 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:07,566 [main:55] - randomType = Double
2021-03-11 13:03:07,696 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:07,728 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:07,729 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]
2021-03-11 13:03:07,729 [main:66] - Generated call from random type = (0.6586091465827039).toShort().takeLowestOneBit()
2021-03-11 13:03:07,729 [main:63] - replacement of aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)] of type Short is (0.6586091465827039).toShort().takeLowestOneBit()
2021-03-11 13:03:07,859 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:07,859 [main:66] - Compilation checking started
2021-03-11 13:03:08,228 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>(1)
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    (0.6586091465827039).toShort().takeLowestOneBit()--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:08,236 [main:56] - replacing (1, Long)
2021-03-11 13:03:08,237 [main:38] - replacing 1 Long
2021-03-11 13:03:08,238 [main:42] - Getting value of type Long
2021-03-11 13:03:08,368 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:08,369 [main:46] - GENERATED VALUE OF TYPE Long = -8631474471317302678
2021-03-11 13:03:08,369 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:08,374 [main:55] - randomType = Boolean
2021-03-11 13:03:08,505 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:03:08,518 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:03:08,648 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:03:08,650 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:03:08,781 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:08,783 [main:66] - Generated call from random type = (false).compareTo(true).div(-5678225996434021006)
2021-03-11 13:03:08,784 [main:94] - GETTING Long from Array<Int>
2021-03-11 13:03:08,797 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]]
2021-03-11 13:03:08,797 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]
2021-03-11 13:03:08,930 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:08,931 [main:105] - GENERATED CALL = (aInt).size.times(-2186927648328785817)
2021-03-11 13:03:08,931 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6297a364]]
2021-03-11 13:03:08,931 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6297a364]
2021-03-11 13:03:09,065 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:09,067 [main:105] - GENERATED CALL = (aInt).size.minus(767177819007998713)
2021-03-11 13:03:09,067 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]]
2021-03-11 13:03:09,067 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]
2021-03-11 13:03:09,200 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:09,201 [main:105] - GENERATED CALL = (aInt).size.plus(4253994292570916634)
2021-03-11 13:03:09,201 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]]
2021-03-11 13:03:09,202 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:03:09,332 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:09,334 [main:105] - GENERATED CALL = (aInt).size.div(-1024586884050201960)
2021-03-11 13:03:09,334 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]]
2021-03-11 13:03:09,334 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]
2021-03-11 13:03:09,334 [main:105] - GENERATED CALL = (aInt).size.toLong()
2021-03-11 13:03:09,334 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.sumOf(selector: (T) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@524a23e8]]
2021-03-11 13:03:09,335 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.sumOf(selector: (T) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@524a23e8]
2021-03-11 13:03:09,466 [main:302] - generating value of type = Function1<T, Long> false depth = 0
2021-03-11 13:03:09,468 [main:302] - generating value of type = Long true depth = 1
2021-03-11 13:03:09,469 [main:105] - GENERATED CALL = (aInt).sumOf({a: T -> -5673675815398458511})
2021-03-11 13:03:09,469 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]]
2021-03-11 13:03:09,469 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]
2021-03-11 13:03:09,600 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:09,602 [main:105] - GENERATED CALL = (aInt).size.rem(4779181306386206886)
2021-03-11 13:03:09,602 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d8efd99]]
2021-03-11 13:03:09,602 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d8efd99]
2021-03-11 13:03:09,602 [main:105] - GENERATED CALL = (aInt).sum()
2021-03-11 13:03:09,602 [main:63] - replacement of 1 of type Long is (false).compareTo(true).div(-5678225996434021006)
2021-03-11 13:03:09,731 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:09,732 [main:66] - Compilation checking started
2021-03-11 13:03:10,231 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>(1.0)
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:10,239 [main:56] - replacing (1.0, Double)
2021-03-11 13:03:10,241 [main:38] - replacing 1.0 Double
2021-03-11 13:03:10,241 [main:42] - Getting value of type Double
2021-03-11 13:03:10,372 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:10,373 [main:46] - GENERATED VALUE OF TYPE Double = 0.06317094554911906
2021-03-11 13:03:10,374 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:10,377 [main:55] - randomType = Float
2021-03-11 13:03:10,509 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:03:10,548 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:03:10,680 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:10,682 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@68b7f942]
2021-03-11 13:03:10,682 [main:66] - Generated call from random type = (0.26262242f).div(0.6365162670447718).nextUp()
2021-03-11 13:03:10,683 [main:94] - GETTING Double from IntArray
2021-03-11 13:03:10,694 [main:101] - Case = [public fun kotlin.IntArray.average(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c8c7a16]]
2021-03-11 13:03:10,694 [main:137] - GENERATING call of type public fun kotlin.IntArray.average(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c8c7a16]
2021-03-11 13:03:10,694 [main:105] - GENERATED CALL = (bInt).average()
2021-03-11 13:03:10,694 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.minOf(selector: (kotlin.Int) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@69462656]]
2021-03-11 13:03:10,694 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.minOf(selector: (kotlin.Int) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@69462656]
2021-03-11 13:03:10,824 [main:302] - generating value of type = Function1<Int, Double> false depth = 0
2021-03-11 13:03:10,826 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:03:10,827 [main:105] - GENERATED CALL = (bInt).minOf({a: Int -> 0.09563022469846216})
2021-03-11 13:03:10,827 [main:101] - Case = [public inline fun kotlin.IntArray.sumByDouble(selector: (kotlin.Int) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@219cc561]]
2021-03-11 13:03:10,827 [main:137] - GENERATING call of type public inline fun kotlin.IntArray.sumByDouble(selector: (kotlin.Int) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@219cc561]
2021-03-11 13:03:10,958 [main:302] - generating value of type = Function1<Int, Double> false depth = 0
2021-03-11 13:03:10,960 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:03:10,961 [main:105] - GENERATED CALL = (bInt).sumByDouble({a: Int -> 0.19776576235645582})
2021-03-11 13:03:10,961 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@120440d0]]
2021-03-11 13:03:10,962 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@120440d0]
2021-03-11 13:03:11,095 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:11,097 [main:105] - GENERATED CALL = (bInt).size.rem(0.35246474366295466)
2021-03-11 13:03:11,097 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]]
2021-03-11 13:03:11,097 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]
2021-03-11 13:03:11,229 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:11,231 [main:105] - GENERATED CALL = (bInt).size.plus(0.8554837588625682)
2021-03-11 13:03:11,231 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]]
2021-03-11 13:03:11,231 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:03:11,362 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:11,364 [main:105] - GENERATED CALL = (bInt).size.div(0.5705150235794347)
2021-03-11 13:03:11,364 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]]
2021-03-11 13:03:11,364 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]
2021-03-11 13:03:11,495 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:11,497 [main:105] - GENERATED CALL = (bInt).size.times(0.46653177495302744)
2021-03-11 13:03:11,497 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.sumOf(selector: (kotlin.Int) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@19d3c7bb]]
2021-03-11 13:03:11,497 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.sumOf(selector: (kotlin.Int) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@19d3c7bb]
2021-03-11 13:03:11,636 [main:302] - generating value of type = Function1<Int, Double> false depth = 0
2021-03-11 13:03:11,638 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:03:11,640 [main:105] - GENERATED CALL = (bInt).sumOf({a: Int -> 0.01919955289242914})
2021-03-11 13:03:11,640 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]]
2021-03-11 13:03:11,640 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]
2021-03-11 13:03:11,778 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:11,780 [main:105] - GENERATED CALL = (bInt).size.minus(0.2034097792009114)
2021-03-11 13:03:11,780 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.maxOf(selector: (kotlin.Int) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47849cc]]
2021-03-11 13:03:11,780 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.maxOf(selector: (kotlin.Int) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47849cc]
2021-03-11 13:03:11,911 [main:302] - generating value of type = Function1<Int, Double> false depth = 0
2021-03-11 13:03:11,913 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:03:11,914 [main:105] - GENERATED CALL = (bInt).maxOf({a: Int -> 0.6983551355554487})
2021-03-11 13:03:11,914 [main:63] - replacement of 1.0 of type Double is (bInt).sumOf({a: Int -> 0.01919955289242914})
2021-03-11 13:03:12,046 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:12,046 [main:66] - Compilation checking started
2021-03-11 13:03:12,536 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:12,545 [main:56] - replacing (bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++, Double)
2021-03-11 13:03:12,546 [main:38] - replacing bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++ Double
2021-03-11 13:03:12,546 [main:42] - Getting value of type Double
2021-03-11 13:03:12,685 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:12,687 [main:46] - GENERATED VALUE OF TYPE Double = 0.2710384420261658
2021-03-11 13:03:12,687 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:12,690 [main:55] - randomType = Double
2021-03-11 13:03:12,850 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:12,880 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:03:12,880 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2fc4f8bc]
2021-03-11 13:03:13,014 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:13,016 [main:66] - Generated call from random type = (0.023419429683243287).toByte().minus(0.35676540425719916)
2021-03-11 13:03:13,017 [main:94] - GETTING Double from Int
2021-03-11 13:03:13,048 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@611f4707]]
2021-03-11 13:03:13,048 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:03:13,048 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@611f4707]
2021-03-11 13:03:13,181 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:13,183 [main:105] - GENERATED CALL = (bInt[0]).toFloat().minus(0.49738065653229213)
2021-03-11 13:03:13,183 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]]
2021-03-11 13:03:13,183 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:03:13,316 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:13,318 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:03:13,451 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:13,453 [main:105] - GENERATED CALL = (bInt[0]).compareTo(929501424).div(0.2645409397001671)
2021-03-11 13:03:13,453 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toDouble(): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3bf4c059]]
2021-03-11 13:03:13,453 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:13,453 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3bf4c059]
2021-03-11 13:03:13,453 [main:105] - GENERATED CALL = (bInt[0]).toLong().toDouble()
2021-03-11 13:03:13,453 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]]
2021-03-11 13:03:13,453 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:13,453 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:03:13,586 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:13,588 [main:105] - GENERATED CALL = (bInt[0]).toInt().div(0.11738280916503241)
2021-03-11 13:03:13,588 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23], public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ebbab4b]]
2021-03-11 13:03:13,588 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:03:13,722 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:13,724 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ebbab4b]
2021-03-11 13:03:13,856 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:13,858 [main:105] - GENERATED CALL = (bInt[0]).div(0.4683113798617232).minus(122)
2021-03-11 13:03:13,858 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23], public final operator fun unaryPlus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4803d1c0]]
2021-03-11 13:03:13,858 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:03:13,990 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:13,992 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4803d1c0]
2021-03-11 13:03:13,995 [main:105] - GENERATED CALL = (bInt[0]).div(0.830248664278338).unaryPlus()
2021-03-11 13:03:13,995 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public open fun toDouble(): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28a1fac9]]
2021-03-11 13:03:13,995 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:03:13,995 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28a1fac9]
2021-03-11 13:03:13,995 [main:105] - GENERATED CALL = (bInt[0]).toShort().toDouble()
2021-03-11 13:03:13,995 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.sign: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@23395b41]]
2021-03-11 13:03:13,995 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:13,995 [main:105] - GENERATED CALL = (bInt[0]).toDouble().sign
2021-03-11 13:03:13,995 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23], @kotlin.SinceKotlin public fun kotlin.Double.withSign(sign: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@5792b835]]
2021-03-11 13:03:13,995 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:03:14,129 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:14,132 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.withSign(sign: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@5792b835]
2021-03-11 13:03:14,264 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:14,266 [main:105] - GENERATED CALL = (bInt[0]).div(0.7509652948558377).withSign(0.6177593917818957)
2021-03-11 13:03:14,266 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4d0648d8]]
2021-03-11 13:03:14,266 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:14,266 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4d0648d8]
2021-03-11 13:03:14,266 [main:105] - GENERATED CALL = (bInt[0]).toDouble().dec()
2021-03-11 13:03:14,266 [main:63] - replacement of bDouble[(aFloat[0]).toInt().coerceAtLeast(1608847841)]++ of type Double is (bInt[0]).toFloat().minus(0.49738065653229213)
2021-03-11 13:03:14,400 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:14,401 [main:66] - Compilation checking started
2021-03-11 13:03:14,885 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:14,893 [main:56] - replacing (0, Int)
2021-03-11 13:03:14,893 [main:38] - replacing 0 Int
2021-03-11 13:03:14,893 [main:42] - Getting value of type Int
2021-03-11 13:03:15,025 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:15,027 [main:46] - GENERATED VALUE OF TYPE Int = -1888312825
2021-03-11 13:03:15,027 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:15,170 [main:55] - randomType = UShort
2021-03-11 13:03:15,301 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:03:15,329 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@65786e50]
2021-03-11 13:03:15,329 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:03:15,491 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:15,492 [main:66] - Generated call from random type = (23236.toUShort()).toFloat().compareTo(73)
2021-03-11 13:03:15,493 [main:94] - GETTING Int from Short
2021-03-11 13:03:15,525 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]]
2021-03-11 13:03:15,525 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:03:15,525 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]
2021-03-11 13:03:15,525 [main:105] - GENERATED CALL = (aShort[0]++).toShort().unaryMinus()
2021-03-11 13:03:15,525 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]]
2021-03-11 13:03:15,525 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:03:15,657 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:15,659 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]
2021-03-11 13:03:15,659 [main:105] - GENERATED CALL = (aShort[0]++).div(898554923643391032).countLeadingZeroBits()
2021-03-11 13:03:15,659 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1619ead0], public open val start: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@21cfdb17]]
2021-03-11 13:03:15,659 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1619ead0]
2021-03-11 13:03:15,790 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:15,792 [main:105] - GENERATED CALL = (aShort[0]++).rangeTo(29).start
2021-03-11 13:03:15,792 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:03:15,792 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:15,792 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:03:15,925 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:15,926 [main:105] - GENERATED CALL = (aShort[0]++).toInt().plus(-47)
2021-03-11 13:03:15,926 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]]
2021-03-11 13:03:15,926 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:03:15,927 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]
2021-03-11 13:03:15,927 [main:105] - GENERATED CALL = (aShort[0]++).toShort().countTrailingZeroBits()
2021-03-11 13:03:15,927 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]]
2021-03-11 13:03:15,927 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:03:15,927 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]
2021-03-11 13:03:16,058 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:16,060 [main:105] - GENERATED CALL = (aShort[0]++).toByte().plus(71)
2021-03-11 13:03:16,060 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]]
2021-03-11 13:03:16,060 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:03:16,191 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:16,192 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:03:16,193 [main:105] - GENERATED CALL = (aShort[0]++).compareTo(-60).dec()
2021-03-11 13:03:16,193 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1619ead0], public final val first: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@42e9ff13]]
2021-03-11 13:03:16,193 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1619ead0]
2021-03-11 13:03:16,324 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:16,326 [main:105] - GENERATED CALL = (aShort[0]++).rangeTo(-111).first
2021-03-11 13:03:16,326 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3e11389b]]
2021-03-11 13:03:16,326 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:03:16,326 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3e11389b]
2021-03-11 13:03:16,459 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:16,461 [main:105] - GENERATED CALL = (aShort[0]++).toByte().div(0)
2021-03-11 13:03:16,461 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]]
2021-03-11 13:03:16,461 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:03:16,461 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]
2021-03-11 13:03:16,461 [main:105] - GENERATED CALL = (aShort[0]++).toShort().countOneBits()
2021-03-11 13:03:16,461 [main:63] - replacement of 0 of type Int is (aShort[0]++).toByte().div(0)
2021-03-11 13:03:16,594 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:16,603 [main:56] - replacing (emptyArray<Byte>()[('蟖').toByte().rem(-28)], Byte)
2021-03-11 13:03:16,604 [main:38] - replacing emptyArray<Byte>()[('蟖').toByte().rem(-28)] Byte
2021-03-11 13:03:16,604 [main:42] - Getting value of type Byte
2021-03-11 13:03:16,739 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:16,741 [main:46] - GENERATED VALUE OF TYPE Byte = -109
2021-03-11 13:03:16,741 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:16,745 [main:55] - randomType = UInt
2021-03-11 13:03:16,883 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:03:16,919 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@c82cb9e]
2021-03-11 13:03:16,919 [main:66] - Generated call from random type = (238785418.toUInt()).toByte()
2021-03-11 13:03:16,919 [main:63] - replacement of emptyArray<Byte>()[('蟖').toByte().rem(-28)] of type Byte is (238785418.toUInt()).toByte()
2021-03-11 13:03:17,053 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:17,054 [main:66] - Compilation checking started
2021-03-11 13:03:17,427 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    (238785418.toUInt()).toByte()--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong()) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:17,437 [main:56] - replacing (0, Int)
2021-03-11 13:03:17,437 [main:38] - replacing 0 Int
2021-03-11 13:03:17,437 [main:42] - Getting value of type Int
2021-03-11 13:03:17,573 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:17,574 [main:46] - GENERATED VALUE OF TYPE Int = 1558541323
2021-03-11 13:03:17,574 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:17,578 [main:55] - randomType = Boolean
2021-03-11 13:03:17,711 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:03:17,721 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:03:17,853 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:03:17,854 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:03:17,987 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:17,988 [main:66] - Generated call from random type = (true).compareTo(false).or(-995927186)
2021-03-11 13:03:17,989 [main:94] - GETTING Int from Int
2021-03-11 13:03:18,020 [main:101] - Case = [public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:03:18,020 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:03:18,020 [main:105] - GENERATED CALL = (bInt[0]++).inc()
2021-03-11 13:03:18,020 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:03:18,020 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:18,020 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:03:18,021 [main:105] - GENERATED CALL = (bInt[0]++).toInt().countTrailingZeroBits()
2021-03-11 13:03:18,021 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]]
2021-03-11 13:03:18,021 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:18,021 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:03:18,021 [main:105] - GENERATED CALL = (bInt[0]++).toInt().dec()
2021-03-11 13:03:18,021 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]]
2021-03-11 13:03:18,021 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:18,021 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]
2021-03-11 13:03:18,021 [main:105] - GENERATED CALL = (bInt[0]++).toLong().countTrailingZeroBits()
2021-03-11 13:03:18,021 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:03:18,021 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:18,021 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:03:18,179 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:18,181 [main:105] - GENERATED CALL = (bInt[0]++).toInt().shr(471747197)
2021-03-11 13:03:18,181 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]]
2021-03-11 13:03:18,181 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:18,181 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]
2021-03-11 13:03:18,181 [main:105] - GENERATED CALL = (bInt[0]++).toLong().toInt()
2021-03-11 13:03:18,181 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]]
2021-03-11 13:03:18,181 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:03:18,181 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]
2021-03-11 13:03:18,313 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:03:18,315 [main:105] - GENERATED CALL = (bInt[0]++).toChar().minus('뭪')
2021-03-11 13:03:18,315 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:03:18,315 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:03:18,447 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:18,449 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:03:18,580 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:18,582 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(-2038619101).times(-122)
2021-03-11 13:03:18,582 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:03:18,582 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:18,582 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:03:18,713 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:18,848 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:18,850 [main:105] - GENERATED CALL = (bInt[0]++).toInt().coerceIn(728514779, -374547621)
2021-03-11 13:03:18,850 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]]
2021-03-11 13:03:18,850 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:03:18,983 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:18,985 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]
2021-03-11 13:03:18,985 [main:105] - GENERATED CALL = (bInt[0]++).div(0.9329180803013838).roundToInt()
2021-03-11 13:03:18,985 [main:63] - replacement of 0 of type Int is (bInt[0]++).toLong().toInt()
2021-03-11 13:03:19,117 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:19,126 [main:56] - replacing (0, Int)
2021-03-11 13:03:19,126 [main:38] - replacing 0 Int
2021-03-11 13:03:19,126 [main:42] - Getting value of type Int
2021-03-11 13:03:19,258 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:19,260 [main:46] - GENERATED VALUE OF TYPE Int = -1599511181
2021-03-11 13:03:19,260 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:19,263 [main:55] - randomType = Int
2021-03-11 13:03:19,395 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:19,430 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:03:19,430 [main:66] - Generated call from random type = (-770797055).dec()
2021-03-11 13:03:19,431 [main:94] - GETTING Int from Double
2021-03-11 13:03:19,460 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]]
2021-03-11 13:03:19,460 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:03:19,460 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]
2021-03-11 13:03:19,460 [main:105] - GENERATED CALL = (bDouble[0]++).toLong().toInt()
2021-03-11 13:03:19,460 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:03:19,460 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:19,592 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:19,594 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:03:19,725 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:19,727 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-18).rem(41)
2021-03-11 13:03:19,727 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:03:19,727 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:19,859 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:19,861 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:03:19,993 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:19,995 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-63).rotateRight(370945147)
2021-03-11 13:03:19,995 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:03:19,995 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:20,128 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:20,129 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:03:20,129 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-1).takeHighestOneBit()
2021-03-11 13:03:20,130 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 13:03:20,130 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:20,130 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 13:03:20,260 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:20,262 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().times(60)
2021-03-11 13:03:20,262 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:03:20,262 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:20,394 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:20,396 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:03:20,396 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(104).toInt()
2021-03-11 13:03:20,396 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:03:20,396 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:20,528 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:20,530 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:03:20,530 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(118).unaryMinus()
2021-03-11 13:03:20,530 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:03:20,530 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:20,662 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:20,663 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:03:20,825 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:20,826 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-104).div(1)
2021-03-11 13:03:20,827 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:03:20,827 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:20,827 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:03:20,827 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().countTrailingZeroBits()
2021-03-11 13:03:20,827 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:03:20,827 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:20,958 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:20,959 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:03:20,959 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(97).inv()
2021-03-11 13:03:20,959 [main:63] - replacement of 0 of type Int is (bDouble[0]++).compareTo(-63).rotateRight(370945147)
2021-03-11 13:03:21,092 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:21,102 [main:56] - replacing ((bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong(), Boolean)
2021-03-11 13:03:21,104 [main:38] - replacing (bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong() Boolean
2021-03-11 13:03:21,104 [main:42] - Getting value of type Boolean
2021-03-11 13:03:21,235 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:03:21,237 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 13:03:21,237 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:21,240 [main:55] - randomType = String
2021-03-11 13:03:21,372 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:03:21,390 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.String[DeserializedSimpleFunctionDescriptor@5ae2b5f8]
2021-03-11 13:03:21,522 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:03:21,522 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@755a95f2]
2021-03-11 13:03:21,654 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:03:21,656 [main:66] - Generated call from random type = ("emsef").equals("ldhno").xor(true)
2021-03-11 13:03:21,657 [main:94] - GETTING Boolean from Long
2021-03-11 13:03:21,687 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a6af1c7]]
2021-03-11 13:03:21,688 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:03:21,688 [main:137] - GENERATING call of type public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a6af1c7]
2021-03-11 13:03:21,688 [main:105] - GENERATED CALL = (aLong[0]--).toFloat().isNaN()
2021-03-11 13:03:21,688 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]]
2021-03-11 13:03:21,688 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:03:21,820 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:21,822 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]
2021-03-11 13:03:21,954 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:03:21,954 [main:105] - GENERATED CALL = (aLong[0]--).div(0.8627630753656427).equals("qovwo")
2021-03-11 13:03:21,955 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]]
2021-03-11 13:03:21,955 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:03:21,955 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]
2021-03-11 13:03:22,086 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:03:22,087 [main:105] - GENERATED CALL = (aLong[0]--).toShort().equals("enzqr")
2021-03-11 13:03:22,087 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@493658fa]]
2021-03-11 13:03:22,087 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@493658fa]
2021-03-11 13:03:22,219 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:03:22,219 [main:105] - GENERATED CALL = (aLong[0]--).equals("zxxmk")
2021-03-11 13:03:22,219 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public fun kotlin.Char.isISOControl(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@462bd05f]]
2021-03-11 13:03:22,219 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:03:22,219 [main:137] - GENERATING call of type public fun kotlin.Char.isISOControl(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@462bd05f]
2021-03-11 13:03:22,219 [main:105] - GENERATED CALL = (aLong[0]--).toChar().isISOControl()
2021-03-11 13:03:22,219 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public fun kotlin.Char.isHighSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b6af7c7]]
2021-03-11 13:03:22,219 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:03:22,219 [main:137] - GENERATING call of type public fun kotlin.Char.isHighSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b6af7c7]
2021-03-11 13:03:22,219 [main:105] - GENERATED CALL = (aLong[0]--).toChar().isHighSurrogate()
2021-03-11 13:03:22,220 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]]
2021-03-11 13:03:22,220 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:22,220 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:03:22,353 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:03:22,353 [main:105] - GENERATED CALL = (aLong[0]--).toInt().equals("nlmgc")
2021-03-11 13:03:22,353 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public fun kotlin.Char.isLowSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b992833]]
2021-03-11 13:03:22,353 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:03:22,353 [main:137] - GENERATING call of type public fun kotlin.Char.isLowSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2b992833]
2021-03-11 13:03:22,353 [main:105] - GENERATED CALL = (aLong[0]--).toChar().isLowSurrogate()
2021-03-11 13:03:22,353 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@65289aa1]]
2021-03-11 13:03:22,353 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:22,353 [main:137] - GENERATING call of type public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@65289aa1]
2021-03-11 13:03:22,353 [main:105] - GENERATED CALL = (aLong[0]--).toDouble().isNaN()
2021-03-11 13:03:22,353 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public fun kotlin.Char.isTitleCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a1a41aa]]
2021-03-11 13:03:22,353 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:03:22,354 [main:137] - GENERATING call of type public fun kotlin.Char.isTitleCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a1a41aa]
2021-03-11 13:03:22,354 [main:105] - GENERATED CALL = (aLong[0]--).toChar().isTitleCase()
2021-03-11 13:03:22,354 [main:63] - replacement of (bShort[0]).div(-7421137152357473839).times(0) != (ArrayDeque<Short?>(arrayListOf<Short?>())).size.toLong() of type Boolean is false
2021-03-11 13:03:22,486 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BOOLEAN_CONSTANT)
2021-03-11 13:03:22,486 [main:66] - Compilation checking started
2021-03-11 13:03:22,952 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:22,960 [main:56] - replacing (bShort, ShortArray)
2021-03-11 13:03:22,961 [main:38] - replacing bShort ShortArray
2021-03-11 13:03:22,961 [main:42] - Getting value of type ShortArray
2021-03-11 13:03:23,091 [main:302] - generating value of type = ShortArray false depth = 0
2021-03-11 13:03:23,227 [main:43] - GENERATING CALL OF fun ShortArray(size: kotlin.Int): ShortArray = TODO()
2021-03-11 13:03:23,230 [main:61] - WITHOUT TYPE PARAMS = fun ShortArray(size: kotlin.Int): ShortArray = TODO()
2021-03-11 13:03:23,547 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:03:23,548 [main:95] - GENERATED = ShortArray(-1508624537)
2021-03-11 13:03:23,549 [main:46] - GENERATED VALUE OF TYPE ShortArray = ShortArray(-1508624537)
2021-03-11 13:03:23,549 [main:49] - GENERATED IS CALL =true
2021-03-11 13:03:23,551 [main:55] - randomType = UInt
2021-03-11 13:03:23,683 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:03:23,711 [main:94] - GETTING ShortArray from Float
2021-03-11 13:03:23,739 [main:94] - GETTING ShortArray from Double
2021-03-11 13:03:23,767 [main:94] - GETTING ShortArray from Double
2021-03-11 13:03:23,768 [main:94] - GETTING ShortArray from Byte
2021-03-11 13:03:23,799 [main:94] - GETTING ShortArray from Int
2021-03-11 13:03:23,829 [main:94] - GETTING ShortArray from Byte
2021-03-11 13:03:23,830 [main:94] - GETTING ShortArray from Long
2021-03-11 13:03:23,859 [main:94] - GETTING ShortArray from Array<Int>
2021-03-11 13:03:23,869 [main:101] - Case = [public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]]
2021-03-11 13:03:23,869 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]
2021-03-11 13:03:23,869 [main:105] - GENERATED CALL = (aInt).toShortArray()
2021-03-11 13:03:23,869 [main:63] - replacement of bShort of type ShortArray is (aInt).toShortArray()
2021-03-11 13:03:23,998 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:23,998 [main:66] - Compilation checking started
2021-03-11 13:03:24,369 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aInt).toShortArray()[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:24,377 [main:56] - replacing (1, Long)
2021-03-11 13:03:24,379 [main:38] - replacing 1 Long
2021-03-11 13:03:24,379 [main:42] - Getting value of type Long
2021-03-11 13:03:24,515 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:24,517 [main:46] - GENERATED VALUE OF TYPE Long = 1717116362744372883
2021-03-11 13:03:24,517 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:24,660 [main:55] - randomType = Long?
2021-03-11 13:03:24,790 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:24,824 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5378b5ec]
2021-03-11 13:03:24,953 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:24,955 [main:66] - Generated call from random type = (-465325670011036243)?.plus(-101)
2021-03-11 13:03:24,955 [main:94] - GETTING Long from Long
2021-03-11 13:03:24,984 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]]
2021-03-11 13:03:24,984 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:24,985 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]
2021-03-11 13:03:25,116 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:25,118 [main:105] - GENERATED CALL = (bLong[0]++).toInt().times(4341245283262333809)
2021-03-11 13:03:25,118 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6297a364]]
2021-03-11 13:03:25,118 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:25,118 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6297a364]
2021-03-11 13:03:25,247 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:25,249 [main:105] - GENERATED CALL = (bLong[0]++).toInt().minus(-7184355870902961146)
2021-03-11 13:03:25,249 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@40584aff]]
2021-03-11 13:03:25,249 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:03:25,249 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@40584aff]
2021-03-11 13:03:25,379 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:25,381 [main:105] - GENERATED CALL = (bLong[0]++).toByte().rem(-5689539729128722290)
2021-03-11 13:03:25,381 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]]
2021-03-11 13:03:25,381 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:25,381 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:03:25,511 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:25,512 [main:105] - GENERATED CALL = (bLong[0]++).toInt().div(7871702734758278935)
2021-03-11 13:03:25,512 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public fun kotlin.Long.coerceIn(minimumValue: kotlin.Long, maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5df68f70]]
2021-03-11 13:03:25,512 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:25,512 [main:137] - GENERATING call of type public fun kotlin.Long.coerceIn(minimumValue: kotlin.Long, maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5df68f70]
2021-03-11 13:03:25,641 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:25,772 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:25,773 [main:105] - GENERATED CALL = (bLong[0]++).toLong().coerceIn(-8851412349277045223, 7846165397151702288)
2021-03-11 13:03:25,773 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3a4635ca]]
2021-03-11 13:03:25,773 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3a4635ca]
2021-03-11 13:03:25,773 [main:105] - GENERATED CALL = (bLong[0]++).toLong()
2021-03-11 13:03:25,773 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.LongRange defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@73e8a384], public final val step: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@51740384]]
2021-03-11 13:03:25,773 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.LongRange defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@73e8a384]
2021-03-11 13:03:25,902 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:25,904 [main:105] - GENERATED CALL = (bLong[0]++).rangeTo(65).step
2021-03-11 13:03:25,904 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@6eb1a9b2]]
2021-03-11 13:03:25,904 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:25,904 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@6eb1a9b2]
2021-03-11 13:03:25,904 [main:105] - GENERATED CALL = (bLong[0]++).toLong().takeHighestOneBit()
2021-03-11 13:03:25,904 [main:101] - Case = [public final operator fun minus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@19797838]]
2021-03-11 13:03:25,904 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@19797838]
2021-03-11 13:03:26,035 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:26,037 [main:105] - GENERATED CALL = (bLong[0]++).minus(-23)
2021-03-11 13:03:26,037 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.LongRange defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@73e8a384], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ranges.LongRange.random(): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@85b2e37]]
2021-03-11 13:03:26,037 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.LongRange defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@73e8a384]
2021-03-11 13:03:26,168 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:26,169 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ranges.LongRange.random(): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@85b2e37]
2021-03-11 13:03:26,170 [main:105] - GENERATED CALL = (bLong[0]++).rangeTo(76).random()
2021-03-11 13:03:26,170 [main:63] - replacement of 1 of type Long is (bLong[0]++).toInt().div(7871702734758278935)
2021-03-11 13:03:26,322 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:26,323 [main:66] - Compilation checking started
2021-03-11 13:03:26,692 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((bLong[0]++).toInt().div(7871702734758278935))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()]}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:26,701 [main:56] - replacing (bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()], Long)
2021-03-11 13:03:26,702 [main:38] - replacing bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()] Long
2021-03-11 13:03:26,702 [main:42] - Getting value of type Long
2021-03-11 13:03:26,833 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:26,835 [main:46] - GENERATED VALUE OF TYPE Long = 1405654514327404841
2021-03-11 13:03:26,835 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:26,839 [main:55] - randomType = String
2021-03-11 13:03:26,970 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:03:26,994 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:03:27,125 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:27,127 [main:66] - Generated call from random type = ("kdgpe").length.div(2709513690241569927)
2021-03-11 13:03:27,127 [main:63] - replacement of bLong[(bShort[0]--).compareTo(44).countLeadingZeroBits()] of type Long is ("kdgpe").length.div(2709513690241569927)
2021-03-11 13:03:27,256 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:27,256 [main:66] - Compilation checking started
2021-03-11 13:03:27,720 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != bByte[0]) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${("kdgpe").length.div(2709513690241569927)}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:27,728 [main:56] - replacing (bByte[0], Byte)
2021-03-11 13:03:27,730 [main:38] - replacing bByte[0] Byte
2021-03-11 13:03:27,730 [main:42] - Getting value of type Byte
2021-03-11 13:03:27,864 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:27,866 [main:46] - GENERATED VALUE OF TYPE Byte = 48
2021-03-11 13:03:27,866 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:27,869 [main:55] - randomType = Float
2021-03-11 13:03:28,008 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:03:28,057 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:28,058 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:03:28,058 [main:66] - Generated call from random type = (0.7463358f).toDouble().toByte()
2021-03-11 13:03:28,059 [main:94] - GETTING Byte from Int
2021-03-11 13:03:28,100 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public final operator fun inc(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@49ecd74f]]
2021-03-11 13:03:28,100 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:03:28,100 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@49ecd74f]
2021-03-11 13:03:28,100 [main:105] - GENERATED CALL = (bInt[0]++).toByte().inc()
2021-03-11 13:03:28,100 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:03:28,100 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:28,100 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:03:28,101 [main:105] - GENERATED CALL = (bInt[0]++).toInt().toByte()
2021-03-11 13:03:28,101 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]]
2021-03-11 13:03:28,101 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:28,101 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:03:28,101 [main:105] - GENERATED CALL = (bInt[0]++).toLong().toByte()
2021-03-11 13:03:28,101 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]]
2021-03-11 13:03:28,101 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:03:28,101 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:03:28,101 [main:105] - GENERATED CALL = (bInt[0]++).toChar().toByte()
2021-03-11 13:03:28,101 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]]
2021-03-11 13:03:28,101 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:03:28,101 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:03:28,101 [main:105] - GENERATED CALL = (bInt[0]++).toShort().toByte()
2021-03-11 13:03:28,101 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]]
2021-03-11 13:03:28,101 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:03:28,101 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:03:28,102 [main:105] - GENERATED CALL = (bInt[0]++).toFloat().toByte()
2021-03-11 13:03:28,102 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]]
2021-03-11 13:03:28,102 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:03:28,102 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]
2021-03-11 13:03:28,231 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:28,232 [main:105] - GENERATED CALL = (bInt[0]++).toByte().and(6)
2021-03-11 13:03:28,232 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]]
2021-03-11 13:03:28,232 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:03:28,232 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]
2021-03-11 13:03:28,362 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:28,364 [main:105] - GENERATED CALL = (bInt[0]++).toByte().coerceAtLeast(78)
2021-03-11 13:03:28,364 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:03:28,364 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:03:28,493 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:28,495 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:03:28,495 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(978668323).toByte()
2021-03-11 13:03:28,495 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]]
2021-03-11 13:03:28,495 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:03:28,495 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]
2021-03-11 13:03:28,495 [main:105] - GENERATED CALL = (bInt[0]++).toByte().takeLowestOneBit()
2021-03-11 13:03:28,495 [main:63] - replacement of bByte[0] of type Byte is (bInt[0]++).toLong().toByte()
2021-03-11 13:03:28,623 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:28,623 [main:66] - Compilation checking started
2021-03-11 13:03:29,129 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((bDouble[0]).toFloat().toByte() != (bInt[0]++).toLong().toByte()) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${("kdgpe").length.div(2709513690241569927)}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:29,137 [main:56] - replacing ((bDouble[0]).toFloat().toByte() != (bInt[0]++).toLong().toByte(), Boolean)
2021-03-11 13:03:29,139 [main:38] - replacing (bDouble[0]).toFloat().toByte() != (bInt[0]++).toLong().toByte() Boolean
2021-03-11 13:03:29,139 [main:42] - Getting value of type Boolean
2021-03-11 13:03:29,270 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:03:29,272 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 13:03:29,272 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:29,276 [main:55] - randomType = Byte
2021-03-11 13:03:29,406 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:29,449 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3ab8b8ed]
2021-03-11 13:03:29,581 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:29,582 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.IntRange[DeserializedSimpleFunctionDescriptor@a6f06e6]
2021-03-11 13:03:29,714 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:03:29,715 [main:66] - Generated call from random type = (7).rangeTo(5).equals("psdeb")
2021-03-11 13:03:29,715 [main:63] - replacement of (bDouble[0]).toFloat().toByte() != (bInt[0]++).toLong().toByte() of type Boolean is (7).rangeTo(5).equals("psdeb")
2021-03-11 13:03:29,845 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:29,846 [main:66] - Compilation checking started
2021-03-11 13:03:30,313 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${("kdgpe").length.div(2709513690241569927)}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != bDouble[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:30,321 [main:56] - replacing (bDouble, DoubleArray)
2021-03-11 13:03:30,322 [main:38] - replacing bDouble DoubleArray
2021-03-11 13:03:30,322 [main:42] - Getting value of type DoubleArray
2021-03-11 13:03:30,452 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:03:30,585 [main:43] - GENERATING CALL OF fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:03:30,588 [main:61] - WITHOUT TYPE PARAMS = fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:03:30,721 [main:302] - generating value of type = Double true depth = 3
2021-03-11 13:03:30,723 [main:95] - GENERATED = doubleArrayOf(0.10099122469296429)
2021-03-11 13:03:30,723 [main:46] - GENERATED VALUE OF TYPE DoubleArray = doubleArrayOf(0.10099122469296429)
2021-03-11 13:03:30,723 [main:49] - GENERATED IS CALL =true
2021-03-11 13:03:30,727 [main:55] - randomType = Double
2021-03-11 13:03:30,857 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:30,893 [main:94] - GETTING DoubleArray from Long
2021-03-11 13:03:30,925 [main:94] - GETTING DoubleArray from Double
2021-03-11 13:03:30,953 [main:94] - GETTING DoubleArray from DoubleArray
2021-03-11 13:03:30,961 [main:101] - Case = [public fun kotlin.DoubleArray.reversedArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c7503f1]]
2021-03-11 13:03:30,961 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.reversedArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c7503f1]
2021-03-11 13:03:30,961 [main:105] - GENERATED CALL = (bDouble).reversedArray()
2021-03-11 13:03:30,961 [main:101] - Case = [public inline operator fun kotlin.DoubleArray.plus(element: kotlin.Double): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c940c10]]
2021-03-11 13:03:30,961 [main:137] - GENERATING call of type public inline operator fun kotlin.DoubleArray.plus(element: kotlin.Double): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c940c10]
2021-03-11 13:03:31,090 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:31,092 [main:105] - GENERATED CALL = (bDouble).plus(0.07651484410341214)
2021-03-11 13:03:31,092 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.copyInto(destination: kotlin.DoubleArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2181b8ad]]
2021-03-11 13:03:31,092 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.copyInto(destination: kotlin.DoubleArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2181b8ad]
2021-03-11 13:03:31,223 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:03:31,358 [main:43] - GENERATING CALL OF fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:03:31,361 [main:61] - WITHOUT TYPE PARAMS = fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:03:31,495 [main:302] - generating value of type = Double true depth = 3
2021-03-11 13:03:31,496 [main:95] - GENERATED = doubleArrayOf(0.2557894498145009)
2021-03-11 13:03:31,626 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:31,757 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:31,894 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:31,896 [main:105] - GENERATED CALL = (bDouble).copyInto(doubleArrayOf(0.2557894498145009), -1598545626, 2059196645, -1102910443)
2021-03-11 13:03:31,896 [main:101] - Case = [public fun kotlin.DoubleArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46dd1382]]
2021-03-11 13:03:31,896 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46dd1382]
2021-03-11 13:03:32,051 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:32,180 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:32,181 [main:105] - GENERATED CALL = (bDouble).copyOfRange(-1495504788, -1831389201)
2021-03-11 13:03:32,181 [main:101] - Case = [public fun kotlin.DoubleArray.sortedArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@605860e0]]
2021-03-11 13:03:32,181 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.sortedArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@605860e0]
2021-03-11 13:03:32,182 [main:105] - GENERATED CALL = (bDouble).sortedArray()
2021-03-11 13:03:32,182 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.onEach(action: (kotlin.Double) -> kotlin.Unit): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@492cc8ee]]
2021-03-11 13:03:32,182 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.onEach(action: (kotlin.Double) -> kotlin.Unit): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@492cc8ee]
2021-03-11 13:03:32,311 [main:302] - generating value of type = Function1<Double, Unit> false depth = 0
2021-03-11 13:03:32,313 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:03:32,447 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 13:03:32,449 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 13:03:32,721 [main:302] - generating value of type = Any false depth = 4
2021-03-11 13:03:32,722 [main:95] - GENERATED = println("uwhji")
2021-03-11 13:03:32,722 [main:105] - GENERATED CALL = (bDouble).onEach({a: Double -> println("uwhji")})
2021-03-11 13:03:32,722 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Double) -> kotlin.Unit): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58ae2248]]
2021-03-11 13:03:32,722 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Double) -> kotlin.Unit): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58ae2248]
2021-03-11 13:03:32,852 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Double, Unit> false depth = 0
2021-03-11 13:03:32,853 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:03:32,986 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 13:03:32,988 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 13:03:33,258 [main:302] - generating value of type = Any false depth = 4
2021-03-11 13:03:33,259 [main:95] - GENERATED = println("hdjyg")
2021-03-11 13:03:33,259 [main:105] - GENERATED CALL = (bDouble).onEachIndexed({a: Int, b: Double -> println("hdjyg")})
2021-03-11 13:03:33,259 [main:101] - Case = [public fun kotlin.DoubleArray.sortedArrayDescending(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4caa96b8]]
2021-03-11 13:03:33,259 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.sortedArrayDescending(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4caa96b8]
2021-03-11 13:03:33,259 [main:105] - GENERATED CALL = (bDouble).sortedArrayDescending()
2021-03-11 13:03:33,259 [main:101] - Case = [public inline fun kotlin.DoubleArray.copyOf(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@149d4e72]]
2021-03-11 13:03:33,259 [main:137] - GENERATING call of type public inline fun kotlin.DoubleArray.copyOf(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@149d4e72]
2021-03-11 13:03:33,259 [main:105] - GENERATED CALL = (bDouble).copyOf()
2021-03-11 13:03:33,259 [main:101] - Case = [public fun kotlin.DoubleArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c614fa5]]
2021-03-11 13:03:33,259 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c614fa5]
2021-03-11 13:03:33,389 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:03:33,524 [main:43] - GENERATING CALL OF fun <T> setOfNotNull(elements: Int): Collection<Int> = TODO()
2021-03-11 13:03:33,527 [main:61] - WITHOUT TYPE PARAMS = fun <T> setOfNotNull(elements: Int): Collection<Int> = TODO()
2021-03-11 13:03:33,660 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:03:33,662 [main:95] - GENERATED = setOfNotNull<Int>(-366667102)
2021-03-11 13:03:33,662 [main:105] - GENERATED CALL = (bDouble).sliceArray(setOfNotNull<Int>(-366667102))
2021-03-11 13:03:33,662 [main:63] - replacement of bDouble of type DoubleArray is (bDouble).sliceArray(setOfNotNull<Int>(-366667102))
2021-03-11 13:03:33,791 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:33,791 [main:66] - Compilation checking started
2021-03-11 13:03:34,297 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${("kdgpe").length.div(2709513690241569927)}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    bDouble[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:34,305 [main:56] - replacing (bInt, IntArray)
2021-03-11 13:03:34,305 [main:38] - replacing bInt IntArray
2021-03-11 13:03:34,305 [main:42] - Getting value of type IntArray
2021-03-11 13:03:34,440 [main:302] - generating value of type = IntArray false depth = 0
2021-03-11 13:03:34,576 [main:43] - GENERATING CALL OF fun IntArray(size: kotlin.Int): IntArray = TODO()
2021-03-11 13:03:34,578 [main:61] - WITHOUT TYPE PARAMS = fun IntArray(size: kotlin.Int): IntArray = TODO()
2021-03-11 13:03:34,890 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:03:34,891 [main:95] - GENERATED = IntArray(-1281244962)
2021-03-11 13:03:34,891 [main:46] - GENERATED VALUE OF TYPE IntArray = IntArray(-1281244962)
2021-03-11 13:03:34,891 [main:49] - GENERATED IS CALL =true
2021-03-11 13:03:35,172 [main:55] - randomType = UShort?
2021-03-11 13:03:35,303 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:03:35,343 [main:94] - GETTING IntArray from Double
2021-03-11 13:03:35,371 [main:94] - GETTING IntArray from Array<Float>
2021-03-11 13:03:35,381 [main:101] - Case = [public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]]
2021-03-11 13:03:35,381 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]
2021-03-11 13:03:35,381 [main:105] - GENERATED CALL = (aFloat).toIntArray()
2021-03-11 13:03:35,381 [main:63] - replacement of bInt of type IntArray is (aFloat).toIntArray()
2021-03-11 13:03:35,512 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:35,521 [main:56] - replacing (0, Int)
2021-03-11 13:03:35,521 [main:38] - replacing 0 Int
2021-03-11 13:03:35,521 [main:42] - Getting value of type Int
2021-03-11 13:03:35,654 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:35,655 [main:46] - GENERATED VALUE OF TYPE Int = -386499039
2021-03-11 13:03:35,656 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:35,660 [main:55] - randomType = Double
2021-03-11 13:03:35,794 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:35,830 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:03:35,831 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2db55aa3]
2021-03-11 13:03:35,960 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:35,961 [main:66] - Generated call from random type = (0.7576098589689717).toByte().times(10)
2021-03-11 13:03:35,962 [main:63] - replacement of 0 of type Int is (0.7576098589689717).toByte().times(10)
2021-03-11 13:03:36,091 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:36,099 [main:56] - replacing (bDouble, DoubleArray)
2021-03-11 13:03:36,100 [main:38] - replacing bDouble DoubleArray
2021-03-11 13:03:36,100 [main:42] - Getting value of type DoubleArray
2021-03-11 13:03:36,231 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:03:36,365 [main:43] - GENERATING CALL OF fun DoubleArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Double): DoubleArray = TODO()
2021-03-11 13:03:36,367 [main:61] - WITHOUT TYPE PARAMS = fun DoubleArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Double): DoubleArray = TODO()
2021-03-11 13:03:36,784 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:03:36,786 [main:302] - generating value of type = Function1<Int, Double> false depth = 3
2021-03-11 13:03:36,787 [main:302] - generating value of type = Double true depth = 4
2021-03-11 13:03:36,788 [main:95] - GENERATED = DoubleArray(-1171050038, {a: Int -> 0.6910797316047586})
2021-03-11 13:03:36,788 [main:46] - GENERATED VALUE OF TYPE DoubleArray = DoubleArray(-1171050038, {a: Int -> 0.6910797316047586})
2021-03-11 13:03:36,789 [main:49] - GENERATED IS CALL =true
2021-03-11 13:03:36,929 [main:55] - randomType = UShort
2021-03-11 13:03:37,061 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:03:37,089 [main:94] - GETTING DoubleArray from Byte
2021-03-11 13:03:37,121 [main:94] - GETTING DoubleArray from Double
2021-03-11 13:03:37,148 [main:94] - GETTING DoubleArray from Double
2021-03-11 13:03:37,149 [main:94] - GETTING DoubleArray from ShortArray
2021-03-11 13:03:37,159 [main:94] - GETTING DoubleArray from ByteArray
2021-03-11 13:03:37,168 [main:94] - GETTING DoubleArray from Long
2021-03-11 13:03:37,199 [main:94] - GETTING DoubleArray from Long
2021-03-11 13:03:37,199 [main:94] - GETTING DoubleArray from Short
2021-03-11 13:03:37,230 [main:94] - GETTING DoubleArray from Long
2021-03-11 13:03:37,230 [main:94] - GETTING DoubleArray from DoubleArray
2021-03-11 13:03:37,237 [main:101] - Case = [public fun kotlin.DoubleArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46dd1382]]
2021-03-11 13:03:37,237 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46dd1382]
2021-03-11 13:03:37,382 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:37,515 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:37,517 [main:105] - GENERATED CALL = (bDouble).copyOfRange(-2011476417, 1969919380)
2021-03-11 13:03:37,517 [main:101] - Case = [public fun kotlin.DoubleArray.reversedArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c7503f1]]
2021-03-11 13:03:37,517 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.reversedArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c7503f1]
2021-03-11 13:03:37,517 [main:105] - GENERATED CALL = (bDouble).reversedArray()
2021-03-11 13:03:37,517 [main:101] - Case = [public fun kotlin.DoubleArray.sortedArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@605860e0]]
2021-03-11 13:03:37,517 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.sortedArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@605860e0]
2021-03-11 13:03:37,517 [main:105] - GENERATED CALL = (bDouble).sortedArray()
2021-03-11 13:03:37,517 [main:101] - Case = [public inline fun kotlin.DoubleArray.copyOf(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@149d4e72]]
2021-03-11 13:03:37,517 [main:137] - GENERATING call of type public inline fun kotlin.DoubleArray.copyOf(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@149d4e72]
2021-03-11 13:03:37,517 [main:105] - GENERATED CALL = (bDouble).copyOf()
2021-03-11 13:03:37,517 [main:101] - Case = [public fun kotlin.DoubleArray.sortedArrayDescending(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4caa96b8]]
2021-03-11 13:03:37,517 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.sortedArrayDescending(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4caa96b8]
2021-03-11 13:03:37,517 [main:105] - GENERATED CALL = (bDouble).sortedArrayDescending()
2021-03-11 13:03:37,517 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Double) -> kotlin.Unit): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58ae2248]]
2021-03-11 13:03:37,518 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Double) -> kotlin.Unit): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58ae2248]
2021-03-11 13:03:37,681 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Double, Unit> false depth = 0
2021-03-11 13:03:37,682 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:03:37,817 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 13:03:37,820 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-11 13:03:38,096 [main:302] - generating value of type = Any false depth = 4
2021-03-11 13:03:38,096 [main:95] - GENERATED = print("fmlis")
2021-03-11 13:03:38,096 [main:105] - GENERATED CALL = (bDouble).onEachIndexed({a: Int, b: Double -> print("fmlis")})
2021-03-11 13:03:38,096 [main:101] - Case = [public fun kotlin.DoubleArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c614fa5]]
2021-03-11 13:03:38,096 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c614fa5]
2021-03-11 13:03:38,230 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:03:38,369 [main:43] - GENERATING CALL OF fun <T> emptySet(): Collection<Int> = TODO()
2021-03-11 13:03:38,372 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptySet(): Collection<Int> = TODO()
2021-03-11 13:03:38,507 [main:95] - GENERATED = emptySet<Int>()
2021-03-11 13:03:38,507 [main:105] - GENERATED CALL = (bDouble).sliceArray(emptySet<Int>())
2021-03-11 13:03:38,507 [main:101] - Case = [public inline operator fun kotlin.DoubleArray.plus(element: kotlin.Double): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c940c10]]
2021-03-11 13:03:38,507 [main:137] - GENERATING call of type public inline operator fun kotlin.DoubleArray.plus(element: kotlin.Double): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c940c10]
2021-03-11 13:03:38,638 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:38,640 [main:105] - GENERATED CALL = (bDouble).plus(0.44877461642504357)
2021-03-11 13:03:38,640 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.copyInto(destination: kotlin.DoubleArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2181b8ad]]
2021-03-11 13:03:38,640 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.copyInto(destination: kotlin.DoubleArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2181b8ad]
2021-03-11 13:03:38,771 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:03:38,905 [main:43] - GENERATING CALL OF fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:03:38,907 [main:61] - WITHOUT TYPE PARAMS = fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:03:39,041 [main:302] - generating value of type = Double true depth = 3
2021-03-11 13:03:39,043 [main:95] - GENERATED = doubleArrayOf(0.4760200965967639)
2021-03-11 13:03:39,173 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:39,305 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:39,437 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:39,438 [main:105] - GENERATED CALL = (bDouble).copyInto(doubleArrayOf(0.4760200965967639), 1074498863, 739564812, -653458883)
2021-03-11 13:03:39,438 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.onEach(action: (kotlin.Double) -> kotlin.Unit): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@492cc8ee]]
2021-03-11 13:03:39,439 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.onEach(action: (kotlin.Double) -> kotlin.Unit): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@492cc8ee]
2021-03-11 13:03:39,570 [main:302] - generating value of type = Function1<Double, Unit> false depth = 0
2021-03-11 13:03:39,571 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:03:39,707 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 13:03:39,710 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 13:03:40,131 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 13:03:40,133 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 13:03:40,134 [main:302] - generating value of type = Any false depth = 5
2021-03-11 13:03:40,134 [main:95] - GENERATED = require(false, { "vkgga"})
2021-03-11 13:03:40,134 [main:105] - GENERATED CALL = (bDouble).onEach({a: Double -> require(false, { "vkgga"})})
2021-03-11 13:03:40,135 [main:63] - replacement of bDouble of type DoubleArray is (bDouble).sortedArray()
2021-03-11 13:03:40,265 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:40,265 [main:66] - Compilation checking started
2021-03-11 13:03:40,783 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${("kdgpe").length.div(2709513690241569927)}"

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:40,796 [main:56] - replacing ("Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${("kdgpe").length.div(2709513690241569927)}", String)
2021-03-11 13:03:40,798 [main:38] - replacing "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${("kdgpe").length.div(2709513690241569927)}" String
2021-03-11 13:03:40,799 [main:42] - Getting value of type String
2021-03-11 13:03:40,934 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:03:40,936 [main:46] - GENERATED VALUE OF TYPE String = "vjrmv"
2021-03-11 13:03:40,936 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:41,524 [main:55] - randomType = HashMap<UByte, Map<Short, Short>>
2021-03-11 13:03:41,654 [main:302] - generating value of type = HashMap<UByte, Map<Short, Short>> false depth = 0
2021-03-11 13:03:41,792 [main:43] - GENERATING CALL OF fun <K, V> LinkedHashMap(): HashMap<UByte, Map<Short, Short>> = TODO()
2021-03-11 13:03:41,795 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> LinkedHashMap(): HashMap<UByte, Map<Short, Short>> = TODO()
2021-03-11 13:03:41,930 [main:95] - GENERATED = LinkedHashMap<UByte, Map<Short, Short>>()
2021-03-11 13:03:42,064 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:03:42,194 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:42,196 [main:66] - Generated call from random type = (LinkedHashMap<UByte, Map<Short, Short>>()).size.toString(-1907149759)
2021-03-11 13:03:42,197 [main:94] - GETTING String from Int
2021-03-11 13:03:42,228 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]]
2021-03-11 13:03:42,228 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:03:42,228 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]
2021-03-11 13:03:42,358 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:42,359 [main:105] - GENERATED CALL = (aInt[0]--).toShort().toString(736067956)
2021-03-11 13:03:42,360 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:03:42,360 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:03:42,490 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:42,491 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:03:42,621 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:42,623 [main:105] - GENERATED CALL = (aInt[0]--).compareTo(-60522272).toString(-398474041)
2021-03-11 13:03:42,623 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]]
2021-03-11 13:03:42,623 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:03:42,623 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]
2021-03-11 13:03:42,623 [main:105] - GENERATED CALL = (aInt[0]--).toChar().uppercase()
2021-03-11 13:03:42,623 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:03:42,623 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:42,623 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:03:42,754 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:42,756 [main:105] - GENERATED CALL = (aInt[0]--).toLong().toString(653261825)
2021-03-11 13:03:42,756 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]]
2021-03-11 13:03:42,756 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:03:42,756 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]
2021-03-11 13:03:42,756 [main:105] - GENERATED CALL = (aInt[0]--).toChar().titlecase()
2021-03-11 13:03:42,756 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]]
2021-03-11 13:03:42,756 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:03:42,756 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:03:42,886 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:42,888 [main:105] - GENERATED CALL = (aInt[0]--).toByte().toString(1083382360)
2021-03-11 13:03:42,888 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]]
2021-03-11 13:03:42,888 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:03:42,888 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]
2021-03-11 13:03:42,888 [main:105] - GENERATED CALL = (aInt[0]--).toChar().lowercase()
2021-03-11 13:03:42,888 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:03:42,888 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:03:43,018 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:03:43,020 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:03:43,150 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:43,152 [main:105] - GENERATED CALL = (aInt[0]--).div(3176940849585817123).toString(-1884866904)
2021-03-11 13:03:43,152 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]]
2021-03-11 13:03:43,152 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:03:43,152 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]
2021-03-11 13:03:43,284 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:03:43,286 [main:105] - GENERATED CALL = (aInt[0]--).toChar().plus("omwfh")
2021-03-11 13:03:43,286 [main:101] - Case = [@kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:03:43,286 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:03:43,416 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:43,417 [main:105] - GENERATED CALL = (aInt[0]--).toString(-148199261)
2021-03-11 13:03:43,417 [main:63] - replacement of "Failed post-decrement Long: ${aLong[(bShort).equals("xloyv").compareTo(false)]} != ${("kdgpe").length.div(2709513690241569927)}" of type String is (aInt[0]--).toString(-148199261)
2021-03-11 13:03:43,547 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:43,547 [main:66] - Compilation checking started
2021-03-11 13:03:44,079 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[0]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:44,088 [main:56] - replacing (bShort, ShortArray)
2021-03-11 13:03:44,088 [main:38] - replacing bShort ShortArray
2021-03-11 13:03:44,088 [main:42] - Getting value of type ShortArray
2021-03-11 13:03:44,220 [main:302] - generating value of type = ShortArray false depth = 0
2021-03-11 13:03:44,353 [main:43] - GENERATING CALL OF fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:03:44,355 [main:61] - WITHOUT TYPE PARAMS = fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:03:44,490 [main:302] - generating value of type = Short true depth = 3
2021-03-11 13:03:44,492 [main:95] - GENERATED = shortArrayOf(-28988)
2021-03-11 13:03:44,492 [main:46] - GENERATED VALUE OF TYPE ShortArray = shortArrayOf(-28988)
2021-03-11 13:03:44,492 [main:49] - GENERATED IS CALL =true
2021-03-11 13:03:44,496 [main:55] - randomType = Double
2021-03-11 13:03:44,636 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:44,678 [main:94] - GETTING ShortArray from Short
2021-03-11 13:03:44,712 [main:94] - GETTING ShortArray from Short
2021-03-11 13:03:44,713 [main:94] - GETTING ShortArray from Array<Double>
2021-03-11 13:03:44,723 [main:101] - Case = [public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]]
2021-03-11 13:03:44,723 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]
2021-03-11 13:03:44,724 [main:105] - GENERATED CALL = (aDouble).toShortArray()
2021-03-11 13:03:44,724 [main:63] - replacement of bShort of type ShortArray is (aDouble).toShortArray()
2021-03-11 13:03:44,861 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:44,870 [main:56] - replacing (0, Int)
2021-03-11 13:03:44,871 [main:38] - replacing 0 Int
2021-03-11 13:03:44,871 [main:42] - Getting value of type Int
2021-03-11 13:03:45,005 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:45,006 [main:46] - GENERATED VALUE OF TYPE Int = 1124348450
2021-03-11 13:03:45,006 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:45,620 [main:55] - randomType = MutableMap<LinkedHashSet<Float>, String?>
2021-03-11 13:03:45,620 [main:94] - GETTING Int from Double
2021-03-11 13:03:45,650 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 13:03:45,650 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:45,650 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:03:45,782 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:45,784 [main:105] - GENERATED CALL = (aDouble[0]++).toInt().coerceAtMost(-903437817)
2021-03-11 13:03:45,784 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]]
2021-03-11 13:03:45,784 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:03:45,784 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]
2021-03-11 13:03:45,916 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:03:45,918 [main:105] - GENERATED CALL = (aDouble[0]++).toChar().compareTo('஢')
2021-03-11 13:03:45,918 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:03:45,918 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:45,918 [main:105] - GENERATED CALL = (aDouble[0]++).toInt().sign
2021-03-11 13:03:45,918 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:03:45,918 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:45,918 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:03:45,918 [main:105] - GENERATED CALL = (aDouble[0]++).toInt().countOneBits()
2021-03-11 13:03:45,918 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]]
2021-03-11 13:03:45,919 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:45,919 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]
2021-03-11 13:03:45,919 [main:105] - GENERATED CALL = (aDouble[0]++).toShort().countLeadingZeroBits()
2021-03-11 13:03:45,919 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:03:45,919 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:45,919 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:03:46,067 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:46,068 [main:105] - GENERATED CALL = (aDouble[0]++).toInt().plus(-107)
2021-03-11 13:03:46,068 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]]
2021-03-11 13:03:46,068 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:46,068 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]
2021-03-11 13:03:46,069 [main:105] - GENERATED CALL = (aDouble[0]++).toDouble().roundToInt()
2021-03-11 13:03:46,069 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]]
2021-03-11 13:03:46,069 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:03:46,069 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:03:46,220 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:46,221 [main:105] - GENERATED CALL = (aDouble[0]++).toFloat().compareTo(-49)
2021-03-11 13:03:46,221 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:03:46,221 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:46,357 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:46,359 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:03:46,495 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:46,627 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:46,629 [main:105] - GENERATED CALL = (aDouble[0]++).compareTo(114).coerceIn(2041269254, 376166729)
2021-03-11 13:03:46,629 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:03:46,629 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:46,629 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:03:46,629 [main:105] - GENERATED CALL = (aDouble[0]++).toInt().takeHighestOneBit()
2021-03-11 13:03:46,629 [main:63] - replacement of 0 of type Int is (aDouble[0]++).toInt().countOneBits()
2021-03-11 13:03:46,777 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:46,778 [main:66] - Compilation checking started
2021-03-11 13:03:47,454 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:47,464 [main:56] - replacing (1, Short)
2021-03-11 13:03:47,465 [main:38] - replacing 1 Short
2021-03-11 13:03:47,465 [main:42] - Getting value of type Short
2021-03-11 13:03:47,651 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:03:47,652 [main:46] - GENERATED VALUE OF TYPE Short = 17049
2021-03-11 13:03:47,653 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:47,655 [main:55] - randomType = Double
2021-03-11 13:03:47,793 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:47,833 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:47,833 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:47,833 [main:66] - Generated call from random type = (0.9384543191401876).toDouble().toShort()
2021-03-11 13:03:47,834 [main:94] - GETTING Short from Float
2021-03-11 13:03:47,868 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]]
2021-03-11 13:03:47,868 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:03:47,868 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]
2021-03-11 13:03:48,002 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:48,004 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().rotateLeft(172911582)
2021-03-11 13:03:48,004 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]]
2021-03-11 13:03:48,004 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:03:48,004 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]
2021-03-11 13:03:48,004 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().toShort()
2021-03-11 13:03:48,004 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]]
2021-03-11 13:03:48,004 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:03:48,004 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:03:48,004 [main:105] - GENERATED CALL = (aFloat[0]++).toByte().toShort()
2021-03-11 13:03:48,004 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]]
2021-03-11 13:03:48,004 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:03:48,005 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]
2021-03-11 13:03:48,139 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:48,141 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().rotateRight(458833735)
2021-03-11 13:03:48,141 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.or(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@6f857cd8]]
2021-03-11 13:03:48,141 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:03:48,141 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.or(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@6f857cd8]
2021-03-11 13:03:48,280 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:03:48,281 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().or(-598)
2021-03-11 13:03:48,281 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public fun kotlin.Short.coerceIn(minimumValue: kotlin.Short, maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725e09fb]]
2021-03-11 13:03:48,281 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:03:48,282 [main:137] - GENERATING call of type public fun kotlin.Short.coerceIn(minimumValue: kotlin.Short, maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725e09fb]
2021-03-11 13:03:48,448 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:03:48,605 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:03:48,607 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().coerceIn(5147, 27578)
2021-03-11 13:03:48,607 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]]
2021-03-11 13:03:48,607 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:03:48,607 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:03:48,607 [main:105] - GENERATED CALL = (aFloat[0]++).toLong().toShort()
2021-03-11 13:03:48,607 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:03:48,607 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:03:48,750 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:48,751 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:48,752 [main:105] - GENERATED CALL = (aFloat[0]++).div(0.9870972748135717).toShort()
2021-03-11 13:03:48,752 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:03:48,752 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:03:48,752 [main:105] - GENERATED CALL = (aFloat[0]++).toShort()
2021-03-11 13:03:48,752 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]]
2021-03-11 13:03:48,752 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:03:48,752 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]
2021-03-11 13:03:48,905 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:03:48,907 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().and(-4026)
2021-03-11 13:03:48,907 [main:63] - replacement of 1 of type Short is (aFloat[0]++).toShort().rotateLeft(172911582)
2021-03-11 13:03:49,066 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:49,066 [main:66] - Compilation checking started
2021-03-11 13:03:49,504 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>((aFloat[0]++).toShort().rotateLeft(172911582))
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[0]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:49,513 [main:56] - replacing (0, Int)
2021-03-11 13:03:49,515 [main:38] - replacing 0 Int
2021-03-11 13:03:49,515 [main:42] - Getting value of type Int
2021-03-11 13:03:49,664 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:49,665 [main:46] - GENERATED VALUE OF TYPE Int = 1128567295
2021-03-11 13:03:49,665 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:49,823 [main:55] - randomType = UByte
2021-03-11 13:03:49,960 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:03:50,001 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3d8f7a32]
2021-03-11 13:03:50,140 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:03:50,142 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:03:50,277 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:50,278 [main:66] - Generated call from random type = (75.toUByte()).compareTo(82.toUByte()).times(-102)
2021-03-11 13:03:50,278 [main:63] - replacement of 0 of type Int is (75.toUByte()).compareTo(82.toUByte()).times(-102)
2021-03-11 13:03:50,417 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:50,417 [main:66] - Compilation checking started
2021-03-11 13:03:51,143 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    aShort[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:51,157 [main:56] - replacing (0, Int)
2021-03-11 13:03:51,157 [main:38] - replacing 0 Int
2021-03-11 13:03:51,157 [main:42] - Getting value of type Int
2021-03-11 13:03:51,330 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:51,332 [main:46] - GENERATED VALUE OF TYPE Int = -1610502709
2021-03-11 13:03:51,332 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:51,339 [main:55] - randomType = Int
2021-03-11 13:03:51,503 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:51,562 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:51,562 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:03:51,562 [main:66] - Generated call from random type = (-2048826835).toInt().unaryPlus()
2021-03-11 13:03:51,563 [main:94] - GETTING Int from Double
2021-03-11 13:03:51,604 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 13:03:51,605 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:51,741 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:51,742 [main:105] - GENERATED CALL = (aDouble[0]--).compareTo(-4).absoluteValue
2021-03-11 13:03:51,742 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@57941f83]]
2021-03-11 13:03:51,743 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:03:51,743 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@57941f83]
2021-03-11 13:03:51,743 [main:105] - GENERATED CALL = (aDouble[0]--).toByte().countOneBits()
2021-03-11 13:03:51,743 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:03:51,743 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:51,891 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:51,893 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:03:52,040 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:52,041 [main:105] - GENERATED CALL = (aDouble[0]--).compareTo(120).plus(61)
2021-03-11 13:03:52,041 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:03:52,041 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:03:52,041 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:03:52,041 [main:105] - GENERATED CALL = (aDouble[0]--).toLong().countOneBits()
2021-03-11 13:03:52,041 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]]
2021-03-11 13:03:52,042 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:52,184 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:52,187 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:03:52,187 [main:105] - GENERATED CALL = (aDouble[0]--).compareTo(-93).dec()
2021-03-11 13:03:52,187 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]]
2021-03-11 13:03:52,187 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:03:52,187 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:03:52,342 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:52,344 [main:105] - GENERATED CALL = (aDouble[0]--).toLong().compareTo(83)
2021-03-11 13:03:52,344 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:03:52,344 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:52,507 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:52,509 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:03:52,676 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:52,677 [main:105] - GENERATED CALL = (aDouble[0]--).compareTo(88).times(18)
2021-03-11 13:03:52,678 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]]
2021-03-11 13:03:52,678 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:03:52,678 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]
2021-03-11 13:03:52,678 [main:105] - GENERATED CALL = (aDouble[0]--).toLong().countTrailingZeroBits()
2021-03-11 13:03:52,678 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]]
2021-03-11 13:03:52,678 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:52,678 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]
2021-03-11 13:03:52,678 [main:105] - GENERATED CALL = (aDouble[0]--).toDouble().toInt()
2021-03-11 13:03:52,678 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]]
2021-03-11 13:03:52,678 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:03:52,678 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]
2021-03-11 13:03:52,678 [main:105] - GENERATED CALL = (aDouble[0]--).toFloat().toInt()
2021-03-11 13:03:52,678 [main:63] - replacement of 0 of type Int is (aDouble[0]--).toLong().countTrailingZeroBits()
2021-03-11 13:03:52,851 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:52,865 [main:56] - replacing (aShort, Array<Short>)
2021-03-11 13:03:52,868 [main:38] - replacing aShort Array<Short>
2021-03-11 13:03:52,868 [main:42] - Getting value of type Array<Short>
2021-03-11 13:03:53,027 [main:302] - generating value of type = Array<Short> false depth = 0
2021-03-11 13:03:53,192 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Short): Array<Short> = TODO()
2021-03-11 13:03:53,195 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Short): Array<Short> = TODO()
2021-03-11 13:03:53,669 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:03:53,671 [main:302] - generating value of type = Function1<Int, Short> false depth = 3
2021-03-11 13:03:53,672 [main:302] - generating value of type = Short true depth = 4
2021-03-11 13:03:53,674 [main:95] - GENERATED = Array<Short>(-1121796693, {a: Int -> -23478})
2021-03-11 13:03:53,674 [main:46] - GENERATED VALUE OF TYPE Array<Short> = Array<Short>(-1121796693, {a: Int -> -23478})
2021-03-11 13:03:53,674 [main:49] - GENERATED IS CALL =true
2021-03-11 13:03:53,841 [main:55] - randomType = Boolean?
2021-03-11 13:03:54,017 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:03:54,042 [main:94] - GETTING Array<Short> from Float
2021-03-11 13:03:54,109 [main:94] - GETTING Array<Short> from ByteArray
2021-03-11 13:03:54,129 [main:94] - GETTING Array<Short> from Int
2021-03-11 13:03:54,203 [main:94] - GETTING Array<Short> from Int
2021-03-11 13:03:54,204 [main:94] - GETTING Array<Short> from Byte
2021-03-11 13:03:54,266 [main:94] - GETTING Array<Short> from Short
2021-03-11 13:03:54,319 [main:94] - GETTING Array<Short> from Byte
2021-03-11 13:03:54,320 [main:94] - GETTING Array<Short> from ShortArray
2021-03-11 13:03:54,333 [main:101] - Case = [public fun kotlin.ShortArray.toTypedArray(): kotlin.Array<kotlin.Short> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38109e63]]
2021-03-11 13:03:54,333 [main:137] - GENERATING call of type public fun kotlin.ShortArray.toTypedArray(): kotlin.Array<kotlin.Short> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38109e63]
2021-03-11 13:03:54,333 [main:105] - GENERATED CALL = (bShort).toTypedArray()
2021-03-11 13:03:54,333 [main:63] - replacement of aShort of type Array<Short> is Array<Short>(-1121796693, {a: Int -> -23478})
2021-03-11 13:03:54,538 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:03:54,539 [main:66] - Compilation checking started
2021-03-11 13:03:55,106 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:55,120 [main:56] - replacing (bDouble[(0.73492005391268).toInt().countOneBits()], Double)
2021-03-11 13:03:55,122 [main:38] - replacing bDouble[(0.73492005391268).toInt().countOneBits()] Double
2021-03-11 13:03:55,122 [main:42] - Getting value of type Double
2021-03-11 13:03:55,282 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:55,285 [main:46] - GENERATED VALUE OF TYPE Double = 0.28194858922728827
2021-03-11 13:03:55,285 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:55,288 [main:55] - randomType = Float
2021-03-11 13:03:55,423 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:03:55,459 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:03:55,459 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@5f0c90f2]
2021-03-11 13:03:55,598 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:55,600 [main:66] - Generated call from random type = (0.80151385f).toFloat().rem(0.8776238139094219)
2021-03-11 13:03:55,601 [main:94] - GETTING Double from Int
2021-03-11 13:03:55,635 [main:101] - Case = [public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]]
2021-03-11 13:03:55,635 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]
2021-03-11 13:03:55,635 [main:105] - GENERATED CALL = (aInt[0]).toDouble()
2021-03-11 13:03:55,635 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]]
2021-03-11 13:03:55,635 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:03:55,635 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]
2021-03-11 13:03:55,774 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:55,775 [main:105] - GENERATED CALL = (aInt[0]).toInt().minus(0.34294407527725723)
2021-03-11 13:03:55,775 [main:101] - Case = [public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]]
2021-03-11 13:03:55,775 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]
2021-03-11 13:03:55,927 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:55,929 [main:105] - GENERATED CALL = (aInt[0]).plus(0.3784590098599928)
2021-03-11 13:03:55,929 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]]
2021-03-11 13:03:55,929 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:55,929 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]
2021-03-11 13:03:55,929 [main:105] - GENERATED CALL = (aInt[0]).toDouble().toDouble()
2021-03-11 13:03:55,929 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@6865defc]]
2021-03-11 13:03:55,929 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:55,929 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@6865defc]
2021-03-11 13:03:56,068 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:56,070 [main:105] - GENERATED CALL = (aInt[0]).toDouble().rem(-36)
2021-03-11 13:03:56,070 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.sign: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@23395b41]]
2021-03-11 13:03:56,070 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:03:56,208 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:56,209 [main:105] - GENERATED CALL = (aInt[0]).div(0.4051742088476713).sign
2021-03-11 13:03:56,209 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun plus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5fd21683]]
2021-03-11 13:03:56,209 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:56,209 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5fd21683]
2021-03-11 13:03:56,348 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:56,350 [main:105] - GENERATED CALL = (aInt[0]).toDouble().plus(-84)
2021-03-11 13:03:56,350 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6e98de91]]
2021-03-11 13:03:56,350 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:56,350 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6e98de91]
2021-03-11 13:03:56,489 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:56,491 [main:105] - GENERATED CALL = (aInt[0]).toLong().plus(0.03665489605591743)
2021-03-11 13:03:56,491 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.nextTowards(to: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@12b88c94]]
2021-03-11 13:03:56,491 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:03:56,491 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextTowards(to: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@12b88c94]
2021-03-11 13:03:56,627 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:56,628 [main:105] - GENERATED CALL = (aInt[0]).toDouble().nextTowards(0.059718965140667546)
2021-03-11 13:03:56,628 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1610336f]]
2021-03-11 13:03:56,628 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:03:56,628 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1610336f]
2021-03-11 13:03:56,772 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:56,775 [main:105] - GENERATED CALL = (aInt[0]).toLong().times(0.19602980347421983)
2021-03-11 13:03:56,775 [main:63] - replacement of bDouble[(0.73492005391268).toInt().countOneBits()] of type Double is (aInt[0]).div(0.4051742088476713).sign
2021-03-11 13:03:56,925 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:56,926 [main:66] - Compilation checking started
2021-03-11 13:03:57,309 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != (aInt[0]).div(0.4051742088476713).sign) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:03:57,318 [main:56] - replacing (1, Short)
2021-03-11 13:03:57,318 [main:38] - replacing 1 Short
2021-03-11 13:03:57,318 [main:42] - Getting value of type Short
2021-03-11 13:03:57,455 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:03:57,456 [main:46] - GENERATED VALUE OF TYPE Short = -19379
2021-03-11 13:03:57,456 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:57,605 [main:55] - randomType = UShort
2021-03-11 13:03:57,747 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:03:57,784 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@458e8464]
2021-03-11 13:03:57,784 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]
2021-03-11 13:03:57,966 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:57,968 [main:66] - Generated call from random type = (13960.toUShort()).toShort().rotateRight(-1450289577)
2021-03-11 13:03:57,970 [main:94] - GETTING Short from Double
2021-03-11 13:03:58,011 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]]
2021-03-11 13:03:58,011 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:03:58,011 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:03:58,011 [main:105] - GENERATED CALL = (aDouble[0]--).toLong().toShort()
2021-03-11 13:03:58,011 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]]
2021-03-11 13:03:58,011 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:58,011 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]
2021-03-11 13:03:58,149 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:03:58,151 [main:105] - GENERATED CALL = (aDouble[0]--).toShort().and(-16309)
2021-03-11 13:03:58,152 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:03:58,152 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:03:58,152 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:03:58,152 [main:105] - GENERATED CALL = (aDouble[0]--).toFloat().toShort()
2021-03-11 13:03:58,152 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]]
2021-03-11 13:03:58,152 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:03:58,152 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:03:58,152 [main:105] - GENERATED CALL = (aDouble[0]--).toByte().toShort()
2021-03-11 13:03:58,153 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]]
2021-03-11 13:03:58,153 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:58,153 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]
2021-03-11 13:03:58,153 [main:105] - GENERATED CALL = (aDouble[0]--).toShort().toShort()
2021-03-11 13:03:58,153 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]]
2021-03-11 13:03:58,153 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:58,153 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]
2021-03-11 13:03:58,153 [main:105] - GENERATED CALL = (aDouble[0]--).toShort().inv()
2021-03-11 13:03:58,153 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:03:58,153 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:58,154 [main:105] - GENERATED CALL = (aDouble[0]--).toShort()
2021-03-11 13:03:58,154 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]]
2021-03-11 13:03:58,154 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:58,154 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]
2021-03-11 13:03:58,298 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:03:58,300 [main:105] - GENERATED CALL = (aDouble[0]--).toShort().coerceAtLeast(10029)
2021-03-11 13:03:58,300 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]]
2021-03-11 13:03:58,300 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:03:58,300 [main:137] - GENERATING call of type public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]
2021-03-11 13:03:58,300 [main:105] - GENERATED CALL = (aDouble[0]--).toChar().toShort()
2021-03-11 13:03:58,300 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]]
2021-03-11 13:03:58,300 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:03:58,300 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]
2021-03-11 13:03:58,301 [main:105] - GENERATED CALL = (aDouble[0]--).toShort().takeHighestOneBit()
2021-03-11 13:03:58,301 [main:63] - replacement of 1 of type Short is (aDouble[0]--).toByte().toShort()
2021-03-11 13:03:58,442 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:03:58,450 [main:56] - replacing (0, Int)
2021-03-11 13:03:58,451 [main:38] - replacing 0 Int
2021-03-11 13:03:58,451 [main:42] - Getting value of type Int
2021-03-11 13:03:58,619 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:58,620 [main:46] - GENERATED VALUE OF TYPE Int = 259510801
2021-03-11 13:03:58,620 [main:49] - GENERATED IS CALL =false
2021-03-11 13:03:58,624 [main:55] - randomType = Double
2021-03-11 13:03:58,765 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:03:58,797 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:03:58,934 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:58,935 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:03:59,073 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:59,075 [main:66] - Generated call from random type = (0.5159237378109707).compareTo(-98).xor(536939085)
2021-03-11 13:03:59,076 [main:94] - GETTING Int from Array<Byte>
2021-03-11 13:03:59,091 [main:101] - Case = [public inline fun <T> kotlin.Array<out T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@72bd8149]]
2021-03-11 13:03:59,091 [main:137] - GENERATING call of type public inline fun <T> kotlin.Array<out T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@72bd8149]
2021-03-11 13:03:59,228 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-11 13:03:59,230 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:03:59,231 [main:105] - GENERATED CALL = (aByte).sumBy({a: T -> 1126961497})
2021-03-11 13:03:59,231 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:03:59,231 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:03:59,366 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:59,368 [main:105] - GENERATED CALL = (aByte).size.rotateLeft(-1336886248)
2021-03-11 13:03:59,368 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]]
2021-03-11 13:03:59,368 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-11 13:03:59,506 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:59,508 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]
2021-03-11 13:03:59,508 [main:105] - GENERATED CALL = (aByte).get(-591125171).unaryMinus()
2021-03-11 13:03:59,508 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 13:03:59,508 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:03:59,646 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:59,647 [main:105] - GENERATED CALL = (aByte).size.coerceAtMost(-1361926364)
2021-03-11 13:03:59,647 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:03:59,647 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:03:59,784 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:03:59,786 [main:105] - GENERATED CALL = (aByte).size.xor(-1688097476)
2021-03-11 13:03:59,786 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:03:59,786 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:03:59,786 [main:105] - GENERATED CALL = (aByte).size.inv()
2021-03-11 13:03:59,786 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:03:59,786 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:03:59,921 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:03:59,923 [main:105] - GENERATED CALL = (aByte).size.div(73)
2021-03-11 13:03:59,923 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]]
2021-03-11 13:03:59,923 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-11 13:04:00,066 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:00,068 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]
2021-03-11 13:04:00,068 [main:105] - GENERATED CALL = (aByte).get(-923617825).countLeadingZeroBits()
2021-03-11 13:04:00,068 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:04:00,068 [main:105] - GENERATED CALL = (aByte).size.sign
2021-03-11 13:04:00,068 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]]
2021-03-11 13:04:00,068 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-11 13:04:00,220 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:00,222 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:04:00,387 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:00,388 [main:105] - GENERATED CALL = (aByte).get(534962728).compareTo(-30)
2021-03-11 13:04:00,389 [main:63] - replacement of 0 of type Int is (aByte).sumBy({a: T -> 1126961497})
2021-03-11 13:04:00,532 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:00,532 [main:66] - Compilation checking started
2021-03-11 13:04:00,937 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[(aByte).sumBy({a: T -> 1126961497})]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    floatArrayOf(0.3158462f)[0]++
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:04:00,946 [main:56] - replacing (floatArrayOf(0.3158462f)[0]++, Float)
2021-03-11 13:04:00,947 [main:38] - replacing floatArrayOf(0.3158462f)[0]++ Float
2021-03-11 13:04:00,947 [main:42] - Getting value of type Float
2021-03-11 13:04:01,087 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:01,089 [main:46] - GENERATED VALUE OF TYPE Float = 0.8357252f
2021-03-11 13:04:01,089 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:01,281 [main:55] - randomType = Int?
2021-03-11 13:04:01,421 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:01,461 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:04:01,462 [main:66] - Generated call from random type = (-1430843523)?.toFloat()
2021-03-11 13:04:01,462 [main:94] - GETTING Float from Array<Long>
2021-03-11 13:04:01,477 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]]
2021-03-11 13:04:01,477 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:04:01,622 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:01,624 [main:105] - GENERATED CALL = (aLong).size.div(0.3803997f)
2021-03-11 13:04:01,624 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]]
2021-03-11 13:04:01,624 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]
2021-03-11 13:04:01,758 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:01,759 [main:105] - GENERATED CALL = (aLong).size.rem(0.9719682f)
2021-03-11 13:04:01,759 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], public open fun toFloat(): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@373492b4]]
2021-03-11 13:04:01,759 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:04:01,897 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:01,898 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@373492b4]
2021-03-11 13:04:01,898 [main:105] - GENERATED CALL = (aLong).get(1923150212).toFloat()
2021-03-11 13:04:01,899 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]]
2021-03-11 13:04:01,899 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:04:02,035 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:02,036 [main:105] - GENERATED CALL = (aLong).size.times(0.5983862f)
2021-03-11 13:04:02,037 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]]
2021-03-11 13:04:02,037 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:04:02,176 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:02,178 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]
2021-03-11 13:04:02,315 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:02,316 [main:105] - GENERATED CALL = (aLong).get(-1996790000).minus(0.6041722f)
2021-03-11 13:04:02,316 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.maxOf(selector: (T) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41bc8bf]]
2021-03-11 13:04:02,316 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.maxOf(selector: (T) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41bc8bf]
2021-03-11 13:04:02,463 [main:302] - generating value of type = Function1<T, Float> false depth = 0
2021-03-11 13:04:02,464 [main:302] - generating value of type = Float true depth = 1
2021-03-11 13:04:02,466 [main:105] - GENERATED CALL = (aLong).maxOf({a: T -> 0.48445445f})
2021-03-11 13:04:02,466 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]]
2021-03-11 13:04:02,466 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 13:04:02,600 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:02,601 [main:105] - GENERATED CALL = (aLong).size.minus(0.86663723f)
2021-03-11 13:04:02,602 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Float>.sum(): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1aff6dc1]]
2021-03-11 13:04:02,602 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Float>.sum(): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1aff6dc1]
2021-03-11 13:04:02,602 [main:105] - GENERATED CALL = (aLong).sum()
2021-03-11 13:04:02,602 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:04:02,602 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:04:02,602 [main:105] - GENERATED CALL = (aLong).size.toFloat()
2021-03-11 13:04:02,602 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]]
2021-03-11 13:04:02,602 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]
2021-03-11 13:04:02,736 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:02,737 [main:105] - GENERATED CALL = (aLong).size.plus(0.0058092475f)
2021-03-11 13:04:02,737 [main:63] - replacement of floatArrayOf(0.3158462f)[0]++ of type Float is (aLong).size.plus(0.0058092475f)
2021-03-11 13:04:02,871 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:02,871 [main:66] - Compilation checking started
2021-03-11 13:04:03,357 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if (aShort[0] != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:04:03,366 [main:56] - replacing (bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)], Int)
2021-03-11 13:04:03,367 [main:38] - replacing bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)] Int
2021-03-11 13:04:03,367 [main:42] - Getting value of type Int
2021-03-11 13:04:03,507 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:03,508 [main:46] - GENERATED VALUE OF TYPE Int = 1817382366
2021-03-11 13:04:03,508 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:03,836 [main:55] - randomType = Map<Float, String>
2021-03-11 13:04:03,837 [main:94] - GETTING Int from ShortArray
2021-03-11 13:04:03,851 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]]
2021-03-11 13:04:03,851 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:04:03,985 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:03,987 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:04:04,122 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:04,123 [main:105] - GENERATED CALL = (bShort).get(-46685320).compareTo(-77)
2021-03-11 13:04:04,123 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:04:04,123 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:04:04,264 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:04,265 [main:105] - GENERATED CALL = (bShort).size.shr(-1186563404)
2021-03-11 13:04:04,265 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 13:04:04,265 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:04:04,411 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:04,412 [main:105] - GENERATED CALL = (bShort).size.coerceAtMost(2016991239)
2021-03-11 13:04:04,413 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]]
2021-03-11 13:04:04,413 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:04:04,609 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:04,611 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]
2021-03-11 13:04:04,611 [main:105] - GENERATED CALL = (bShort).get(675872026).unaryMinus()
2021-03-11 13:04:04,611 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]]
2021-03-11 13:04:04,611 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:04:04,754 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:04,756 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]
2021-03-11 13:04:04,919 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:04,922 [main:105] - GENERATED CALL = (bShort).get(-751001737).plus(-121)
2021-03-11 13:04:04,922 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:04:04,922 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:04:05,084 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:05,260 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:05,262 [main:105] - GENERATED CALL = (bShort).size.coerceIn(-933431548, 628512792)
2021-03-11 13:04:05,262 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:04:05,262 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:04:05,428 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:05,430 [main:105] - GENERATED CALL = (bShort).size.div(55)
2021-03-11 13:04:05,430 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:04:05,430 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:04:05,430 [main:105] - GENERATED CALL = (bShort).size.toInt()
2021-03-11 13:04:05,430 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.sumOf(selector: (kotlin.Short) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f468a5c]]
2021-03-11 13:04:05,430 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.sumOf(selector: (kotlin.Short) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f468a5c]
2021-03-11 13:04:05,584 [main:302] - generating value of type = Function1<Short, Int> false depth = 0
2021-03-11 13:04:05,585 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:04:05,587 [main:105] - GENERATED CALL = (bShort).sumOf({a: Short -> -1215431036})
2021-03-11 13:04:05,587 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]]
2021-03-11 13:04:05,587 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:04:05,745 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:05,747 [main:105] - GENERATED CALL = (bShort).size.shl(1289211165)
2021-03-11 13:04:05,747 [main:63] - replacement of bInt[(LinkedHashSet<UShort>(587005393)).size.times(-98)] of type Int is (bShort).size.shl(1289211165)
2021-03-11 13:04:05,912 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:05,922 [main:56] - replacing (bLong[(aLong[0]--).toInt().rotateLeft(1412557713)], Long)
2021-03-11 13:04:05,922 [main:38] - replacing bLong[(aLong[0]--).toInt().rotateLeft(1412557713)] Long
2021-03-11 13:04:05,922 [main:42] - Getting value of type Long
2021-03-11 13:04:06,091 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:06,093 [main:46] - GENERATED VALUE OF TYPE Long = -4429675037217489989
2021-03-11 13:04:06,093 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:06,096 [main:55] - randomType = Double
2021-03-11 13:04:06,249 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:04:06,296 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:04:06,296 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@20fa06fc]
2021-03-11 13:04:06,434 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:06,436 [main:66] - Generated call from random type = (0.5781440416333761).toLong().rem(-115)
2021-03-11 13:04:06,436 [main:94] - GETTING Long from Short
2021-03-11 13:04:06,471 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]]
2021-03-11 13:04:06,471 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:04:06,608 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:04:06,610 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]
2021-03-11 13:04:06,610 [main:105] - GENERATED CALL = (bShort[0]++).div(0.4803377226444667).roundToLong()
2021-03-11 13:04:06,610 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c59df0a]]
2021-03-11 13:04:06,610 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:04:06,610 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c59df0a]
2021-03-11 13:04:06,743 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:06,744 [main:105] - GENERATED CALL = (bShort[0]++).toLong().or(2854453611780255657)
2021-03-11 13:04:06,744 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5191e0c7], public open val start: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@6a7b3c9e]]
2021-03-11 13:04:06,744 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5191e0c7]
2021-03-11 13:04:06,879 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:06,880 [main:105] - GENERATED CALL = (bShort[0]++).rangeTo(-8473521475996005335).start
2021-03-11 13:04:06,880 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2372d47d]]
2021-03-11 13:04:06,880 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:04:06,881 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2372d47d]
2021-03-11 13:04:07,036 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:07,038 [main:105] - GENERATED CALL = (bShort[0]++).toLong().div(-45)
2021-03-11 13:04:07,038 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@40584aff]]
2021-03-11 13:04:07,038 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:04:07,039 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@40584aff]
2021-03-11 13:04:07,176 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:07,178 [main:105] - GENERATED CALL = (bShort[0]++).toByte().rem(7650448456567442145)
2021-03-11 13:04:07,178 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]]
2021-03-11 13:04:07,178 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:07,178 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]
2021-03-11 13:04:07,314 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:07,316 [main:105] - GENERATED CALL = (bShort[0]++).toInt().rem(-688159816838691343)
2021-03-11 13:04:07,316 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@238f7bfd]]
2021-03-11 13:04:07,316 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@238f7bfd]
2021-03-11 13:04:07,316 [main:105] - GENERATED CALL = (bShort[0]++).toLong()
2021-03-11 13:04:07,316 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toRawBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@181bb932]]
2021-03-11 13:04:07,316 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:04:07,316 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toRawBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@181bb932]
2021-03-11 13:04:07,316 [main:105] - GENERATED CALL = (bShort[0]++).toDouble().toRawBits()
2021-03-11 13:04:07,316 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@23c7f542]]
2021-03-11 13:04:07,316 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:04:07,316 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@23c7f542]
2021-03-11 13:04:07,316 [main:105] - GENERATED CALL = (bShort[0]++).toLong().unaryPlus()
2021-03-11 13:04:07,316 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@4202af59]]
2021-03-11 13:04:07,316 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:04:07,316 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@4202af59]
2021-03-11 13:04:07,317 [main:105] - GENERATED CALL = (bShort[0]++).toDouble().toBits()
2021-03-11 13:04:07,317 [main:63] - replacement of bLong[(aLong[0]--).toInt().rotateLeft(1412557713)] of type Long is (bShort[0]++).rangeTo(-8473521475996005335).start
2021-03-11 13:04:07,451 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:07,459 [main:56] - replacing (arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()], Byte)
2021-03-11 13:04:07,459 [main:38] - replacing arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] Byte
2021-03-11 13:04:07,459 [main:42] - Getting value of type Byte
2021-03-11 13:04:07,595 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:07,596 [main:46] - GENERATED VALUE OF TYPE Byte = 55
2021-03-11 13:04:07,596 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:07,599 [main:55] - randomType = Int
2021-03-11 13:04:07,735 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:07,767 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:04:07,767 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:04:07,767 [main:66] - Generated call from random type = (342851503).toFloat().toByte()
2021-03-11 13:04:07,768 [main:94] - GETTING Byte from Float
2021-03-11 13:04:07,797 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]]
2021-03-11 13:04:07,797 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:04:07,797 [main:105] - GENERATED CALL = (bFloat[0]--).toByte()
2021-03-11 13:04:07,798 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public fun kotlin.Byte.coerceAtMost(maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7d7437d2]]
2021-03-11 13:04:07,798 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:04:07,798 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtMost(maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7d7437d2]
2021-03-11 13:04:07,946 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:07,948 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().coerceAtMost(2)
2021-03-11 13:04:07,948 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:04:07,948 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:04:08,128 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:08,129 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:04:08,129 [main:105] - GENERATED CALL = (bFloat[0]--).compareTo(-18).toByte()
2021-03-11 13:04:08,129 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]]
2021-03-11 13:04:08,130 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:04:08,130 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]
2021-03-11 13:04:08,130 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().dec()
2021-03-11 13:04:08,130 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:04:08,130 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:04:08,130 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:04:08,130 [main:105] - GENERATED CALL = (bFloat[0]--).toDouble().toByte()
2021-03-11 13:04:08,130 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:04:08,130 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:04:08,271 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:04:08,272 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:04:08,273 [main:105] - GENERATED CALL = (bFloat[0]--).div(0.28128936377476177).toByte()
2021-03-11 13:04:08,273 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public open fun toByte(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@134162cc]]
2021-03-11 13:04:08,273 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:04:08,273 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@134162cc]
2021-03-11 13:04:08,273 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().toByte()
2021-03-11 13:04:08,274 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]]
2021-03-11 13:04:08,274 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:04:08,274 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]
2021-03-11 13:04:08,430 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:08,432 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().or(-17)
2021-03-11 13:04:08,432 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]]
2021-03-11 13:04:08,432 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:04:08,432 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:04:08,432 [main:105] - GENERATED CALL = (bFloat[0]--).toLong().toByte()
2021-03-11 13:04:08,432 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]]
2021-03-11 13:04:08,432 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:04:08,432 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:04:08,432 [main:105] - GENERATED CALL = (bFloat[0]--).toFloat().toByte()
2021-03-11 13:04:08,432 [main:63] - replacement of arrayOfNulls<Byte>(-356669437)[(aInt[0]--).unaryPlus()] of type Byte is (bFloat[0]--).toByte().toByte()
2021-03-11 13:04:08,583 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:08,592 [main:56] - replacing (aShort[0], Short)
2021-03-11 13:04:08,594 [main:38] - replacing aShort[0] Short
2021-03-11 13:04:08,594 [main:42] - Getting value of type Short
2021-03-11 13:04:08,736 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:04:08,737 [main:46] - GENERATED VALUE OF TYPE Short = -17766
2021-03-11 13:04:08,737 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:08,740 [main:55] - randomType = Boolean
2021-03-11 13:04:08,893 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:04:08,905 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:04:09,053 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:04:09,055 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:04:09,055 [main:66] - Generated call from random type = (false).compareTo(true).toShort()
2021-03-11 13:04:09,056 [main:94] - GETTING Short from Int
2021-03-11 13:04:09,091 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:04:09,091 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:04:09,226 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:04:09,227 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:04:09,227 [main:105] - GENERATED CALL = (aInt[0]++).div(0.4419780769027528).toShort()
2021-03-11 13:04:09,227 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]]
2021-03-11 13:04:09,227 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:04:09,228 [main:137] - GENERATING call of type public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]
2021-03-11 13:04:09,228 [main:105] - GENERATED CALL = (aInt[0]++).toChar().toShort()
2021-03-11 13:04:09,228 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]]
2021-03-11 13:04:09,228 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:04:09,228 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]
2021-03-11 13:04:09,363 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:04:09,364 [main:105] - GENERATED CALL = (aInt[0]++).toShort().coerceAtLeast(-17054)
2021-03-11 13:04:09,364 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]]
2021-03-11 13:04:09,364 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:04:09,365 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]
2021-03-11 13:04:09,365 [main:105] - GENERATED CALL = (aInt[0]++).toShort().toShort()
2021-03-11 13:04:09,365 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:04:09,365 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:04:09,365 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:04:09,365 [main:105] - GENERATED CALL = (aInt[0]++).toDouble().toShort()
2021-03-11 13:04:09,365 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]]
2021-03-11 13:04:09,365 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:04:09,499 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:09,501 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:04:09,501 [main:105] - GENERATED CALL = (aInt[0]++).compareTo(-502714942).toShort()
2021-03-11 13:04:09,501 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]]
2021-03-11 13:04:09,501 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:04:09,501 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]
2021-03-11 13:04:09,501 [main:105] - GENERATED CALL = (aInt[0]++).toShort().inv()
2021-03-11 13:04:09,501 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public fun kotlin.Short.coerceIn(minimumValue: kotlin.Short, maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725e09fb]]
2021-03-11 13:04:09,501 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:04:09,502 [main:137] - GENERATING call of type public fun kotlin.Short.coerceIn(minimumValue: kotlin.Short, maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725e09fb]
2021-03-11 13:04:09,636 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:04:09,786 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:04:09,787 [main:105] - GENERATED CALL = (aInt[0]++).toShort().coerceIn(-17218, -16672)
2021-03-11 13:04:09,787 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]]
2021-03-11 13:04:09,787 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:09,787 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:04:09,788 [main:105] - GENERATED CALL = (aInt[0]++).toInt().toShort()
2021-03-11 13:04:09,788 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]]
2021-03-11 13:04:09,788 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:04:09,788 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]
2021-03-11 13:04:09,952 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:04:09,954 [main:105] - GENERATED CALL = (aInt[0]++).toShort().and(-4707)
2021-03-11 13:04:09,954 [main:63] - replacement of aShort[0] of type Short is (aInt[0]++).toChar().toShort()
2021-03-11 13:04:10,100 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:10,100 [main:66] - Compilation checking started
2021-03-11 13:04:10,586 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    bByte[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:04:10,596 [main:56] - replacing (bByte[(bInt[0]).div(7754093358583089734).countOneBits()], Byte)
2021-03-11 13:04:10,596 [main:38] - replacing bByte[(bInt[0]).div(7754093358583089734).countOneBits()] Byte
2021-03-11 13:04:10,596 [main:42] - Getting value of type Byte
2021-03-11 13:04:10,757 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:10,758 [main:46] - GENERATED VALUE OF TYPE Byte = -101
2021-03-11 13:04:10,758 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:10,937 [main:55] - randomType = String?
2021-03-11 13:04:11,083 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:04:11,109 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1268a8b6]
2021-03-11 13:04:11,251 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:04:11,252 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:04:11,253 [main:66] - Generated call from random type = ("obhcb")?.compareTo("msjxu").toByte()
2021-03-11 13:04:11,253 [main:63] - replacement of bByte[(bInt[0]).div(7754093358583089734).countOneBits()] of type Byte is ("obhcb")?.compareTo("msjxu").toByte()
2021-03-11 13:04:11,392 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:11,401 [main:56] - replacing (0, Int)
2021-03-11 13:04:11,401 [main:38] - replacing 0 Int
2021-03-11 13:04:11,401 [main:42] - Getting value of type Int
2021-03-11 13:04:11,545 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:11,547 [main:46] - GENERATED VALUE OF TYPE Int = -1332061127
2021-03-11 13:04:11,547 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:11,883 [main:55] - randomType = HashMap<ArrayList<UInt>, Long>
2021-03-11 13:04:12,018 [main:302] - generating value of type = HashMap<ArrayList<UInt>, Long> false depth = 0
2021-03-11 13:04:12,185 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(): HashMap<ArrayList<UInt>, Long> = TODO()
2021-03-11 13:04:12,187 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(): HashMap<ArrayList<UInt>, Long> = TODO()
2021-03-11 13:04:12,349 [main:95] - GENERATED = hashMapOf<ArrayList<UInt>, Long>()
2021-03-11 13:04:12,498 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:04:12,498 [main:66] - Generated call from random type = (hashMapOf<ArrayList<UInt>, Long>()).size.unaryPlus()
2021-03-11 13:04:12,499 [main:94] - GETTING Int from Short
2021-03-11 13:04:12,543 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]]
2021-03-11 13:04:12,543 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:04:12,544 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]
2021-03-11 13:04:12,544 [main:105] - GENERATED CALL = (aShort[0]++).toLong().countTrailingZeroBits()
2021-03-11 13:04:12,544 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]]
2021-03-11 13:04:12,544 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:04:12,544 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:04:12,693 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:12,695 [main:105] - GENERATED CALL = (aShort[0]++).toFloat().compareTo(-67)
2021-03-11 13:04:12,695 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 13:04:12,695 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:04:12,854 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:12,855 [main:105] - GENERATED CALL = (aShort[0]++).compareTo(26).absoluteValue
2021-03-11 13:04:12,856 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]]
2021-03-11 13:04:12,856 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:04:12,856 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]
2021-03-11 13:04:12,856 [main:105] - GENERATED CALL = (aShort[0]++).toLong().toInt()
2021-03-11 13:04:12,856 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]]
2021-03-11 13:04:12,856 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:04:12,997 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:04:12,998 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:04:13,135 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:13,136 [main:105] - GENERATED CALL = (aShort[0]++).div(0.8939438286615485).compareTo(-8)
2021-03-11 13:04:13,137 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1619ead0], public final val last: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@4d376558]]
2021-03-11 13:04:13,137 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1619ead0]
2021-03-11 13:04:13,273 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:13,275 [main:105] - GENERATED CALL = (aShort[0]++).rangeTo(-4).last
2021-03-11 13:04:13,275 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:04:13,275 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:04:13,412 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:13,414 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:04:13,547 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:13,549 [main:105] - GENERATED CALL = (aShort[0]++).compareTo(99).compareTo(-67)
2021-03-11 13:04:13,549 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:04:13,549 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:13,549 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:04:13,686 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:13,832 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:13,834 [main:105] - GENERATED CALL = (aShort[0]++).toInt().coerceIn(-1493351110, 514031269)
2021-03-11 13:04:13,834 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@57941f83]]
2021-03-11 13:04:13,834 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:04:13,834 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@57941f83]
2021-03-11 13:04:13,834 [main:105] - GENERATED CALL = (aShort[0]++).toByte().countOneBits()
2021-03-11 13:04:13,834 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1619ead0], public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@104809e3]]
2021-03-11 13:04:13,834 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1619ead0]
2021-03-11 13:04:13,976 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:13,977 [main:105] - GENERATED CALL = (aShort[0]++).rangeTo(-39).endInclusive
2021-03-11 13:04:13,977 [main:63] - replacement of 0 of type Int is (hashMapOf<ArrayList<UInt>, Long>()).size.unaryPlus()
2021-03-11 13:04:14,111 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:14,120 [main:56] - replacing (bByte, ByteArray)
2021-03-11 13:04:14,121 [main:38] - replacing bByte ByteArray
2021-03-11 13:04:14,121 [main:42] - Getting value of type ByteArray
2021-03-11 13:04:14,255 [main:302] - generating value of type = ByteArray false depth = 0
2021-03-11 13:04:14,395 [main:43] - GENERATING CALL OF fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 13:04:14,397 [main:61] - WITHOUT TYPE PARAMS = fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 13:04:14,537 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 13:04:14,539 [main:95] - GENERATED = byteArrayOf(34)
2021-03-11 13:04:14,539 [main:46] - GENERATED VALUE OF TYPE ByteArray = byteArrayOf(34)
2021-03-11 13:04:14,539 [main:49] - GENERATED IS CALL =true
2021-03-11 13:04:14,542 [main:55] - randomType = Float
2021-03-11 13:04:14,679 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:14,727 [main:94] - GETTING ByteArray from Float
2021-03-11 13:04:14,761 [main:94] - GETTING ByteArray from Short
2021-03-11 13:04:14,798 [main:94] - GETTING ByteArray from Short
2021-03-11 13:04:14,799 [main:94] - GETTING ByteArray from Double
2021-03-11 13:04:14,831 [main:94] - GETTING ByteArray from IntArray
2021-03-11 13:04:14,840 [main:94] - GETTING ByteArray from Double
2021-03-11 13:04:14,841 [main:94] - GETTING ByteArray from Int
2021-03-11 13:04:14,895 [main:94] - GETTING ByteArray from Double
2021-03-11 13:04:14,896 [main:94] - GETTING ByteArray from Int
2021-03-11 13:04:14,897 [main:94] - GETTING ByteArray from LongArray
2021-03-11 13:04:14,914 [main:94] - GETTING ByteArray from Array<Double>
2021-03-11 13:04:14,935 [main:101] - Case = [public fun kotlin.Array<out kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d16787e]]
2021-03-11 13:04:14,935 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d16787e]
2021-03-11 13:04:14,936 [main:105] - GENERATED CALL = (aDouble).toByteArray()
2021-03-11 13:04:14,936 [main:63] - replacement of bByte of type ByteArray is byteArrayOf(34)
2021-03-11 13:04:15,080 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:04:15,080 [main:66] - Compilation checking started
2021-03-11 13:04:15,693 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return "OK"
}


2021-03-11 13:04:15,706 [main:56] - replacing (bInt, IntArray)
2021-03-11 13:04:15,706 [main:38] - replacing bInt IntArray
2021-03-11 13:04:15,706 [main:42] - Getting value of type IntArray
2021-03-11 13:04:15,865 [main:302] - generating value of type = IntArray false depth = 0
2021-03-11 13:04:16,007 [main:43] - GENERATING CALL OF fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:04:16,011 [main:61] - WITHOUT TYPE PARAMS = fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:04:16,156 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:04:16,157 [main:95] - GENERATED = intArrayOf(1921451119)
2021-03-11 13:04:16,157 [main:46] - GENERATED VALUE OF TYPE IntArray = intArrayOf(1921451119)
2021-03-11 13:04:16,157 [main:49] - GENERATED IS CALL =true
2021-03-11 13:04:16,472 [main:55] - randomType = LinkedHashMap<Boolean, Byte>
2021-03-11 13:04:16,630 [main:302] - generating value of type = LinkedHashMap<Boolean, Byte> false depth = 0
2021-03-11 13:04:16,800 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(pairs: Pair<Boolean, Byte>): LkedHashMap<Boolean, Byte> = TODO()
2021-03-11 13:04:16,803 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(pairs: Pair<Boolean, Byte>): LkedHashMap<Boolean, Byte> = TODO()
2021-03-11 13:04:16,971 [main:302] - generating value of type = Pair<Boolean, Byte> false depth = 3
2021-03-11 13:04:17,130 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Boolean, second: Byte): Pair<Boolean, Byte> = TODO()
2021-03-11 13:04:17,132 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Boolean, second: Byte): Pair<Boolean, Byte> = TODO()
2021-03-11 13:04:17,292 [main:302] - generating value of type = Boolean true depth = 6
2021-03-11 13:04:17,294 [main:302] - generating value of type = Byte true depth = 6
2021-03-11 13:04:17,295 [main:95] - GENERATED = Pair<Boolean, Byte>(false, -121)
2021-03-11 13:04:17,295 [main:95] - GENERATED = linkedMapOf<Boolean, Byte>(Pair<Boolean, Byte>(false, -121))
2021-03-11 13:04:17,449 [main:137] - GENERATING call of type public fun kotlin.collections.Collection<kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5a31737b]
2021-03-11 13:04:17,449 [main:66] - Generated call from random type = (linkedMapOf<Boolean, Byte>(Pair<Boolean, Byte>(false, -121))).values.toIntArray()
2021-03-11 13:04:17,450 [main:94] - GETTING IntArray from Long
2021-03-11 13:04:17,508 [main:94] - GETTING IntArray from ByteArray
2021-03-11 13:04:17,527 [main:94] - GETTING IntArray from Double
2021-03-11 13:04:17,585 [main:94] - GETTING IntArray from Short
2021-03-11 13:04:17,623 [main:94] - GETTING IntArray from Long
2021-03-11 13:04:17,624 [main:94] - GETTING IntArray from Short
2021-03-11 13:04:17,625 [main:94] - GETTING IntArray from Float
2021-03-11 13:04:17,658 [main:94] - GETTING IntArray from Int
2021-03-11 13:04:17,693 [main:94] - GETTING IntArray from Array<Byte>
2021-03-11 13:04:17,704 [main:101] - Case = [public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]]
2021-03-11 13:04:17,704 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]
2021-03-11 13:04:17,704 [main:105] - GENERATED CALL = (aByte).toIntArray()
2021-03-11 13:04:17,704 [main:63] - replacement of bInt of type IntArray is intArrayOf(1921451119)
2021-03-11 13:04:17,839 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:04:17,848 [main:56] - replacing ("OK", String)
2021-03-11 13:04:17,849 [main:38] - replacing "OK" String
2021-03-11 13:04:17,849 [main:42] - Getting value of type String
2021-03-11 13:04:17,987 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:04:17,988 [main:46] - GENERATED VALUE OF TYPE String = "ovhlp"
2021-03-11 13:04:17,989 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:18,189 [main:55] - randomType = Float?
2021-03-11 13:04:18,338 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:18,378 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943]
2021-03-11 13:04:18,379 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]
2021-03-11 13:04:18,516 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:04:18,518 [main:66] - Generated call from random type = (0.3107859f)?.toChar().plus("rgkjn")
2021-03-11 13:04:18,519 [main:94] - GETTING String from Int
2021-03-11 13:04:18,555 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]]
2021-03-11 13:04:18,555 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:04:18,555 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]
2021-03-11 13:04:18,555 [main:105] - GENERATED CALL = (bInt[0]--).toChar().lowercase()
2021-03-11 13:04:18,555 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]]
2021-03-11 13:04:18,555 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:04:18,555 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]
2021-03-11 13:04:18,556 [main:105] - GENERATED CALL = (bInt[0]--).toChar().uppercase()
2021-03-11 13:04:18,556 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]]
2021-03-11 13:04:18,556 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:04:18,556 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]
2021-03-11 13:04:18,556 [main:105] - GENERATED CALL = (bInt[0]--).toChar().titlecase()
2021-03-11 13:04:18,556 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:04:18,556 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:04:18,705 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:18,707 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:04:18,871 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:18,873 [main:105] - GENERATED CALL = (bInt[0]--).compareTo(-1454254293).toString(1754604300)
2021-03-11 13:04:18,873 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]]
2021-03-11 13:04:18,873 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:04:18,873 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]
2021-03-11 13:04:19,046 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:19,048 [main:105] - GENERATED CALL = (bInt[0]--).toShort().toString(1932499576)
2021-03-11 13:04:19,048 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:04:19,048 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:04:19,048 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:04:19,198 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:19,200 [main:105] - GENERATED CALL = (bInt[0]--).toLong().toString(1155899699)
2021-03-11 13:04:19,200 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]]
2021-03-11 13:04:19,200 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:04:19,200 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]
2021-03-11 13:04:19,352 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:04:19,353 [main:105] - GENERATED CALL = (bInt[0]--).toChar().plus("fdxrq")
2021-03-11 13:04:19,353 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:04:19,353 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:19,353 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:04:19,490 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:19,491 [main:105] - GENERATED CALL = (bInt[0]--).toInt().toString(2141761324)
2021-03-11 13:04:19,492 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]]
2021-03-11 13:04:19,492 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:04:19,492 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:04:19,628 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:19,630 [main:105] - GENERATED CALL = (bInt[0]--).toByte().toString(-204155062)
2021-03-11 13:04:19,630 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:04:19,630 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:04:19,765 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:19,767 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:04:19,902 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:19,904 [main:105] - GENERATED CALL = (bInt[0]--).div(8053434456944633971).toString(-946921226)
2021-03-11 13:04:19,904 [main:63] - replacement of "OK" of type String is (0.3107859f)?.toChar().plus("rgkjn")
2021-03-11 13:04:20,044 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:20,045 [main:66] - Compilation checking started
2021-03-11 13:04:20,565 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:04:20,573 [main:56] - replacing (arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914})), Array<Double>)
2021-03-11 13:04:20,575 [main:38] - replacing arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914})) Array<Double>
2021-03-11 13:04:20,575 [main:42] - Getting value of type Array<Double>
2021-03-11 13:04:20,715 [main:302] - generating value of type = Array<Double> false depth = 0
2021-03-11 13:04:20,858 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Double): Array<Double> = TODO()
2021-03-11 13:04:20,861 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Double): Array<Double> = TODO()
2021-03-11 13:04:21,341 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:04:21,343 [main:302] - generating value of type = Function1<Int, Double> false depth = 3
2021-03-11 13:04:21,344 [main:302] - generating value of type = Double true depth = 4
2021-03-11 13:04:21,346 [main:95] - GENERATED = Array<Double>(1464287696, {a: Int -> 0.04463044385513881})
2021-03-11 13:04:21,346 [main:46] - GENERATED VALUE OF TYPE Array<Double> = Array<Double>(1464287696, {a: Int -> 0.04463044385513881})
2021-03-11 13:04:21,346 [main:49] - GENERATED IS CALL =true
2021-03-11 13:04:21,352 [main:55] - randomType = Set<Int>
2021-03-11 13:04:21,353 [main:94] - GETTING Array<Double> from Double
2021-03-11 13:04:21,395 [main:94] - GETTING Array<Double> from ShortArray
2021-03-11 13:04:21,406 [main:94] - GETTING Array<Double> from Double
2021-03-11 13:04:21,406 [main:94] - GETTING Array<Double> from Array<Double>
2021-03-11 13:04:21,416 [main:101] - Case = [public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]]
2021-03-11 13:04:21,416 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]
2021-03-11 13:04:21,416 [main:105] - GENERATED CALL = (aDouble).reversedArray()
2021-03-11 13:04:21,416 [main:101] - Case = [public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]]
2021-03-11 13:04:21,416 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]
2021-03-11 13:04:21,555 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:04:21,701 [main:43] - GENERATING CALL OF fun <T> mutableSetOf(): Collection<Int> = TODO()
2021-03-11 13:04:21,703 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableSetOf(): Collection<Int> = TODO()
2021-03-11 13:04:21,847 [main:95] - GENERATED = mutableSetOf<Int>()
2021-03-11 13:04:21,847 [main:105] - GENERATED CALL = (aDouble).sliceArray(mutableSetOf<Int>())
2021-03-11 13:04:21,847 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]]
2021-03-11 13:04:21,847 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]
2021-03-11 13:04:21,847 [main:105] - GENERATED CALL = (aDouble).sortedArray()
2021-03-11 13:04:21,847 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]]
2021-03-11 13:04:21,847 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]
2021-03-11 13:04:21,847 [main:105] - GENERATED CALL = (aDouble).sortedArrayDescending()
2021-03-11 13:04:21,847 [main:101] - Case = [public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]]
2021-03-11 13:04:21,848 [main:137] - GENERATING call of type public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]
2021-03-11 13:04:21,848 [main:105] - GENERATED CALL = (aDouble).requireNoNulls()
2021-03-11 13:04:21,848 [main:63] - replacement of arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914})) of type Array<Double> is (aDouble).sortedArrayDescending()
2021-03-11 13:04:21,987 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:21,988 [main:66] - Compilation checking started
2021-03-11 13:04:22,373 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = (aDouble).sortedArrayDescending()
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:04:22,382 [main:56] - replacing (longArrayOf(-9188166699576211219)[0], Long)
2021-03-11 13:04:22,383 [main:38] - replacing longArrayOf(-9188166699576211219)[0] Long
2021-03-11 13:04:22,383 [main:42] - Getting value of type Long
2021-03-11 13:04:22,559 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:22,560 [main:46] - GENERATED VALUE OF TYPE Long = 1165728682116640824
2021-03-11 13:04:22,561 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:23,019 [main:55] - randomType = Pair<ULong?, UInt>
2021-03-11 13:04:23,155 [main:302] - generating value of type = Pair<ULong?, UInt> false depth = 0
2021-03-11 13:04:23,297 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: ULong?, second: UInt): Pair<ULong?, UInt> = TODO()
2021-03-11 13:04:23,300 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: ULong?, second: UInt): Pair<ULong?, UInt> = TODO()
2021-03-11 13:04:23,443 [main:302] - generating value of type = ULong true depth = 3
2021-03-11 13:04:23,444 [main:302] - generating value of type = UInt true depth = 3
2021-03-11 13:04:23,446 [main:95] - GENERATED = Pair<ULong?, UInt>(5482367879933764650.toULong(), 1914621188.toUInt())
2021-03-11 13:04:23,460 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@1d9bd1c1]
2021-03-11 13:04:23,461 [main:66] - Generated call from random type = (Pair<ULong?, UInt>(5482367879933764650.toULong(), 1914621188.toUInt())).first?.toLong()!!
2021-03-11 13:04:23,461 [main:94] - GETTING Long from LongArray
2021-03-11 13:04:23,470 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]]
2021-03-11 13:04:23,470 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]
2021-03-11 13:04:23,610 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:23,612 [main:105] - GENERATED CALL = (bLong).size.rem(2874345834779067870)
2021-03-11 13:04:23,612 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@6eb1a9b2]]
2021-03-11 13:04:23,612 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221]
2021-03-11 13:04:23,752 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:23,753 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@6eb1a9b2]
2021-03-11 13:04:23,754 [main:105] - GENERATED CALL = (bLong).get(-1495523231).takeHighestOneBit()
2021-03-11 13:04:23,754 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeLowestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@463a766]]
2021-03-11 13:04:23,754 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221]
2021-03-11 13:04:23,893 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:23,895 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeLowestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@463a766]
2021-03-11 13:04:23,895 [main:105] - GENERATED CALL = (bLong).get(388810428).takeLowestOneBit()
2021-03-11 13:04:23,895 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221], public open fun toLong(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3a4635ca]]
2021-03-11 13:04:23,895 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221]
2021-03-11 13:04:24,032 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:24,034 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3a4635ca]
2021-03-11 13:04:24,034 [main:105] - GENERATED CALL = (bLong).get(-1471300459).toLong()
2021-03-11 13:04:24,034 [main:101] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.LongArray.component1(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1294bcb1]]
2021-03-11 13:04:24,034 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.LongArray.component1(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1294bcb1]
2021-03-11 13:04:24,034 [main:105] - GENERATED CALL = (bLong).component1()
2021-03-11 13:04:24,034 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221], public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@23c7f542]]
2021-03-11 13:04:24,034 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221]
2021-03-11 13:04:24,178 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:24,179 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@23c7f542]
2021-03-11 13:04:24,180 [main:105] - GENERATED CALL = (bLong).get(-1053804000).unaryPlus()
2021-03-11 13:04:24,180 [main:101] - Case = [public fun kotlin.LongArray.elementAt(index: kotlin.Int): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d0a7e80]]
2021-03-11 13:04:24,180 [main:137] - GENERATING call of type public fun kotlin.LongArray.elementAt(index: kotlin.Int): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d0a7e80]
2021-03-11 13:04:24,320 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:24,321 [main:105] - GENERATED CALL = (bLong).elementAt(1345653817)
2021-03-11 13:04:24,321 [main:101] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.LongArray.component4(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@449e985c]]
2021-03-11 13:04:24,322 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.LongArray.component4(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@449e985c]
2021-03-11 13:04:24,322 [main:105] - GENERATED CALL = (bLong).component4()
2021-03-11 13:04:24,322 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221], public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2372d47d]]
2021-03-11 13:04:24,322 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221]
2021-03-11 13:04:24,460 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:24,462 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2372d47d]
2021-03-11 13:04:24,600 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:24,602 [main:105] - GENERATED CALL = (bLong).get(-1839677034).div(-81)
2021-03-11 13:04:24,602 [main:101] - Case = [public fun kotlin.LongArray.single(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2a8a173b]]
2021-03-11 13:04:24,602 [main:137] - GENERATING call of type public fun kotlin.LongArray.single(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2a8a173b]
2021-03-11 13:04:24,602 [main:105] - GENERATED CALL = (bLong).single()
2021-03-11 13:04:24,602 [main:63] - replacement of longArrayOf(-9188166699576211219)[0] of type Long is (bLong).get(388810428).takeLowestOneBit()
2021-03-11 13:04:24,740 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:24,741 [main:66] - Compilation checking started
2021-03-11 13:04:25,129 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}"

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (bLong).get(388810428).takeLowestOneBit()++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:04:25,138 [main:56] - replacing ("Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}", String)
2021-03-11 13:04:25,139 [main:38] - replacing "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}" String
2021-03-11 13:04:25,140 [main:42] - Getting value of type String
2021-03-11 13:04:25,277 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:04:25,278 [main:46] - GENERATED VALUE OF TYPE String = "ifytp"
2021-03-11 13:04:25,278 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:25,281 [main:55] - randomType = UByte
2021-03-11 13:04:25,421 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:04:25,464 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@3dacaf49]
2021-03-11 13:04:25,464 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:04:25,604 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:25,605 [main:66] - Generated call from random type = (57.toUByte()).toLong().toString(191804755)
2021-03-11 13:04:25,606 [main:94] - GETTING String from Array<Double>
2021-03-11 13:04:25,621 [main:101] - Case = [public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@153a7805]]
2021-03-11 13:04:25,621 [main:137] - GENERATING call of type public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@153a7805]
2021-03-11 13:04:25,772 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 13:04:25,914 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 13:04:26,087 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 13:04:26,231 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 13:04:26,233 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 13:04:26,524 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-11 13:04:26,529 [main:95] - GENERATED = StringBuilder(StringBuilder())
2021-03-11 13:04:26,667 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:26,806 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 13:04:26,949 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 13:04:26,950 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 13:04:27,099 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 13:04:27,102 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-11 13:04:27,404 [main:302] - generating value of type = CharSequence false depth = 4
2021-03-11 13:04:27,549 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 13:04:27,552 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-11 13:04:27,848 [main:302] - generating value of type = String true depth = 7
2021-03-11 13:04:27,850 [main:95] - GENERATED = StringBuilder("cuxox")
2021-03-11 13:04:27,850 [main:95] - GENERATED = StringBuilder(StringBuilder("cuxox"))
2021-03-11 13:04:27,850 [main:105] - GENERATED CALL = (aDouble).joinToString("pppbb", "ajzmw", StringBuilder(StringBuilder()), 159364615, "npfrw", {a: T -> StringBuilder(StringBuilder("cuxox"))})
2021-03-11 13:04:27,850 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2544f6f1]]
2021-03-11 13:04:27,851 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2544f6f1]
2021-03-11 13:04:27,851 [main:105] - GENERATED CALL = (aDouble).contentDeepToString()
2021-03-11 13:04:27,851 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@1f106aaf], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:04:27,851 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:04:27,988 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:27,990 [main:105] - GENERATED CALL = (aDouble).size.toString(-248292875)
2021-03-11 13:04:27,990 [main:101] - Case = [@kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@656a8c8d]]
2021-03-11 13:04:27,990 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@656a8c8d]
2021-03-11 13:04:27,990 [main:105] - GENERATED CALL = (aDouble).contentToString()
2021-03-11 13:04:27,990 [main:63] - replacement of "Failed post-decrement Byte: ${aShort[(aLong[0]++).compareTo(-108).unaryPlus()]} != ${("taohs").encodeToByteArray()[("hgclp").compareTo("mpggk").compareTo(118)]}" of type String is (57.toUByte()).toLong().toString(191804755)
2021-03-11 13:04:28,131 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:28,131 [main:66] - Compilation checking started
2021-03-11 13:04:28,627 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    aLong[0]--
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:04:28,635 [main:56] - replacing (0, Int)
2021-03-11 13:04:28,636 [main:38] - replacing 0 Int
2021-03-11 13:04:28,636 [main:42] - Getting value of type Int
2021-03-11 13:04:28,780 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:28,781 [main:46] - GENERATED VALUE OF TYPE Int = -161608434
2021-03-11 13:04:28,781 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:28,785 [main:55] - randomType = Byte
2021-03-11 13:04:28,930 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:28,966 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3ab8b8ed]
2021-03-11 13:04:29,102 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:29,104 [main:66] - Generated call from random type = (77).rangeTo(61).step
2021-03-11 13:04:29,105 [main:94] - GETTING Int from Double
2021-03-11 13:04:29,135 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]]
2021-03-11 13:04:29,136 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:04:29,136 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:04:29,272 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:29,274 [main:105] - GENERATED CALL = (bDouble[0]--).toByte().compareTo(85)
2021-03-11 13:04:29,274 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:04:29,274 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:29,274 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:04:29,411 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:29,413 [main:105] - GENERATED CALL = (bDouble[0]--).toInt().or(302121429)
2021-03-11 13:04:29,413 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]]
2021-03-11 13:04:29,413 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]
2021-03-11 13:04:29,583 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:04:29,584 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:04:29,719 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:04:29,720 [main:105] - GENERATED CALL = (bDouble[0]--).equals("uxcvu").compareTo(true)
2021-03-11 13:04:29,720 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:04:29,720 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:04:29,862 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:29,864 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:04:30,001 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:30,002 [main:105] - GENERATED CALL = (bDouble[0]--).compareTo(-95).rotateRight(-745979819)
2021-03-11 13:04:30,002 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]]
2021-03-11 13:04:30,002 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:04:30,003 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]
2021-03-11 13:04:30,003 [main:105] - GENERATED CALL = (bDouble[0]--).toByte().countLeadingZeroBits()
2021-03-11 13:04:30,003 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 13:04:30,003 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:04:30,142 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:30,144 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 13:04:30,144 [main:105] - GENERATED CALL = (bDouble[0]--).compareTo(80).countLeadingZeroBits()
2021-03-11 13:04:30,144 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:04:30,144 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:04:30,309 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:30,311 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:04:30,312 [main:105] - GENERATED CALL = (bDouble[0]--).compareTo(-102).toInt()
2021-03-11 13:04:30,312 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]]
2021-03-11 13:04:30,312 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:04:30,312 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]
2021-03-11 13:04:30,472 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:04:30,473 [main:105] - GENERATED CALL = (bDouble[0]--).toChar().minus('꾵')
2021-03-11 13:04:30,473 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 13:04:30,473 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:30,474 [main:105] - GENERATED CALL = (bDouble[0]--).toInt().absoluteValue
2021-03-11 13:04:30,474 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:04:30,474 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:04:30,617 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:30,619 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:04:30,772 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:30,773 [main:105] - GENERATED CALL = (bDouble[0]--).compareTo(4).or(-174665400)
2021-03-11 13:04:30,773 [main:63] - replacement of 0 of type Int is (bDouble[0]--).compareTo(-102).toInt()
2021-03-11 13:04:30,912 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:30,920 [main:56] - replacing (bByte, ByteArray)
2021-03-11 13:04:30,920 [main:38] - replacing bByte ByteArray
2021-03-11 13:04:30,920 [main:42] - Getting value of type ByteArray
2021-03-11 13:04:31,057 [main:302] - generating value of type = ByteArray false depth = 0
2021-03-11 13:04:31,197 [main:43] - GENERATING CALL OF fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 13:04:31,200 [main:61] - WITHOUT TYPE PARAMS = fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 13:04:31,350 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 13:04:31,352 [main:95] - GENERATED = byteArrayOf(-42)
2021-03-11 13:04:31,352 [main:46] - GENERATED VALUE OF TYPE ByteArray = byteArrayOf(-42)
2021-03-11 13:04:31,352 [main:49] - GENERATED IS CALL =true
2021-03-11 13:04:31,681 [main:55] - randomType = Function1<UShort, Byte>
2021-03-11 13:04:31,682 [main:94] - GETTING ByteArray from Array<Byte>
2021-03-11 13:04:31,694 [main:101] - Case = [public fun kotlin.Array<out kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d16787e]]
2021-03-11 13:04:31,694 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d16787e]
2021-03-11 13:04:31,694 [main:105] - GENERATED CALL = (aByte).toByteArray()
2021-03-11 13:04:31,695 [main:63] - replacement of bByte of type ByteArray is (aByte).toByteArray()
2021-03-11 13:04:31,834 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:31,843 [main:56] - replacing (0, Int)
2021-03-11 13:04:31,843 [main:38] - replacing 0 Int
2021-03-11 13:04:31,843 [main:42] - Getting value of type Int
2021-03-11 13:04:31,980 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:31,981 [main:46] - GENERATED VALUE OF TYPE Int = -822925819
2021-03-11 13:04:31,981 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:32,143 [main:55] - randomType = HashMap<Short, Byte>
2021-03-11 13:04:32,279 [main:302] - generating value of type = HashMap<Short, Byte> false depth = 0
2021-03-11 13:04:32,420 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(pairs: Pair<Short, Byte>): HashMap<Short, Byte> = TODO()
2021-03-11 13:04:32,423 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(pairs: Pair<Short, Byte>): HashMap<Short, Byte> = TODO()
2021-03-11 13:04:32,564 [main:302] - generating value of type = Pair<Short, Byte> false depth = 3
2021-03-11 13:04:32,706 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Short, second: Byte): Pair<Short, Byte> = TODO()
2021-03-11 13:04:32,708 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Short, second: Byte): Pair<Short, Byte> = TODO()
2021-03-11 13:04:32,848 [main:302] - generating value of type = Short true depth = 6
2021-03-11 13:04:32,849 [main:302] - generating value of type = Byte true depth = 6
2021-03-11 13:04:32,851 [main:95] - GENERATED = Pair<Short, Byte>(22440, -94)
2021-03-11 13:04:32,851 [main:95] - GENERATED = hashMapOf<Short, Byte>(Pair<Short, Byte>(22440, -94))
2021-03-11 13:04:32,949 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:04:33,124 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:33,126 [main:66] - Generated call from random type = (hashMapOf<Short, Byte>(Pair<Short, Byte>(22440, -94))).size.coerceAtLeast(1595766045)
2021-03-11 13:04:33,126 [main:94] - GETTING Int from Int
2021-03-11 13:04:33,160 [main:101] - Case = [@kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:04:33,160 [main:105] - GENERATED CALL = (bInt[0]).sign
2021-03-11 13:04:33,160 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c585b]]
2021-03-11 13:04:33,160 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:04:33,161 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c585b]
2021-03-11 13:04:33,161 [main:105] - GENERATED CALL = (bInt[0]).toByte().countTrailingZeroBits()
2021-03-11 13:04:33,161 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:04:33,161 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:33,161 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:04:33,299 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:33,300 [main:105] - GENERATED CALL = (bInt[0]).toInt().xor(-1726716576)
2021-03-11 13:04:33,300 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]]
2021-03-11 13:04:33,300 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:04:33,300 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]
2021-03-11 13:04:33,300 [main:105] - GENERATED CALL = (bInt[0]).toFloat().toBits()
2021-03-11 13:04:33,300 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]]
2021-03-11 13:04:33,300 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:04:33,300 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]
2021-03-11 13:04:33,437 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:33,438 [main:105] - GENERATED CALL = (bInt[0]).toShort().div(-95)
2021-03-11 13:04:33,438 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]]
2021-03-11 13:04:33,438 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:04:33,438 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]
2021-03-11 13:04:33,439 [main:105] - GENERATED CALL = (bInt[0]).toLong().countLeadingZeroBits()
2021-03-11 13:04:33,439 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:04:33,439 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:04:33,577 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:33,578 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:04:33,578 [main:105] - GENERATED CALL = (bInt[0]).compareTo(1697207404).unaryMinus()
2021-03-11 13:04:33,579 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:04:33,579 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:33,579 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:04:33,715 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:33,717 [main:105] - GENERATED CALL = (bInt[0]).toInt().coerceAtLeast(-933951553)
2021-03-11 13:04:33,717 [main:101] - Case = [public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:04:33,717 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:04:33,717 [main:105] - GENERATED CALL = (bInt[0]).unaryPlus()
2021-03-11 13:04:33,717 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111], public open val start: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@21cfdb17]]
2021-03-11 13:04:33,717 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111]
2021-03-11 13:04:33,853 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:33,855 [main:105] - GENERATED CALL = (bInt[0]).rangeTo(110).start
2021-03-11 13:04:33,855 [main:63] - replacement of 0 of type Int is (bInt[0]).unaryPlus()
2021-03-11 13:04:33,991 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:33,999 [main:56] - replacing (aLong[0]--, Long)
2021-03-11 13:04:34,000 [main:38] - replacing aLong[0]-- Long
2021-03-11 13:04:34,000 [main:42] - Getting value of type Long
2021-03-11 13:04:34,136 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:34,137 [main:46] - GENERATED VALUE OF TYPE Long = 5072083699228540652
2021-03-11 13:04:34,137 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:35,084 [main:55] - randomType = Function2<MutableMap<Int, Function2<UShort, Byte, String>>, Double, MutableMap<Int?, String>>
2021-03-11 13:04:35,085 [main:94] - GETTING Long from Array<Int>
2021-03-11 13:04:35,095 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]]
2021-03-11 13:04:35,095 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]
2021-03-11 13:04:35,242 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:35,243 [main:105] - GENERATED CALL = (aInt).size.plus(-4367694426560641414)
2021-03-11 13:04:35,243 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]]
2021-03-11 13:04:35,243 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:04:35,379 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:35,381 [main:105] - GENERATED CALL = (aInt).size.div(-1999763063345628674)
2021-03-11 13:04:35,381 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6297a364]]
2021-03-11 13:04:35,381 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6297a364]
2021-03-11 13:04:35,518 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:35,520 [main:105] - GENERATED CALL = (aInt).size.minus(-2208776587017137688)
2021-03-11 13:04:35,520 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]]
2021-03-11 13:04:35,520 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]
2021-03-11 13:04:35,658 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:35,659 [main:105] - GENERATED CALL = (aInt).size.times(2168741935993496115)
2021-03-11 13:04:35,660 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d8efd99]]
2021-03-11 13:04:35,660 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d8efd99]
2021-03-11 13:04:35,660 [main:105] - GENERATED CALL = (aInt).sum()
2021-03-11 13:04:35,660 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.sumOf(selector: (T) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@524a23e8]]
2021-03-11 13:04:35,660 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.sumOf(selector: (T) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@524a23e8]
2021-03-11 13:04:35,799 [main:302] - generating value of type = Function1<T, Long> false depth = 0
2021-03-11 13:04:35,800 [main:302] - generating value of type = Long true depth = 1
2021-03-11 13:04:35,802 [main:105] - GENERATED CALL = (aInt).sumOf({a: T -> 3260355691913269253})
2021-03-11 13:04:35,802 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]]
2021-03-11 13:04:35,802 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]
2021-03-11 13:04:35,941 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:35,942 [main:105] - GENERATED CALL = (aInt).size.rem(-6358458258010829242)
2021-03-11 13:04:35,942 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]]
2021-03-11 13:04:35,942 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]
2021-03-11 13:04:35,943 [main:105] - GENERATED CALL = (aInt).size.toLong()
2021-03-11 13:04:35,943 [main:63] - replacement of aLong[0]-- of type Long is (aInt).sum()
2021-03-11 13:04:36,080 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:36,080 [main:66] - Compilation checking started
2021-03-11 13:04:36,574 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:04:36,583 [main:56] - replacing (arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)), Array<Int>)
2021-03-11 13:04:36,584 [main:38] - replacing arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) Array<Int>
2021-03-11 13:04:36,584 [main:42] - Getting value of type Array<Int>
2021-03-11 13:04:36,757 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:04:36,898 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Int> = TODO()
2021-03-11 13:04:36,900 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Int> = TODO()
2021-03-11 13:04:37,041 [main:95] - GENERATED = emptyArray<Int>()
2021-03-11 13:04:37,041 [main:46] - GENERATED VALUE OF TYPE Array<Int> = emptyArray<Int>()
2021-03-11 13:04:37,041 [main:49] - GENERATED IS CALL =true
2021-03-11 13:04:37,045 [main:55] - randomType = Long
2021-03-11 13:04:37,182 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:04:37,218 [main:94] - GETTING Array<Int> from ShortArray
2021-03-11 13:04:37,230 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:04:37,264 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:04:37,295 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:04:37,328 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:04:37,329 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:04:37,362 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:04:37,397 [main:94] - GETTING Array<Int> from Array<Float>
2021-03-11 13:04:37,407 [main:63] - replacement of arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) of type Array<Int> is aFloat
2021-03-11 13:04:37,546 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:04:37,547 [main:66] - Compilation checking started
2021-03-11 13:04:37,933 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = aFloat
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:04:37,942 [main:56] - replacing (bInt, IntArray)
2021-03-11 13:04:37,942 [main:38] - replacing bInt IntArray
2021-03-11 13:04:37,942 [main:42] - Getting value of type IntArray
2021-03-11 13:04:38,080 [main:302] - generating value of type = IntArray false depth = 0
2021-03-11 13:04:38,227 [main:43] - GENERATING CALL OF fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:04:38,229 [main:61] - WITHOUT TYPE PARAMS = fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:04:38,377 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:04:38,378 [main:95] - GENERATED = intArrayOf(-299592242)
2021-03-11 13:04:38,378 [main:46] - GENERATED VALUE OF TYPE IntArray = intArrayOf(-299592242)
2021-03-11 13:04:38,378 [main:49] - GENERATED IS CALL =true
2021-03-11 13:04:38,693 [main:55] - randomType = Collection<Byte?>
2021-03-11 13:04:38,694 [main:94] - GETTING IntArray from Long
2021-03-11 13:04:38,728 [main:94] - GETTING IntArray from Float
2021-03-11 13:04:38,761 [main:94] - GETTING IntArray from Short
2021-03-11 13:04:38,795 [main:94] - GETTING IntArray from Int
2021-03-11 13:04:38,828 [main:94] - GETTING IntArray from IntArray
2021-03-11 13:04:38,834 [main:101] - Case = [public inline fun kotlin.IntArray.copyOf(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3db2755]]
2021-03-11 13:04:38,834 [main:137] - GENERATING call of type public inline fun kotlin.IntArray.copyOf(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3db2755]
2021-03-11 13:04:38,834 [main:105] - GENERATED CALL = (bInt).copyOf()
2021-03-11 13:04:38,834 [main:101] - Case = [public fun kotlin.IntArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d70df0]]
2021-03-11 13:04:38,834 [main:137] - GENERATING call of type public fun kotlin.IntArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d70df0]
2021-03-11 13:04:38,986 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:04:39,168 [main:43] - GENERATING CALL OF fun <E> buildSet(builderAction: kotlin.collections.MutableSet<Int>.()->kotlin.Unit): Collection<Int> = TODO()
2021-03-11 13:04:39,170 [main:61] - WITHOUT TYPE PARAMS = fun <E> buildSet(builderAction: kotlin.collections.MutableSet<Int>.()->kotlin.Unit): Collection<Int> = TODO()
2021-03-11 13:04:39,496 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<MutableSet<Int>, Unit> false depth = 3
2021-03-11 13:04:39,497 [main:302] - generating value of type = Unit false depth = 4
2021-03-11 13:04:39,671 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 13:04:39,673 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 13:04:39,966 [main:302] - generating value of type = Boolean true depth = 7
2021-03-11 13:04:39,967 [main:95] - GENERATED = check(false)
2021-03-11 13:04:39,967 [main:95] - GENERATED = buildSet<Int>({ check(false)})
2021-03-11 13:04:39,968 [main:105] - GENERATED CALL = (bInt).sliceArray(buildSet<Int>({ check(false)}))
2021-03-11 13:04:39,968 [main:101] - Case = [public fun kotlin.IntArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@288af9bf]]
2021-03-11 13:04:39,968 [main:137] - GENERATING call of type public fun kotlin.IntArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@288af9bf]
2021-03-11 13:04:40,105 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:40,245 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:40,246 [main:105] - GENERATED CALL = (bInt).copyOfRange(-2141825615, -1701850648)
2021-03-11 13:04:40,246 [main:101] - Case = [public inline operator fun kotlin.IntArray.plus(element: kotlin.Int): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@159d4cda]]
2021-03-11 13:04:40,246 [main:137] - GENERATING call of type public inline operator fun kotlin.IntArray.plus(element: kotlin.Int): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@159d4cda]
2021-03-11 13:04:40,430 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:40,432 [main:105] - GENERATED CALL = (bInt).plus(213402342)
2021-03-11 13:04:40,432 [main:101] - Case = [public fun kotlin.IntArray.reversedArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@457298d0]]
2021-03-11 13:04:40,432 [main:137] - GENERATING call of type public fun kotlin.IntArray.reversedArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@457298d0]
2021-03-11 13:04:40,432 [main:105] - GENERATED CALL = (bInt).reversedArray()
2021-03-11 13:04:40,432 [main:101] - Case = [public fun kotlin.IntArray.sortedArrayDescending(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b5224b6]]
2021-03-11 13:04:40,432 [main:137] - GENERATING call of type public fun kotlin.IntArray.sortedArrayDescending(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b5224b6]
2021-03-11 13:04:40,433 [main:105] - GENERATED CALL = (bInt).sortedArrayDescending()
2021-03-11 13:04:40,433 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.onEach(action: (kotlin.Int) -> kotlin.Unit): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@627ff915]]
2021-03-11 13:04:40,433 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.onEach(action: (kotlin.Int) -> kotlin.Unit): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@627ff915]
2021-03-11 13:04:40,587 [main:302] - generating value of type = Function1<Int, Unit> false depth = 0
2021-03-11 13:04:40,588 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:04:40,733 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 13:04:40,736 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 13:04:41,172 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 13:04:41,174 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-11 13:04:41,175 [main:302] - generating value of type = Any false depth = 5
2021-03-11 13:04:41,175 [main:95] - GENERATED = require(true, { "dbixc"})
2021-03-11 13:04:41,176 [main:105] - GENERATED CALL = (bInt).onEach({a: Int -> require(true, { "dbixc"})})
2021-03-11 13:04:41,176 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Int) -> kotlin.Unit): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7356f1c2]]
2021-03-11 13:04:41,176 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Int) -> kotlin.Unit): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7356f1c2]
2021-03-11 13:04:41,314 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Int, Unit> false depth = 0
2021-03-11 13:04:41,315 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:04:41,320 [main:105] - GENERATED CALL = (bInt).onEachIndexed({a: Int, b: Int -> println()})
2021-03-11 13:04:41,320 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.copyInto(destination: kotlin.IntArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1dd8c4ab]]
2021-03-11 13:04:41,320 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.copyInto(destination: kotlin.IntArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1dd8c4ab]
2021-03-11 13:04:41,465 [main:302] - generating value of type = IntArray false depth = 0
2021-03-11 13:04:41,606 [main:43] - GENERATING CALL OF fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:04:41,608 [main:61] - WITHOUT TYPE PARAMS = fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:04:41,749 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:04:41,751 [main:95] - GENERATED = intArrayOf(-558607809)
2021-03-11 13:04:41,887 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:42,029 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:42,179 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:42,180 [main:105] - GENERATED CALL = (bInt).copyInto(intArrayOf(-558607809), -1736007481, 29123404, -2082349839)
2021-03-11 13:04:42,180 [main:101] - Case = [public fun kotlin.IntArray.sortedArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c6ecb9e]]
2021-03-11 13:04:42,180 [main:137] - GENERATING call of type public fun kotlin.IntArray.sortedArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c6ecb9e]
2021-03-11 13:04:42,181 [main:105] - GENERATED CALL = (bInt).sortedArray()
2021-03-11 13:04:42,181 [main:63] - replacement of bInt of type IntArray is (bInt).plus(213402342)
2021-03-11 13:04:42,318 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:42,327 [main:56] - replacing (0, Int)
2021-03-11 13:04:42,327 [main:38] - replacing 0 Int
2021-03-11 13:04:42,327 [main:42] - Getting value of type Int
2021-03-11 13:04:42,467 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:42,468 [main:46] - GENERATED VALUE OF TYPE Int = 1732312153
2021-03-11 13:04:42,468 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:42,620 [main:55] - randomType = Double?
2021-03-11 13:04:42,757 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:04:42,794 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:04:42,934 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:42,936 [main:66] - Generated call from random type = (0.7475501466781505)?.compareTo(22)
2021-03-11 13:04:42,937 [main:94] - GETTING Int from Short
2021-03-11 13:04:42,979 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]]
2021-03-11 13:04:42,979 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:04:42,980 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]
2021-03-11 13:04:42,980 [main:105] - GENERATED CALL = (aShort[0]).toShort().countOneBits()
2021-03-11 13:04:42,980 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:04:42,980 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:04:43,125 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:43,127 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:04:43,263 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:43,265 [main:105] - GENERATED CALL = (aShort[0]).compareTo(-120).shr(1653167427)
2021-03-11 13:04:43,265 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]]
2021-03-11 13:04:43,265 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:04:43,265 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]
2021-03-11 13:04:43,265 [main:105] - GENERATED CALL = (aShort[0]).toShort().unaryMinus()
2021-03-11 13:04:43,265 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]]
2021-03-11 13:04:43,265 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:04:43,265 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]
2021-03-11 13:04:43,266 [main:105] - GENERATED CALL = (aShort[0]).toFloat().roundToInt()
2021-03-11 13:04:43,266 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]]
2021-03-11 13:04:43,266 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:04:43,266 [main:137] - GENERATING call of type @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]
2021-03-11 13:04:43,266 [main:105] - GENERATED CALL = (aShort[0]).toChar().digitToInt()
2021-03-11 13:04:43,266 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:04:43,266 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:43,266 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:04:43,402 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:43,404 [main:105] - GENERATED CALL = (aShort[0]).toInt().ushr(1275757393)
2021-03-11 13:04:43,404 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:04:43,404 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:04:43,541 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:43,543 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:04:43,679 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:43,681 [main:105] - GENERATED CALL = (aShort[0]).compareTo(-118).compareTo(54)
2021-03-11 13:04:43,681 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]]
2021-03-11 13:04:43,681 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:43,681 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:04:43,818 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:43,820 [main:105] - GENERATED CALL = (aShort[0]).toInt().shl(685653733)
2021-03-11 13:04:43,820 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]]
2021-03-11 13:04:43,820 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:04:43,995 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:43,996 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:04:44,135 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:44,137 [main:105] - GENERATED CALL = (aShort[0]).compareTo(20).shl(-70704784)
2021-03-11 13:04:44,137 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:04:44,137 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:04:44,275 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:44,276 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:04:44,416 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:44,417 [main:105] - GENERATED CALL = (aShort[0]).compareTo(74).or(375098064)
2021-03-11 13:04:44,417 [main:63] - replacement of 0 of type Int is (aShort[0]).toInt().shl(685653733)
2021-03-11 13:04:44,555 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:44,564 [main:56] - replacing (bInt[(false).compareTo(true).shl(-512772460)], Int)
2021-03-11 13:04:44,565 [main:38] - replacing bInt[(false).compareTo(true).shl(-512772460)] Int
2021-03-11 13:04:44,565 [main:42] - Getting value of type Int
2021-03-11 13:04:44,704 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:44,705 [main:46] - GENERATED VALUE OF TYPE Int = 832555890
2021-03-11 13:04:44,706 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:45,166 [main:55] - randomType = ArrayList<Map<String, HashSet<Int>>>
2021-03-11 13:04:45,307 [main:302] - generating value of type = ArrayList<Map<String, HashSet<Int>>> false depth = 0
2021-03-11 13:04:45,450 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: Map<String, HashSet<Int>>): ArrayList<Map<Strg, HashSet<Int>>> = TODO()
2021-03-11 13:04:45,452 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: Map<String, HashSet<Int>>): ArrayList<Map<Strg, HashSet<Int>>> = TODO()
2021-03-11 13:04:45,593 [main:302] - generating value of type = Map<String, HashSet<Int>> false depth = 3
2021-03-11 13:04:45,739 [main:43] - GENERATING CALL OF fun <K, V> mapOf(pairs: Pair<String, HashSet<Int>>): Map<Strg, HashSet<Int>> = TODO()
2021-03-11 13:04:45,741 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> mapOf(pairs: Pair<String, HashSet<Int>>): Map<Strg, HashSet<Int>> = TODO()
2021-03-11 13:04:45,883 [main:302] - generating value of type = Pair<String, HashSet<Int>> false depth = 6
2021-03-11 13:04:46,027 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: String, second: HashSet<Int>): Pair<String, HashSet<Int>> = TODO()
2021-03-11 13:04:46,030 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: String, second: HashSet<Int>): Pair<String, HashSet<Int>> = TODO()
2021-03-11 13:04:46,174 [main:302] - generating value of type = String true depth = 9
2021-03-11 13:04:46,175 [main:302] - generating value of type = HashSet<Int> false depth = 9
2021-03-11 13:04:46,316 [main:43] - GENERATING CALL OF fun <T> hashSetOf(): HashSet<Int> = TODO()
2021-03-11 13:04:46,318 [main:61] - WITHOUT TYPE PARAMS = fun <T> hashSetOf(): HashSet<Int> = TODO()
2021-03-11 13:04:46,464 [main:95] - GENERATED = hashSetOf<Int>()
2021-03-11 13:04:46,464 [main:95] - GENERATED = Pair<String, HashSet<Int>>("pptkj", hashSetOf<Int>())
2021-03-11 13:04:46,465 [main:95] - GENERATED = mapOf<String, HashSet<Int>>(Pair<String, HashSet<Int>>("pptkj", hashSetOf<Int>()))
2021-03-11 13:04:46,465 [main:95] - GENERATED = arrayListOf<Map<String, HashSet<Int>>>(mapOf<String, HashSet<Int>>(Pair<String, HashSet<Int>>("pptkj", hashSetOf<Int>())))
2021-03-11 13:04:46,678 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:04:46,816 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:46,817 [main:66] - Generated call from random type = (arrayListOf<Map<String, HashSet<Int>>>(mapOf<String, HashSet<Int>>(Pair<String, HashSet<Int>>("pptkj", hashSetOf<Int>())))).size.shl(987511381)
2021-03-11 13:04:46,818 [main:94] - GETTING Int from Float
2021-03-11 13:04:46,849 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 13:04:46,849 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:04:46,849 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 13:04:46,989 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:46,991 [main:105] - GENERATED CALL = (bFloat[0]).toShort().times(-105)
2021-03-11 13:04:46,991 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:04:46,991 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:46,991 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:04:47,129 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:47,131 [main:105] - GENERATED CALL = (bFloat[0]).toInt().rotateLeft(293186972)
2021-03-11 13:04:47,131 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]]
2021-03-11 13:04:47,131 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:04:47,131 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]
2021-03-11 13:04:47,277 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:47,278 [main:105] - GENERATED CALL = (bFloat[0]).toShort().plus(-104)
2021-03-11 13:04:47,278 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 13:04:47,278 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:04:47,415 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:47,416 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:04:47,554 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:47,555 [main:105] - GENERATED CALL = (bFloat[0]).compareTo(-7).coerceAtMost(2103037965)
2021-03-11 13:04:47,556 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:04:47,556 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:04:47,556 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:04:47,556 [main:105] - GENERATED CALL = (bFloat[0]).toLong().countOneBits()
2021-03-11 13:04:47,556 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:04:47,556 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:04:47,732 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:47,734 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:04:47,870 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:47,872 [main:105] - GENERATED CALL = (bFloat[0]).compareTo(73).plus(-74)
2021-03-11 13:04:47,872 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:04:47,872 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:04:47,872 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:04:48,012 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:48,013 [main:105] - GENERATED CALL = (bFloat[0]).toInt().times(96)
2021-03-11 13:04:48,013 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:04:48,013 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:04:48,151 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:48,153 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:04:48,153 [main:105] - GENERATED CALL = (bFloat[0]).compareTo(-68).countOneBits()
2021-03-11 13:04:48,153 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]]
2021-03-11 13:04:48,153 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:04:48,154 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]
2021-03-11 13:04:48,154 [main:105] - GENERATED CALL = (bFloat[0]).toByte().countLeadingZeroBits()
2021-03-11 13:04:48,154 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:04:48,154 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:04:48,292 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:48,293 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:04:48,294 [main:105] - GENERATED CALL = (bFloat[0]).compareTo(1).inc()
2021-03-11 13:04:48,294 [main:63] - replacement of bInt[(false).compareTo(true).shl(-512772460)] of type Int is (arrayListOf<Map<String, HashSet<Int>>>(mapOf<String, HashSet<Int>>(Pair<String, HashSet<Int>>("pptkj", hashSetOf<Int>())))).size.shl(987511381)
2021-03-11 13:04:48,432 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:48,432 [main:66] - Compilation checking started
2021-03-11 13:04:48,858 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (arrayListOf<Map<String, HashSet<Int>>>(mapOf<String, HashSet<Int>>(Pair<String, HashSet<Int>>("pptkj", hashSetOf<Int>())))).size.shl(987511381)--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:04:48,867 [main:56] - replacing (bLong, LongArray)
2021-03-11 13:04:48,867 [main:38] - replacing bLong LongArray
2021-03-11 13:04:48,867 [main:42] - Getting value of type LongArray
2021-03-11 13:04:49,018 [main:302] - generating value of type = LongArray false depth = 0
2021-03-11 13:04:49,163 [main:43] - GENERATING CALL OF fun LongArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Long): LongArray = TODO()
2021-03-11 13:04:49,165 [main:61] - WITHOUT TYPE PARAMS = fun LongArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Long): LongArray = TODO()
2021-03-11 13:04:49,608 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:04:49,610 [main:302] - generating value of type = Function1<Int, Long> false depth = 3
2021-03-11 13:04:49,611 [main:302] - generating value of type = Long true depth = 4
2021-03-11 13:04:49,612 [main:95] - GENERATED = LongArray(-163149815, {a: Int -> 5209749761748044083})
2021-03-11 13:04:49,613 [main:46] - GENERATED VALUE OF TYPE LongArray = LongArray(-163149815, {a: Int -> 5209749761748044083})
2021-03-11 13:04:49,613 [main:49] - GENERATED IS CALL =true
2021-03-11 13:04:49,766 [main:55] - randomType = Double?
2021-03-11 13:04:49,903 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:04:49,947 [main:94] - GETTING LongArray from Array<Byte>
2021-03-11 13:04:49,957 [main:101] - Case = [public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]]
2021-03-11 13:04:49,957 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]
2021-03-11 13:04:49,958 [main:105] - GENERATED CALL = (aByte).toLongArray()
2021-03-11 13:04:49,958 [main:63] - replacement of bLong of type LongArray is LongArray(-163149815, {a: Int -> 5209749761748044083})
2021-03-11 13:04:50,095 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:04:50,104 [main:56] - replacing ((bFloat).toTypedArray()[0], Float)
2021-03-11 13:04:50,105 [main:38] - replacing (bFloat).toTypedArray()[0] Float
2021-03-11 13:04:50,105 [main:42] - Getting value of type Float
2021-03-11 13:04:50,246 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:50,247 [main:46] - GENERATED VALUE OF TYPE Float = 0.7658112f
2021-03-11 13:04:50,247 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:50,397 [main:55] - randomType = Char?
2021-03-11 13:04:50,536 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:04:50,558 [main:137] - GENERATING call of type public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@76592c22]
2021-03-11 13:04:50,558 [main:66] - Generated call from random type = ('榇')?.toFloat().absoluteValue
2021-03-11 13:04:50,559 [main:94] - GETTING Float from ShortArray
2021-03-11 13:04:50,571 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@423d1bb5]]
2021-03-11 13:04:50,571 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:04:50,712 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:50,713 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@423d1bb5]
2021-03-11 13:04:50,850 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:50,852 [main:105] - GENERATED CALL = (bShort).get(-982555757).plus(0.6881396f)
2021-03-11 13:04:50,852 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:04:50,852 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:04:50,852 [main:105] - GENERATED CALL = (bShort).size.toFloat()
2021-03-11 13:04:50,852 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]]
2021-03-11 13:04:50,852 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 13:04:50,991 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:50,993 [main:105] - GENERATED CALL = (bShort).size.minus(0.23465723f)
2021-03-11 13:04:50,993 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]]
2021-03-11 13:04:50,993 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]
2021-03-11 13:04:51,132 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:51,134 [main:105] - GENERATED CALL = (bShort).size.plus(0.39750677f)
2021-03-11 13:04:51,134 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@18a6b4c0]]
2021-03-11 13:04:51,134 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:04:51,272 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:51,273 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@18a6b4c0]
2021-03-11 13:04:51,414 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:51,415 [main:105] - GENERATED CALL = (bShort).get(-1985638870).rem(0.16663611f)
2021-03-11 13:04:51,416 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public open fun toFloat(): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4f742cfe]]
2021-03-11 13:04:51,416 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:04:51,590 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:51,591 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4f742cfe]
2021-03-11 13:04:51,592 [main:105] - GENERATED CALL = (bShort).get(-902999966).toFloat()
2021-03-11 13:04:51,592 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.minOf(selector: (kotlin.Short) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15ad83a5]]
2021-03-11 13:04:51,592 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.ShortArray.minOf(selector: (kotlin.Short) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15ad83a5]
2021-03-11 13:04:51,730 [main:302] - generating value of type = Function1<Short, Float> false depth = 0
2021-03-11 13:04:51,732 [main:302] - generating value of type = Float true depth = 1
2021-03-11 13:04:51,733 [main:105] - GENERATED CALL = (bShort).minOf({a: Short -> 0.59073573f})
2021-03-11 13:04:51,733 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]]
2021-03-11 13:04:51,733 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:04:51,870 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:51,872 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:04:52,008 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:52,010 [main:105] - GENERATED CALL = (bShort).get(-116507124).div(0.497348f)
2021-03-11 13:04:52,010 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]]
2021-03-11 13:04:52,010 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:04:52,146 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:52,147 [main:105] - GENERATED CALL = (bShort).size.div(0.96851027f)
2021-03-11 13:04:52,147 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@75096f32]]
2021-03-11 13:04:52,147 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:04:52,285 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:04:52,287 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@75096f32]
2021-03-11 13:04:52,423 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:52,425 [main:105] - GENERATED CALL = (bShort).get(1828623379).minus(0.76652026f)
2021-03-11 13:04:52,425 [main:63] - replacement of (bFloat).toTypedArray()[0] of type Float is (bShort).get(-1985638870).rem(0.16663611f)
2021-03-11 13:04:52,567 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:52,567 [main:66] - Compilation checking started
2021-03-11 13:04:53,052 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus())

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bShort).get(-1985638870).rem(0.16663611f)++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:04:53,061 [main:56] - replacing (doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus()), DoubleArray)
2021-03-11 13:04:53,062 [main:38] - replacing doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus()) DoubleArray
2021-03-11 13:04:53,063 [main:42] - Getting value of type DoubleArray
2021-03-11 13:04:53,207 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:04:53,348 [main:43] - GENERATING CALL OF fun DoubleArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Double): DoubleArray = TODO()
2021-03-11 13:04:53,350 [main:61] - WITHOUT TYPE PARAMS = fun DoubleArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Double): DoubleArray = TODO()
2021-03-11 13:04:53,804 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:04:53,805 [main:302] - generating value of type = Function1<Int, Double> false depth = 3
2021-03-11 13:04:53,807 [main:302] - generating value of type = Double true depth = 4
2021-03-11 13:04:53,808 [main:95] - GENERATED = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})
2021-03-11 13:04:53,808 [main:46] - GENERATED VALUE OF TYPE DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})
2021-03-11 13:04:53,808 [main:49] - GENERATED IS CALL =true
2021-03-11 13:04:53,811 [main:55] - randomType = Double
2021-03-11 13:04:53,969 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:04:54,002 [main:94] - GETTING DoubleArray from Short
2021-03-11 13:04:54,037 [main:94] - GETTING DoubleArray from Float
2021-03-11 13:04:54,068 [main:94] - GETTING DoubleArray from Double
2021-03-11 13:04:54,098 [main:94] - GETTING DoubleArray from Float
2021-03-11 13:04:54,099 [main:94] - GETTING DoubleArray from Byte
2021-03-11 13:04:54,133 [main:94] - GETTING DoubleArray from Long
2021-03-11 13:04:54,166 [main:94] - GETTING DoubleArray from Short
2021-03-11 13:04:54,167 [main:94] - GETTING DoubleArray from FloatArray
2021-03-11 13:04:54,175 [main:94] - GETTING DoubleArray from Byte
2021-03-11 13:04:54,176 [main:94] - GETTING DoubleArray from Float
2021-03-11 13:04:54,176 [main:94] - GETTING DoubleArray from Long
2021-03-11 13:04:54,177 [main:94] - GETTING DoubleArray from ShortArray
2021-03-11 13:04:54,188 [main:94] - GETTING DoubleArray from Double
2021-03-11 13:04:54,188 [main:94] - GETTING DoubleArray from Byte
2021-03-11 13:04:54,189 [main:94] - GETTING DoubleArray from Array<Double>
2021-03-11 13:04:54,200 [main:101] - Case = [public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]]
2021-03-11 13:04:54,200 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]
2021-03-11 13:04:54,200 [main:105] - GENERATED CALL = (aDouble).toDoubleArray()
2021-03-11 13:04:54,200 [main:63] - replacement of doubleArrayOf((1084597938.toUInt())?.toDouble().unaryPlus()) of type DoubleArray is DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})
2021-03-11 13:04:54,337 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:04:54,337 [main:66] - Compilation checking started
2021-03-11 13:04:54,836 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    aDouble[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:04:54,845 [main:56] - replacing (aDouble, Array<Double>)
2021-03-11 13:04:54,846 [main:38] - replacing aDouble Array<Double>
2021-03-11 13:04:54,846 [main:42] - Getting value of type Array<Double>
2021-03-11 13:04:54,981 [main:302] - generating value of type = Array<Double> false depth = 0
2021-03-11 13:04:55,123 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Double> = TODO()
2021-03-11 13:04:55,126 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Double> = TODO()
2021-03-11 13:04:55,291 [main:95] - GENERATED = emptyArray<Double>()
2021-03-11 13:04:55,291 [main:46] - GENERATED VALUE OF TYPE Array<Double> = emptyArray<Double>()
2021-03-11 13:04:55,291 [main:49] - GENERATED IS CALL =true
2021-03-11 13:04:55,479 [main:55] - randomType = List<String>
2021-03-11 13:04:55,480 [main:94] - GETTING Array<Double> from Double
2021-03-11 13:04:55,516 [main:94] - GETTING Array<Double> from Int
2021-03-11 13:04:55,550 [main:94] - GETTING Array<Double> from ShortArray
2021-03-11 13:04:55,559 [main:94] - GETTING Array<Double> from Int
2021-03-11 13:04:55,560 [main:94] - GETTING Array<Double> from Byte
2021-03-11 13:04:55,595 [main:94] - GETTING Array<Double> from Double
2021-03-11 13:04:55,596 [main:94] - GETTING Array<Double> from Long
2021-03-11 13:04:55,629 [main:94] - GETTING Array<Double> from Double
2021-03-11 13:04:55,630 [main:94] - GETTING Array<Double> from Int
2021-03-11 13:04:55,631 [main:94] - GETTING Array<Double> from Long
2021-03-11 13:04:55,632 [main:94] - GETTING Array<Double> from Long
2021-03-11 13:04:55,632 [main:94] - GETTING Array<Double> from Byte
2021-03-11 13:04:55,633 [main:94] - GETTING Array<Double> from ByteArray
2021-03-11 13:04:55,643 [main:94] - GETTING Array<Double> from Float
2021-03-11 13:04:55,683 [main:94] - GETTING Array<Double> from Array<Byte>
2021-03-11 13:04:55,700 [main:63] - replacement of aDouble of type Array<Double> is emptyArray<Double>()
2021-03-11 13:04:55,858 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:04:55,858 [main:66] - Compilation checking started
2021-03-11 13:04:56,409 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:04:56,419 [main:56] - replacing ((bFloat).toTypedArray()[0]++, Float)
2021-03-11 13:04:56,420 [main:38] - replacing (bFloat).toTypedArray()[0]++ Float
2021-03-11 13:04:56,420 [main:42] - Getting value of type Float
2021-03-11 13:04:56,583 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:56,584 [main:46] - GENERATED VALUE OF TYPE Float = 0.4596117f
2021-03-11 13:04:56,584 [main:49] - GENERATED IS CALL =false
2021-03-11 13:04:56,923 [main:55] - randomType = ArrayDeque<Boolean>
2021-03-11 13:04:57,089 [main:302] - generating value of type = ArrayDeque<Boolean> false depth = 0
2021-03-11 13:04:57,268 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(): ArrayDeque<Boolean> = TODO()
2021-03-11 13:04:57,271 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(): ArrayDeque<Boolean> = TODO()
2021-03-11 13:04:57,442 [main:95] - GENERATED = ArrayDeque<Boolean>()
2021-03-11 13:04:57,589 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:04:57,733 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:57,735 [main:66] - Generated call from random type = (ArrayDeque<Boolean>()).size.times(0.9647442f)
2021-03-11 13:04:57,736 [main:94] - GETTING Float from Byte
2021-03-11 13:04:57,786 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]]
2021-03-11 13:04:57,787 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:04:57,942 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:57,943 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]
2021-03-11 13:04:58,090 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:58,091 [main:105] - GENERATED CALL = (aByte[0]).compareTo(49).rem(0.6165058f)
2021-03-11 13:04:58,091 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7], public fun kotlin.Float.coerceAtMost(maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@24a3b6ac]]
2021-03-11 13:04:58,091 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 13:04:58,231 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:58,233 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtMost(maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@24a3b6ac]
2021-03-11 13:04:58,390 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:58,392 [main:105] - GENERATED CALL = (aByte[0]).div(0.011392176f).coerceAtMost(0.4648862f)
2021-03-11 13:04:58,392 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun toFloat(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@28ec2340]]
2021-03-11 13:04:58,392 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:04:58,392 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@28ec2340]
2021-03-11 13:04:58,392 [main:105] - GENERATED CALL = (aByte[0]).toFloat().toFloat()
2021-03-11 13:04:58,392 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:04:58,392 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:04:58,549 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:04:58,551 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:04:58,551 [main:105] - GENERATED CALL = (aByte[0]).compareTo(-94).toFloat()
2021-03-11 13:04:58,551 [main:101] - Case = [public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@6eb3df0b]]
2021-03-11 13:04:58,551 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@6eb3df0b]
2021-03-11 13:04:58,697 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:58,699 [main:105] - GENERATED CALL = (aByte[0]).minus(0.90730274f)
2021-03-11 13:04:58,699 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]]
2021-03-11 13:04:58,699 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 13:04:58,839 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:58,840 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]
2021-03-11 13:04:58,979 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:58,981 [main:105] - GENERATED CALL = (aByte[0]).div(0.20309126f).withSign(0.56255263f)
2021-03-11 13:04:58,981 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2ecd32f2], public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@76592c22]]
2021-03-11 13:04:58,981 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2ecd32f2]
2021-03-11 13:04:58,981 [main:137] - GENERATING call of type public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@76592c22]
2021-03-11 13:04:58,981 [main:105] - GENERATED CALL = (aByte[0]).toChar().toFloat()
2021-03-11 13:04:58,981 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun unaryPlus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@62197085]]
2021-03-11 13:04:58,981 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:04:58,981 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@62197085]
2021-03-11 13:04:58,981 [main:105] - GENERATED CALL = (aByte[0]).toFloat().unaryPlus()
2021-03-11 13:04:58,981 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7], public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]]
2021-03-11 13:04:58,981 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 13:04:59,140 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:59,143 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]
2021-03-11 13:04:59,305 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:59,307 [main:105] - GENERATED CALL = (aByte[0]).div(0.8831742f).coerceAtLeast(0.44421816f)
2021-03-11 13:04:59,307 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@18a6b4c0]]
2021-03-11 13:04:59,307 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:04:59,307 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@18a6b4c0]
2021-03-11 13:04:59,462 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:04:59,464 [main:105] - GENERATED CALL = (aByte[0]).toShort().rem(0.20816356f)
2021-03-11 13:04:59,464 [main:63] - replacement of (bFloat).toTypedArray()[0]++ of type Float is (aByte[0]).div(0.20309126f).withSign(0.56255263f)
2021-03-11 13:04:59,660 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:04:59,660 [main:66] - Compilation checking started
2021-03-11 13:05:00,098 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[0]++
    if (false) return ('棡').toLong().toString(1014294261)

    (aByte[0]).div(0.20309126f).withSign(0.56255263f)
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:00,107 [main:56] - replacing (0, Int)
2021-03-11 13:05:00,109 [main:38] - replacing 0 Int
2021-03-11 13:05:00,109 [main:42] - Getting value of type Int
2021-03-11 13:05:00,272 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:00,273 [main:46] - GENERATED VALUE OF TYPE Int = 2039689907
2021-03-11 13:05:00,273 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:00,278 [main:55] - randomType = Char
2021-03-11 13:05:00,451 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:05:00,482 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@6a0c13dc]
2021-03-11 13:05:00,643 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:05:00,646 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:05:00,829 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:00,831 [main:66] - Generated call from random type = ('浌').compareTo('睨').minus(63)
2021-03-11 13:05:00,832 [main:94] - GETTING Int from Double
2021-03-11 13:05:00,890 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:05:00,890 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:01,067 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:01,069 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:05:01,227 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:01,229 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-61).rem(90)
2021-03-11 13:05:01,229 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 13:05:01,229 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:01,229 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 13:05:01,229 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().takeLowestOneBit()
2021-03-11 13:05:01,229 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:05:01,229 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:01,229 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:05:01,384 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:01,386 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().div(8)
2021-03-11 13:05:01,386 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:05:01,386 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:01,537 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:01,540 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:05:01,686 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:01,687 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-122).plus(-123)
2021-03-11 13:05:01,687 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]]
2021-03-11 13:05:01,687 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:05:01,687 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]
2021-03-11 13:05:01,688 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().countLeadingZeroBits()
2021-03-11 13:05:01,688 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]]
2021-03-11 13:05:01,688 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:05:01,688 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]
2021-03-11 13:05:01,836 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:01,837 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().div(7)
2021-03-11 13:05:01,837 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:05:01,837 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:01,981 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:01,983 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(4).sign
2021-03-11 13:05:01,983 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:05:01,983 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:02,131 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:02,132 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:05:02,277 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:02,279 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(102).times(-105)
2021-03-11 13:05:02,279 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:05:02,279 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:02,279 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:05:02,279 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().inv()
2021-03-11 13:05:02,279 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:05:02,279 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:05:02,279 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:05:02,279 [main:105] - GENERATED CALL = (bDouble[0]++).toFloat().toRawBits()
2021-03-11 13:05:02,279 [main:63] - replacement of 0 of type Int is (bDouble[0]++).toShort().countLeadingZeroBits()
2021-03-11 13:05:02,454 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:02,454 [main:66] - Compilation checking started
2021-03-11 13:05:02,971 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:02,980 [main:56] - replacing (aFloat[(bShort[0]++).countTrailingZeroBits()], Float)
2021-03-11 13:05:02,980 [main:38] - replacing aFloat[(bShort[0]++).countTrailingZeroBits()] Float
2021-03-11 13:05:02,980 [main:42] - Getting value of type Float
2021-03-11 13:05:03,121 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:03,122 [main:46] - GENERATED VALUE OF TYPE Float = 0.3684256f
2021-03-11 13:05:03,122 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:03,127 [main:55] - randomType = String
2021-03-11 13:05:03,267 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:05:03,294 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.minOf(selector: (kotlin.Char) -> kotlin.Float): kotlin.Float defined in kotlin.text[DeserializedSimpleFunctionDescriptor@73ae275e]
2021-03-11 13:05:03,435 [main:302] - generating value of type = Function1<Char, Float> false depth = 0
2021-03-11 13:05:03,436 [main:302] - generating value of type = Float true depth = 1
2021-03-11 13:05:03,438 [main:66] - Generated call from random type = ("ekjza").minOf({a: Char -> 0.83506525f})
2021-03-11 13:05:03,439 [main:94] - GETTING Float from Short
2021-03-11 13:05:03,474 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752], public final operator fun plus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1bda99b6]]
2021-03-11 13:05:03,474 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:05:03,618 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:03,620 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1bda99b6]
2021-03-11 13:05:03,766 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:03,767 [main:105] - GENERATED CALL = (aShort[0]).div(0.16554672f).plus(59)
2021-03-11 13:05:03,767 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752], public final operator fun times(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59d944a9]]
2021-03-11 13:05:03,767 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:05:03,945 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:03,946 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59d944a9]
2021-03-11 13:05:04,103 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:04,105 [main:105] - GENERATED CALL = (aShort[0]).div(0.45022422f).times(125)
2021-03-11 13:05:04,105 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7dd9423d]]
2021-03-11 13:05:04,105 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:04,105 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7dd9423d]
2021-03-11 13:05:04,243 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:04,245 [main:105] - GENERATED CALL = (aShort[0]).toLong().times(0.36491418f)
2021-03-11 13:05:04,245 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun inc(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@6361d7d]]
2021-03-11 13:05:04,245 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:05:04,245 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@6361d7d]
2021-03-11 13:05:04,245 [main:105] - GENERATED CALL = (aShort[0]).toFloat().inc()
2021-03-11 13:05:04,245 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]]
2021-03-11 13:05:04,245 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:04,245 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 13:05:04,380 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:04,381 [main:105] - GENERATED CALL = (aShort[0]).toInt().minus(0.07650733f)
2021-03-11 13:05:04,381 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752], public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]]
2021-03-11 13:05:04,382 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:05:04,520 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:04,522 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]
2021-03-11 13:05:04,522 [main:105] - GENERATED CALL = (aShort[0]).div(0.8045525f).dec()
2021-03-11 13:05:04,522 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752], public final operator fun unaryMinus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3061ada4]]
2021-03-11 13:05:04,522 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:05:04,663 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:04,665 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3061ada4]
2021-03-11 13:05:04,665 [main:105] - GENERATED CALL = (aShort[0]).div(0.4088422f).unaryMinus()
2021-03-11 13:05:04,665 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]]
2021-03-11 13:05:04,665 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:04,665 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:05:04,807 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:04,808 [main:105] - GENERATED CALL = (aShort[0]).toInt().times(0.3037055f)
2021-03-11 13:05:04,809 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752], public fun kotlin.Float.coerceAtMost(maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@24a3b6ac]]
2021-03-11 13:05:04,809 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:05:04,949 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:04,951 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtMost(maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@24a3b6ac]
2021-03-11 13:05:05,091 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:05,093 [main:105] - GENERATED CALL = (aShort[0]).div(0.10895687f).coerceAtMost(0.28732228f)
2021-03-11 13:05:05,093 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun toFloat(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@28ec2340]]
2021-03-11 13:05:05,093 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:05:05,093 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@28ec2340]
2021-03-11 13:05:05,093 [main:105] - GENERATED CALL = (aShort[0]).toFloat().toFloat()
2021-03-11 13:05:05,093 [main:63] - replacement of aFloat[(bShort[0]++).countTrailingZeroBits()] of type Float is (aShort[0]).div(0.8045525f).dec()
2021-03-11 13:05:05,232 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:05,242 [main:56] - replacing (aFloat[0], Float)
2021-03-11 13:05:05,242 [main:38] - replacing aFloat[0] Float
2021-03-11 13:05:05,242 [main:42] - Getting value of type Float
2021-03-11 13:05:05,378 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:05,379 [main:46] - GENERATED VALUE OF TYPE Float = 0.11012417f
2021-03-11 13:05:05,379 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:05,853 [main:55] - randomType = Array<ULong>
2021-03-11 13:05:06,002 [main:302] - generating value of type = Array<ULong> false depth = 0
2021-03-11 13:05:06,145 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<ULong> = TODO()
2021-03-11 13:05:06,147 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<ULong> = TODO()
2021-03-11 13:05:06,294 [main:95] - GENERATED = emptyArray<ULong>()
2021-03-11 13:05:06,310 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]
2021-03-11 13:05:06,451 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:06,453 [main:66] - Generated call from random type = (emptyArray<ULong>()).size.plus(0.25705075f)
2021-03-11 13:05:06,454 [main:94] - GETTING Float from Array<Byte>
2021-03-11 13:05:06,470 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]]
2021-03-11 13:05:06,470 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:05:06,615 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:06,616 [main:105] - GENERATED CALL = (aByte).size.div(0.84380484f)
2021-03-11 13:05:06,616 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3a9bf4ac]]
2021-03-11 13:05:06,616 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-11 13:05:06,764 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:06,766 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3a9bf4ac]
2021-03-11 13:05:06,909 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:06,911 [main:105] - GENERATED CALL = (aByte).get(-1309819529).rem(0.853206f)
2021-03-11 13:05:06,911 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]]
2021-03-11 13:05:06,911 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 13:05:07,064 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:07,066 [main:105] - GENERATED CALL = (aByte).size.minus(0.975399f)
2021-03-11 13:05:07,066 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.maxOf(selector: (T) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41bc8bf]]
2021-03-11 13:05:07,066 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.maxOf(selector: (T) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41bc8bf]
2021-03-11 13:05:07,207 [main:302] - generating value of type = Function1<T, Float> false depth = 0
2021-03-11 13:05:07,209 [main:302] - generating value of type = Float true depth = 1
2021-03-11 13:05:07,210 [main:105] - GENERATED CALL = (aByte).maxOf({a: T -> 0.6112806f})
2021-03-11 13:05:07,210 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]]
2021-03-11 13:05:07,211 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]
2021-03-11 13:05:07,356 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:07,358 [main:105] - GENERATED CALL = (aByte).size.rem(0.72181696f)
2021-03-11 13:05:07,358 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]]
2021-03-11 13:05:07,358 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-11 13:05:07,501 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:07,502 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 13:05:07,650 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:07,652 [main:105] - GENERATED CALL = (aByte).get(1485869524).div(0.6426678f)
2021-03-11 13:05:07,652 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:05:07,652 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:05:07,652 [main:105] - GENERATED CALL = (aByte).size.toFloat()
2021-03-11 13:05:07,652 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@6eb3df0b]]
2021-03-11 13:05:07,652 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-11 13:05:07,842 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:07,844 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@6eb3df0b]
2021-03-11 13:05:07,993 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:07,994 [main:105] - GENERATED CALL = (aByte).get(998730114).minus(0.99761266f)
2021-03-11 13:05:07,994 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]]
2021-03-11 13:05:07,995 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]
2021-03-11 13:05:08,136 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:08,137 [main:105] - GENERATED CALL = (aByte).size.plus(0.5526039f)
2021-03-11 13:05:08,138 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.minOf(selector: (T) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@18e4b07a]]
2021-03-11 13:05:08,138 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.minOf(selector: (T) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@18e4b07a]
2021-03-11 13:05:08,281 [main:302] - generating value of type = Function1<T, Float> false depth = 0
2021-03-11 13:05:08,282 [main:302] - generating value of type = Float true depth = 1
2021-03-11 13:05:08,284 [main:105] - GENERATED CALL = (aByte).minOf({a: T -> 0.73258126f})
2021-03-11 13:05:08,284 [main:63] - replacement of aFloat[0] of type Float is (aByte).maxOf({a: T -> 0.6112806f})
2021-03-11 13:05:08,431 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:08,440 [main:56] - replacing (0, Int)
2021-03-11 13:05:08,440 [main:38] - replacing 0 Int
2021-03-11 13:05:08,440 [main:42] - Getting value of type Int
2021-03-11 13:05:08,586 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:08,588 [main:46] - GENERATED VALUE OF TYPE Int = 1717150588
2021-03-11 13:05:08,588 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:08,591 [main:55] - randomType = Long
2021-03-11 13:05:08,733 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:08,778 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:05:08,929 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:08,931 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:05:08,931 [main:66] - Generated call from random type = (7489329147711479301).div(0.6713899f).toRawBits()
2021-03-11 13:05:08,932 [main:94] - GETTING Int from LongArray
2021-03-11 13:05:08,943 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]]
2021-03-11 13:05:08,943 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 13:05:09,081 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:09,083 [main:105] - GENERATED CALL = (bLong).size.and(818933139)
2021-03-11 13:05:09,083 [main:101] - Case = [public inline fun kotlin.LongArray.indexOfFirst(predicate: (kotlin.Long) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76d54faf]]
2021-03-11 13:05:09,083 [main:137] - GENERATING call of type public inline fun kotlin.LongArray.indexOfFirst(predicate: (kotlin.Long) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76d54faf]
2021-03-11 13:05:09,229 [main:302] - generating value of type = Function1<Long, Boolean> false depth = 0
2021-03-11 13:05:09,230 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 13:05:09,232 [main:105] - GENERATED CALL = (bLong).indexOfFirst({a: Long -> false})
2021-03-11 13:05:09,232 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 13:05:09,232 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:05:09,369 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:09,371 [main:105] - GENERATED CALL = (bLong).size.minus(-52)
2021-03-11 13:05:09,371 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]]
2021-03-11 13:05:09,371 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221]
2021-03-11 13:05:09,514 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:09,516 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]
2021-03-11 13:05:09,516 [main:105] - GENERATED CALL = (bLong).get(-96801357).countTrailingZeroBits()
2021-03-11 13:05:09,516 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@5f449f3f]]
2021-03-11 13:05:09,516 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221]
2021-03-11 13:05:09,665 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:09,667 [main:105] - GENERATED CALL = (bLong).get(1413409630).sign
2021-03-11 13:05:09,667 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]]
2021-03-11 13:05:09,667 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221]
2021-03-11 13:05:09,820 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:09,821 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:05:09,966 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:09,968 [main:105] - GENERATED CALL = (bLong).get(-273842240).compareTo(-36)
2021-03-11 13:05:09,968 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 13:05:09,968 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:05:10,114 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:10,115 [main:105] - GENERATED CALL = (bLong).size.coerceAtMost(-571296886)
2021-03-11 13:05:10,115 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:05:10,115 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:05:10,260 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:10,263 [main:105] - GENERATED CALL = (bLong).size.rem(-26)
2021-03-11 13:05:10,263 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:05:10,263 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:05:10,419 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:10,420 [main:105] - GENERATED CALL = (bLong).size.plus(-3)
2021-03-11 13:05:10,421 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]]
2021-03-11 13:05:10,421 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221]
2021-03-11 13:05:10,580 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:10,581 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]
2021-03-11 13:05:10,582 [main:105] - GENERATED CALL = (bLong).get(-1294092080).toInt()
2021-03-11 13:05:10,582 [main:63] - replacement of 0 of type Int is (bLong).size.coerceAtMost(-571296886)
2021-03-11 13:05:10,732 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:10,741 [main:56] - replacing (0, Int)
2021-03-11 13:05:10,741 [main:38] - replacing 0 Int
2021-03-11 13:05:10,741 [main:42] - Getting value of type Int
2021-03-11 13:05:10,918 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:10,920 [main:46] - GENERATED VALUE OF TYPE Int = 1471172759
2021-03-11 13:05:10,921 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:10,926 [main:55] - randomType = Short
2021-03-11 13:05:11,143 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:11,203 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:11,203 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:05:11,346 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:11,347 [main:66] - Generated call from random type = (-2593).toInt().rem(54)
2021-03-11 13:05:11,348 [main:94] - GETTING Int from Double
2021-03-11 13:05:11,406 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 13:05:11,407 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:11,556 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:11,557 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:05:11,698 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:11,700 [main:105] - GENERATED CALL = (bDouble[0]).compareTo(-126).coerceAtMost(485136537)
2021-03-11 13:05:11,700 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:05:11,700 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:11,836 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:11,837 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:05:11,837 [main:105] - GENERATED CALL = (bDouble[0]).compareTo(87).inc()
2021-03-11 13:05:11,838 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]]
2021-03-11 13:05:11,838 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:05:11,838 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]
2021-03-11 13:05:12,038 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:12,039 [main:105] - GENERATED CALL = (bDouble[0]).toByte().rem(1)
2021-03-11 13:05:12,040 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]]
2021-03-11 13:05:12,040 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:05:12,040 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]
2021-03-11 13:05:12,040 [main:105] - GENERATED CALL = (bDouble[0]).toShort().unaryPlus()
2021-03-11 13:05:12,040 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:05:12,040 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:12,196 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:12,198 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:05:12,352 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:12,354 [main:105] - GENERATED CALL = (bDouble[0]).compareTo(-81).or(-1809077240)
2021-03-11 13:05:12,354 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:05:12,354 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:12,354 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:05:12,354 [main:105] - GENERATED CALL = (bDouble[0]).toInt().inv()
2021-03-11 13:05:12,354 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:05:12,354 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:12,496 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:12,498 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:05:12,634 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:12,636 [main:105] - GENERATED CALL = (bDouble[0]).compareTo(19).compareTo(81)
2021-03-11 13:05:12,636 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:05:12,636 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:12,636 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:05:12,775 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:12,777 [main:105] - GENERATED CALL = (bDouble[0]).toInt().rem(71)
2021-03-11 13:05:12,777 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:05:12,777 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:12,777 [main:105] - GENERATED CALL = (bDouble[0]).toInt().sign
2021-03-11 13:05:12,777 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]]
2021-03-11 13:05:12,777 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:05:12,777 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52e5ed3]
2021-03-11 13:05:12,777 [main:105] - GENERATED CALL = (bDouble[0]).toShort().countOneBits()
2021-03-11 13:05:12,777 [main:63] - replacement of 0 of type Int is (bDouble[0]).toShort().countOneBits()
2021-03-11 13:05:12,918 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:12,927 [main:56] - replacing (byteArrayOf(34)[0], Byte)
2021-03-11 13:05:12,928 [main:38] - replacing byteArrayOf(34)[0] Byte
2021-03-11 13:05:12,928 [main:42] - Getting value of type Byte
2021-03-11 13:05:13,085 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:13,087 [main:46] - GENERATED VALUE OF TYPE Byte = 96
2021-03-11 13:05:13,087 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:13,243 [main:55] - randomType = UShort
2021-03-11 13:05:13,390 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:05:13,428 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@5446c834]
2021-03-11 13:05:13,428 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]
2021-03-11 13:05:13,586 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:13,589 [main:66] - Generated call from random type = (5951.toUShort()).toByte().coerceAtLeast(-55)
2021-03-11 13:05:13,590 [main:94] - GETTING Byte from Short
2021-03-11 13:05:13,636 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]]
2021-03-11 13:05:13,636 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:05:13,636 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]
2021-03-11 13:05:13,777 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:13,778 [main:105] - GENERATED CALL = (aShort[0]).toByte().and(20)
2021-03-11 13:05:13,778 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]]
2021-03-11 13:05:13,778 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:05:13,778 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]
2021-03-11 13:05:13,927 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:14,079 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:14,080 [main:105] - GENERATED CALL = (aShort[0]).toByte().coerceIn(92, 53)
2021-03-11 13:05:14,080 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]]
2021-03-11 13:05:14,081 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:05:14,081 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]
2021-03-11 13:05:14,081 [main:105] - GENERATED CALL = (aShort[0]).toByte().takeLowestOneBit()
2021-03-11 13:05:14,081 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]]
2021-03-11 13:05:14,081 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:05:14,081 [main:105] - GENERATED CALL = (aShort[0]).toByte()
2021-03-11 13:05:14,081 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:05:14,081 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:14,081 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:05:14,081 [main:105] - GENERATED CALL = (aShort[0]).toInt().toByte()
2021-03-11 13:05:14,081 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]]
2021-03-11 13:05:14,081 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:05:14,081 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]
2021-03-11 13:05:14,081 [main:105] - GENERATED CALL = (aShort[0]).toByte().dec()
2021-03-11 13:05:14,081 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:05:14,081 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:05:14,234 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:14,237 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:05:14,237 [main:105] - GENERATED CALL = (aShort[0]).div(0.9794961489894487).toByte()
2021-03-11 13:05:14,237 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]]
2021-03-11 13:05:14,237 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:14,237 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:05:14,237 [main:105] - GENERATED CALL = (aShort[0]).toLong().toByte()
2021-03-11 13:05:14,237 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateLeft(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@5b08d322]]
2021-03-11 13:05:14,237 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:05:14,238 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateLeft(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@5b08d322]
2021-03-11 13:05:14,442 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:14,444 [main:105] - GENERATED CALL = (aShort[0]).toByte().rotateLeft(-634792608)
2021-03-11 13:05:14,444 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]]
2021-03-11 13:05:14,444 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:05:14,444 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]
2021-03-11 13:05:14,670 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:14,672 [main:105] - GENERATED CALL = (aShort[0]).toByte().xor(-44)
2021-03-11 13:05:14,672 [main:63] - replacement of byteArrayOf(34)[0] of type Byte is (5951.toUShort()).toByte().coerceAtLeast(-55)
2021-03-11 13:05:14,896 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:14,897 [main:66] - Compilation checking started
2021-03-11 13:05:15,441 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    (5951.toUShort()).toByte().coerceAtLeast(-55)--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:15,451 [main:56] - replacing (intArrayOf(1921451119)[(aDouble[0]--).toLong().countTrailingZeroBits()], Int)
2021-03-11 13:05:15,451 [main:38] - replacing intArrayOf(1921451119)[(aDouble[0]--).toLong().countTrailingZeroBits()] Int
2021-03-11 13:05:15,452 [main:42] - Getting value of type Int
2021-03-11 13:05:15,616 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:15,617 [main:46] - GENERATED VALUE OF TYPE Int = 304081512
2021-03-11 13:05:15,618 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:15,620 [main:55] - randomType = Double
2021-03-11 13:05:15,780 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:15,833 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:16,012 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:16,014 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:05:16,014 [main:66] - Generated call from random type = (0.1607908691933898).compareTo(124).unaryPlus()
2021-03-11 13:05:16,015 [main:94] - GETTING Int from Double
2021-03-11 13:05:16,064 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]]
2021-03-11 13:05:16,064 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:05:16,065 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]
2021-03-11 13:05:16,220 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:16,222 [main:105] - GENERATED CALL = (bDouble[0]++).toByte().plus(-16)
2021-03-11 13:05:16,222 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:05:16,222 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:16,377 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:16,378 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(52).sign
2021-03-11 13:05:16,378 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]]
2021-03-11 13:05:16,378 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:05:16,379 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]
2021-03-11 13:05:16,379 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().countTrailingZeroBits()
2021-03-11 13:05:16,379 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]]
2021-03-11 13:05:16,379 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:05:16,379 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]
2021-03-11 13:05:16,379 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().unaryPlus()
2021-03-11 13:05:16,379 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:05:16,379 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:16,540 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:16,542 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:05:16,725 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:16,727 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-119).compareTo(71)
2021-03-11 13:05:16,727 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:05:16,727 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:16,727 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:05:16,867 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:16,868 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().plus(116)
2021-03-11 13:05:16,869 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 13:05:16,869 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:16,869 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:05:17,007 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:17,009 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().minus(-62)
2021-03-11 13:05:17,009 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:05:17,009 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:17,009 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:05:17,009 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().inc()
2021-03-11 13:05:17,009 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:05:17,009 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:17,149 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:17,151 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:05:17,292 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:17,294 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-37).plus(105)
2021-03-11 13:05:17,294 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 13:05:17,295 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:17,295 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 13:05:17,295 [main:105] - GENERATED CALL = (bDouble[0]++).toInt().takeLowestOneBit()
2021-03-11 13:05:17,295 [main:63] - replacement of intArrayOf(1921451119)[(aDouble[0]--).toLong().countTrailingZeroBits()] of type Int is (bDouble[0]++).toInt().minus(-62)
2021-03-11 13:05:17,439 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:17,448 [main:56] - replacing (0, Int)
2021-03-11 13:05:17,448 [main:38] - replacing 0 Int
2021-03-11 13:05:17,448 [main:42] - Getting value of type Int
2021-03-11 13:05:17,589 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:17,591 [main:46] - GENERATED VALUE OF TYPE Int = -182536289
2021-03-11 13:05:17,591 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:17,762 [main:55] - randomType = ULong
2021-03-11 13:05:17,953 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 13:05:18,004 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2caf9521]
2021-03-11 13:05:18,182 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:05:18,184 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:05:18,184 [main:66] - Generated call from random type = (5340914394833557531.toULong()).compareTo(49.toUByte()).unaryPlus()
2021-03-11 13:05:18,184 [main:63] - replacement of 0 of type Int is (5340914394833557531.toULong()).compareTo(49.toUByte()).unaryPlus()
2021-03-11 13:05:18,337 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:18,348 [main:56] - replacing (1, Short)
2021-03-11 13:05:18,350 [main:38] - replacing 1 Short
2021-03-11 13:05:18,350 [main:42] - Getting value of type Short
2021-03-11 13:05:18,508 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:18,510 [main:46] - GENERATED VALUE OF TYPE Short = -4676
2021-03-11 13:05:18,510 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:18,513 [main:55] - randomType = Double
2021-03-11 13:05:18,666 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:18,708 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:05:18,708 [main:66] - Generated call from random type = (0.40914309767910384).toShort()
2021-03-11 13:05:18,709 [main:94] - GETTING Short from Float
2021-03-11 13:05:18,747 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]]
2021-03-11 13:05:18,747 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:18,747 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]
2021-03-11 13:05:18,896 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:18,898 [main:105] - GENERATED CALL = (aFloat[0]--).toShort().coerceAtLeast(10492)
2021-03-11 13:05:18,898 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public fun kotlin.Short.coerceIn(minimumValue: kotlin.Short, maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725e09fb]]
2021-03-11 13:05:18,898 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:18,898 [main:137] - GENERATING call of type public fun kotlin.Short.coerceIn(minimumValue: kotlin.Short, maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725e09fb]
2021-03-11 13:05:19,074 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:19,240 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:19,242 [main:105] - GENERATED CALL = (aFloat[0]--).toShort().coerceIn(-5789, 31141)
2021-03-11 13:05:19,242 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.xor(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@461bb21c]]
2021-03-11 13:05:19,242 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:19,242 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.xor(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@461bb21c]
2021-03-11 13:05:19,391 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:19,392 [main:105] - GENERATED CALL = (aFloat[0]--).toShort().xor(26551)
2021-03-11 13:05:19,392 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]]
2021-03-11 13:05:19,392 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:19,393 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]
2021-03-11 13:05:19,393 [main:105] - GENERATED CALL = (aFloat[0]--).toShort().takeHighestOneBit()
2021-03-11 13:05:19,393 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:05:19,393 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:05:19,393 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:05:19,393 [main:105] - GENERATED CALL = (aFloat[0]--).toDouble().toShort()
2021-03-11 13:05:19,393 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:05:19,393 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:05:19,393 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:19,393 [main:105] - GENERATED CALL = (aFloat[0]--).toFloat().toShort()
2021-03-11 13:05:19,393 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]]
2021-03-11 13:05:19,393 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:19,393 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]
2021-03-11 13:05:19,548 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:19,550 [main:105] - GENERATED CALL = (aFloat[0]--).toShort().and(13731)
2021-03-11 13:05:19,550 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]]
2021-03-11 13:05:19,550 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:19,550 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]
2021-03-11 13:05:19,704 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:19,706 [main:105] - GENERATED CALL = (aFloat[0]--).toShort().rotateLeft(-889138753)
2021-03-11 13:05:19,706 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]]
2021-03-11 13:05:19,706 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:19,706 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:05:19,706 [main:105] - GENERATED CALL = (aFloat[0]--).toInt().toShort()
2021-03-11 13:05:19,706 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]]
2021-03-11 13:05:19,706 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:05:19,706 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:05:19,706 [main:105] - GENERATED CALL = (aFloat[0]--).toLong().toShort()
2021-03-11 13:05:19,706 [main:63] - replacement of 1 of type Short is (aFloat[0]--).toShort().takeHighestOneBit()
2021-03-11 13:05:19,871 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:19,871 [main:66] - Compilation checking started
2021-03-11 13:05:20,291 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>((aFloat[0]--).toShort().takeHighestOneBit())
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:20,300 [main:56] - replacing (bDouble[(0.73492005391268).toInt().countOneBits()], Double)
2021-03-11 13:05:20,302 [main:38] - replacing bDouble[(0.73492005391268).toInt().countOneBits()] Double
2021-03-11 13:05:20,302 [main:42] - Getting value of type Double
2021-03-11 13:05:20,455 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:20,457 [main:46] - GENERATED VALUE OF TYPE Double = 0.1671851500020093
2021-03-11 13:05:20,457 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:20,460 [main:55] - randomType = UByte
2021-03-11 13:05:20,637 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:05:20,693 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@5a3c776b]
2021-03-11 13:05:20,693 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21438075]
2021-03-11 13:05:20,923 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:20,925 [main:66] - Generated call from random type = (2.toUByte()).toShort().times(0.0767290113321425)
2021-03-11 13:05:20,926 [main:94] - GETTING Double from Byte
2021-03-11 13:05:20,996 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@466fe312]]
2021-03-11 13:05:20,996 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:05:20,996 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@466fe312]
2021-03-11 13:05:21,189 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:21,191 [main:105] - GENERATED CALL = (bByte[0]).toShort().rem(0.7636427550400035)
2021-03-11 13:05:21,191 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.absoluteValue: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@170efff7]]
2021-03-11 13:05:21,191 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:05:21,192 [main:105] - GENERATED CALL = (bByte[0]).toDouble().absoluteValue
2021-03-11 13:05:21,192 [main:101] - Case = [public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@717e92d5]]
2021-03-11 13:05:21,192 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@717e92d5]
2021-03-11 13:05:21,375 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:21,377 [main:105] - GENERATED CALL = (bByte[0]).plus(0.5823619421487344)
2021-03-11 13:05:21,378 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1c850bdd]]
2021-03-11 13:05:21,378 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:05:21,378 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1c850bdd]
2021-03-11 13:05:21,617 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:21,619 [main:105] - GENERATED CALL = (bByte[0]).toShort().plus(0.15783598018025502)
2021-03-11 13:05:21,619 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]]
2021-03-11 13:05:21,620 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:21,620 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]
2021-03-11 13:05:21,783 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:21,784 [main:105] - GENERATED CALL = (bByte[0]).toInt().minus(0.8921150354738183)
2021-03-11 13:05:21,785 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba], @kotlin.SinceKotlin public fun kotlin.Double.withSign(sign: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@5792b835]]
2021-03-11 13:05:21,785 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]
2021-03-11 13:05:21,933 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:21,935 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.withSign(sign: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@5792b835]
2021-03-11 13:05:22,070 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:22,072 [main:105] - GENERATED CALL = (bByte[0]).div(0.33607816614265607).withSign(0.5923427651989324)
2021-03-11 13:05:22,072 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun unaryPlus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4803d1c0]]
2021-03-11 13:05:22,072 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:05:22,072 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4803d1c0]
2021-03-11 13:05:22,072 [main:105] - GENERATED CALL = (bByte[0]).toDouble().unaryPlus()
2021-03-11 13:05:22,072 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@120440d0]]
2021-03-11 13:05:22,072 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:05:22,210 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:22,212 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@120440d0]
2021-03-11 13:05:22,349 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:22,351 [main:105] - GENERATED CALL = (bByte[0]).compareTo(-53).rem(0.9717999538596145)
2021-03-11 13:05:22,352 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]]
2021-03-11 13:05:22,352 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:05:22,352 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]
2021-03-11 13:05:22,352 [main:105] - GENERATED CALL = (bByte[0]).toDouble().nextDown()
2021-03-11 13:05:22,352 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@40f9cf69]]
2021-03-11 13:05:22,352 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:05:22,352 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@40f9cf69]
2021-03-11 13:05:22,490 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:22,491 [main:105] - GENERATED CALL = (bByte[0]).toFloat().plus(0.328069433975834)
2021-03-11 13:05:22,491 [main:63] - replacement of bDouble[(0.73492005391268).toInt().countOneBits()] of type Double is (bByte[0]).div(0.33607816614265607).withSign(0.5923427651989324)
2021-03-11 13:05:22,627 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:22,627 [main:66] - Compilation checking started
2021-03-11 13:05:23,005 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != (bByte[0]).div(0.33607816614265607).withSign(0.5923427651989324)) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:23,018 [main:56] - replacing (bByte[(bLong[0]--).toInt().unaryPlus()], Byte)
2021-03-11 13:05:23,018 [main:38] - replacing bByte[(bLong[0]--).toInt().unaryPlus()] Byte
2021-03-11 13:05:23,018 [main:42] - Getting value of type Byte
2021-03-11 13:05:23,155 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:23,157 [main:46] - GENERATED VALUE OF TYPE Byte = 112
2021-03-11 13:05:23,157 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:23,315 [main:55] - randomType = UInt?
2021-03-11 13:05:23,463 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:05:23,498 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@651edeb9]
2021-03-11 13:05:23,498 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]
2021-03-11 13:05:23,638 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:23,640 [main:66] - Generated call from random type = (949261394.toUInt())?.toByte().or(-75)
2021-03-11 13:05:23,640 [main:63] - replacement of bByte[(bLong[0]--).toInt().unaryPlus()] of type Byte is (949261394.toUInt())?.toByte().or(-75)
2021-03-11 13:05:23,779 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:23,788 [main:56] - replacing ((bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)], Double)
2021-03-11 13:05:23,789 [main:38] - replacing (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)] Double
2021-03-11 13:05:23,790 [main:42] - Getting value of type Double
2021-03-11 13:05:23,926 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:23,927 [main:46] - GENERATED VALUE OF TYPE Double = 0.2551318212168737
2021-03-11 13:05:23,927 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:23,930 [main:55] - randomType = Short
2021-03-11 13:05:24,068 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:24,117 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:24,118 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1610336f]
2021-03-11 13:05:24,255 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:24,256 [main:66] - Generated call from random type = (2605).toLong().times(0.5676365170254981)
2021-03-11 13:05:24,257 [main:94] - GETTING Double from Long
2021-03-11 13:05:24,298 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@546b593c]]
2021-03-11 13:05:24,299 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:05:24,299 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@546b593c]
2021-03-11 13:05:24,437 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:24,438 [main:105] - GENERATED CALL = (aLong[0]++).toFloat().times(0.7781850130543743)
2021-03-11 13:05:24,438 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]]
2021-03-11 13:05:24,438 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:05:24,578 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:24,580 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]
2021-03-11 13:05:24,580 [main:105] - GENERATED CALL = (aLong[0]++).div(0.43576813398228353).nextDown()
2021-03-11 13:05:24,580 [main:101] - Case = [public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@78436e2a]]
2021-03-11 13:05:24,580 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@78436e2a]
2021-03-11 13:05:24,722 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:24,724 [main:105] - GENERATED CALL = (aLong[0]++).minus(0.09850231897005202)
2021-03-11 13:05:24,724 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ebbab4b]]
2021-03-11 13:05:24,724 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:05:24,866 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:24,867 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ebbab4b]
2021-03-11 13:05:25,004 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:25,006 [main:105] - GENERATED CALL = (aLong[0]++).div(0.10939560173473806).minus(-52)
2021-03-11 13:05:25,006 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]]
2021-03-11 13:05:25,006 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:05:25,142 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:25,144 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]
2021-03-11 13:05:25,287 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:25,289 [main:105] - GENERATED CALL = (aLong[0]++).compareTo(-54).times(0.15992817034690654)
2021-03-11 13:05:25,289 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]]
2021-03-11 13:05:25,289 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:05:25,289 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]
2021-03-11 13:05:25,426 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:25,428 [main:105] - GENERATED CALL = (aLong[0]++).toByte().div(0.4456052031560511)
2021-03-11 13:05:25,428 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], public fun kotlin.Double.coerceAtLeast(minimumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dbe6c2f]]
2021-03-11 13:05:25,428 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:05:25,611 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:25,613 [main:137] - GENERATING call of type public fun kotlin.Double.coerceAtLeast(minimumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dbe6c2f]
2021-03-11 13:05:25,756 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:25,758 [main:105] - GENERATED CALL = (aLong[0]++).div(0.8961985735478187).coerceAtLeast(0.6510301493035604)
2021-03-11 13:05:25,758 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4d0648d8]]
2021-03-11 13:05:25,758 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:05:25,758 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4d0648d8]
2021-03-11 13:05:25,758 [main:105] - GENERATED CALL = (aLong[0]++).toDouble().dec()
2021-03-11 13:05:25,758 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]]
2021-03-11 13:05:25,758 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:05:25,897 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:25,898 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]
2021-03-11 13:05:25,898 [main:105] - GENERATED CALL = (aLong[0]++).div(0.4595821800376888).toDouble()
2021-03-11 13:05:25,898 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public open fun toDouble(): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28a1fac9]]
2021-03-11 13:05:25,898 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:05:25,898 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28a1fac9]
2021-03-11 13:05:25,898 [main:105] - GENERATED CALL = (aLong[0]++).toShort().toDouble()
2021-03-11 13:05:25,899 [main:63] - replacement of (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)] of type Double is (aLong[0]++).div(0.10939560173473806).minus(-52)
2021-03-11 13:05:26,033 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:26,033 [main:66] - Compilation checking started
2021-03-11 13:05:26,421 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (aLong[0]++).div(0.10939560173473806).minus(-52)--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:26,431 [main:56] - replacing (bInt[(false).compareTo(true).shl(-512772460)], Int)
2021-03-11 13:05:26,432 [main:38] - replacing bInt[(false).compareTo(true).shl(-512772460)] Int
2021-03-11 13:05:26,432 [main:42] - Getting value of type Int
2021-03-11 13:05:26,573 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:26,574 [main:46] - GENERATED VALUE OF TYPE Int = 219961992
2021-03-11 13:05:26,574 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:26,771 [main:55] - randomType = Byte?
2021-03-11 13:05:26,935 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:26,981 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 13:05:27,132 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:27,133 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]
2021-03-11 13:05:27,133 [main:66] - Generated call from random type = (114)?.div(0.97321427f).toBits()
2021-03-11 13:05:27,134 [main:94] - GETTING Int from Array<Long>
2021-03-11 13:05:27,151 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:05:27,151 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:05:27,152 [main:105] - GENERATED CALL = (aLong).size.unaryPlus()
2021-03-11 13:05:27,152 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:05:27,152 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:05:27,311 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:27,313 [main:105] - GENERATED CALL = (aLong).size.xor(1284389741)
2021-03-11 13:05:27,313 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:05:27,313 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:05:27,314 [main:105] - GENERATED CALL = (aLong).size.inc()
2021-03-11 13:05:27,314 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2b040329]]
2021-03-11 13:05:27,314 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2b040329]
2021-03-11 13:05:27,314 [main:105] - GENERATED CALL = (aLong).sum()
2021-03-11 13:05:27,314 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]]
2021-03-11 13:05:27,314 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 13:05:27,506 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:27,508 [main:105] - GENERATED CALL = (aLong).size.and(1148098817)
2021-03-11 13:05:27,508 [main:101] - Case = [public inline fun <T> kotlin.Array<out T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4fc20ae9]]
2021-03-11 13:05:27,508 [main:137] - GENERATING call of type public inline fun <T> kotlin.Array<out T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4fc20ae9]
2021-03-11 13:05:27,659 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-11 13:05:27,661 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 13:05:27,662 [main:105] - GENERATED CALL = (aLong).indexOfLast({a: T -> false})
2021-03-11 13:05:27,663 [main:101] - Case = [public val <T> kotlin.Array<out T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@5a0f6f2a]]
2021-03-11 13:05:27,663 [main:105] - GENERATED CALL = (aLong).lastIndex
2021-03-11 13:05:27,663 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:05:27,663 [main:105] - GENERATED CALL = (aLong).size.sign
2021-03-11 13:05:27,663 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:05:27,663 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:05:27,821 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:27,823 [main:105] - GENERATED CALL = (aLong).size.or(346827303)
2021-03-11 13:05:27,823 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 13:05:27,823 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 13:05:27,823 [main:105] - GENERATED CALL = (aLong).size.takeLowestOneBit()
2021-03-11 13:05:27,823 [main:63] - replacement of bInt[(false).compareTo(true).shl(-512772460)] of type Int is (aLong).size.sign
2021-03-11 13:05:27,987 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:27,987 [main:66] - Compilation checking started
2021-03-11 13:05:28,504 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aLong).size.sign--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()]++
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:28,518 [main:56] - replacing (longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()]++, Long)
2021-03-11 13:05:28,520 [main:38] - replacing longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()]++ Long
2021-03-11 13:05:28,520 [main:42] - Getting value of type Long
2021-03-11 13:05:28,746 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:28,747 [main:46] - GENERATED VALUE OF TYPE Long = 5382190319662088524
2021-03-11 13:05:28,748 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:28,753 [main:55] - randomType = Float
2021-03-11 13:05:28,957 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:29,028 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:05:29,028 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6a45febd]
2021-03-11 13:05:29,216 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:29,218 [main:66] - Generated call from random type = (0.31107318f).toLong().ushr(-445481222)
2021-03-11 13:05:29,218 [main:94] - GETTING Long from Long
2021-03-11 13:05:29,285 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c59df0a]]
2021-03-11 13:05:29,285 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:29,285 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c59df0a]
2021-03-11 13:05:29,473 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:29,474 [main:105] - GENERATED CALL = (aLong[0]).toLong().or(-1441725198645378477)
2021-03-11 13:05:29,474 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]]
2021-03-11 13:05:29,475 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:05:29,475 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@47db0511]
2021-03-11 13:05:29,475 [main:105] - GENERATED CALL = (aLong[0]).toDouble().roundToLong()
2021-03-11 13:05:29,475 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]]
2021-03-11 13:05:29,475 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:05:29,662 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:29,664 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]
2021-03-11 13:05:29,664 [main:105] - GENERATED CALL = (aLong[0]).compareTo(-28).toLong()
2021-03-11 13:05:29,664 [main:101] - Case = [public final operator fun minus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@19797838]]
2021-03-11 13:05:29,664 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@19797838]
2021-03-11 13:05:29,850 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:29,852 [main:105] - GENERATED CALL = (aLong[0]).minus(81)
2021-03-11 13:05:29,852 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Long.rotateLeft(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@1aef20d5]]
2021-03-11 13:05:29,852 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:29,852 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Long.rotateLeft(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@1aef20d5]
2021-03-11 13:05:30,015 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:30,017 [main:105] - GENERATED CALL = (aLong[0]).toLong().rotateLeft(-1797487009)
2021-03-11 13:05:30,017 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@666a61a7]]
2021-03-11 13:05:30,017 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:05:30,017 [main:137] - GENERATING call of type public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@666a61a7]
2021-03-11 13:05:30,018 [main:105] - GENERATED CALL = (aLong[0]).toChar().toLong()
2021-03-11 13:05:30,018 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@315b5cc]]
2021-03-11 13:05:30,018 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:05:30,018 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@315b5cc]
2021-03-11 13:05:30,172 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:30,173 [main:105] - GENERATED CALL = (aLong[0]).toByte().plus(7138535456890184839)
2021-03-11 13:05:30,173 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]]
2021-03-11 13:05:30,174 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:05:30,308 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:30,310 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:05:30,450 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:30,452 [main:105] - GENERATED CALL = (aLong[0]).compareTo(13).div(-724419354736618325)
2021-03-11 13:05:30,452 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]]
2021-03-11 13:05:30,452 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:30,452 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]
2021-03-11 13:05:30,622 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:30,623 [main:105] - GENERATED CALL = (aLong[0]).toInt().plus(2950551261283054777)
2021-03-11 13:05:30,623 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2372d47d]]
2021-03-11 13:05:30,623 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:30,624 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2372d47d]
2021-03-11 13:05:30,759 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:30,761 [main:105] - GENERATED CALL = (aLong[0]).toLong().div(-12)
2021-03-11 13:05:30,761 [main:63] - replacement of longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()]++ of type Long is (aLong[0]).toByte().plus(7138535456890184839)
2021-03-11 13:05:30,895 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:30,896 [main:66] - Compilation checking started
2021-03-11 13:05:31,375 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:31,384 [main:56] - replacing (aByte[(aByte[0]++).div(0.27717453f).toBits()], Byte)
2021-03-11 13:05:31,385 [main:38] - replacing aByte[(aByte[0]++).div(0.27717453f).toBits()] Byte
2021-03-11 13:05:31,385 [main:42] - Getting value of type Byte
2021-03-11 13:05:31,559 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:31,561 [main:46] - GENERATED VALUE OF TYPE Byte = -6
2021-03-11 13:05:31,561 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:31,889 [main:55] - randomType = ArrayList<Pair<Double, Double>>
2021-03-11 13:05:32,023 [main:302] - generating value of type = ArrayList<Pair<Double, Double>> false depth = 0
2021-03-11 13:05:32,165 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): ArrayList<Pair<Double, Double>> = TODO()
2021-03-11 13:05:32,168 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): ArrayList<Pair<Double, Double>> = TODO()
2021-03-11 13:05:32,307 [main:95] - GENERATED = arrayListOf<Pair<Double, Double>>()
2021-03-11 13:05:32,475 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:05:32,475 [main:66] - Generated call from random type = (arrayListOf<Pair<Double, Double>>()).modCount.toByte()
2021-03-11 13:05:32,476 [main:94] - GETTING Byte from Float
2021-03-11 13:05:32,505 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeHighestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc8d02]]
2021-03-11 13:05:32,505 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:05:32,505 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeHighestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@7dc8d02]
2021-03-11 13:05:32,505 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().takeHighestOneBit()
2021-03-11 13:05:32,506 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]]
2021-03-11 13:05:32,506 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:05:32,506 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]
2021-03-11 13:05:32,641 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:32,643 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().coerceAtLeast(-20)
2021-03-11 13:05:32,643 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]]
2021-03-11 13:05:32,643 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:05:32,643 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]
2021-03-11 13:05:32,643 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().inv()
2021-03-11 13:05:32,643 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateRight(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@60497689]]
2021-03-11 13:05:32,643 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:05:32,643 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateRight(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@60497689]
2021-03-11 13:05:32,777 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:32,779 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().rotateRight(-736533426)
2021-03-11 13:05:32,779 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]]
2021-03-11 13:05:32,779 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:05:32,779 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]
2021-03-11 13:05:32,924 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:32,926 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().and(-73)
2021-03-11 13:05:32,926 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]]
2021-03-11 13:05:32,926 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:05:32,926 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]
2021-03-11 13:05:33,065 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:33,219 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:33,221 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().coerceIn(92, 78)
2021-03-11 13:05:33,221 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]]
2021-03-11 13:05:33,221 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:05:33,221 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:05:33,221 [main:105] - GENERATED CALL = (bFloat[0]--).toLong().toByte()
2021-03-11 13:05:33,221 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:05:33,221 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:05:33,363 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:33,365 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:05:33,365 [main:105] - GENERATED CALL = (bFloat[0]--).div(0.08512091379496667).toByte()
2021-03-11 13:05:33,365 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943], public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]]
2021-03-11 13:05:33,365 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943]
2021-03-11 13:05:33,365 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:05:33,365 [main:105] - GENERATED CALL = (bFloat[0]--).toChar().toByte()
2021-03-11 13:05:33,365 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:05:33,365 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:05:33,514 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:33,516 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:05:33,516 [main:105] - GENERATED CALL = (bFloat[0]--).compareTo(-51).toByte()
2021-03-11 13:05:33,516 [main:63] - replacement of aByte[(aByte[0]++).div(0.27717453f).toBits()] of type Byte is (bFloat[0]--).toByte().inv()
2021-03-11 13:05:33,672 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:33,672 [main:66] - Compilation checking started
2021-03-11 13:05:34,073 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    (bFloat[0]--).toByte().inv()++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:34,084 [main:56] - replacing (aLong, Array<Long>)
2021-03-11 13:05:34,084 [main:38] - replacing aLong Array<Long>
2021-03-11 13:05:34,084 [main:42] - Getting value of type Array<Long>
2021-03-11 13:05:34,237 [main:302] - generating value of type = Array<Long> false depth = 0
2021-03-11 13:05:34,380 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Long> = TODO()
2021-03-11 13:05:34,383 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Long> = TODO()
2021-03-11 13:05:34,535 [main:95] - GENERATED = emptyArray<Long>()
2021-03-11 13:05:34,535 [main:46] - GENERATED VALUE OF TYPE Array<Long> = emptyArray<Long>()
2021-03-11 13:05:34,535 [main:49] - GENERATED IS CALL =true
2021-03-11 13:05:35,026 [main:55] - randomType = List<UShort?>
2021-03-11 13:05:35,027 [main:94] - GETTING Array<Long> from Int
2021-03-11 13:05:35,066 [main:94] - GETTING Array<Long> from Long
2021-03-11 13:05:35,098 [main:94] - GETTING Array<Long> from Float
2021-03-11 13:05:35,130 [main:94] - GETTING Array<Long> from Array<Short>
2021-03-11 13:05:35,141 [main:63] - replacement of aLong of type Array<Long> is aShort
2021-03-11 13:05:35,283 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:05:35,292 [main:56] - replacing (longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()], Long)
2021-03-11 13:05:35,292 [main:38] - replacing longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()] Long
2021-03-11 13:05:35,292 [main:42] - Getting value of type Long
2021-03-11 13:05:35,428 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:35,429 [main:46] - GENERATED VALUE OF TYPE Long = 3364188697464810553
2021-03-11 13:05:35,429 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:35,432 [main:55] - randomType = Int
2021-03-11 13:05:35,568 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:35,607 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:05:35,743 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:35,745 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6a45febd]
2021-03-11 13:05:35,881 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:35,883 [main:66] - Generated call from random type = (17612759).div(-486222578175583484).ushr(2141215376)
2021-03-11 13:05:35,884 [main:94] - GETTING Long from Byte
2021-03-11 13:05:35,926 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun inc(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5d7225b5]]
2021-03-11 13:05:35,926 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:35,926 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5d7225b5]
2021-03-11 13:05:35,926 [main:105] - GENERATED CALL = (bByte[0]).toLong().inc()
2021-03-11 13:05:35,926 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2372d47d]]
2021-03-11 13:05:35,926 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:35,926 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2372d47d]
2021-03-11 13:05:36,062 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:36,064 [main:105] - GENERATED CALL = (bByte[0]).toLong().div(100)
2021-03-11 13:05:36,064 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5d7445d], public final val step: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@51740384]]
2021-03-11 13:05:36,064 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5d7445d]
2021-03-11 13:05:36,200 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:36,201 [main:105] - GENERATED CALL = (bByte[0]).rangeTo(-5824865920299482680).step
2021-03-11 13:05:36,201 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], public final operator fun plus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5378b5ec]]
2021-03-11 13:05:36,201 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:05:36,337 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:36,339 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5378b5ec]
2021-03-11 13:05:36,475 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:36,477 [main:105] - GENERATED CALL = (bByte[0]).div(-6067496418088520977).plus(-51)
2021-03-11 13:05:36,477 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]]
2021-03-11 13:05:36,477 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:05:36,614 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:36,615 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1a7b97e1]
2021-03-11 13:05:36,770 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:36,771 [main:105] - GENERATED CALL = (bByte[0]).compareTo(-118).plus(-6148392076390594811)
2021-03-11 13:05:36,771 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6297a364]]
2021-03-11 13:05:36,771 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:36,772 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6297a364]
2021-03-11 13:05:36,905 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:36,906 [main:105] - GENERATED CALL = (bByte[0]).toInt().minus(1857565091570995375)
2021-03-11 13:05:36,906 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@40045f23]]
2021-03-11 13:05:36,907 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:05:37,042 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:37,044 [main:137] - GENERATING call of type public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@40045f23]
2021-03-11 13:05:37,179 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:37,181 [main:105] - GENERATED CALL = (bByte[0]).div(1633920266530341588).coerceAtLeast(-6146410525870963459)
2021-03-11 13:05:37,181 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@efa4745]]
2021-03-11 13:05:37,181 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:05:37,181 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@efa4745]
2021-03-11 13:05:37,329 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:37,330 [main:105] - GENERATED CALL = (bByte[0]).toByte().minus(-1608444227627445223)
2021-03-11 13:05:37,331 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2f1de9d8]]
2021-03-11 13:05:37,331 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:37,331 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2f1de9d8]
2021-03-11 13:05:37,474 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:37,476 [main:105] - GENERATED CALL = (bByte[0]).toLong().and(-4495055375572423695)
2021-03-11 13:05:37,476 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final infix fun shr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5f8e3995]]
2021-03-11 13:05:37,476 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:37,476 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5f8e3995]
2021-03-11 13:05:37,610 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:37,612 [main:105] - GENERATED CALL = (bByte[0]).toLong().shr(1877518817)
2021-03-11 13:05:37,612 [main:63] - replacement of longArrayOf(-9188166699576211219)[(bDouble[0]++).toShort().countLeadingZeroBits()] of type Long is (17612759).div(-486222578175583484).ushr(2141215376)
2021-03-11 13:05:37,747 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:37,756 [main:56] - replacing (arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)), Array<Int>)
2021-03-11 13:05:37,758 [main:38] - replacing arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) Array<Int>
2021-03-11 13:05:37,758 [main:42] - Getting value of type Array<Int>
2021-03-11 13:05:37,893 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:05:38,032 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Int> = TODO()
2021-03-11 13:05:38,034 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Int> = TODO()
2021-03-11 13:05:38,173 [main:95] - GENERATED = enumValues<Int>()
2021-03-11 13:05:38,173 [main:46] - GENERATED VALUE OF TYPE Array<Int> = enumValues<Int>()
2021-03-11 13:05:38,173 [main:49] - GENERATED IS CALL =true
2021-03-11 13:05:38,176 [main:55] - randomType = Long
2021-03-11 13:05:38,310 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:05:38,342 [main:94] - GETTING Array<Int> from ByteArray
2021-03-11 13:05:38,351 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:05:38,381 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:05:38,412 [main:94] - GETTING Array<Int> from Short
2021-03-11 13:05:38,443 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:05:38,474 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:05:38,475 [main:94] - GETTING Array<Int> from Array<Double>
2021-03-11 13:05:38,485 [main:63] - replacement of arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) of type Array<Int> is aDouble
2021-03-11 13:05:38,619 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:05:38,619 [main:66] - Compilation checking started
2021-03-11 13:05:39,026 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = aDouble
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)]) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:39,035 [main:56] - replacing ((aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)], Boolean)
2021-03-11 13:05:39,036 [main:38] - replacing (aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)] Boolean
2021-03-11 13:05:39,036 [main:42] - Getting value of type Boolean
2021-03-11 13:05:39,171 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:05:39,173 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 13:05:39,173 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:39,321 [main:55] - randomType = UByte?
2021-03-11 13:05:39,455 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:05:39,493 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@57a8016f]
2021-03-11 13:05:39,628 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:05:39,629 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@55053252]
2021-03-11 13:05:39,770 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:05:39,772 [main:66] - Generated call from random type = (95.toUByte())?.equals("cmkxn").and(true)
2021-03-11 13:05:39,773 [main:94] - GETTING Boolean from Int
2021-03-11 13:05:39,818 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@15d87a4a]]
2021-03-11 13:05:39,818 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:05:39,818 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@15d87a4a]
2021-03-11 13:05:39,955 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:05:39,956 [main:105] - GENERATED CALL = (bInt[0]++).toFloat().equals("yyomb")
2021-03-11 13:05:39,956 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@755a95f2]]
2021-03-11 13:05:39,956 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:05:40,096 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:05:40,096 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@755a95f2]
2021-03-11 13:05:40,240 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:05:40,242 [main:105] - GENERATED CALL = (bInt[0]++).equals("ownza").xor(true)
2021-03-11 13:05:40,242 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public fun kotlin.Char.isWhitespace(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46b37743]]
2021-03-11 13:05:40,242 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:05:40,242 [main:137] - GENERATING call of type public fun kotlin.Char.isWhitespace(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46b37743]
2021-03-11 13:05:40,242 [main:105] - GENERATED CALL = (bInt[0]++).toChar().isWhitespace()
2021-03-11 13:05:40,242 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public fun kotlin.Char.isHighSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b6af7c7]]
2021-03-11 13:05:40,242 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:05:40,242 [main:137] - GENERATING call of type public fun kotlin.Char.isHighSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6b6af7c7]
2021-03-11 13:05:40,242 [main:105] - GENERATED CALL = (bInt[0]++).toChar().isHighSurrogate()
2021-03-11 13:05:40,242 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public fun kotlin.Char.isDefined(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@791198ad]]
2021-03-11 13:05:40,242 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:05:40,242 [main:137] - GENERATING call of type public fun kotlin.Char.isDefined(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@791198ad]
2021-03-11 13:05:40,242 [main:105] - GENERATED CALL = (bInt[0]++).toChar().isDefined()
2021-03-11 13:05:40,242 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@63e55d39]]
2021-03-11 13:05:40,242 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:05:40,243 [main:137] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@63e55d39]
2021-03-11 13:05:40,243 [main:105] - GENERATED CALL = (bInt[0]++).toDouble().isFinite()
2021-03-11 13:05:40,243 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@493658fa]]
2021-03-11 13:05:40,243 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:05:40,243 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@493658fa]
2021-03-11 13:05:40,383 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:05:40,384 [main:105] - GENERATED CALL = (bInt[0]++).toLong().equals("gvhjz")
2021-03-11 13:05:40,384 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]]
2021-03-11 13:05:40,384 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:05:40,535 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:40,536 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:05:40,675 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:05:40,675 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(209948122).equals("bquuo")
2021-03-11 13:05:40,675 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public fun kotlin.Char.isLetterOrDigit(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@50c2590c]]
2021-03-11 13:05:40,675 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:05:40,675 [main:137] - GENERATING call of type public fun kotlin.Char.isLetterOrDigit(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@50c2590c]
2021-03-11 13:05:40,675 [main:105] - GENERATED CALL = (bInt[0]++).toChar().isLetterOrDigit()
2021-03-11 13:05:40,676 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@566ce47e]]
2021-03-11 13:05:40,676 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:05:40,815 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:05:40,815 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@566ce47e]
2021-03-11 13:05:40,950 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:05:40,951 [main:105] - GENERATED CALL = (bInt[0]++).equals("lzsru").or(true)
2021-03-11 13:05:40,952 [main:63] - replacement of (aInt[0]++).toChar().toShort() != (bShort).sliceArray(linkedSetOf<Int>(-1103502163))[(75.toUByte()).compareTo(82.toUByte()).times(-102)] of type Boolean is (bInt[0]++).compareTo(209948122).equals("bquuo")
2021-03-11 13:05:41,089 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:41,089 [main:66] - Compilation checking started
2021-03-11 13:05:41,614 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    bShort[0]--
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:41,623 [main:56] - replacing (Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)], Short)
2021-03-11 13:05:41,625 [main:38] - replacing Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)] Short
2021-03-11 13:05:41,625 [main:42] - Getting value of type Short
2021-03-11 13:05:41,762 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:41,763 [main:46] - GENERATED VALUE OF TYPE Short = 21762
2021-03-11 13:05:41,764 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:41,768 [main:55] - randomType = Boolean
2021-03-11 13:05:41,900 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:05:41,911 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:05:42,048 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:05:42,049 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:05:42,049 [main:66] - Generated call from random type = (true).compareTo(true).toShort()
2021-03-11 13:05:42,050 [main:94] - GETTING Short from Float
2021-03-11 13:05:42,087 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:05:42,087 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:05:42,225 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:42,226 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:05:42,226 [main:105] - GENERATED CALL = (aFloat[0]++).div(0.2697282382929014).toShort()
2021-03-11 13:05:42,226 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]]
2021-03-11 13:05:42,227 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:42,227 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]
2021-03-11 13:05:42,363 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:42,364 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().rotateRight(-228569747)
2021-03-11 13:05:42,364 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]]
2021-03-11 13:05:42,364 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:42,364 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]
2021-03-11 13:05:42,498 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:42,500 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().and(-25823)
2021-03-11 13:05:42,500 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]]
2021-03-11 13:05:42,500 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:42,500 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]
2021-03-11 13:05:42,500 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().dec()
2021-03-11 13:05:42,500 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]]
2021-03-11 13:05:42,500 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:42,500 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]
2021-03-11 13:05:42,501 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().takeLowestOneBit()
2021-03-11 13:05:42,501 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]]
2021-03-11 13:05:42,501 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:42,501 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]
2021-03-11 13:05:42,501 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().inv()
2021-03-11 13:05:42,501 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]]
2021-03-11 13:05:42,501 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:42,501 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]
2021-03-11 13:05:42,632 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:42,634 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().rotateLeft(-1574493321)
2021-03-11 13:05:42,634 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]]
2021-03-11 13:05:42,634 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:42,634 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]
2021-03-11 13:05:42,768 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:42,770 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().coerceAtLeast(22476)
2021-03-11 13:05:42,770 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.xor(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@461bb21c]]
2021-03-11 13:05:42,770 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:42,770 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.xor(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@461bb21c]
2021-03-11 13:05:42,908 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:42,909 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().xor(30358)
2021-03-11 13:05:42,909 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]]
2021-03-11 13:05:42,910 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:42,910 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]
2021-03-11 13:05:42,910 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().takeHighestOneBit()
2021-03-11 13:05:42,910 [main:63] - replacement of Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)] of type Short is (aFloat[0]++).div(0.2697282382929014).toShort()
2021-03-11 13:05:43,077 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:43,078 [main:66] - Compilation checking started
2021-03-11 13:05:43,447 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    (aFloat[0]++).div(0.2697282382929014).toShort()--
    bShort[0]--
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:43,456 [main:56] - replacing (bShort[0]--, Short)
2021-03-11 13:05:43,457 [main:38] - replacing bShort[0]-- Short
2021-03-11 13:05:43,457 [main:42] - Getting value of type Short
2021-03-11 13:05:43,592 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:43,594 [main:46] - GENERATED VALUE OF TYPE Short = -24509
2021-03-11 13:05:43,594 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:43,737 [main:55] - randomType = UShort
2021-03-11 13:05:43,871 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:05:43,899 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7f533bc3]
2021-03-11 13:05:43,899 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:43,899 [main:66] - Generated call from random type = (12028.toUShort()).toFloat().toShort()
2021-03-11 13:05:43,900 [main:94] - GETTING Short from Array<Float>
2021-03-11 13:05:43,911 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@267bf28], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:05:43,911 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@267bf28]
2021-03-11 13:05:44,041 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:44,043 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:44,043 [main:105] - GENERATED CALL = (aFloat).get(827805013).toShort()
2021-03-11 13:05:44,043 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@55e69343], public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]]
2021-03-11 13:05:44,043 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:05:44,043 [main:105] - GENERATED CALL = (aFloat).size.toShort()
2021-03-11 13:05:44,043 [main:63] - replacement of bShort[0]-- of type Short is (aFloat).get(827805013).toShort()
2021-03-11 13:05:44,185 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:44,185 [main:66] - Compilation checking started
2021-03-11 13:05:44,709 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf(1.0f)
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:44,723 [main:56] - replacing (1.0f, Float)
2021-03-11 13:05:44,726 [main:38] - replacing 1.0f Float
2021-03-11 13:05:44,726 [main:42] - Getting value of type Float
2021-03-11 13:05:44,877 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:44,879 [main:46] - GENERATED VALUE OF TYPE Float = 0.5440544f
2021-03-11 13:05:44,879 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:44,882 [main:55] - randomType = String
2021-03-11 13:05:45,021 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:05:45,048 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1268a8b6]
2021-03-11 13:05:45,180 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:05:45,181 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]
2021-03-11 13:05:45,320 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:45,321 [main:66] - Generated call from random type = ("xgenw").compareTo("xjnog").plus(0.04571396f)
2021-03-11 13:05:45,323 [main:94] - GETTING Float from Int
2021-03-11 13:05:45,385 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5], public final operator fun unaryMinus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3061ada4]]
2021-03-11 13:05:45,386 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:05:45,530 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:45,532 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3061ada4]
2021-03-11 13:05:45,532 [main:105] - GENERATED CALL = (aInt[0]).div(0.294356f).unaryMinus()
2021-03-11 13:05:45,532 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]]
2021-03-11 13:05:45,532 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:05:45,532 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 13:05:45,667 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:45,669 [main:105] - GENERATED CALL = (aInt[0]).toByte().div(0.42373925f)
2021-03-11 13:05:45,669 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]]
2021-03-11 13:05:45,669 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:05:45,669 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]
2021-03-11 13:05:45,669 [main:105] - GENERATED CALL = (aInt[0]).toFloat().dec()
2021-03-11 13:05:45,669 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Float.sign: kotlin.Float defined in kotlin.math[DeserializedPropertyDescriptor@57448ff4]]
2021-03-11 13:05:45,669 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:05:45,804 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:45,805 [main:105] - GENERATED CALL = (aInt[0]).div(0.7901456f).sign
2021-03-11 13:05:45,805 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]]
2021-03-11 13:05:45,805 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:45,806 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]
2021-03-11 13:05:45,939 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:45,940 [main:105] - GENERATED CALL = (aInt[0]).toInt().rem(0.87509954f)
2021-03-11 13:05:45,940 [main:101] - Case = [public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]]
2021-03-11 13:05:45,940 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 13:05:46,089 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:46,091 [main:105] - GENERATED CALL = (aInt[0]).minus(0.65549105f)
2021-03-11 13:05:46,091 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]]
2021-03-11 13:05:46,091 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:05:46,227 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:46,229 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:05:46,369 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:46,371 [main:105] - GENERATED CALL = (aInt[0]).compareTo(-1774921441).times(0.50868595f)
2021-03-11 13:05:46,371 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]]
2021-03-11 13:05:46,371 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:05:46,371 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:05:46,371 [main:105] - GENERATED CALL = (aInt[0]).toDouble().toFloat()
2021-03-11 13:05:46,371 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:05:46,371 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:05:46,371 [main:105] - GENERATED CALL = (aInt[0]).toFloat()
2021-03-11 13:05:46,371 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]]
2021-03-11 13:05:46,371 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:05:46,371 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]
2021-03-11 13:05:46,501 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:46,503 [main:105] - GENERATED CALL = (aInt[0]).toFloat().withSign(0.5450336f)
2021-03-11 13:05:46,503 [main:63] - replacement of 1.0f of type Float is (aInt[0]).toFloat().dec()
2021-03-11 13:05:46,636 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:46,637 [main:66] - Compilation checking started
2021-03-11 13:05:47,118 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:47,131 [main:56] - replacing (arrayOf<Short>(1), Array<Short>)
2021-03-11 13:05:47,132 [main:38] - replacing arrayOf<Short>(1) Array<Short>
2021-03-11 13:05:47,132 [main:42] - Getting value of type Array<Short>
2021-03-11 13:05:47,299 [main:302] - generating value of type = Array<Short> false depth = 0
2021-03-11 13:05:47,435 [main:43] - GENERATING CALL OF fun <T> arrayOfNulls(size: kotlin.Int): Array<Short> = TODO()
2021-03-11 13:05:47,437 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOfNulls(size: kotlin.Int): Array<Short> = TODO()
2021-03-11 13:05:47,718 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:05:47,720 [main:95] - GENERATED = arrayOfNulls<Short>(-1363520766)
2021-03-11 13:05:47,720 [main:46] - GENERATED VALUE OF TYPE Array<Short> = arrayOfNulls<Short>(-1363520766)
2021-03-11 13:05:47,720 [main:49] - GENERATED IS CALL =true
2021-03-11 13:05:47,724 [main:55] - randomType = UInt
2021-03-11 13:05:47,857 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:05:47,888 [main:94] - GETTING Array<Short> from ShortArray
2021-03-11 13:05:47,898 [main:101] - Case = [public fun kotlin.ShortArray.toTypedArray(): kotlin.Array<kotlin.Short> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38109e63]]
2021-03-11 13:05:47,898 [main:137] - GENERATING call of type public fun kotlin.ShortArray.toTypedArray(): kotlin.Array<kotlin.Short> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@38109e63]
2021-03-11 13:05:47,898 [main:105] - GENERATED CALL = (bShort).toTypedArray()
2021-03-11 13:05:47,898 [main:63] - replacement of arrayOf<Short>(1) of type Array<Short> is arrayOfNulls<Short>(-1363520766)
2021-03-11 13:05:48,046 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:05:48,046 [main:66] - Compilation checking started
2021-03-11 13:05:48,467 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOfNulls<Short>(-1363520766)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:48,476 [main:56] - replacing (byteArrayOf(1), ByteArray)
2021-03-11 13:05:48,477 [main:38] - replacing byteArrayOf(1) ByteArray
2021-03-11 13:05:48,477 [main:42] - Getting value of type ByteArray
2021-03-11 13:05:48,650 [main:302] - generating value of type = ByteArray false depth = 0
2021-03-11 13:05:48,799 [main:43] - GENERATING CALL OF fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 13:05:48,802 [main:61] - WITHOUT TYPE PARAMS = fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 13:05:48,944 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 13:05:48,945 [main:95] - GENERATED = byteArrayOf(-127)
2021-03-11 13:05:48,946 [main:46] - GENERATED VALUE OF TYPE ByteArray = byteArrayOf(-127)
2021-03-11 13:05:48,946 [main:49] - GENERATED IS CALL =true
2021-03-11 13:05:48,949 [main:55] - randomType = UInt
2021-03-11 13:05:49,089 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:05:49,123 [main:94] - GETTING ByteArray from Long
2021-03-11 13:05:49,179 [main:94] - GETTING ByteArray from Byte
2021-03-11 13:05:49,221 [main:94] - GETTING ByteArray from FloatArray
2021-03-11 13:05:49,233 [main:94] - GETTING ByteArray from Float
2021-03-11 13:05:49,279 [main:94] - GETTING ByteArray from ShortArray
2021-03-11 13:05:49,291 [main:94] - GETTING ByteArray from Long
2021-03-11 13:05:49,292 [main:94] - GETTING ByteArray from Float
2021-03-11 13:05:49,293 [main:94] - GETTING ByteArray from Double
2021-03-11 13:05:49,334 [main:94] - GETTING ByteArray from Long
2021-03-11 13:05:49,335 [main:94] - GETTING ByteArray from ByteArray
2021-03-11 13:05:49,347 [main:101] - Case = [public fun kotlin.ByteArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61852fa9]]
2021-03-11 13:05:49,347 [main:137] - GENERATING call of type public fun kotlin.ByteArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61852fa9]
2021-03-11 13:05:49,489 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:49,631 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:49,632 [main:105] - GENERATED CALL = (bByte).copyOfRange(-1615036657, -1954002643)
2021-03-11 13:05:49,632 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ByteArray.copyInto(destination: kotlin.ByteArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61989734]]
2021-03-11 13:05:49,632 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ByteArray.copyInto(destination: kotlin.ByteArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61989734]
2021-03-11 13:05:49,786 [main:302] - generating value of type = ByteArray false depth = 0
2021-03-11 13:05:49,930 [main:43] - GENERATING CALL OF fun ByteArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Byte): ByteArray = TODO()
2021-03-11 13:05:49,932 [main:61] - WITHOUT TYPE PARAMS = fun ByteArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Byte): ByteArray = TODO()
2021-03-11 13:05:50,369 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:05:50,371 [main:302] - generating value of type = Function1<Int, Byte> false depth = 3
2021-03-11 13:05:50,372 [main:302] - generating value of type = Byte true depth = 4
2021-03-11 13:05:50,374 [main:95] - GENERATED = ByteArray(-1426377998, {a: Int -> 25})
2021-03-11 13:05:50,507 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:50,641 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:50,774 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:50,776 [main:105] - GENERATED CALL = (bByte).copyInto(ByteArray(-1426377998, {a: Int -> 25}), -62503016, 2050369339, -890355458)
2021-03-11 13:05:50,776 [main:101] - Case = [public fun kotlin.ByteArray.sortedArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@159de312]]
2021-03-11 13:05:50,776 [main:137] - GENERATING call of type public fun kotlin.ByteArray.sortedArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@159de312]
2021-03-11 13:05:50,776 [main:105] - GENERATED CALL = (bByte).sortedArray()
2021-03-11 13:05:50,776 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ByteArray.onEach(action: (kotlin.Byte) -> kotlin.Unit): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@54ad431b]]
2021-03-11 13:05:50,776 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ByteArray.onEach(action: (kotlin.Byte) -> kotlin.Unit): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@54ad431b]
2021-03-11 13:05:50,908 [main:302] - generating value of type = Function1<Byte, Unit> false depth = 0
2021-03-11 13:05:50,910 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:05:50,914 [main:105] - GENERATED CALL = (bByte).onEach({a: Byte -> println()})
2021-03-11 13:05:50,914 [main:101] - Case = [public fun kotlin.ByteArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2cdefa7d]]
2021-03-11 13:05:50,914 [main:137] - GENERATING call of type public fun kotlin.ByteArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2cdefa7d]
2021-03-11 13:05:51,046 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:05:51,185 [main:43] - GENERATING CALL OF fun <E> HashSet(initialCapacity: kotlin.Int, loadFactor: kotlin.Float): Collection<Int> = TODO()
2021-03-11 13:05:51,187 [main:61] - WITHOUT TYPE PARAMS = fun <E> HashSet(initialCapacity: kotlin.Int, loadFactor: kotlin.Float): Collection<Int> = TODO()
2021-03-11 13:05:51,649 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:05:51,650 [main:302] - generating value of type = Float true depth = 3
2021-03-11 13:05:51,652 [main:95] - GENERATED = HashSet<Int>(-2043066174, 0.16423249f)
2021-03-11 13:05:51,652 [main:105] - GENERATED CALL = (bByte).sliceArray(HashSet<Int>(-2043066174, 0.16423249f))
2021-03-11 13:05:51,652 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ByteArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Byte) -> kotlin.Unit): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b95af5c]]
2021-03-11 13:05:51,652 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ByteArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Byte) -> kotlin.Unit): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b95af5c]
2021-03-11 13:05:51,784 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Byte, Unit> false depth = 0
2021-03-11 13:05:51,786 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:05:51,922 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 13:05:51,924 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 13:05:52,200 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 13:05:52,202 [main:95] - GENERATED = check(true)
2021-03-11 13:05:52,202 [main:105] - GENERATED CALL = (bByte).onEachIndexed({a: Int, b: Byte -> check(true)})
2021-03-11 13:05:52,202 [main:101] - Case = [public fun kotlin.ByteArray.reversedArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6dd0c7d5]]
2021-03-11 13:05:52,202 [main:137] - GENERATING call of type public fun kotlin.ByteArray.reversedArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6dd0c7d5]
2021-03-11 13:05:52,203 [main:105] - GENERATED CALL = (bByte).reversedArray()
2021-03-11 13:05:52,203 [main:101] - Case = [public inline fun kotlin.ByteArray.copyOf(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@620de5d3]]
2021-03-11 13:05:52,203 [main:137] - GENERATING call of type public inline fun kotlin.ByteArray.copyOf(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@620de5d3]
2021-03-11 13:05:52,203 [main:105] - GENERATED CALL = (bByte).copyOf()
2021-03-11 13:05:52,203 [main:101] - Case = [public fun kotlin.ByteArray.sortedArrayDescending(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@904ccf7]]
2021-03-11 13:05:52,203 [main:137] - GENERATING call of type public fun kotlin.ByteArray.sortedArrayDescending(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@904ccf7]
2021-03-11 13:05:52,203 [main:105] - GENERATED CALL = (bByte).sortedArrayDescending()
2021-03-11 13:05:52,203 [main:101] - Case = [public inline operator fun kotlin.ByteArray.plus(element: kotlin.Byte): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3f1b551]]
2021-03-11 13:05:52,203 [main:137] - GENERATING call of type public inline operator fun kotlin.ByteArray.plus(element: kotlin.Byte): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3f1b551]
2021-03-11 13:05:52,335 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:52,336 [main:105] - GENERATED CALL = (bByte).plus(-33)
2021-03-11 13:05:52,337 [main:63] - replacement of byteArrayOf(1) of type ByteArray is (bByte).sortedArray()
2021-03-11 13:05:52,468 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:52,468 [main:66] - Compilation checking started
2021-03-11 13:05:52,841 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = (bByte).sortedArray()
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}"

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:52,850 [main:56] - replacing (bFloat, FloatArray)
2021-03-11 13:05:52,850 [main:38] - replacing bFloat FloatArray
2021-03-11 13:05:52,850 [main:42] - Getting value of type FloatArray
2021-03-11 13:05:52,982 [main:302] - generating value of type = FloatArray false depth = 0
2021-03-11 13:05:53,117 [main:43] - GENERATING CALL OF fun floatArrayOf(elements: Float): FloatArray = TODO()
2021-03-11 13:05:53,119 [main:61] - WITHOUT TYPE PARAMS = fun floatArrayOf(elements: Float): FloatArray = TODO()
2021-03-11 13:05:53,254 [main:302] - generating value of type = Float true depth = 3
2021-03-11 13:05:53,255 [main:95] - GENERATED = floatArrayOf(0.4357447f)
2021-03-11 13:05:53,255 [main:46] - GENERATED VALUE OF TYPE FloatArray = floatArrayOf(0.4357447f)
2021-03-11 13:05:53,256 [main:49] - GENERATED IS CALL =true
2021-03-11 13:05:53,547 [main:55] - randomType = Collection<Byte?>
2021-03-11 13:05:53,548 [main:94] - GETTING FloatArray from Array<Byte>
2021-03-11 13:05:53,558 [main:101] - Case = [public fun kotlin.Array<out kotlin.Float>.toFloatArray(): kotlin.FloatArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c77afa7]]
2021-03-11 13:05:53,559 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Float>.toFloatArray(): kotlin.FloatArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c77afa7]
2021-03-11 13:05:53,559 [main:105] - GENERATED CALL = (aByte).toFloatArray()
2021-03-11 13:05:53,559 [main:63] - replacement of bFloat of type FloatArray is floatArrayOf(0.4357447f)
2021-03-11 13:05:53,691 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:05:53,700 [main:56] - replacing (bShort[0], Short)
2021-03-11 13:05:53,700 [main:38] - replacing bShort[0] Short
2021-03-11 13:05:53,700 [main:42] - Getting value of type Short
2021-03-11 13:05:53,830 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:53,831 [main:46] - GENERATED VALUE OF TYPE Short = 26091
2021-03-11 13:05:53,832 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:54,128 [main:55] - randomType = Function1<Short, ArrayDeque<Float>>
2021-03-11 13:05:54,128 [main:94] - GETTING Short from Short
2021-03-11 13:05:54,164 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]]
2021-03-11 13:05:54,164 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:05:54,164 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]
2021-03-11 13:05:54,294 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:54,296 [main:105] - GENERATED CALL = (aShort[0]).toShort().and(-25840)
2021-03-11 13:05:54,296 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]]
2021-03-11 13:05:54,296 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]
2021-03-11 13:05:54,296 [main:105] - GENERATED CALL = (aShort[0]).toShort()
2021-03-11 13:05:54,296 [main:101] - Case = [public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]]
2021-03-11 13:05:54,296 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]
2021-03-11 13:05:54,296 [main:105] - GENERATED CALL = (aShort[0]).dec()
2021-03-11 13:05:54,296 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:05:54,296 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:05:54,296 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:05:54,296 [main:105] - GENERATED CALL = (aShort[0]).toFloat().toShort()
2021-03-11 13:05:54,296 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]]
2021-03-11 13:05:54,296 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:05:54,296 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]
2021-03-11 13:05:54,296 [main:105] - GENERATED CALL = (aShort[0]).toShort().dec()
2021-03-11 13:05:54,296 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]]
2021-03-11 13:05:54,296 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:05:54,296 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]
2021-03-11 13:05:54,429 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:54,431 [main:105] - GENERATED CALL = (aShort[0]).toShort().rotateLeft(1072232181)
2021-03-11 13:05:54,431 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]]
2021-03-11 13:05:54,431 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]
2021-03-11 13:05:54,563 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:54,564 [main:105] - GENERATED CALL = (aShort[0]).rotateRight(1146005183)
2021-03-11 13:05:54,564 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]]
2021-03-11 13:05:54,564 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]
2021-03-11 13:05:54,564 [main:105] - GENERATED CALL = (aShort[0]).takeHighestOneBit()
2021-03-11 13:05:54,564 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public final operator fun inc(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@37ca9861]]
2021-03-11 13:05:54,564 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:05:54,564 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@37ca9861]
2021-03-11 13:05:54,564 [main:105] - GENERATED CALL = (aShort[0]).toShort().inc()
2021-03-11 13:05:54,565 [main:101] - Case = [public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]]
2021-03-11 13:05:54,565 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]
2021-03-11 13:05:54,696 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:54,697 [main:105] - GENERATED CALL = (aShort[0]).coerceAtLeast(-1677)
2021-03-11 13:05:54,697 [main:63] - replacement of bShort[0] of type Short is (aShort[0]).takeHighestOneBit()
2021-03-11 13:05:54,828 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:54,837 [main:56] - replacing (0, Int)
2021-03-11 13:05:54,837 [main:38] - replacing 0 Int
2021-03-11 13:05:54,837 [main:42] - Getting value of type Int
2021-03-11 13:05:54,968 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:54,969 [main:46] - GENERATED VALUE OF TYPE Int = 1238856923
2021-03-11 13:05:54,969 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:54,972 [main:55] - randomType = Char
2021-03-11 13:05:55,105 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:05:55,127 [main:137] - GENERATING call of type public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]
2021-03-11 13:05:55,127 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@230050cf]
2021-03-11 13:05:55,128 [main:66] - Generated call from random type = ('컖').toShort().countTrailingZeroBits()
2021-03-11 13:05:55,128 [main:94] - GETTING Int from Long
2021-03-11 13:05:55,158 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:05:55,158 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:55,158 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:05:55,289 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:55,291 [main:105] - GENERATED CALL = (aLong[0]).toInt().compareTo(108)
2021-03-11 13:05:55,291 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:05:55,291 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:55,291 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:05:55,291 [main:105] - GENERATED CALL = (aLong[0]).toInt().unaryMinus()
2021-03-11 13:05:55,291 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]]
2021-03-11 13:05:55,291 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:05:55,291 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:05:55,423 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:55,425 [main:105] - GENERATED CALL = (aLong[0]).toDouble().compareTo(115)
2021-03-11 13:05:55,425 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3e11389b]]
2021-03-11 13:05:55,425 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:05:55,425 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3e11389b]
2021-03-11 13:05:55,556 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:55,558 [main:105] - GENERATED CALL = (aLong[0]).toByte().div(101)
2021-03-11 13:05:55,558 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]]
2021-03-11 13:05:55,558 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:05:55,558 [main:137] - GENERATING call of type @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]
2021-03-11 13:05:55,558 [main:105] - GENERATED CALL = (aLong[0]).toChar().digitToInt()
2021-03-11 13:05:55,558 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]]
2021-03-11 13:05:55,558 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:05:55,558 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]
2021-03-11 13:05:55,558 [main:105] - GENERATED CALL = (aLong[0]).toDouble().roundToInt()
2021-03-11 13:05:55,558 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:05:55,558 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:05:55,728 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:55,730 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:05:55,730 [main:105] - GENERATED CALL = (aLong[0]).compareTo(32).inv()
2021-03-11 13:05:55,730 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:05:55,730 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:05:55,861 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:05:55,862 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:05:55,862 [main:105] - GENERATED CALL = (aLong[0]).div(0.5062238f).toRawBits()
2021-03-11 13:05:55,862 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:05:55,862 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:05:55,862 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:05:55,993 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:55,995 [main:105] - GENERATED CALL = (aLong[0]).toInt().plus(-61)
2021-03-11 13:05:55,995 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]]
2021-03-11 13:05:55,995 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:05:55,995 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]
2021-03-11 13:05:56,127 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:56,129 [main:105] - GENERATED CALL = (aLong[0]).toShort().div(-117)
2021-03-11 13:05:56,129 [main:63] - replacement of 0 of type Int is (aLong[0]).toInt().unaryMinus()
2021-03-11 13:05:56,259 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:56,267 [main:56] - replacing (0, Int)
2021-03-11 13:05:56,268 [main:38] - replacing 0 Int
2021-03-11 13:05:56,268 [main:42] - Getting value of type Int
2021-03-11 13:05:56,398 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:56,400 [main:46] - GENERATED VALUE OF TYPE Int = -387818057
2021-03-11 13:05:56,400 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:56,544 [main:55] - randomType = Boolean?
2021-03-11 13:05:56,675 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:05:56,853 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:05:56,984 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:05:56,986 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:05:57,118 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:57,120 [main:66] - Generated call from random type = (false)?.compareTo(true).coerceAtLeast(1969515123)
2021-03-11 13:05:57,120 [main:94] - GETTING Int from IntArray
2021-03-11 13:05:57,128 [main:101] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component4(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1b2727b4]]
2021-03-11 13:05:57,128 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.IntArray.component4(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1b2727b4]
2021-03-11 13:05:57,128 [main:105] - GENERATED CALL = (bInt).component4()
2021-03-11 13:05:57,128 [main:101] - Case = [public inline fun kotlin.IntArray.reduce(operation: (acc: kotlin.Int, kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e98c048]]
2021-03-11 13:05:57,128 [main:137] - GENERATING call of type public inline fun kotlin.IntArray.reduce(operation: (acc: kotlin.Int, kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e98c048]
2021-03-11 13:05:57,261 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Int, Int> false depth = 0
2021-03-11 13:05:57,263 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:05:57,264 [main:105] - GENERATED CALL = (bInt).reduce({a: Int, b: Int -> -1929977958})
2021-03-11 13:05:57,264 [main:101] - Case = [public inline fun kotlin.IntArray.sumBy(selector: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b568757]]
2021-03-11 13:05:57,265 [main:137] - GENERATING call of type public inline fun kotlin.IntArray.sumBy(selector: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b568757]
2021-03-11 13:05:57,399 [main:302] - generating value of type = Function1<Int, Int> false depth = 0
2021-03-11 13:05:57,400 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:05:57,402 [main:105] - GENERATED CALL = (bInt).sumBy({a: Int -> 1319713082})
2021-03-11 13:05:57,402 [main:101] - Case = [public fun kotlin.IntArray.last(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@45502ba2]]
2021-03-11 13:05:57,402 [main:137] - GENERATING call of type public fun kotlin.IntArray.last(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@45502ba2]
2021-03-11 13:05:57,402 [main:105] - GENERATED CALL = (bInt).last()
2021-03-11 13:05:57,402 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:05:57,402 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:05:57,538 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:57,539 [main:105] - GENERATED CALL = (bInt).size.plus(-75)
2021-03-11 13:05:57,539 [main:101] - Case = [public inline fun kotlin.IntArray.reduceIndexed(operation: (index: kotlin.Int, acc: kotlin.Int, kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64ff46e1]]
2021-03-11 13:05:57,539 [main:137] - GENERATING call of type public inline fun kotlin.IntArray.reduceIndexed(operation: (index: kotlin.Int, acc: kotlin.Int, kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@64ff46e1]
2021-03-11 13:05:57,677 [main:302] - generating value of type = Function3<[@kotlin.ParameterName] Int, [@kotlin.ParameterName] Int, Int, Int> false depth = 0
2021-03-11 13:05:57,678 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:05:57,680 [main:105] - GENERATED CALL = (bInt).reduceIndexed({a: Int, b: Int, c: Int -> -462206339})
2021-03-11 13:05:57,680 [main:101] - Case = [public fun kotlin.IntArray.first(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61395f2]]
2021-03-11 13:05:57,680 [main:137] - GENERATING call of type public fun kotlin.IntArray.first(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61395f2]
2021-03-11 13:05:57,680 [main:105] - GENERATED CALL = (bInt).first()
2021-03-11 13:05:57,680 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:05:57,680 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:05:57,825 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:57,826 [main:105] - GENERATED CALL = (bInt).size.rotateRight(669501882)
2021-03-11 13:05:57,827 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.IntArray[DeserializedPropertyDescriptor@4dd83df5], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:05:57,827 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:05:57,965 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:05:57,967 [main:105] - GENERATED CALL = (bInt).size.coerceAtLeast(1340348347)
2021-03-11 13:05:57,967 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.sumOf(selector: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6333acd3]]
2021-03-11 13:05:57,967 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.sumOf(selector: (kotlin.Int) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6333acd3]
2021-03-11 13:05:58,098 [main:302] - generating value of type = Function1<Int, Int> false depth = 0
2021-03-11 13:05:58,100 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:05:58,101 [main:105] - GENERATED CALL = (bInt).sumOf({a: Int -> -305272311})
2021-03-11 13:05:58,101 [main:63] - replacement of 0 of type Int is (bInt).sumBy({a: Int -> 1319713082})
2021-03-11 13:05:58,232 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:58,241 [main:56] - replacing ("Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}", String)
2021-03-11 13:05:58,243 [main:38] - replacing "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}" String
2021-03-11 13:05:58,243 [main:42] - Getting value of type String
2021-03-11 13:05:58,374 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:05:58,376 [main:46] - GENERATED VALUE OF TYPE String = "vhzll"
2021-03-11 13:05:58,376 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:58,378 [main:55] - randomType = Short
2021-03-11 13:05:58,512 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:05:58,547 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:05:58,547 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]
2021-03-11 13:05:58,547 [main:66] - Generated call from random type = (87).toChar().titlecase()
2021-03-11 13:05:58,548 [main:63] - replacement of "Failed post-decrement Double: ${aLong[(aFloat[0]--).toShort().times(-88)]} != ${(aFloat).size.times(0.5084219981835861)}" of type String is (87).toChar().titlecase()
2021-03-11 13:05:58,678 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:05:58,678 [main:66] - Compilation checking started
2021-03-11 13:05:59,138 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:05:59,147 [main:56] - replacing ((bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)], Double)
2021-03-11 13:05:59,148 [main:38] - replacing (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)] Double
2021-03-11 13:05:59,149 [main:42] - Getting value of type Double
2021-03-11 13:05:59,280 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:59,281 [main:46] - GENERATED VALUE OF TYPE Double = 0.23718143613206655
2021-03-11 13:05:59,281 [main:49] - GENERATED IS CALL =false
2021-03-11 13:05:59,575 [main:55] - randomType = Function1<Char?, Boolean>
2021-03-11 13:05:59,576 [main:94] - GETTING Double from Float
2021-03-11 13:05:59,605 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]]
2021-03-11 13:05:59,605 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:05:59,736 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:05:59,737 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]
2021-03-11 13:05:59,869 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:05:59,870 [main:105] - GENERATED CALL = (aFloat[0]++).compareTo(70).plus(0.637548507155258)
2021-03-11 13:05:59,870 [main:101] - Case = [public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@40f9cf69]]
2021-03-11 13:05:59,870 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@40f9cf69]
2021-03-11 13:06:00,047 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:00,049 [main:105] - GENERATED CALL = (aFloat[0]++).plus(0.42093303465601206)
2021-03-11 13:06:00,049 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], public final operator fun unaryMinus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@56f78035]]
2021-03-11 13:06:00,049 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:06:00,179 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:00,180 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@56f78035]
2021-03-11 13:06:00,180 [main:105] - GENERATED CALL = (aFloat[0]++).div(0.2049280785874169).unaryMinus()
2021-03-11 13:06:00,180 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]]
2021-03-11 13:06:00,180 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:06:00,180 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]
2021-03-11 13:06:00,310 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:00,312 [main:105] - GENERATED CALL = (aFloat[0]++).toDouble().pow(0.38950664068844254)
2021-03-11 13:06:00,312 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public fun kotlin.Double.coerceAtMost(maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ff45f6f]]
2021-03-11 13:06:00,312 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:06:00,312 [main:137] - GENERATING call of type public fun kotlin.Double.coerceAtMost(maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ff45f6f]
2021-03-11 13:06:00,441 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:00,443 [main:105] - GENERATED CALL = (aFloat[0]++).toDouble().coerceAtMost(0.9902928318873896)
2021-03-11 13:06:00,443 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@68b7f942]]
2021-03-11 13:06:00,443 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:06:00,573 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:00,575 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@68b7f942]
2021-03-11 13:06:00,575 [main:105] - GENERATED CALL = (aFloat[0]++).div(0.23326776394161408).nextUp()
2021-03-11 13:06:00,575 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public fun kotlin.Double.coerceIn(minimumValue: kotlin.Double, maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5b73fd45]]
2021-03-11 13:06:00,575 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:06:00,575 [main:137] - GENERATING call of type public fun kotlin.Double.coerceIn(minimumValue: kotlin.Double, maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5b73fd45]
2021-03-11 13:06:00,706 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:00,839 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:00,841 [main:105] - GENERATED CALL = (aFloat[0]++).toDouble().coerceIn(0.8963088542168431, 0.6516653801274784)
2021-03-11 13:06:00,841 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91], @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]]
2021-03-11 13:06:00,841 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:06:00,977 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:00,979 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]
2021-03-11 13:06:00,979 [main:105] - GENERATED CALL = (aFloat[0]++).div(0.13513681591669902).nextDown()
2021-03-11 13:06:00,979 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@611f4707]]
2021-03-11 13:06:00,979 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:00,979 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@611f4707]
2021-03-11 13:06:01,120 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:01,121 [main:105] - GENERATED CALL = (aFloat[0]++).toFloat().minus(0.17015480767204283)
2021-03-11 13:06:01,121 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2fc4f8bc]]
2021-03-11 13:06:01,121 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:06:01,122 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2fc4f8bc]
2021-03-11 13:06:01,253 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:01,255 [main:105] - GENERATED CALL = (aFloat[0]++).toByte().minus(0.168105442210852)
2021-03-11 13:06:01,255 [main:63] - replacement of (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)] of type Double is (aFloat[0]++).toDouble().coerceAtMost(0.9902928318873896)
2021-03-11 13:06:01,384 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:01,384 [main:66] - Compilation checking started
2021-03-11 13:06:01,755 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(1)
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (aFloat[0]++).toDouble().coerceAtMost(0.9902928318873896)--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:01,764 [main:56] - replacing (1, Int)
2021-03-11 13:06:01,765 [main:38] - replacing 1 Int
2021-03-11 13:06:01,765 [main:42] - Getting value of type Int
2021-03-11 13:06:01,895 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:01,896 [main:46] - GENERATED VALUE OF TYPE Int = -1994665976
2021-03-11 13:06:01,896 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:02,193 [main:55] - randomType = Collection<MutableMap<Char, Byte>>
2021-03-11 13:06:02,194 [main:94] - GETTING Int from Byte
2021-03-11 13:06:02,226 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]]
2021-03-11 13:06:02,226 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:06:02,226 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 13:06:02,356 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:02,358 [main:105] - GENERATED CALL = (bByte[0]--).toInt().and(532035680)
2021-03-11 13:06:02,358 [main:101] - Case = [public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]]
2021-03-11 13:06:02,358 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]
2021-03-11 13:06:02,488 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:02,489 [main:105] - GENERATED CALL = (bByte[0]--).plus(104)
2021-03-11 13:06:02,489 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]]
2021-03-11 13:06:02,489 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:06:02,489 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]
2021-03-11 13:06:02,619 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:02,621 [main:105] - GENERATED CALL = (bByte[0]--).toByte().rem(71)
2021-03-11 13:06:02,621 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3ab8b8ed], public final val last: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@4d376558]]
2021-03-11 13:06:02,621 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3ab8b8ed]
2021-03-11 13:06:02,751 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:02,753 [main:105] - GENERATED CALL = (bByte[0]--).rangeTo(-8).last
2021-03-11 13:06:02,753 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:06:02,753 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:06:02,753 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:06:02,882 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:02,884 [main:105] - GENERATED CALL = (bByte[0]--).toInt().or(-478463869)
2021-03-11 13:06:02,884 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:06:02,884 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:06:03,015 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:03,016 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:06:03,149 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:03,151 [main:105] - GENERATED CALL = (bByte[0]--).compareTo(89).ushr(1598044037)
2021-03-11 13:06:03,151 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]]
2021-03-11 13:06:03,151 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:06:03,151 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]
2021-03-11 13:06:03,151 [main:105] - GENERATED CALL = (bByte[0]--).toLong().countLeadingZeroBits()
2021-03-11 13:06:03,151 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]]
2021-03-11 13:06:03,151 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:06:03,151 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:06:03,283 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:03,285 [main:105] - GENERATED CALL = (bByte[0]--).toByte().compareTo(4)
2021-03-11 13:06:03,285 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]]
2021-03-11 13:06:03,285 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:03,285 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]
2021-03-11 13:06:03,285 [main:105] - GENERATED CALL = (bByte[0]--).toFloat().roundToInt()
2021-03-11 13:06:03,285 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:06:03,285 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:06:03,415 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:03,417 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:06:03,547 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:03,549 [main:105] - GENERATED CALL = (bByte[0]--).compareTo(-70).shr(718237829)
2021-03-11 13:06:03,549 [main:63] - replacement of 1 of type Int is (bByte[0]--).toByte().compareTo(4)
2021-03-11 13:06:03,679 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:03,679 [main:66] - Compilation checking started
2021-03-11 13:06:04,176 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:04,185 [main:56] - replacing (arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)), Array<Int>)
2021-03-11 13:06:04,186 [main:38] - replacing arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) Array<Int>
2021-03-11 13:06:04,186 [main:42] - Getting value of type Array<Int>
2021-03-11 13:06:04,364 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:06:04,510 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Int> = TODO()
2021-03-11 13:06:04,512 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Int> = TODO()
2021-03-11 13:06:04,650 [main:95] - GENERATED = emptyArray<Int>()
2021-03-11 13:06:04,651 [main:46] - GENERATED VALUE OF TYPE Array<Int> = emptyArray<Int>()
2021-03-11 13:06:04,651 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:04,655 [main:55] - randomType = Boolean
2021-03-11 13:06:04,796 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:06:04,807 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:06:04,839 [main:94] - GETTING Array<Int> from Short
2021-03-11 13:06:04,878 [main:94] - GETTING Array<Int> from FloatArray
2021-03-11 13:06:04,887 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:06:04,918 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:06:04,947 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:06:04,978 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:06:04,979 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:06:04,980 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:06:04,981 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:06:05,010 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:06:05,011 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:06:05,012 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:06:05,012 [main:94] - GETTING Array<Int> from Array<Int>
2021-03-11 13:06:05,022 [main:101] - Case = [public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]]
2021-03-11 13:06:05,022 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]
2021-03-11 13:06:05,022 [main:105] - GENERATED CALL = (aInt).reversedArray()
2021-03-11 13:06:05,022 [main:101] - Case = [public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]]
2021-03-11 13:06:05,023 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]
2021-03-11 13:06:05,153 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:06:05,301 [main:43] - GENERATING CALL OF fun <T> mutableListOf(elements: Int): Collection<Int> = TODO()
2021-03-11 13:06:05,304 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableListOf(elements: Int): Collection<Int> = TODO()
2021-03-11 13:06:05,481 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:06:05,482 [main:95] - GENERATED = mutableListOf<Int>(-2132007701)
2021-03-11 13:06:05,482 [main:105] - GENERATED CALL = (aInt).sliceArray(mutableListOf<Int>(-2132007701))
2021-03-11 13:06:05,482 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]]
2021-03-11 13:06:05,482 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]
2021-03-11 13:06:05,483 [main:105] - GENERATED CALL = (aInt).sortedArray()
2021-03-11 13:06:05,483 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]]
2021-03-11 13:06:05,483 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]
2021-03-11 13:06:05,483 [main:105] - GENERATED CALL = (aInt).sortedArrayDescending()
2021-03-11 13:06:05,483 [main:101] - Case = [public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]]
2021-03-11 13:06:05,483 [main:137] - GENERATING call of type public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]
2021-03-11 13:06:05,483 [main:105] - GENERATED CALL = (aInt).requireNoNulls()
2021-03-11 13:06:05,483 [main:63] - replacement of arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) of type Array<Int> is (aInt).sliceArray(mutableListOf<Int>(-2132007701))
2021-03-11 13:06:05,620 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:05,620 [main:66] - Compilation checking started
2021-03-11 13:06:05,997 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = (aInt).sliceArray(mutableListOf<Int>(-2132007701))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((bFloat).toTypedArray()[-1708924608] != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:06,006 [main:56] - replacing ((bFloat).toTypedArray()[-1708924608], Float)
2021-03-11 13:06:06,008 [main:38] - replacing (bFloat).toTypedArray()[-1708924608] Float
2021-03-11 13:06:06,008 [main:42] - Getting value of type Float
2021-03-11 13:06:06,155 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:06,157 [main:46] - GENERATED VALUE OF TYPE Float = 0.14098912f
2021-03-11 13:06:06,157 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:06,455 [main:55] - randomType = ArrayDeque<UInt?>
2021-03-11 13:06:06,590 [main:302] - generating value of type = ArrayDeque<UInt?> false depth = 0
2021-03-11 13:06:06,726 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(): ArrayDeque<UInt?> = TODO()
2021-03-11 13:06:06,728 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(): ArrayDeque<UInt?> = TODO()
2021-03-11 13:06:06,863 [main:95] - GENERATED = ArrayDeque<UInt?>()
2021-03-11 13:06:06,985 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:06:07,117 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:07,118 [main:66] - Generated call from random type = (ArrayDeque<UInt?>()).size.times(0.9358999f)
2021-03-11 13:06:07,118 [main:63] - replacement of (bFloat).toTypedArray()[-1708924608] of type Float is (ArrayDeque<UInt?>()).size.times(0.9358999f)
2021-03-11 13:06:07,249 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:07,250 [main:66] - Compilation checking started
2021-03-11 13:06:07,719 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:07,728 [main:56] - replacing (0, Int)
2021-03-11 13:06:07,728 [main:38] - replacing 0 Int
2021-03-11 13:06:07,728 [main:42] - Getting value of type Int
2021-03-11 13:06:07,860 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:07,862 [main:46] - GENERATED VALUE OF TYPE Int = -496677787
2021-03-11 13:06:07,862 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:07,865 [main:55] - randomType = Long
2021-03-11 13:06:07,996 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:06:08,033 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:06:08,164 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:08,165 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:06:08,297 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:08,298 [main:66] - Generated call from random type = (-4439198734297429099).compareTo(-112).coerceAtMost(-1949717688)
2021-03-11 13:06:08,298 [main:63] - replacement of 0 of type Int is (-4439198734297429099).compareTo(-112).coerceAtMost(-1949717688)
2021-03-11 13:06:08,431 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:08,440 [main:56] - replacing (longArrayOf(1), LongArray)
2021-03-11 13:06:08,441 [main:38] - replacing longArrayOf(1) LongArray
2021-03-11 13:06:08,441 [main:42] - Getting value of type LongArray
2021-03-11 13:06:08,607 [main:302] - generating value of type = LongArray false depth = 0
2021-03-11 13:06:08,742 [main:43] - GENERATING CALL OF fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:06:08,744 [main:61] - WITHOUT TYPE PARAMS = fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:06:08,879 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:06:08,881 [main:95] - GENERATED = longArrayOf(-3422118082597714985)
2021-03-11 13:06:08,881 [main:46] - GENERATED VALUE OF TYPE LongArray = longArrayOf(-3422118082597714985)
2021-03-11 13:06:08,881 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:09,311 [main:55] - randomType = ArrayDeque<ULong?>
2021-03-11 13:06:09,444 [main:302] - generating value of type = ArrayDeque<ULong?> false depth = 0
2021-03-11 13:06:09,581 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<ULong?>): ArrayDeque<ULong?> = TODO()
2021-03-11 13:06:09,583 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<ULong?>): ArrayDeque<ULong?> = TODO()
2021-03-11 13:06:09,866 [main:302] - generating value of type = Collection<ULong?> false depth = 3
2021-03-11 13:06:10,003 [main:43] - GENERATING CALL OF fun <E> buildList(capacity: kotlin.Int, builderAction: kotlin.collections.MutableList<ULong?>.()->kotlin.Unit): Collection<ULong?> = TODO()
2021-03-11 13:06:10,006 [main:61] - WITHOUT TYPE PARAMS = fun <E> buildList(capacity: kotlin.Int, builderAction: kotlin.collections.MutableList<ULong?>.()->kotlin.Unit): Collection<ULong?> = TODO()
2021-03-11 13:06:10,437 [main:302] - generating value of type = Int true depth = 6
2021-03-11 13:06:10,438 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<MutableList<ULong?>, Unit> false depth = 6
2021-03-11 13:06:10,440 [main:302] - generating value of type = Unit false depth = 7
2021-03-11 13:06:10,580 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 13:06:10,582 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 13:06:11,002 [main:302] - generating value of type = Boolean true depth = 10
2021-03-11 13:06:11,003 [main:302] - generating value of type = Function0<Any> false depth = 10
2021-03-11 13:06:11,005 [main:302] - generating value of type = Any false depth = 11
2021-03-11 13:06:11,005 [main:95] - GENERATED = check(true, { "wnaze"})
2021-03-11 13:06:11,005 [main:95] - GENERATED = buildList<ULong?>(-1662897733, { check(true, { "wnaze"})})
2021-03-11 13:06:11,005 [main:95] - GENERATED = ArrayDeque<ULong?>(buildList<ULong?>(-1662897733, { check(true, { "wnaze"})}))
2021-03-11 13:06:11,122 [main:137] - GENERATING call of type public fun kotlin.collections.Collection<kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14d9a855]
2021-03-11 13:06:11,122 [main:66] - Generated call from random type = (ArrayDeque<ULong?>(buildList<ULong?>(-1662897733, { check(true, { "wnaze"})}))).toLongArray()
2021-03-11 13:06:11,123 [main:94] - GETTING LongArray from Int
2021-03-11 13:06:11,152 [main:94] - GETTING LongArray from Long
2021-03-11 13:06:11,180 [main:94] - GETTING LongArray from Long
2021-03-11 13:06:11,181 [main:94] - GETTING LongArray from Array<Double>
2021-03-11 13:06:11,191 [main:101] - Case = [public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]]
2021-03-11 13:06:11,191 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]
2021-03-11 13:06:11,191 [main:105] - GENERATED CALL = (aDouble).toLongArray()
2021-03-11 13:06:11,191 [main:63] - replacement of longArrayOf(1) of type LongArray is (ArrayDeque<ULong?>(buildList<ULong?>(-1662897733, { check(true, { "wnaze"})}))).toLongArray()
2021-03-11 13:06:11,322 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:11,323 [main:66] - Compilation checking started
2021-03-11 13:06:11,793 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = (ArrayDeque<ULong?>(buildList<ULong?>(-1662897733, { check(true, { "wnaze"})}))).toLongArray()

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[0]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:11,802 [main:56] - replacing (aFloat, Array<Float>)
2021-03-11 13:06:11,803 [main:38] - replacing aFloat Array<Float>
2021-03-11 13:06:11,803 [main:42] - Getting value of type Array<Float>
2021-03-11 13:06:11,944 [main:302] - generating value of type = Array<Float> false depth = 0
2021-03-11 13:06:12,086 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Float): Array<Float> = TODO()
2021-03-11 13:06:12,088 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Float): Array<Float> = TODO()
2021-03-11 13:06:12,238 [main:302] - generating value of type = Float true depth = 3
2021-03-11 13:06:12,239 [main:95] - GENERATED = arrayOf<Float>(0.099164665f)
2021-03-11 13:06:12,239 [main:46] - GENERATED VALUE OF TYPE Array<Float> = arrayOf<Float>(0.099164665f)
2021-03-11 13:06:12,239 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:12,244 [main:55] - randomType = Char
2021-03-11 13:06:12,383 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:06:12,409 [main:94] - GETTING Array<Float> from Byte
2021-03-11 13:06:12,449 [main:94] - GETTING Array<Float> from Float
2021-03-11 13:06:12,492 [main:94] - GETTING Array<Float> from Float
2021-03-11 13:06:12,493 [main:94] - GETTING Array<Float> from Long
2021-03-11 13:06:12,523 [main:94] - GETTING Array<Float> from Byte
2021-03-11 13:06:12,524 [main:94] - GETTING Array<Float> from Double
2021-03-11 13:06:12,551 [main:94] - GETTING Array<Float> from Int
2021-03-11 13:06:12,580 [main:94] - GETTING Array<Float> from Double
2021-03-11 13:06:12,581 [main:94] - GETTING Array<Float> from Short
2021-03-11 13:06:12,611 [main:94] - GETTING Array<Float> from Array<Byte>
2021-03-11 13:06:12,622 [main:63] - replacement of aFloat of type Array<Float> is arrayOf<Float>(0.099164665f)
2021-03-11 13:06:12,796 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:06:12,805 [main:56] - replacing (0, Int)
2021-03-11 13:06:12,806 [main:38] - replacing 0 Int
2021-03-11 13:06:12,806 [main:42] - Getting value of type Int
2021-03-11 13:06:12,943 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:12,945 [main:46] - GENERATED VALUE OF TYPE Int = 200190669
2021-03-11 13:06:12,945 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:12,948 [main:55] - randomType = Int
2021-03-11 13:06:13,083 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:13,114 [main:66] - Generated call from random type = (-655982276).absoluteValue
2021-03-11 13:06:13,115 [main:94] - GETTING Int from FloatArray
2021-03-11 13:06:13,123 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]]
2021-03-11 13:06:13,123 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 13:06:13,260 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:13,262 [main:105] - GENERATED CALL = (bFloat).size.and(-111591121)
2021-03-11 13:06:13,262 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 13:06:13,262 [main:105] - GENERATED CALL = (bFloat).size.absoluteValue
2021-03-11 13:06:13,262 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]]
2021-03-11 13:06:13,262 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7b6e4af0]
2021-03-11 13:06:13,262 [main:105] - GENERATED CALL = (bFloat).size.countLeadingZeroBits()
2021-03-11 13:06:13,262 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]]
2021-03-11 13:06:13,262 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 13:06:13,409 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:13,411 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]
2021-03-11 13:06:13,411 [main:105] - GENERATED CALL = (bFloat).get(-1112474074).toInt()
2021-03-11 13:06:13,411 [main:101] - Case = [public inline fun kotlin.FloatArray.sumBy(selector: (kotlin.Float) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f1ac68f]]
2021-03-11 13:06:13,411 [main:137] - GENERATING call of type public inline fun kotlin.FloatArray.sumBy(selector: (kotlin.Float) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f1ac68f]
2021-03-11 13:06:13,576 [main:302] - generating value of type = Function1<Float, Int> false depth = 0
2021-03-11 13:06:13,577 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:06:13,579 [main:105] - GENERATED CALL = (bFloat).sumBy({a: Float -> 813015916})
2021-03-11 13:06:13,579 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:06:13,579 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:06:13,579 [main:105] - GENERATED CALL = (bFloat).size.takeHighestOneBit()
2021-03-11 13:06:13,579 [main:101] - Case = [@kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun kotlin.FloatArray.contentHashCode(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@50ac0eac]]
2021-03-11 13:06:13,579 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun kotlin.FloatArray.contentHashCode(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@50ac0eac]
2021-03-11 13:06:13,579 [main:105] - GENERATED CALL = (bFloat).contentHashCode()
2021-03-11 13:06:13,579 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:06:13,579 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:06:13,579 [main:105] - GENERATED CALL = (bFloat).size.unaryPlus()
2021-03-11 13:06:13,579 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 13:06:13,579 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 13:06:13,579 [main:105] - GENERATED CALL = (bFloat).size.takeLowestOneBit()
2021-03-11 13:06:13,580 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:06:13,580 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:06:13,725 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:13,726 [main:105] - GENERATED CALL = (bFloat).size.rotateLeft(-1463590586)
2021-03-11 13:06:13,726 [main:63] - replacement of 0 of type Int is (bFloat).size.countLeadingZeroBits()
2021-03-11 13:06:13,887 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:13,887 [main:66] - Compilation checking started
2021-03-11 13:06:14,398 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    bInt[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:14,407 [main:56] - replacing (bShort, ShortArray)
2021-03-11 13:06:14,407 [main:38] - replacing bShort ShortArray
2021-03-11 13:06:14,407 [main:42] - Getting value of type ShortArray
2021-03-11 13:06:14,554 [main:302] - generating value of type = ShortArray false depth = 0
2021-03-11 13:06:14,734 [main:43] - GENERATING CALL OF fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:06:14,736 [main:61] - WITHOUT TYPE PARAMS = fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:06:14,906 [main:302] - generating value of type = Short true depth = 3
2021-03-11 13:06:14,908 [main:95] - GENERATED = shortArrayOf(17222)
2021-03-11 13:06:14,909 [main:46] - GENERATED VALUE OF TYPE ShortArray = shortArrayOf(17222)
2021-03-11 13:06:14,909 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:15,060 [main:55] - randomType = UShort
2021-03-11 13:06:15,200 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:06:15,242 [main:94] - GETTING ShortArray from Double
2021-03-11 13:06:15,277 [main:94] - GETTING ShortArray from Float
2021-03-11 13:06:15,304 [main:94] - GETTING ShortArray from Byte
2021-03-11 13:06:15,334 [main:94] - GETTING ShortArray from Int
2021-03-11 13:06:15,364 [main:94] - GETTING ShortArray from Long
2021-03-11 13:06:15,395 [main:94] - GETTING ShortArray from IntArray
2021-03-11 13:06:15,403 [main:94] - GETTING ShortArray from Float
2021-03-11 13:06:15,404 [main:94] - GETTING ShortArray from Array<Double>
2021-03-11 13:06:15,418 [main:101] - Case = [public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]]
2021-03-11 13:06:15,418 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]
2021-03-11 13:06:15,418 [main:105] - GENERATED CALL = (aDouble).toShortArray()
2021-03-11 13:06:15,418 [main:63] - replacement of bShort of type ShortArray is (aDouble).toShortArray()
2021-03-11 13:06:15,573 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:15,582 [main:56] - replacing (bInt, IntArray)
2021-03-11 13:06:15,583 [main:38] - replacing bInt IntArray
2021-03-11 13:06:15,583 [main:42] - Getting value of type IntArray
2021-03-11 13:06:15,719 [main:302] - generating value of type = IntArray false depth = 0
2021-03-11 13:06:15,864 [main:43] - GENERATING CALL OF fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:06:15,866 [main:61] - WITHOUT TYPE PARAMS = fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:06:16,047 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:06:16,049 [main:95] - GENERATED = intArrayOf(1330619926)
2021-03-11 13:06:16,049 [main:46] - GENERATED VALUE OF TYPE IntArray = intArrayOf(1330619926)
2021-03-11 13:06:16,049 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:16,052 [main:55] - randomType = Char
2021-03-11 13:06:16,202 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:06:16,223 [main:94] - GETTING IntArray from Short
2021-03-11 13:06:16,270 [main:94] - GETTING IntArray from Long
2021-03-11 13:06:16,306 [main:94] - GETTING IntArray from IntArray
2021-03-11 13:06:16,313 [main:101] - Case = [public fun kotlin.IntArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d70df0]]
2021-03-11 13:06:16,313 [main:137] - GENERATING call of type public fun kotlin.IntArray.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@67d70df0]
2021-03-11 13:06:16,462 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:06:16,622 [main:43] - GENERATING CALL OF fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->Int): Collection<Int> = TODO()
2021-03-11 13:06:16,624 [main:61] - WITHOUT TYPE PARAMS = fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->Int): Collection<Int> = TODO()
2021-03-11 13:06:17,106 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:06:17,108 [main:302] - generating value of type = Function1<[@kotlin.ParameterName] Int, Int> false depth = 3
2021-03-11 13:06:17,109 [main:302] - generating value of type = Int true depth = 4
2021-03-11 13:06:17,111 [main:95] - GENERATED = List<Int>(165157730, {a: Int -> 142550443})
2021-03-11 13:06:17,111 [main:105] - GENERATED CALL = (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))
2021-03-11 13:06:17,111 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.copyInto(destination: kotlin.IntArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1dd8c4ab]]
2021-03-11 13:06:17,111 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.copyInto(destination: kotlin.IntArray, destinationOffset: kotlin.Int = ..., startIndex: kotlin.Int = ..., endIndex: kotlin.Int = ...): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1dd8c4ab]
2021-03-11 13:06:17,248 [main:302] - generating value of type = IntArray false depth = 0
2021-03-11 13:06:17,425 [main:43] - GENERATING CALL OF fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:06:17,427 [main:61] - WITHOUT TYPE PARAMS = fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:06:17,565 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:06:17,567 [main:95] - GENERATED = intArrayOf(1300799667)
2021-03-11 13:06:17,707 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:17,843 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:17,976 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:17,978 [main:105] - GENERATED CALL = (bInt).copyInto(intArrayOf(1300799667), 2068038249, -1237451046, 178426191)
2021-03-11 13:06:17,978 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.onEach(action: (kotlin.Int) -> kotlin.Unit): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@627ff915]]
2021-03-11 13:06:17,978 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.onEach(action: (kotlin.Int) -> kotlin.Unit): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@627ff915]
2021-03-11 13:06:18,113 [main:302] - generating value of type = Function1<Int, Unit> false depth = 0
2021-03-11 13:06:18,114 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:06:18,258 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 13:06:18,260 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 13:06:18,556 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 13:06:18,558 [main:95] - GENERATED = require(false)
2021-03-11 13:06:18,558 [main:105] - GENERATED CALL = (bInt).onEach({a: Int -> require(false)})
2021-03-11 13:06:18,558 [main:101] - Case = [public fun kotlin.IntArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@288af9bf]]
2021-03-11 13:06:18,558 [main:137] - GENERATING call of type public fun kotlin.IntArray.copyOfRange(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@288af9bf]
2021-03-11 13:06:18,694 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:18,829 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:18,833 [main:105] - GENERATED CALL = (bInt).copyOfRange(-282064011, 391256759)
2021-03-11 13:06:18,833 [main:101] - Case = [public fun kotlin.IntArray.sortedArrayDescending(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b5224b6]]
2021-03-11 13:06:18,833 [main:137] - GENERATING call of type public fun kotlin.IntArray.sortedArrayDescending(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b5224b6]
2021-03-11 13:06:18,833 [main:105] - GENERATED CALL = (bInt).sortedArrayDescending()
2021-03-11 13:06:18,833 [main:101] - Case = [public fun kotlin.IntArray.reversedArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@457298d0]]
2021-03-11 13:06:18,833 [main:137] - GENERATING call of type public fun kotlin.IntArray.reversedArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@457298d0]
2021-03-11 13:06:18,833 [main:105] - GENERATED CALL = (bInt).reversedArray()
2021-03-11 13:06:18,833 [main:101] - Case = [public inline operator fun kotlin.IntArray.plus(element: kotlin.Int): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@159d4cda]]
2021-03-11 13:06:18,833 [main:137] - GENERATING call of type public inline operator fun kotlin.IntArray.plus(element: kotlin.Int): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@159d4cda]
2021-03-11 13:06:18,968 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:18,970 [main:105] - GENERATED CALL = (bInt).plus(852915056)
2021-03-11 13:06:18,970 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Int) -> kotlin.Unit): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7356f1c2]]
2021-03-11 13:06:18,970 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.IntArray.onEachIndexed(action: (index: kotlin.Int, kotlin.Int) -> kotlin.Unit): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7356f1c2]
2021-03-11 13:06:19,105 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, Int, Unit> false depth = 0
2021-03-11 13:06:19,107 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 13:06:19,261 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 13:06:19,264 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-11 13:06:19,595 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-11 13:06:19,596 [main:302] - generating value of type = Unit false depth = 5
2021-03-11 13:06:19,757 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 13:06:19,761 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 13:06:20,134 [main:302] - generating value of type = Any false depth = 8
2021-03-11 13:06:20,135 [main:95] - GENERATED = println("qohet")
2021-03-11 13:06:20,135 [main:95] - GENERATED = contract({ println("qohet")})
2021-03-11 13:06:20,135 [main:105] - GENERATED CALL = (bInt).onEachIndexed({a: Int, b: Int -> contract({ println("qohet")})})
2021-03-11 13:06:20,136 [main:101] - Case = [public inline fun kotlin.IntArray.copyOf(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3db2755]]
2021-03-11 13:06:20,136 [main:137] - GENERATING call of type public inline fun kotlin.IntArray.copyOf(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3db2755]
2021-03-11 13:06:20,136 [main:105] - GENERATED CALL = (bInt).copyOf()
2021-03-11 13:06:20,136 [main:101] - Case = [public fun kotlin.IntArray.sortedArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c6ecb9e]]
2021-03-11 13:06:20,136 [main:137] - GENERATING call of type public fun kotlin.IntArray.sortedArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4c6ecb9e]
2021-03-11 13:06:20,136 [main:105] - GENERATED CALL = (bInt).sortedArray()
2021-03-11 13:06:20,136 [main:63] - replacement of bInt of type IntArray is (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))
2021-03-11 13:06:20,277 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:20,277 [main:66] - Compilation checking started
2021-03-11 13:06:20,842 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[0]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:20,857 [main:56] - replacing (0, Int)
2021-03-11 13:06:20,860 [main:38] - replacing 0 Int
2021-03-11 13:06:20,860 [main:42] - Getting value of type Int
2021-03-11 13:06:21,027 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:21,030 [main:46] - GENERATED VALUE OF TYPE Int = -4910026
2021-03-11 13:06:21,030 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:21,037 [main:55] - randomType = Int
2021-03-11 13:06:21,214 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:21,283 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:06:21,445 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:21,447 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:06:21,602 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:21,604 [main:66] - Generated call from random type = (1206333480).compareTo(-506422003).shr(-1381109344)
2021-03-11 13:06:21,605 [main:94] - GETTING Int from ByteArray
2021-03-11 13:06:21,619 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ByteArray[DeserializedPropertyDescriptor@232001db], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:06:21,619 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:06:21,781 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:21,783 [main:105] - GENERATED CALL = (bByte).size.or(-1144148738)
2021-03-11 13:06:21,783 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ByteArray[DeserializedPropertyDescriptor@232001db], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:06:21,783 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:06:21,940 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:21,942 [main:105] - GENERATED CALL = (bByte).size.ushr(-328744931)
2021-03-11 13:06:21,942 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@45e8cd6e], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]]
2021-03-11 13:06:21,942 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@45e8cd6e]
2021-03-11 13:06:22,119 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:06:22,120 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:06:22,344 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:06:22,346 [main:105] - GENERATED CALL = (bByte).equals("afmtm").compareTo(false)
2021-03-11 13:06:22,346 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@791a2fb8], public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]]
2021-03-11 13:06:22,346 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@791a2fb8]
2021-03-11 13:06:22,512 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:22,514 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:06:22,673 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:22,675 [main:105] - GENERATED CALL = (bByte).get(1258638701).compareTo(107)
2021-03-11 13:06:22,675 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ByteArray[DeserializedPropertyDescriptor@232001db], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:06:22,675 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:06:22,675 [main:105] - GENERATED CALL = (bByte).size.takeHighestOneBit()
2021-03-11 13:06:22,675 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@791a2fb8], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c585b]]
2021-03-11 13:06:22,675 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@791a2fb8]
2021-03-11 13:06:22,829 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:22,830 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c585b]
2021-03-11 13:06:22,830 [main:105] - GENERATED CALL = (bByte).get(1318849917).countTrailingZeroBits()
2021-03-11 13:06:22,831 [main:101] - Case = [public inline fun kotlin.ByteArray.indexOfFirst(predicate: (kotlin.Byte) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5777fd73]]
2021-03-11 13:06:22,831 [main:137] - GENERATING call of type public inline fun kotlin.ByteArray.indexOfFirst(predicate: (kotlin.Byte) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5777fd73]
2021-03-11 13:06:22,967 [main:302] - generating value of type = Function1<Byte, Boolean> false depth = 0
2021-03-11 13:06:22,968 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 13:06:22,970 [main:105] - GENERATED CALL = (bByte).indexOfFirst({a: Byte -> false})
2021-03-11 13:06:22,970 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@791a2fb8], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]]
2021-03-11 13:06:22,970 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@791a2fb8]
2021-03-11 13:06:23,132 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:23,134 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]
2021-03-11 13:06:23,134 [main:105] - GENERATED CALL = (bByte).get(-1498268306).unaryMinus()
2021-03-11 13:06:23,134 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@791a2fb8], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]]
2021-03-11 13:06:23,134 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.ByteArray[DeserializedSimpleFunctionDescriptor@791a2fb8]
2021-03-11 13:06:23,278 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:23,280 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]
2021-03-11 13:06:23,280 [main:105] - GENERATED CALL = (bByte).get(1686024065).countLeadingZeroBits()
2021-03-11 13:06:23,280 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ByteArray[DeserializedPropertyDescriptor@232001db], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:06:23,280 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:06:23,444 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:23,446 [main:105] - GENERATED CALL = (bByte).size.compareTo(-7)
2021-03-11 13:06:23,446 [main:63] - replacement of 0 of type Int is (bByte).size.or(-1144148738)
2021-03-11 13:06:23,595 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:23,596 [main:66] - Compilation checking started
2021-03-11 13:06:24,149 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:24,160 [main:56] - replacing (emptyArray<Byte>()[('蟖').toByte().rem(-28)], Byte)
2021-03-11 13:06:24,161 [main:38] - replacing emptyArray<Byte>()[('蟖').toByte().rem(-28)] Byte
2021-03-11 13:06:24,161 [main:42] - Getting value of type Byte
2021-03-11 13:06:24,328 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:24,329 [main:46] - GENERATED VALUE OF TYPE Byte = 67
2021-03-11 13:06:24,330 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:24,477 [main:55] - randomType = UShort
2021-03-11 13:06:24,617 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:06:24,645 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@8a9df2f]
2021-03-11 13:06:24,645 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]
2021-03-11 13:06:24,646 [main:66] - Generated call from random type = (12929.toUShort()).toByte().dec()
2021-03-11 13:06:24,646 [main:63] - replacement of emptyArray<Byte>()[('蟖').toByte().rem(-28)] of type Byte is (12929.toUShort()).toByte().dec()
2021-03-11 13:06:24,784 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:24,784 [main:66] - Compilation checking started
2021-03-11 13:06:25,183 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    (12929.toUShort()).toByte().dec()--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088})) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:25,192 [main:56] - replacing ((bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088}), Boolean)
2021-03-11 13:06:25,194 [main:38] - replacing (bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088}) Boolean
2021-03-11 13:06:25,194 [main:42] - Getting value of type Boolean
2021-03-11 13:06:25,339 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:06:25,342 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 13:06:25,342 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:25,505 [main:55] - randomType = Collection<String>
2021-03-11 13:06:25,506 [main:94] - GETTING Boolean from Double
2021-03-11 13:06:25,540 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a6af1c7]]
2021-03-11 13:06:25,540 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:06:25,541 [main:137] - GENERATING call of type public fun kotlin.Float.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@5a6af1c7]
2021-03-11 13:06:25,541 [main:105] - GENERATED CALL = (aDouble[0]++).toFloat().isNaN()
2021-03-11 13:06:25,541 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1b5becaf]]
2021-03-11 13:06:25,541 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]
2021-03-11 13:06:25,677 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:06:25,677 [main:137] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1b5becaf]
2021-03-11 13:06:25,677 [main:105] - GENERATED CALL = (aDouble[0]++).equals("xzmdm").not()
2021-03-11 13:06:25,677 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], public fun kotlin.Char.isTitleCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a1a41aa]]
2021-03-11 13:06:25,677 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:06:25,678 [main:137] - GENERATING call of type public fun kotlin.Char.isTitleCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a1a41aa]
2021-03-11 13:06:25,678 [main:105] - GENERATED CALL = (aDouble[0]++).toChar().isTitleCase()
2021-03-11 13:06:25,678 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], public fun kotlin.Char.isLetterOrDigit(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@50c2590c]]
2021-03-11 13:06:25,678 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:06:25,678 [main:137] - GENERATING call of type public fun kotlin.Char.isLetterOrDigit(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@50c2590c]
2021-03-11 13:06:25,678 [main:105] - GENERATED CALL = (aDouble[0]++).toChar().isLetterOrDigit()
2021-03-11 13:06:25,678 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@755a95f2]]
2021-03-11 13:06:25,678 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]
2021-03-11 13:06:25,829 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:06:25,829 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@755a95f2]
2021-03-11 13:06:25,972 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:06:25,974 [main:105] - GENERATED CALL = (aDouble[0]++).equals("rohno").xor(false)
2021-03-11 13:06:25,975 [main:101] - Case = [public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@54c8a898]]
2021-03-11 13:06:25,975 [main:137] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@54c8a898]
2021-03-11 13:06:25,975 [main:105] - GENERATED CALL = (aDouble[0]++).isInfinite()
2021-03-11 13:06:25,975 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], public fun kotlin.Char.isWhitespace(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46b37743]]
2021-03-11 13:06:25,975 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:06:25,975 [main:137] - GENERATING call of type public fun kotlin.Char.isWhitespace(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46b37743]
2021-03-11 13:06:25,975 [main:105] - GENERATED CALL = (aDouble[0]++).toChar().isWhitespace()
2021-03-11 13:06:25,975 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]]
2021-03-11 13:06:25,975 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:06:25,975 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]
2021-03-11 13:06:26,118 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:06:26,119 [main:105] - GENERATED CALL = (aDouble[0]++).toShort().equals("hzlzv")
2021-03-11 13:06:26,119 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]]
2021-03-11 13:06:26,119 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:06:26,278 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:26,280 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:06:26,432 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:06:26,432 [main:105] - GENERATED CALL = (aDouble[0]++).compareTo(-63).equals("shwtc")
2021-03-11 13:06:26,432 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], public fun kotlin.Char.isDigit(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4aefef9]]
2021-03-11 13:06:26,433 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:06:26,433 [main:137] - GENERATING call of type public fun kotlin.Char.isDigit(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4aefef9]
2021-03-11 13:06:26,433 [main:105] - GENERATED CALL = (aDouble[0]++).toChar().isDigit()
2021-03-11 13:06:26,433 [main:63] - replacement of (bFloat[0]++).toLong().dec() != (bInt).sumOf({a: Int -> -1341802559053142088}) of type Boolean is (aDouble[0]++).compareTo(-63).equals("shwtc")
2021-03-11 13:06:26,579 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:26,580 [main:66] - Compilation checking started
2021-03-11 13:06:27,097 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:27,107 [main:56] - replacing (bFloat, FloatArray)
2021-03-11 13:06:27,107 [main:38] - replacing bFloat FloatArray
2021-03-11 13:06:27,107 [main:42] - Getting value of type FloatArray
2021-03-11 13:06:27,287 [main:302] - generating value of type = FloatArray false depth = 0
2021-03-11 13:06:27,426 [main:43] - GENERATING CALL OF fun floatArrayOf(elements: Float): FloatArray = TODO()
2021-03-11 13:06:27,429 [main:61] - WITHOUT TYPE PARAMS = fun floatArrayOf(elements: Float): FloatArray = TODO()
2021-03-11 13:06:27,565 [main:302] - generating value of type = Float true depth = 3
2021-03-11 13:06:27,567 [main:95] - GENERATED = floatArrayOf(0.08584744f)
2021-03-11 13:06:27,567 [main:46] - GENERATED VALUE OF TYPE FloatArray = floatArrayOf(0.08584744f)
2021-03-11 13:06:27,567 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:27,571 [main:55] - randomType = UByte
2021-03-11 13:06:27,704 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:06:27,742 [main:94] - GETTING FloatArray from Short
2021-03-11 13:06:27,772 [main:94] - GETTING FloatArray from Float
2021-03-11 13:06:27,799 [main:94] - GETTING FloatArray from Int
2021-03-11 13:06:27,829 [main:94] - GETTING FloatArray from Double
2021-03-11 13:06:27,855 [main:94] - GETTING FloatArray from Long
2021-03-11 13:06:27,883 [main:94] - GETTING FloatArray from Int
2021-03-11 13:06:27,884 [main:94] - GETTING FloatArray from Long
2021-03-11 13:06:27,884 [main:94] - GETTING FloatArray from Byte
2021-03-11 13:06:27,914 [main:94] - GETTING FloatArray from Byte
2021-03-11 13:06:27,915 [main:94] - GETTING FloatArray from Short
2021-03-11 13:06:27,916 [main:94] - GETTING FloatArray from Long
2021-03-11 13:06:27,916 [main:94] - GETTING FloatArray from Array<Byte>
2021-03-11 13:06:27,927 [main:101] - Case = [public fun kotlin.Array<out kotlin.Float>.toFloatArray(): kotlin.FloatArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c77afa7]]
2021-03-11 13:06:27,927 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Float>.toFloatArray(): kotlin.FloatArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c77afa7]
2021-03-11 13:06:27,927 [main:105] - GENERATED CALL = (aByte).toFloatArray()
2021-03-11 13:06:27,927 [main:63] - replacement of bFloat of type FloatArray is (aByte).toFloatArray()
2021-03-11 13:06:28,060 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:28,069 [main:56] - replacing (floatArrayOf(0.4357447f)[(bInt).sumBy({a: Int -> 1319713082})], Float)
2021-03-11 13:06:28,069 [main:38] - replacing floatArrayOf(0.4357447f)[(bInt).sumBy({a: Int -> 1319713082})] Float
2021-03-11 13:06:28,069 [main:42] - Getting value of type Float
2021-03-11 13:06:28,203 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:28,205 [main:46] - GENERATED VALUE OF TYPE Float = 0.6261546f
2021-03-11 13:06:28,205 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:28,208 [main:55] - randomType = UByte
2021-03-11 13:06:28,347 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:06:28,381 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@68cc5400]
2021-03-11 13:06:28,382 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:06:28,516 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:28,518 [main:66] - Generated call from random type = (11.toUByte()).toShort().div(0.2977317f)
2021-03-11 13:06:28,518 [main:94] - GETTING Float from Float
2021-03-11 13:06:28,552 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@6eb3df0b]]
2021-03-11 13:06:28,552 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:06:28,552 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@6eb3df0b]
2021-03-11 13:06:28,687 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:28,689 [main:105] - GENERATED CALL = (bFloat[0]--).toByte().minus(0.04140365f)
2021-03-11 13:06:28,689 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]]
2021-03-11 13:06:28,689 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:06:28,689 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]
2021-03-11 13:06:28,823 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:28,825 [main:105] - GENERATED CALL = (bFloat[0]--).toInt().rem(0.075579524f)
2021-03-11 13:06:28,825 [main:101] - Case = [public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]]
2021-03-11 13:06:28,825 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]
2021-03-11 13:06:28,960 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:28,961 [main:105] - GENERATED CALL = (bFloat[0]--).coerceAtLeast(0.7122502f)
2021-03-11 13:06:28,961 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]]
2021-03-11 13:06:28,962 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:28,962 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]
2021-03-11 13:06:29,096 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:29,098 [main:105] - GENERATED CALL = (bFloat[0]--).toFloat().coerceAtLeast(0.6363102f)
2021-03-11 13:06:29,098 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]]
2021-03-11 13:06:29,098 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:06:29,098 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 13:06:29,233 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:29,235 [main:105] - GENERATED CALL = (bFloat[0]--).toInt().minus(0.48015332f)
2021-03-11 13:06:29,235 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:06:29,235 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:06:29,235 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:06:29,235 [main:105] - GENERATED CALL = (bFloat[0]--).toInt().toFloat()
2021-03-11 13:06:29,235 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun unaryPlus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@62197085]]
2021-03-11 13:06:29,235 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:29,235 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@62197085]
2021-03-11 13:06:29,235 [main:105] - GENERATED CALL = (bFloat[0]--).toFloat().unaryPlus()
2021-03-11 13:06:29,235 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]]
2021-03-11 13:06:29,235 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:29,235 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]
2021-03-11 13:06:29,368 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:29,370 [main:105] - GENERATED CALL = (bFloat[0]--).toFloat().withSign(0.18888754f)
2021-03-11 13:06:29,370 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun plus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1bda99b6]]
2021-03-11 13:06:29,370 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:29,370 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1bda99b6]
2021-03-11 13:06:29,521 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:29,523 [main:105] - GENERATED CALL = (bFloat[0]--).toFloat().plus(79)
2021-03-11 13:06:29,523 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7dd9423d]]
2021-03-11 13:06:29,523 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:06:29,523 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7dd9423d]
2021-03-11 13:06:29,661 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:29,662 [main:105] - GENERATED CALL = (bFloat[0]--).toLong().times(0.4460876f)
2021-03-11 13:06:29,662 [main:63] - replacement of floatArrayOf(0.4357447f)[(bInt).sumBy({a: Int -> 1319713082})] of type Float is (bFloat[0]--).coerceAtLeast(0.7122502f)
2021-03-11 13:06:29,795 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:29,804 [main:56] - replacing (intArrayOf((bByte[0]--).toByte().compareTo(4)), IntArray)
2021-03-11 13:06:29,806 [main:38] - replacing intArrayOf((bByte[0]--).toByte().compareTo(4)) IntArray
2021-03-11 13:06:29,806 [main:42] - Getting value of type IntArray
2021-03-11 13:06:29,939 [main:302] - generating value of type = IntArray false depth = 0
2021-03-11 13:06:30,080 [main:43] - GENERATING CALL OF fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:06:30,083 [main:61] - WITHOUT TYPE PARAMS = fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:06:30,235 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:06:30,237 [main:95] - GENERATED = intArrayOf(1115146312)
2021-03-11 13:06:30,237 [main:46] - GENERATED VALUE OF TYPE IntArray = intArrayOf(1115146312)
2021-03-11 13:06:30,237 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:30,240 [main:55] - randomType = Short
2021-03-11 13:06:30,384 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:06:30,436 [main:94] - GETTING IntArray from Double
2021-03-11 13:06:30,469 [main:94] - GETTING IntArray from Byte
2021-03-11 13:06:30,503 [main:94] - GETTING IntArray from Short
2021-03-11 13:06:30,540 [main:94] - GETTING IntArray from Int
2021-03-11 13:06:30,573 [main:94] - GETTING IntArray from FloatArray
2021-03-11 13:06:30,586 [main:94] - GETTING IntArray from Byte
2021-03-11 13:06:30,586 [main:94] - GETTING IntArray from Array<Byte>
2021-03-11 13:06:30,602 [main:101] - Case = [public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]]
2021-03-11 13:06:30,602 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]
2021-03-11 13:06:30,602 [main:105] - GENERATED CALL = (aByte).toIntArray()
2021-03-11 13:06:30,602 [main:63] - replacement of intArrayOf((bByte[0]--).toByte().compareTo(4)) of type IntArray is (aByte).toIntArray()
2021-03-11 13:06:30,736 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:30,737 [main:66] - Compilation checking started
2021-03-11 13:06:31,121 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = (aByte).toIntArray()
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    bInt[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:31,130 [main:56] - replacing (bFloat[(5340914394833557531.toULong()).compareTo(49.toUByte()).unaryPlus()], Float)
2021-03-11 13:06:31,130 [main:38] - replacing bFloat[(5340914394833557531.toULong()).compareTo(49.toUByte()).unaryPlus()] Float
2021-03-11 13:06:31,130 [main:42] - Getting value of type Float
2021-03-11 13:06:31,268 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:31,269 [main:46] - GENERATED VALUE OF TYPE Float = 0.46625584f
2021-03-11 13:06:31,269 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:31,274 [main:55] - randomType = Short
2021-03-11 13:06:31,409 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:06:31,441 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:06:31,442 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@373492b4]
2021-03-11 13:06:31,442 [main:66] - Generated call from random type = (-182).toLong().toFloat()
2021-03-11 13:06:31,443 [main:94] - GETTING Float from Short
2021-03-11 13:06:31,509 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4eed8ede]]
2021-03-11 13:06:31,509 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:06:31,509 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4eed8ede]
2021-03-11 13:06:31,642 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:31,644 [main:105] - GENERATED CALL = (bShort[0]).toLong().rem(0.3888718f)
2021-03-11 13:06:31,644 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun unaryMinus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3061ada4]]
2021-03-11 13:06:31,644 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:31,644 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3061ada4]
2021-03-11 13:06:31,644 [main:105] - GENERATED CALL = (bShort[0]).toFloat().unaryMinus()
2021-03-11 13:06:31,644 [main:101] - Case = [@kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@18a6b4c0]]
2021-03-11 13:06:31,644 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@18a6b4c0]
2021-03-11 13:06:31,781 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:31,783 [main:105] - GENERATED CALL = (bShort[0]).rem(0.41338223f)
2021-03-11 13:06:31,783 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@76592c22]]
2021-03-11 13:06:31,783 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:06:31,783 [main:137] - GENERATING call of type public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@76592c22]
2021-03-11 13:06:31,783 [main:105] - GENERATED CALL = (bShort[0]).toChar().toFloat()
2021-03-11 13:06:31,783 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@18a6b4c0]]
2021-03-11 13:06:31,783 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:06:31,783 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@18a6b4c0]
2021-03-11 13:06:31,917 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:31,919 [main:105] - GENERATED CALL = (bShort[0]).toShort().rem(0.99338186f)
2021-03-11 13:06:31,919 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]]
2021-03-11 13:06:31,919 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:06:32,053 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:32,055 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:06:32,195 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:32,197 [main:105] - GENERATED CALL = (bShort[0]).compareTo(40).div(0.23227352f)
2021-03-11 13:06:32,197 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]]
2021-03-11 13:06:32,197 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:06:32,332 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:32,334 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]
2021-03-11 13:06:32,469 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:32,471 [main:105] - GENERATED CALL = (bShort[0]).div(0.4644149f).withSign(0.91573447f)
2021-03-11 13:06:32,471 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:06:32,471 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:06:32,471 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:06:32,471 [main:105] - GENERATED CALL = (bShort[0]).toInt().toFloat()
2021-03-11 13:06:32,471 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752], public final operator fun unaryPlus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@62197085]]
2021-03-11 13:06:32,471 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@21f4a752]
2021-03-11 13:06:32,607 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:32,609 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@62197085]
2021-03-11 13:06:32,609 [main:105] - GENERATED CALL = (bShort[0]).div(0.42090416f).unaryPlus()
2021-03-11 13:06:32,609 [main:101] - Case = [public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@75096f32]]
2021-03-11 13:06:32,609 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@75096f32]
2021-03-11 13:06:32,761 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:32,763 [main:105] - GENERATED CALL = (bShort[0]).minus(0.97074044f)
2021-03-11 13:06:32,763 [main:63] - replacement of bFloat[(5340914394833557531.toULong()).compareTo(49.toUByte()).unaryPlus()] of type Float is (bShort[0]).toInt().toFloat()
2021-03-11 13:06:32,899 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:32,908 [main:56] - replacing (aShort[(0.7576098589689717).toByte().times(10)], Short)
2021-03-11 13:06:32,908 [main:38] - replacing aShort[(0.7576098589689717).toByte().times(10)] Short
2021-03-11 13:06:32,908 [main:42] - Getting value of type Short
2021-03-11 13:06:33,045 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:06:33,046 [main:46] - GENERATED VALUE OF TYPE Short = 1586
2021-03-11 13:06:33,046 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:33,522 [main:55] - randomType = ArrayList<LinkedHashMap<UInt, Double?>>
2021-03-11 13:06:33,657 [main:302] - generating value of type = ArrayList<LinkedHashMap<UInt, Double?>> false depth = 0
2021-03-11 13:06:33,802 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: LinkedHashMap<UInt, Double?>): ArrayList<LkedHashMap<UInt, Double?>> = TODO()
2021-03-11 13:06:33,805 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: LinkedHashMap<UInt, Double?>): ArrayList<LkedHashMap<UInt, Double?>> = TODO()
2021-03-11 13:06:33,945 [main:302] - generating value of type = LinkedHashMap<UInt, Double?> false depth = 3
2021-03-11 13:06:34,088 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): LkedHashMap<UInt, Double?> = TODO()
2021-03-11 13:06:34,091 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): LkedHashMap<UInt, Double?> = TODO()
2021-03-11 13:06:34,233 [main:95] - GENERATED = linkedMapOf<UInt, Double?>()
2021-03-11 13:06:34,233 [main:95] - GENERATED = arrayListOf<LinkedHashMap<UInt, Double?>>(linkedMapOf<UInt, Double?>())
2021-03-11 13:06:34,409 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:06:34,409 [main:66] - Generated call from random type = (arrayListOf<LinkedHashMap<UInt, Double?>>(linkedMapOf<UInt, Double?>())).modCount.toShort()
2021-03-11 13:06:34,410 [main:94] - GETTING Short from Byte
2021-03-11 13:06:34,439 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:06:34,439 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]
2021-03-11 13:06:34,575 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:34,577 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:06:34,577 [main:105] - GENERATED CALL = (aByte[0]).div(0.9418511207266111).toShort()
2021-03-11 13:06:34,577 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.or(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@6f857cd8]]
2021-03-11 13:06:34,577 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:06:34,577 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.or(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@6f857cd8]
2021-03-11 13:06:34,709 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:06:34,711 [main:105] - GENERATED CALL = (aByte[0]).toShort().or(-12619)
2021-03-11 13:06:34,711 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public fun kotlin.Short.coerceAtMost(maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@74aec5e7]]
2021-03-11 13:06:34,711 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:06:34,711 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtMost(maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@74aec5e7]
2021-03-11 13:06:34,843 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:06:34,845 [main:105] - GENERATED CALL = (aByte[0]).toShort().coerceAtMost(-12554)
2021-03-11 13:06:34,845 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.xor(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@461bb21c]]
2021-03-11 13:06:34,845 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:06:34,845 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.xor(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@461bb21c]
2021-03-11 13:06:34,977 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:06:34,979 [main:105] - GENERATED CALL = (aByte[0]).toShort().xor(-30609)
2021-03-11 13:06:34,979 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]]
2021-03-11 13:06:34,979 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:06:34,979 [main:105] - GENERATED CALL = (aByte[0]).toShort()
2021-03-11 13:06:34,979 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]]
2021-03-11 13:06:34,979 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:06:34,979 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]
2021-03-11 13:06:34,979 [main:105] - GENERATED CALL = (aByte[0]).toShort().toShort()
2021-03-11 13:06:34,979 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]]
2021-03-11 13:06:34,979 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:06:34,979 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:06:34,979 [main:105] - GENERATED CALL = (aByte[0]).toLong().toShort()
2021-03-11 13:06:34,979 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]]
2021-03-11 13:06:34,979 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:06:34,979 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]
2021-03-11 13:06:34,979 [main:105] - GENERATED CALL = (aByte[0]).toShort().inv()
2021-03-11 13:06:34,979 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]]
2021-03-11 13:06:34,979 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:06:34,980 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]
2021-03-11 13:06:34,980 [main:105] - GENERATED CALL = (aByte[0]).toShort().takeHighestOneBit()
2021-03-11 13:06:34,980 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]]
2021-03-11 13:06:34,980 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:06:34,980 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]
2021-03-11 13:06:34,980 [main:105] - GENERATED CALL = (aByte[0]).toShort().dec()
2021-03-11 13:06:34,980 [main:63] - replacement of aShort[(0.7576098589689717).toByte().times(10)] of type Short is (aByte[0]).toShort().dec()
2021-03-11 13:06:35,111 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:35,120 [main:56] - replacing (bInt, IntArray)
2021-03-11 13:06:35,121 [main:38] - replacing bInt IntArray
2021-03-11 13:06:35,122 [main:42] - Getting value of type IntArray
2021-03-11 13:06:35,259 [main:302] - generating value of type = IntArray false depth = 0
2021-03-11 13:06:35,412 [main:43] - GENERATING CALL OF fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:06:35,415 [main:61] - WITHOUT TYPE PARAMS = fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:06:35,565 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:06:35,567 [main:95] - GENERATED = intArrayOf(-1046262637)
2021-03-11 13:06:35,567 [main:46] - GENERATED VALUE OF TYPE IntArray = intArrayOf(-1046262637)
2021-03-11 13:06:35,567 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:35,899 [main:55] - randomType = ArrayList<UShort>
2021-03-11 13:06:36,032 [main:302] - generating value of type = ArrayList<UShort> false depth = 0
2021-03-11 13:06:36,170 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: UShort): ArrayList<UShort> = TODO()
2021-03-11 13:06:36,173 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: UShort): ArrayList<UShort> = TODO()
2021-03-11 13:06:36,309 [main:302] - generating value of type = UShort true depth = 3
2021-03-11 13:06:36,311 [main:95] - GENERATED = arrayListOf<UShort>(32743.toUShort())
2021-03-11 13:06:36,428 [main:137] - GENERATING call of type protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.ArrayList[DeserializedSimpleFunctionDescriptor@306de380]
2021-03-11 13:06:36,428 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]
2021-03-11 13:06:36,429 [main:66] - Generated call from random type = (arrayListOf<UShort>(32743.toUShort())).toArray().toIntArray()
2021-03-11 13:06:36,429 [main:94] - GETTING IntArray from Int
2021-03-11 13:06:36,460 [main:94] - GETTING IntArray from Array<Int>
2021-03-11 13:06:36,468 [main:101] - Case = [public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]]
2021-03-11 13:06:36,468 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]
2021-03-11 13:06:36,468 [main:105] - GENERATED CALL = (aInt).toIntArray()
2021-03-11 13:06:36,468 [main:63] - replacement of bInt of type IntArray is (aInt).toIntArray()
2021-03-11 13:06:36,604 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:36,605 [main:66] - Compilation checking started
2021-03-11 13:06:37,080 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:37,089 [main:56] - replacing (emptyArray<Byte>()[('蟖').toByte().rem(-28)], Byte)
2021-03-11 13:06:37,091 [main:38] - replacing emptyArray<Byte>()[('蟖').toByte().rem(-28)] Byte
2021-03-11 13:06:37,091 [main:42] - Getting value of type Byte
2021-03-11 13:06:37,227 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:37,229 [main:46] - GENERATED VALUE OF TYPE Byte = -22
2021-03-11 13:06:37,229 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:37,866 [main:55] - randomType = Triple<List<Long>, Triple<Int, UInt?, String>, Long>
2021-03-11 13:06:38,001 [main:302] - generating value of type = Triple<List<Long>, Triple<Int, UInt?, String>, Long> false depth = 0
2021-03-11 13:06:38,152 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: List<Long>, second: Triple<Int, UInt?, String>, third: Long): Triple<List<Long>, Triple<Int, UInt?, String>, Long> = TODO()
2021-03-11 13:06:38,155 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: List<Long>, second: Triple<Int, UInt?, String>, third: Long): Triple<List<Long>, Triple<Int, UInt?, String>, Long> = TODO()
2021-03-11 13:06:38,311 [main:302] - generating value of type = List<Long> false depth = 3
2021-03-11 13:06:38,457 [main:43] - GENERATING CALL OF fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->Long): List<Long> = TODO()
2021-03-11 13:06:38,460 [main:61] - WITHOUT TYPE PARAMS = fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->Long): List<Long> = TODO()
2021-03-11 13:06:38,907 [main:302] - generating value of type = Int true depth = 6
2021-03-11 13:06:38,909 [main:302] - generating value of type = Function1<[@kotlin.ParameterName] Int, Long> false depth = 6
2021-03-11 13:06:38,910 [main:302] - generating value of type = Long true depth = 7
2021-03-11 13:06:38,912 [main:95] - GENERATED = List<Long>(21892923, {a: Int -> 1946374804334192143})
2021-03-11 13:06:38,912 [main:302] - generating value of type = Triple<Int, UInt?, String> false depth = 3
2021-03-11 13:06:39,053 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Int, second: UInt?, third: String): Triple<Int, UInt?, String> = TODO()
2021-03-11 13:06:39,056 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Int, second: UInt?, third: String): Triple<Int, UInt?, String> = TODO()
2021-03-11 13:06:39,201 [main:302] - generating value of type = Int true depth = 6
2021-03-11 13:06:39,202 [main:302] - generating value of type = UInt true depth = 6
2021-03-11 13:06:39,204 [main:302] - generating value of type = String true depth = 6
2021-03-11 13:06:39,206 [main:95] - GENERATED = Triple<Int, UInt?, String>(260128140, 1311899527.toUInt(), "qwbsy")
2021-03-11 13:06:39,206 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:06:39,207 [main:95] - GENERATED = Triple<List<Long>, Triple<Int, UInt?, String>, Long>(List<Long>(21892923, {a: Int -> 1946374804334192143}), Triple<Int, UInt?, String>(260128140, 1311899527.toUInt(), "qwbsy"), -183291132413481625)
2021-03-11 13:06:39,230 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:06:39,230 [main:66] - Generated call from random type = (Triple<List<Long>, Triple<Int, UInt?, String>, Long>(List<Long>(21892923, {a: Int -> 1946374804334192143}), Triple<Int, UInt?, String>(260128140, 1311899527.toUInt(), "qwbsy"), -183291132413481625)).third.toByte()
2021-03-11 13:06:39,231 [main:94] - GETTING Byte from Short
2021-03-11 13:06:39,279 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]]
2021-03-11 13:06:39,279 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:06:39,279 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]
2021-03-11 13:06:39,414 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:39,415 [main:105] - GENERATED CALL = (bShort[0]--).toByte().coerceAtLeast(8)
2021-03-11 13:06:39,416 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]]
2021-03-11 13:06:39,416 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:06:39,416 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]
2021-03-11 13:06:39,550 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:39,552 [main:105] - GENERATED CALL = (bShort[0]--).toByte().or(-117)
2021-03-11 13:06:39,552 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]]
2021-03-11 13:06:39,552 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:06:39,552 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:06:39,552 [main:105] - GENERATED CALL = (bShort[0]--).toShort().toByte()
2021-03-11 13:06:39,552 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]]
2021-03-11 13:06:39,552 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:39,552 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:06:39,552 [main:105] - GENERATED CALL = (bShort[0]--).toFloat().toByte()
2021-03-11 13:06:39,552 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]]
2021-03-11 13:06:39,552 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:06:39,552 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]
2021-03-11 13:06:39,686 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:39,688 [main:105] - GENERATED CALL = (bShort[0]--).toByte().xor(-26)
2021-03-11 13:06:39,688 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]]
2021-03-11 13:06:39,688 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:06:39,688 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]
2021-03-11 13:06:39,824 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:39,826 [main:105] - GENERATED CALL = (bShort[0]--).toByte().and(-62)
2021-03-11 13:06:39,826 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]]
2021-03-11 13:06:39,826 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:06:39,826 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]
2021-03-11 13:06:39,826 [main:105] - GENERATED CALL = (bShort[0]--).toByte().takeLowestOneBit()
2021-03-11 13:06:39,826 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]]
2021-03-11 13:06:39,826 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:06:39,826 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:06:39,827 [main:105] - GENERATED CALL = (bShort[0]--).toChar().toByte()
2021-03-11 13:06:39,827 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:06:39,827 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:06:39,961 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:39,962 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:06:39,962 [main:105] - GENERATED CALL = (bShort[0]--).compareTo(0).toByte()
2021-03-11 13:06:39,963 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]]
2021-03-11 13:06:39,963 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:06:39,963 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]
2021-03-11 13:06:39,963 [main:105] - GENERATED CALL = (bShort[0]--).toByte().dec()
2021-03-11 13:06:39,963 [main:63] - replacement of emptyArray<Byte>()[('蟖').toByte().rem(-28)] of type Byte is (bShort[0]--).toByte().or(-117)
2021-03-11 13:06:40,096 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:40,096 [main:66] - Compilation checking started
2021-03-11 13:06:40,512 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    (bShort[0]--).toByte().or(-117)--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:40,522 [main:56] - replacing ((bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)], Double)
2021-03-11 13:06:40,524 [main:38] - replacing (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)] Double
2021-03-11 13:06:40,524 [main:42] - Getting value of type Double
2021-03-11 13:06:40,658 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:40,660 [main:46] - GENERATED VALUE OF TYPE Double = 0.6007565391551906
2021-03-11 13:06:40,660 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:40,663 [main:55] - randomType = Float
2021-03-11 13:06:40,797 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:40,830 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:06:40,965 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:40,966 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]
2021-03-11 13:06:40,966 [main:66] - Generated call from random type = (0.8069071f).div(0.3057513505418322).nextDown()
2021-03-11 13:06:40,966 [main:63] - replacement of (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)] of type Double is (0.8069071f).div(0.3057513505418322).nextDown()
2021-03-11 13:06:41,102 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:41,102 [main:66] - Compilation checking started
2021-03-11 13:06:41,479 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (0.8069071f).div(0.3057513505418322).nextDown()--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:41,488 [main:56] - replacing ((bFloat).toTypedArray()[0], Float)
2021-03-11 13:06:41,489 [main:38] - replacing (bFloat).toTypedArray()[0] Float
2021-03-11 13:06:41,490 [main:42] - Getting value of type Float
2021-03-11 13:06:41,624 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:41,626 [main:46] - GENERATED VALUE OF TYPE Float = 0.21775174f
2021-03-11 13:06:41,626 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:41,920 [main:55] - randomType = LinkedHashSet<UShort>
2021-03-11 13:06:42,056 [main:302] - generating value of type = LinkedHashSet<UShort> false depth = 0
2021-03-11 13:06:42,196 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): LkedHashSet<UShort> = TODO()
2021-03-11 13:06:42,198 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): LkedHashSet<UShort> = TODO()
2021-03-11 13:06:42,336 [main:95] - GENERATED = linkedSetOf<UShort>()
2021-03-11 13:06:42,453 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]
2021-03-11 13:06:42,590 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:42,591 [main:66] - Generated call from random type = (linkedSetOf<UShort>()).size.plus(0.43315148f)
2021-03-11 13:06:42,592 [main:94] - GETTING Float from Long
2021-03-11 13:06:42,623 [main:101] - Case = [@kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4eed8ede]]
2021-03-11 13:06:42,623 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4eed8ede]
2021-03-11 13:06:42,757 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:42,760 [main:105] - GENERATED CALL = (bLong[0]++).rem(0.30424166f)
2021-03-11 13:06:42,760 [main:101] - Case = [public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]]
2021-03-11 13:06:42,760 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]
2021-03-11 13:06:42,895 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:42,897 [main:105] - GENERATED CALL = (bLong[0]++).minus(0.08782655f)
2021-03-11 13:06:42,897 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:06:42,897 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:06:43,031 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:43,033 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:06:43,033 [main:105] - GENERATED CALL = (bLong[0]++).compareTo(20).toFloat()
2021-03-11 13:06:43,033 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]]
2021-03-11 13:06:43,033 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:43,033 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]
2021-03-11 13:06:43,033 [main:105] - GENERATED CALL = (bLong[0]++).toFloat().dec()
2021-03-11 13:06:43,033 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun times(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59d944a9]]
2021-03-11 13:06:43,033 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:43,033 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59d944a9]
2021-03-11 13:06:43,167 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:43,168 [main:105] - GENERATED CALL = (bLong[0]++).toFloat().times(-54)
2021-03-11 13:06:43,169 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Float.sign: kotlin.Float defined in kotlin.math[DeserializedPropertyDescriptor@57448ff4]]
2021-03-11 13:06:43,169 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:43,169 [main:105] - GENERATED CALL = (bLong[0]++).toFloat().sign
2021-03-11 13:06:43,169 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.pow(x: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@7dbc8ca2]]
2021-03-11 13:06:43,169 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:06:43,304 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:43,305 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.pow(x: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@7dbc8ca2]
2021-03-11 13:06:43,455 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:43,457 [main:105] - GENERATED CALL = (bLong[0]++).div(0.6090741f).pow(0.63676697f)
2021-03-11 13:06:43,457 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf], public final operator fun times(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59d944a9]]
2021-03-11 13:06:43,457 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:06:43,594 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:43,595 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59d944a9]
2021-03-11 13:06:43,730 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:43,732 [main:105] - GENERATED CALL = (bLong[0]++).div(0.16676915f).times(117)
2021-03-11 13:06:43,732 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf], public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]]
2021-03-11 13:06:43,732 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:06:43,866 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:43,868 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]
2021-03-11 13:06:43,868 [main:105] - GENERATED CALL = (bLong[0]++).div(0.64445f).dec()
2021-03-11 13:06:43,868 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf], public final operator fun div(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@58d4b10d]]
2021-03-11 13:06:43,868 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:06:44,002 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:44,004 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@58d4b10d]
2021-03-11 13:06:44,139 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:44,141 [main:105] - GENERATED CALL = (bLong[0]++).div(0.04865563f).div(-7)
2021-03-11 13:06:44,141 [main:63] - replacement of (bFloat).toTypedArray()[0] of type Float is (bLong[0]++).div(0.16676915f).times(117)
2021-03-11 13:06:44,275 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:44,276 [main:66] - Compilation checking started
2021-03-11 13:06:44,650 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bLong[0]++).div(0.16676915f).times(117)++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    aFloat[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:44,660 [main:56] - replacing (bLong, LongArray)
2021-03-11 13:06:44,660 [main:38] - replacing bLong LongArray
2021-03-11 13:06:44,660 [main:42] - Getting value of type LongArray
2021-03-11 13:06:44,835 [main:302] - generating value of type = LongArray false depth = 0
2021-03-11 13:06:44,976 [main:43] - GENERATING CALL OF fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:06:44,978 [main:61] - WITHOUT TYPE PARAMS = fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:06:45,118 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:06:45,120 [main:95] - GENERATED = longArrayOf(-3319975954261614136)
2021-03-11 13:06:45,120 [main:46] - GENERATED VALUE OF TYPE LongArray = longArrayOf(-3319975954261614136)
2021-03-11 13:06:45,120 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:45,124 [main:55] - randomType = UByte
2021-03-11 13:06:45,261 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:06:45,290 [main:94] - GETTING LongArray from Long
2021-03-11 13:06:45,323 [main:94] - GETTING LongArray from Float
2021-03-11 13:06:45,354 [main:94] - GETTING LongArray from Array<Float>
2021-03-11 13:06:45,364 [main:101] - Case = [public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]]
2021-03-11 13:06:45,364 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]
2021-03-11 13:06:45,364 [main:105] - GENERATED CALL = (aFloat).toLongArray()
2021-03-11 13:06:45,364 [main:63] - replacement of bLong of type LongArray is (aFloat).toLongArray()
2021-03-11 13:06:45,499 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:45,509 [main:56] - replacing (aFloat, Array<Float>)
2021-03-11 13:06:45,510 [main:38] - replacing aFloat Array<Float>
2021-03-11 13:06:45,510 [main:42] - Getting value of type Array<Float>
2021-03-11 13:06:45,653 [main:302] - generating value of type = Array<Float> false depth = 0
2021-03-11 13:06:45,794 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Float): Array<Float> = TODO()
2021-03-11 13:06:45,797 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Float): Array<Float> = TODO()
2021-03-11 13:06:46,231 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:06:46,232 [main:302] - generating value of type = Function1<Int, Float> false depth = 3
2021-03-11 13:06:46,234 [main:302] - generating value of type = Float true depth = 4
2021-03-11 13:06:46,236 [main:95] - GENERATED = Array<Float>(-1828000318, {a: Int -> 0.252429f})
2021-03-11 13:06:46,236 [main:46] - GENERATED VALUE OF TYPE Array<Float> = Array<Float>(-1828000318, {a: Int -> 0.252429f})
2021-03-11 13:06:46,236 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:46,239 [main:55] - randomType = Float
2021-03-11 13:06:46,374 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:06:46,404 [main:94] - GETTING Array<Float> from Int
2021-03-11 13:06:46,438 [main:94] - GETTING Array<Float> from Array<Float>
2021-03-11 13:06:46,448 [main:101] - Case = [public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]]
2021-03-11 13:06:46,448 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]
2021-03-11 13:06:46,584 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:06:46,726 [main:43] - GENERATING CALL OF fun UIntArray(size: kotlin.Int): Collection<Int> = TODO()
2021-03-11 13:06:46,728 [main:61] - WITHOUT TYPE PARAMS = fun UIntArray(size: kotlin.Int): Collection<Int> = TODO()
2021-03-11 13:06:47,015 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:06:47,017 [main:95] - GENERATED = UIntArray(809665995)
2021-03-11 13:06:47,017 [main:105] - GENERATED CALL = (aFloat).sliceArray(UIntArray(809665995))
2021-03-11 13:06:47,017 [main:101] - Case = [public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]]
2021-03-11 13:06:47,017 [main:137] - GENERATING call of type public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]
2021-03-11 13:06:47,017 [main:105] - GENERATED CALL = (aFloat).requireNoNulls()
2021-03-11 13:06:47,018 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]]
2021-03-11 13:06:47,018 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]
2021-03-11 13:06:47,018 [main:105] - GENERATED CALL = (aFloat).sortedArray()
2021-03-11 13:06:47,018 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]]
2021-03-11 13:06:47,018 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]
2021-03-11 13:06:47,018 [main:105] - GENERATED CALL = (aFloat).sortedArrayDescending()
2021-03-11 13:06:47,018 [main:101] - Case = [public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]]
2021-03-11 13:06:47,018 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]
2021-03-11 13:06:47,018 [main:105] - GENERATED CALL = (aFloat).reversedArray()
2021-03-11 13:06:47,018 [main:63] - replacement of aFloat of type Array<Float> is Array<Float>(-1828000318, {a: Int -> 0.252429f})
2021-03-11 13:06:47,161 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:06:47,162 [main:66] - Compilation checking started
2021-03-11 13:06:47,642 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:47,652 [main:56] - replacing (1, Byte)
2021-03-11 13:06:47,653 [main:38] - replacing 1 Byte
2021-03-11 13:06:47,653 [main:42] - Getting value of type Byte
2021-03-11 13:06:47,790 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:47,791 [main:46] - GENERATED VALUE OF TYPE Byte = -49
2021-03-11 13:06:47,791 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:48,405 [main:55] - randomType = Map<Set<Int>, Char?>?
2021-03-11 13:06:48,406 [main:94] - GETTING Byte from Int
2021-03-11 13:06:48,440 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]]
2021-03-11 13:06:48,440 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:06:48,440 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]
2021-03-11 13:06:48,576 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:48,577 [main:105] - GENERATED CALL = (bInt[0]++).toByte().xor(-44)
2021-03-11 13:06:48,577 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]]
2021-03-11 13:06:48,577 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:06:48,578 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]
2021-03-11 13:06:48,578 [main:105] - GENERATED CALL = (bInt[0]++).toByte().takeLowestOneBit()
2021-03-11 13:06:48,578 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]]
2021-03-11 13:06:48,578 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:06:48,578 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]
2021-03-11 13:06:48,578 [main:105] - GENERATED CALL = (bInt[0]++).toByte().dec()
2021-03-11 13:06:48,578 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:06:48,578 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:06:48,578 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:06:48,578 [main:105] - GENERATED CALL = (bInt[0]++).toDouble().toByte()
2021-03-11 13:06:48,578 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:06:48,578 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:06:48,713 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:48,714 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:06:48,715 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(96013318).toByte()
2021-03-11 13:06:48,715 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:06:48,715 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:06:48,715 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:06:48,715 [main:105] - GENERATED CALL = (bInt[0]++).toInt().toByte()
2021-03-11 13:06:48,715 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public open fun toByte(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@134162cc]]
2021-03-11 13:06:48,715 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:06:48,715 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@134162cc]
2021-03-11 13:06:48,715 [main:105] - GENERATED CALL = (bInt[0]++).toByte().toByte()
2021-03-11 13:06:48,715 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]]
2021-03-11 13:06:48,715 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:06:48,715 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]
2021-03-11 13:06:48,715 [main:105] - GENERATED CALL = (bInt[0]++).toByte().inv()
2021-03-11 13:06:48,715 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]]
2021-03-11 13:06:48,715 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:06:48,715 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:06:48,716 [main:105] - GENERATED CALL = (bInt[0]++).toChar().toByte()
2021-03-11 13:06:48,716 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateRight(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@60497689]]
2021-03-11 13:06:48,716 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:06:48,716 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateRight(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@60497689]
2021-03-11 13:06:48,851 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:48,854 [main:105] - GENERATED CALL = (bInt[0]++).toByte().rotateRight(1724975766)
2021-03-11 13:06:48,854 [main:63] - replacement of 1 of type Byte is (bInt[0]++).toByte().rotateRight(1724975766)
2021-03-11 13:06:48,999 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:48,999 [main:66] - Compilation checking started
2021-03-11 13:06:49,420 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf((bInt[0]++).toByte().rotateRight(1724975766))
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:49,429 [main:56] - replacing (aShort, Array<Short>)
2021-03-11 13:06:49,429 [main:38] - replacing aShort Array<Short>
2021-03-11 13:06:49,429 [main:42] - Getting value of type Array<Short>
2021-03-11 13:06:49,567 [main:302] - generating value of type = Array<Short> false depth = 0
2021-03-11 13:06:49,707 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Short): Array<Short> = TODO()
2021-03-11 13:06:49,709 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Short): Array<Short> = TODO()
2021-03-11 13:06:49,852 [main:302] - generating value of type = Short true depth = 3
2021-03-11 13:06:49,854 [main:95] - GENERATED = arrayOf<Short>(19267)
2021-03-11 13:06:49,854 [main:46] - GENERATED VALUE OF TYPE Array<Short> = arrayOf<Short>(19267)
2021-03-11 13:06:49,855 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:50,990 [main:55] - randomType = List<LinkedHashMap<Char, Function2<UByte, String, Triple<LinkedHashSet<UInt>, Double, Char>?>>?>
2021-03-11 13:06:50,991 [main:94] - GETTING Array<Short> from Long
2021-03-11 13:06:51,026 [main:94] - GETTING Array<Short> from Array<Double>
2021-03-11 13:06:51,037 [main:63] - replacement of aShort of type Array<Short> is aDouble
2021-03-11 13:06:51,175 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:06:51,184 [main:56] - replacing (aShort[(true)?.compareTo(true).shr(-685211436)], Double)
2021-03-11 13:06:51,186 [main:38] - replacing aShort[(true)?.compareTo(true).shr(-685211436)] Double
2021-03-11 13:06:51,186 [main:42] - Getting value of type Double
2021-03-11 13:06:51,328 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:51,330 [main:46] - GENERATED VALUE OF TYPE Double = 0.9153196763340541
2021-03-11 13:06:51,330 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:51,333 [main:55] - randomType = String
2021-03-11 13:06:51,469 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:06:51,490 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:06:51,625 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:51,627 [main:66] - Generated call from random type = ("wnqvf").length.div(0.7170346107092886)
2021-03-11 13:06:51,628 [main:94] - GETTING Double from Long
2021-03-11 13:06:51,660 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], public fun kotlin.Double.coerceAtMost(maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ff45f6f]]
2021-03-11 13:06:51,660 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:06:51,795 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:51,797 [main:137] - GENERATING call of type public fun kotlin.Double.coerceAtMost(maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ff45f6f]
2021-03-11 13:06:51,939 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:51,941 [main:105] - GENERATED CALL = (aLong[0]).div(0.7278976372128172).coerceAtMost(0.9035172615278548)
2021-03-11 13:06:51,941 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1610336f]]
2021-03-11 13:06:51,941 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:06:51,941 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1610336f]
2021-03-11 13:06:52,077 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:52,078 [main:105] - GENERATED CALL = (aLong[0]).toLong().times(0.5748224836877581)
2021-03-11 13:06:52,078 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6076b1a3]]
2021-03-11 13:06:52,078 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:06:52,078 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6076b1a3]
2021-03-11 13:06:52,215 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:52,216 [main:105] - GENERATED CALL = (aLong[0]).toShort().minus(0.32242014429300947)
2021-03-11 13:06:52,216 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun toDouble(): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@359b1f57]]
2021-03-11 13:06:52,216 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:06:52,217 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@359b1f57]
2021-03-11 13:06:52,217 [main:105] - GENERATED CALL = (aLong[0]).toFloat().toDouble()
2021-03-11 13:06:52,217 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]]
2021-03-11 13:06:52,217 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:06:52,217 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]
2021-03-11 13:06:52,217 [main:105] - GENERATED CALL = (aLong[0]).toDouble().toDouble()
2021-03-11 13:06:52,217 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.sign: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@23395b41]]
2021-03-11 13:06:52,217 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:06:52,217 [main:105] - GENERATED CALL = (aLong[0]).toDouble().sign
2021-03-11 13:06:52,217 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.sign: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@23395b41]]
2021-03-11 13:06:52,217 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:06:52,353 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:52,355 [main:105] - GENERATED CALL = (aLong[0]).div(0.5933425567069786).sign
2021-03-11 13:06:52,355 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@78436e2a]]
2021-03-11 13:06:52,355 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:06:52,355 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@78436e2a]
2021-03-11 13:06:52,493 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:52,495 [main:105] - GENERATED CALL = (aLong[0]).toLong().minus(0.3290611178237246)
2021-03-11 13:06:52,495 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]]
2021-03-11 13:06:52,495 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:06:52,495 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]
2021-03-11 13:06:52,630 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:52,632 [main:105] - GENERATED CALL = (aLong[0]).toDouble().pow(0.4760954504460758)
2021-03-11 13:06:52,632 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]]
2021-03-11 13:06:52,632 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:06:52,632 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:06:52,767 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:52,769 [main:105] - GENERATED CALL = (aLong[0]).toLong().div(0.17666311664224432)
2021-03-11 13:06:52,769 [main:63] - replacement of aShort[(true)?.compareTo(true).shr(-685211436)] of type Double is (aLong[0]).div(0.7278976372128172).coerceAtMost(0.9035172615278548)
2021-03-11 13:06:52,908 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:52,908 [main:66] - Compilation checking started
2021-03-11 13:06:53,295 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817))
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    (aLong[0]).div(0.7278976372128172).coerceAtMost(0.9035172615278548)++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:53,305 [main:56] - replacing (arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817)), Array<Byte>)
2021-03-11 13:06:53,306 [main:38] - replacing arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817)) Array<Byte>
2021-03-11 13:06:53,306 [main:42] - Getting value of type Array<Byte>
2021-03-11 13:06:53,449 [main:302] - generating value of type = Array<Byte> false depth = 0
2021-03-11 13:06:53,594 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Byte): Array<Byte> = TODO()
2021-03-11 13:06:53,596 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Byte): Array<Byte> = TODO()
2021-03-11 13:06:54,096 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:06:54,098 [main:302] - generating value of type = Function1<Int, Byte> false depth = 3
2021-03-11 13:06:54,099 [main:302] - generating value of type = Byte true depth = 4
2021-03-11 13:06:54,101 [main:95] - GENERATED = Array<Byte>(1483428090, {a: Int -> -17})
2021-03-11 13:06:54,101 [main:46] - GENERATED VALUE OF TYPE Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
2021-03-11 13:06:54,101 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:54,106 [main:55] - randomType = Int
2021-03-11 13:06:54,242 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:54,277 [main:94] - GETTING Array<Byte> from Array<Int>
2021-03-11 13:06:54,286 [main:63] - replacement of arrayOf<Byte>((522247362.toUInt()).toByte().rotateLeft(-480680817)) of type Array<Byte> is Array<Byte>(1483428090, {a: Int -> -17})
2021-03-11 13:06:54,422 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:06:54,423 [main:66] - Compilation checking started
2021-03-11 13:06:54,926 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:54,938 [main:56] - replacing (aByte[(aByte[0]++).div(0.27717453f).toBits()], Byte)
2021-03-11 13:06:54,940 [main:38] - replacing aByte[(aByte[0]++).div(0.27717453f).toBits()] Byte
2021-03-11 13:06:54,940 [main:42] - Getting value of type Byte
2021-03-11 13:06:55,094 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:55,095 [main:46] - GENERATED VALUE OF TYPE Byte = -97
2021-03-11 13:06:55,095 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:55,100 [main:55] - randomType = UInt
2021-03-11 13:06:55,251 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:06:55,284 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.ULong): kotlin.ULong defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@692d531]
2021-03-11 13:06:55,423 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 13:06:55,424 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@63c3553d]
2021-03-11 13:06:55,425 [main:66] - Generated call from random type = (993492643.toUInt()).div(7980645534478689672.toULong()).toByte()
2021-03-11 13:06:55,425 [main:94] - GETTING Byte from Byte
2021-03-11 13:06:55,463 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]]
2021-03-11 13:06:55,463 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:06:55,463 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]
2021-03-11 13:06:55,463 [main:105] - GENERATED CALL = (aByte[0]++).toByte().inv()
2021-03-11 13:06:55,463 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateLeft(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@5b08d322]]
2021-03-11 13:06:55,463 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateLeft(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@5b08d322]
2021-03-11 13:06:55,602 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:06:55,604 [main:105] - GENERATED CALL = (aByte[0]++).rotateLeft(1063107479)
2021-03-11 13:06:55,604 [main:101] - Case = [public final operator fun inc(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@49ecd74f]]
2021-03-11 13:06:55,604 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@49ecd74f]
2021-03-11 13:06:55,604 [main:105] - GENERATED CALL = (aByte[0]++).inc()
2021-03-11 13:06:55,604 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]]
2021-03-11 13:06:55,604 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:06:55,604 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]
2021-03-11 13:06:55,737 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:55,738 [main:105] - GENERATED CALL = (aByte[0]++).toByte().and(85)
2021-03-11 13:06:55,738 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]]
2021-03-11 13:06:55,738 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:06:55,738 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:06:55,739 [main:105] - GENERATED CALL = (aByte[0]++).toShort().toByte()
2021-03-11 13:06:55,739 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]]
2021-03-11 13:06:55,739 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]
2021-03-11 13:06:55,872 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:55,874 [main:105] - GENERATED CALL = (aByte[0]++).or(-113)
2021-03-11 13:06:55,874 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:06:55,874 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]
2021-03-11 13:06:56,008 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:06:56,010 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:06:56,010 [main:105] - GENERATED CALL = (aByte[0]++).div(0.16567326952496786).toByte()
2021-03-11 13:06:56,010 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]]
2021-03-11 13:06:56,010 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]
2021-03-11 13:06:56,010 [main:105] - GENERATED CALL = (aByte[0]++).takeLowestOneBit()
2021-03-11 13:06:56,010 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]]
2021-03-11 13:06:56,010 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]
2021-03-11 13:06:56,145 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:56,147 [main:105] - GENERATED CALL = (aByte[0]++).and(-89)
2021-03-11 13:06:56,147 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public fun kotlin.Byte.coerceAtMost(maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7d7437d2]]
2021-03-11 13:06:56,147 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:06:56,147 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtMost(maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7d7437d2]
2021-03-11 13:06:56,281 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:06:56,283 [main:105] - GENERATED CALL = (aByte[0]++).toByte().coerceAtMost(108)
2021-03-11 13:06:56,283 [main:63] - replacement of aByte[(aByte[0]++).div(0.27717453f).toBits()] of type Byte is -97
2021-03-11 13:06:56,415 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 13:06:56,415 [main:66] - Compilation checking started
2021-03-11 13:06:56,805 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    -97++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:56,815 [main:56] - replacing (bDouble, DoubleArray)
2021-03-11 13:06:56,816 [main:38] - replacing bDouble DoubleArray
2021-03-11 13:06:56,816 [main:42] - Getting value of type DoubleArray
2021-03-11 13:06:56,955 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:06:57,101 [main:43] - GENERATING CALL OF fun DoubleArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Double): DoubleArray = TODO()
2021-03-11 13:06:57,103 [main:61] - WITHOUT TYPE PARAMS = fun DoubleArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Double): DoubleArray = TODO()
2021-03-11 13:06:57,534 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:06:57,535 [main:302] - generating value of type = Function1<Int, Double> false depth = 3
2021-03-11 13:06:57,537 [main:302] - generating value of type = Double true depth = 4
2021-03-11 13:06:57,538 [main:95] - GENERATED = DoubleArray(-1692948454, {a: Int -> 0.7742674966271493})
2021-03-11 13:06:57,539 [main:46] - GENERATED VALUE OF TYPE DoubleArray = DoubleArray(-1692948454, {a: Int -> 0.7742674966271493})
2021-03-11 13:06:57,539 [main:49] - GENERATED IS CALL =true
2021-03-11 13:06:57,542 [main:55] - randomType = Char
2021-03-11 13:06:57,677 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:06:57,697 [main:94] - GETTING DoubleArray from Short
2021-03-11 13:06:57,738 [main:94] - GETTING DoubleArray from Byte
2021-03-11 13:06:57,768 [main:94] - GETTING DoubleArray from Long
2021-03-11 13:06:57,801 [main:94] - GETTING DoubleArray from Array<Int>
2021-03-11 13:06:57,810 [main:101] - Case = [public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]]
2021-03-11 13:06:57,810 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]
2021-03-11 13:06:57,810 [main:105] - GENERATED CALL = (aInt).toDoubleArray()
2021-03-11 13:06:57,810 [main:63] - replacement of bDouble of type DoubleArray is (aInt).toDoubleArray()
2021-03-11 13:06:57,956 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:06:57,956 [main:66] - Compilation checking started
2021-03-11 13:06:58,339 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f)) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != (aInt).toDoubleArray()[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:06:58,348 [main:56] - replacing ((ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f), Boolean)
2021-03-11 13:06:58,350 [main:38] - replacing (ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f) Boolean
2021-03-11 13:06:58,350 [main:42] - Getting value of type Boolean
2021-03-11 13:06:58,486 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:06:58,488 [main:46] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 13:06:58,488 [main:49] - GENERATED IS CALL =false
2021-03-11 13:06:58,684 [main:55] - randomType = ArrayDeque<Float>
2021-03-11 13:06:58,820 [main:302] - generating value of type = ArrayDeque<Float> false depth = 0
2021-03-11 13:06:58,961 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Float>): ArrayDeque<Float> = TODO()
2021-03-11 13:06:58,963 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Float>): ArrayDeque<Float> = TODO()
2021-03-11 13:06:59,258 [main:302] - generating value of type = Collection<Float> false depth = 3
2021-03-11 13:06:59,401 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): Collection<Float> = TODO()
2021-03-11 13:06:59,403 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): Collection<Float> = TODO()
2021-03-11 13:06:59,709 [main:302] - generating value of type = Int true depth = 6
2021-03-11 13:06:59,711 [main:95] - GENERATED = ArrayDeque<Float>(576345070)
2021-03-11 13:06:59,711 [main:95] - GENERATED = ArrayDeque<Float>(ArrayDeque<Float>(576345070))
2021-03-11 13:06:59,839 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:06:59,974 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:06:59,974 [main:66] - Generated call from random type = (ArrayDeque<Float>(ArrayDeque<Float>(576345070))).modCount.equals("xgqih")
2021-03-11 13:06:59,975 [main:94] - GETTING Boolean from Short
2021-03-11 13:07:00,012 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@65289aa1]]
2021-03-11 13:07:00,012 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:07:00,012 [main:137] - GENERATING call of type public fun kotlin.Double.isNaN(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@65289aa1]
2021-03-11 13:07:00,012 [main:105] - GENERATED CALL = (aShort[0]++).toDouble().isNaN()
2021-03-11 13:07:00,012 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]]
2021-03-11 13:07:00,012 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:07:00,149 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:07:00,150 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@585f319e]
2021-03-11 13:07:00,285 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:07:00,286 [main:105] - GENERATED CALL = (aShort[0]++).div(0.5604318769986736).equals("kiuoz")
2021-03-11 13:07:00,286 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@755a95f2]]
2021-03-11 13:07:00,286 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]
2021-03-11 13:07:00,422 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:07:00,422 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@755a95f2]
2021-03-11 13:07:00,559 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:07:00,561 [main:105] - GENERATED CALL = (aShort[0]++).equals("hticp").xor(false)
2021-03-11 13:07:00,561 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@63e55d39]]
2021-03-11 13:07:00,561 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:07:00,704 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:07:00,706 [main:137] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@63e55d39]
2021-03-11 13:07:00,706 [main:105] - GENERATED CALL = (aShort[0]++).div(0.5964744671915551).isFinite()
2021-03-11 13:07:00,706 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]]
2021-03-11 13:07:00,706 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:07:00,706 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]
2021-03-11 13:07:00,846 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:07:00,847 [main:105] - GENERATED CALL = (aShort[0]++).toShort().equals("zoxqe")
2021-03-11 13:07:00,847 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], public fun kotlin.Char.isLetterOrDigit(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@50c2590c]]
2021-03-11 13:07:00,847 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:07:00,847 [main:137] - GENERATING call of type public fun kotlin.Char.isLetterOrDigit(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@50c2590c]
2021-03-11 13:07:00,847 [main:105] - GENERATED CALL = (aShort[0]++).toChar().isLetterOrDigit()
2021-03-11 13:07:00,847 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], public fun kotlin.Char.isWhitespace(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46b37743]]
2021-03-11 13:07:00,847 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:07:00,847 [main:137] - GENERATING call of type public fun kotlin.Char.isWhitespace(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@46b37743]
2021-03-11 13:07:00,847 [main:105] - GENERATED CALL = (aShort[0]++).toChar().isWhitespace()
2021-03-11 13:07:00,847 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]]
2021-03-11 13:07:00,847 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]
2021-03-11 13:07:00,984 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:07:00,985 [main:105] - GENERATED CALL = (aShort[0]++).equals("bggnl")
2021-03-11 13:07:00,985 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41806110]]
2021-03-11 13:07:00,985 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7a78c7f7]
2021-03-11 13:07:01,130 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:07:01,131 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@41806110]
2021-03-11 13:07:01,265 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:07:01,265 [main:105] - GENERATED CALL = (aShort[0]++).equals("tjoah").equals("rhecl")
2021-03-11 13:07:01,265 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@493658fa]]
2021-03-11 13:07:01,265 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:01,265 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@493658fa]
2021-03-11 13:07:01,403 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:07:01,403 [main:105] - GENERATED CALL = (aShort[0]++).toLong().equals("cfmlu")
2021-03-11 13:07:01,403 [main:63] - replacement of (ArrayDeque<UInt?>()).size.times(0.9358999f) != (bInt[0]).toFloat().coerceIn(0.49468285f, 0.40699363f) of type Boolean is (aShort[0]++).toDouble().isNaN()
2021-03-11 13:07:01,541 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:01,542 [main:66] - Compilation checking started
2021-03-11 13:07:02,022 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf(1)

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:02,032 [main:56] - replacing (1, Long)
2021-03-11 13:07:02,033 [main:38] - replacing 1 Long
2021-03-11 13:07:02,033 [main:42] - Getting value of type Long
2021-03-11 13:07:02,176 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:02,178 [main:46] - GENERATED VALUE OF TYPE Long = -8681900199366965265
2021-03-11 13:07:02,178 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:02,184 [main:55] - randomType = Int
2021-03-11 13:07:02,318 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:02,350 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:07:02,483 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:02,484 [main:66] - Generated call from random type = (-1378253058).div(-73701860255188774).absoluteValue
2021-03-11 13:07:02,485 [main:94] - GETTING Long from Short
2021-03-11 13:07:02,518 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@24c9fa8e]]
2021-03-11 13:07:02,518 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:02,519 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@24c9fa8e]
2021-03-11 13:07:02,652 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:02,654 [main:105] - GENERATED CALL = (aShort[0]--).toLong().xor(487472864545714146)
2021-03-11 13:07:02,654 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]]
2021-03-11 13:07:02,654 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:07:02,787 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:02,789 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@52a874d6]
2021-03-11 13:07:02,924 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:02,925 [main:105] - GENERATED CALL = (aShort[0]--).compareTo(69).rem(-279849986671717360)
2021-03-11 13:07:02,925 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64], public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c59df0a]]
2021-03-11 13:07:02,926 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:07:03,059 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:03,061 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c59df0a]
2021-03-11 13:07:03,238 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:03,240 [main:105] - GENERATED CALL = (aShort[0]--).div(159021323493300071).or(-9200675999017908327)
2021-03-11 13:07:03,240 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@23c7f542]]
2021-03-11 13:07:03,240 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:03,240 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@23c7f542]
2021-03-11 13:07:03,240 [main:105] - GENERATED CALL = (aShort[0]--).toLong().unaryPlus()
2021-03-11 13:07:03,240 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5191e0c7], public final val last: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@2f139405]]
2021-03-11 13:07:03,240 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5191e0c7]
2021-03-11 13:07:03,374 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:03,376 [main:105] - GENERATED CALL = (aShort[0]--).rangeTo(-2152747876342669224).last
2021-03-11 13:07:03,376 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@238f7bfd]]
2021-03-11 13:07:03,376 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@238f7bfd]
2021-03-11 13:07:03,376 [main:105] - GENERATED CALL = (aShort[0]--).toLong()
2021-03-11 13:07:03,376 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c59df0a]]
2021-03-11 13:07:03,376 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:03,376 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c59df0a]
2021-03-11 13:07:03,511 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:03,513 [main:105] - GENERATED CALL = (aShort[0]--).toLong().or(3921333562018274816)
2021-03-11 13:07:03,513 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2372d47d]]
2021-03-11 13:07:03,513 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:03,513 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2372d47d]
2021-03-11 13:07:03,645 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:03,647 [main:105] - GENERATED CALL = (aShort[0]--).toLong().div(-41)
2021-03-11 13:07:03,647 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@6eb1a9b2]]
2021-03-11 13:07:03,647 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:03,647 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@6eb1a9b2]
2021-03-11 13:07:03,647 [main:105] - GENERATED CALL = (aShort[0]--).toLong().takeHighestOneBit()
2021-03-11 13:07:03,647 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@5a2c59d]]
2021-03-11 13:07:03,647 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:07:03,647 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@5a2c59d]
2021-03-11 13:07:03,647 [main:105] - GENERATED CALL = (aShort[0]--).toFloat().roundToLong()
2021-03-11 13:07:03,647 [main:63] - replacement of 1 of type Long is (aShort[0]--).toLong().xor(487472864545714146)
2021-03-11 13:07:03,782 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:03,783 [main:66] - Compilation checking started
2021-03-11 13:07:04,274 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[0]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:04,283 [main:56] - replacing (0, Int)
2021-03-11 13:07:04,283 [main:38] - replacing 0 Int
2021-03-11 13:07:04,283 [main:42] - Getting value of type Int
2021-03-11 13:07:04,418 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:04,419 [main:46] - GENERATED VALUE OF TYPE Int = 1663686163
2021-03-11 13:07:04,419 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:04,424 [main:55] - randomType = UInt
2021-03-11 13:07:04,559 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:07:04,588 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@70141301]
2021-03-11 13:07:04,589 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7acd041f]
2021-03-11 13:07:04,589 [main:66] - Generated call from random type = (1790330856.toUInt()).toShort().unaryPlus()
2021-03-11 13:07:04,590 [main:94] - GETTING Int from Byte
2021-03-11 13:07:04,621 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]]
2021-03-11 13:07:04,621 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:04,621 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]
2021-03-11 13:07:04,622 [main:105] - GENERATED CALL = (bByte[0]).toByte().unaryMinus()
2021-03-11 13:07:04,622 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:07:04,622 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:04,622 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:07:04,759 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:04,760 [main:105] - GENERATED CALL = (bByte[0]).toInt().div(11)
2021-03-11 13:07:04,760 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 13:07:04,760 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:04,760 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:07:04,921 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:04,923 [main:105] - GENERATED CALL = (bByte[0]).toInt().minus(-119)
2021-03-11 13:07:04,923 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3ab8b8ed], public open val start: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@21cfdb17]]
2021-03-11 13:07:04,923 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3ab8b8ed]
2021-03-11 13:07:05,067 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:05,069 [main:105] - GENERATED CALL = (bByte[0]).rangeTo(47).start
2021-03-11 13:07:05,069 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:07:05,069 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:07:05,213 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:05,214 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:07:05,356 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:05,499 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:05,501 [main:105] - GENERATED CALL = (bByte[0]).compareTo(-79).coerceIn(-603811942, 1892606245)
2021-03-11 13:07:05,501 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:07:05,501 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:05,501 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:07:05,501 [main:105] - GENERATED CALL = (bByte[0]).toInt().takeHighestOneBit()
2021-03-11 13:07:05,501 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:07:05,501 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:07:05,641 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:05,643 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:07:05,643 [main:105] - GENERATED CALL = (bByte[0]).div(7874764457408560927).countOneBits()
2021-03-11 13:07:05,643 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:07:05,643 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:05,643 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:07:05,643 [main:105] - GENERATED CALL = (bByte[0]).toLong().countOneBits()
2021-03-11 13:07:05,643 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3ab8b8ed], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ranges.IntRange.random(): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1b3d5354]]
2021-03-11 13:07:05,643 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3ab8b8ed]
2021-03-11 13:07:05,789 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:05,791 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ranges.IntRange.random(): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1b3d5354]
2021-03-11 13:07:05,791 [main:105] - GENERATED CALL = (bByte[0]).rangeTo(-62).random()
2021-03-11 13:07:05,791 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:07:05,791 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:07:05,933 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:05,934 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:07:06,076 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:06,077 [main:105] - GENERATED CALL = (bByte[0]).compareTo(-108).div(103)
2021-03-11 13:07:06,078 [main:63] - replacement of 0 of type Int is (bByte[0]).div(7874764457408560927).countOneBits()
2021-03-11 13:07:06,217 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:06,226 [main:56] - replacing (0, Int)
2021-03-11 13:07:06,228 [main:38] - replacing 0 Int
2021-03-11 13:07:06,228 [main:42] - Getting value of type Int
2021-03-11 13:07:06,367 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:06,369 [main:46] - GENERATED VALUE OF TYPE Int = 433768356
2021-03-11 13:07:06,369 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:06,527 [main:55] - randomType = Int?
2021-03-11 13:07:06,666 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:06,705 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:07:06,848 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:06,849 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:07:06,994 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:06,996 [main:66] - Generated call from random type = (759225144)?.compareTo(2025015743).div(-73)
2021-03-11 13:07:06,997 [main:94] - GETTING Int from LongArray
2021-03-11 13:07:07,005 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:07:07,005 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:07:07,151 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:07,153 [main:105] - GENERATED CALL = (bLong).size.ushr(1085190782)
2021-03-11 13:07:07,153 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@5f449f3f]]
2021-03-11 13:07:07,153 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.LongArray[DeserializedSimpleFunctionDescriptor@45147221]
2021-03-11 13:07:07,300 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:07,302 [main:105] - GENERATED CALL = (bLong).get(286784398).sign
2021-03-11 13:07:07,302 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.LongArray.sumOf(selector: (kotlin.Long) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3222ab2a]]
2021-03-11 13:07:07,302 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.LongArray.sumOf(selector: (kotlin.Long) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3222ab2a]
2021-03-11 13:07:07,452 [main:302] - generating value of type = Function1<Long, Int> false depth = 0
2021-03-11 13:07:07,454 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:07:07,455 [main:105] - GENERATED CALL = (bLong).sumOf({a: Long -> -490996903})
2021-03-11 13:07:07,455 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:07:07,455 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:07:07,597 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:07,598 [main:105] - GENERATED CALL = (bLong).size.shr(406764667)
2021-03-11 13:07:07,598 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:07:07,598 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:07:07,739 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:07,741 [main:105] - GENERATED CALL = (bLong).size.compareTo(91)
2021-03-11 13:07:07,741 [main:101] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.LongArray.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2250ab94]]
2021-03-11 13:07:07,741 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.LongArray.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2250ab94]
2021-03-11 13:07:07,741 [main:105] - GENERATED CALL = (bLong).count()
2021-03-11 13:07:07,741 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:07:07,741 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:07:07,742 [main:105] - GENERATED CALL = (bLong).size.inv()
2021-03-11 13:07:07,742 [main:101] - Case = [public inline fun kotlin.LongArray.indexOfFirst(predicate: (kotlin.Long) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76d54faf]]
2021-03-11 13:07:07,742 [main:137] - GENERATING call of type public inline fun kotlin.LongArray.indexOfFirst(predicate: (kotlin.Long) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76d54faf]
2021-03-11 13:07:07,883 [main:302] - generating value of type = Function1<Long, Boolean> false depth = 0
2021-03-11 13:07:07,884 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 13:07:07,886 [main:105] - GENERATED CALL = (bLong).indexOfFirst({a: Long -> true})
2021-03-11 13:07:07,886 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]]
2021-03-11 13:07:07,886 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:07:08,079 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:08,081 [main:105] - GENERATED CALL = (bLong).size.shl(1918551810)
2021-03-11 13:07:08,245 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.LongArray[DeserializedPropertyDescriptor@c1fe1b9], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]]
2021-03-11 13:07:08,245 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@321e503]
2021-03-11 13:07:08,385 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:08,387 [main:105] - GENERATED CALL = (bLong).size.plus(-53)
2021-03-11 13:07:08,387 [main:63] - replacement of 0 of type Int is (bLong).size.ushr(1085190782)
2021-03-11 13:07:08,528 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:08,528 [main:66] - Compilation checking started
2021-03-11 13:07:09,042 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = arrayOf<Short>(1)
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:09,053 [main:56] - replacing (arrayOf<Short>(1), Array<Short>)
2021-03-11 13:07:09,055 [main:38] - replacing arrayOf<Short>(1) Array<Short>
2021-03-11 13:07:09,055 [main:42] - Getting value of type Array<Short>
2021-03-11 13:07:09,196 [main:302] - generating value of type = Array<Short> false depth = 0
2021-03-11 13:07:09,346 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Short> = TODO()
2021-03-11 13:07:09,349 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Short> = TODO()
2021-03-11 13:07:09,494 [main:95] - GENERATED = emptyArray<Short>()
2021-03-11 13:07:09,494 [main:46] - GENERATED VALUE OF TYPE Array<Short> = emptyArray<Short>()
2021-03-11 13:07:09,494 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:09,497 [main:55] - randomType = Long
2021-03-11 13:07:09,636 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:09,674 [main:94] - GETTING Array<Short> from Array<Long>
2021-03-11 13:07:09,688 [main:63] - replacement of arrayOf<Short>(1) of type Array<Short> is emptyArray<Short>()
2021-03-11 13:07:09,828 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:07:09,828 [main:66] - Compilation checking started
2021-03-11 13:07:10,363 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    bLong[(bFloat).size.countLeadingZeroBits()]--
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:10,372 [main:56] - replacing (0, Int)
2021-03-11 13:07:10,372 [main:38] - replacing 0 Int
2021-03-11 13:07:10,372 [main:42] - Getting value of type Int
2021-03-11 13:07:10,512 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:10,513 [main:46] - GENERATED VALUE OF TYPE Int = 2051291304
2021-03-11 13:07:10,514 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:10,829 [main:55] - randomType = LinkedHashSet<Char>
2021-03-11 13:07:10,970 [main:302] - generating value of type = LinkedHashSet<Char> false depth = 0
2021-03-11 13:07:11,114 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Char): LkedHashSet<Char> = TODO()
2021-03-11 13:07:11,116 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Char): LkedHashSet<Char> = TODO()
2021-03-11 13:07:11,262 [main:302] - generating value of type = Char true depth = 3
2021-03-11 13:07:11,263 [main:95] - GENERATED = linkedSetOf<Char>('䥩')
2021-03-11 13:07:11,385 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:07:11,519 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:11,672 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:11,674 [main:66] - Generated call from random type = (linkedSetOf<Char>('䥩')).size.coerceIn(110813924, 1714861140)
2021-03-11 13:07:11,674 [main:94] - GETTING Int from Float
2021-03-11 13:07:11,712 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 13:07:11,712 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:11,712 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 13:07:11,856 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:11,857 [main:105] - GENERATED CALL = (aFloat[0]--).toShort().times(19)
2021-03-11 13:07:11,858 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:07:11,858 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:07:12,004 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:12,006 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:07:12,006 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(42).inv()
2021-03-11 13:07:12,006 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:07:12,006 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:07:12,150 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:12,152 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:07:12,291 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:12,293 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(126).coerceAtLeast(1777517836)
2021-03-11 13:07:12,293 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:07:12,293 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:07:12,432 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:12,433 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:07:12,434 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(-100).unaryMinus()
2021-03-11 13:07:12,434 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]]
2021-03-11 13:07:12,434 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:07:12,434 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]
2021-03-11 13:07:12,434 [main:105] - GENERATED CALL = (aFloat[0]--).toByte().toInt()
2021-03-11 13:07:12,434 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]]
2021-03-11 13:07:12,434 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:12,434 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]
2021-03-11 13:07:12,434 [main:105] - GENERATED CALL = (aFloat[0]--).toShort().unaryMinus()
2021-03-11 13:07:12,434 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943], public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]]
2021-03-11 13:07:12,434 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943]
2021-03-11 13:07:12,434 [main:137] - GENERATING call of type public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]
2021-03-11 13:07:12,434 [main:105] - GENERATED CALL = (aFloat[0]--).toChar().toInt()
2021-03-11 13:07:12,434 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:07:12,434 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:07:12,573 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:12,575 [main:105] - GENERATED CALL = (aFloat[0]--).compareTo(-37).sign
2021-03-11 13:07:12,575 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]]
2021-03-11 13:07:12,575 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:07:12,575 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]
2021-03-11 13:07:12,575 [main:105] - GENERATED CALL = (aFloat[0]--).toFloat().toInt()
2021-03-11 13:07:12,575 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]]
2021-03-11 13:07:12,575 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]
2021-03-11 13:07:12,575 [main:105] - GENERATED CALL = (aFloat[0]--).roundToInt()
2021-03-11 13:07:12,575 [main:63] - replacement of 0 of type Int is (aFloat[0]--).compareTo(126).coerceAtLeast(1777517836)
2021-03-11 13:07:12,723 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:12,732 [main:56] - replacing (bLong[(bFloat).size.countLeadingZeroBits()]--, Long)
2021-03-11 13:07:12,734 [main:38] - replacing bLong[(bFloat).size.countLeadingZeroBits()]-- Long
2021-03-11 13:07:12,734 [main:42] - Getting value of type Long
2021-03-11 13:07:12,869 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:12,870 [main:46] - GENERATED VALUE OF TYPE Long = -7804551646459638062
2021-03-11 13:07:12,870 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:13,021 [main:55] - randomType = Boolean?
2021-03-11 13:07:13,155 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:07:13,206 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:07:13,350 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:07:13,353 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:07:13,495 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:13,497 [main:66] - Generated call from random type = (false)?.compareTo(true).div(8007447791325229903)
2021-03-11 13:07:13,497 [main:94] - GETTING Long from Long
2021-03-11 13:07:13,532 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2e8e0d1d]]
2021-03-11 13:07:13,532 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:07:13,533 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2e8e0d1d]
2021-03-11 13:07:13,676 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:13,678 [main:105] - GENERATED CALL = (aLong[0]--).toShort().minus(9159833181860504396)
2021-03-11 13:07:13,678 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public fun kotlin.Long.coerceAtMost(maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@491cf48c]]
2021-03-11 13:07:13,678 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:13,678 [main:137] - GENERATING call of type public fun kotlin.Long.coerceAtMost(maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@491cf48c]
2021-03-11 13:07:13,825 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:13,827 [main:105] - GENERATED CALL = (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
2021-03-11 13:07:13,827 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]]
2021-03-11 13:07:13,827 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:07:13,827 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:07:13,997 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:13,999 [main:105] - GENERATED CALL = (aLong[0]--).toShort().div(-7974586988220741189)
2021-03-11 13:07:13,999 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]]
2021-03-11 13:07:13,999 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:13,999 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2d5aa564]
2021-03-11 13:07:14,136 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:14,137 [main:105] - GENERATED CALL = (aLong[0]--).toInt().times(8243480830196662287)
2021-03-11 13:07:14,137 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]]
2021-03-11 13:07:14,137 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:14,138 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:07:14,271 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:14,273 [main:105] - GENERATED CALL = (aLong[0]--).toInt().div(1118171517510156146)
2021-03-11 13:07:14,273 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3], public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]]
2021-03-11 13:07:14,273 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5cfee0c3]
2021-03-11 13:07:14,434 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:07:14,436 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:07:14,436 [main:105] - GENERATED CALL = (aLong[0]--).div(0.8096834855919329).toLong()
2021-03-11 13:07:14,436 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4baecbad]]
2021-03-11 13:07:14,436 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:14,436 [main:137] - GENERATING call of type public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4baecbad]
2021-03-11 13:07:14,437 [main:105] - GENERATED CALL = (aLong[0]--).toLong().inv()
2021-03-11 13:07:14,437 [main:101] - Case = [public fun kotlin.Long.coerceIn(minimumValue: kotlin.Long, maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5df68f70]]
2021-03-11 13:07:14,437 [main:137] - GENERATING call of type public fun kotlin.Long.coerceIn(minimumValue: kotlin.Long, maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5df68f70]
2021-03-11 13:07:14,585 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:14,725 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:14,727 [main:105] - GENERATED CALL = (aLong[0]--).coerceIn(-4089808842963034435, -280446030903714893)
2021-03-11 13:07:14,727 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]]
2021-03-11 13:07:14,727 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:07:14,727 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:07:14,727 [main:105] - GENERATED CALL = (aLong[0]--).toFloat().toLong()
2021-03-11 13:07:14,727 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@40045f23]]
2021-03-11 13:07:14,727 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:14,727 [main:137] - GENERATING call of type public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@40045f23]
2021-03-11 13:07:14,870 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:14,872 [main:105] - GENERATED CALL = (aLong[0]--).toLong().coerceAtLeast(2387857562586725060)
2021-03-11 13:07:14,872 [main:63] - replacement of bLong[(bFloat).size.countLeadingZeroBits()]-- of type Long is (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
2021-03-11 13:07:15,009 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:15,010 [main:66] - Compilation checking started
2021-03-11 13:07:15,533 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf(1)
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:15,543 [main:56] - replacing (byteArrayOf(1), ByteArray)
2021-03-11 13:07:15,545 [main:38] - replacing byteArrayOf(1) ByteArray
2021-03-11 13:07:15,545 [main:42] - Getting value of type ByteArray
2021-03-11 13:07:15,685 [main:302] - generating value of type = ByteArray false depth = 0
2021-03-11 13:07:15,832 [main:43] - GENERATING CALL OF fun ByteArray(size: kotlin.Int): ByteArray = TODO()
2021-03-11 13:07:15,834 [main:61] - WITHOUT TYPE PARAMS = fun ByteArray(size: kotlin.Int): ByteArray = TODO()
2021-03-11 13:07:16,133 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:07:16,135 [main:95] - GENERATED = ByteArray(-914120520)
2021-03-11 13:07:16,135 [main:46] - GENERATED VALUE OF TYPE ByteArray = ByteArray(-914120520)
2021-03-11 13:07:16,135 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:16,139 [main:55] - randomType = Short
2021-03-11 13:07:16,289 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:07:16,327 [main:94] - GETTING ByteArray from Byte
2021-03-11 13:07:16,363 [main:94] - GETTING ByteArray from Double
2021-03-11 13:07:16,397 [main:94] - GETTING ByteArray from Long
2021-03-11 13:07:16,434 [main:94] - GETTING ByteArray from Byte
2021-03-11 13:07:16,434 [main:94] - GETTING ByteArray from Short
2021-03-11 13:07:16,472 [main:94] - GETTING ByteArray from Int
2021-03-11 13:07:16,509 [main:94] - GETTING ByteArray from Long
2021-03-11 13:07:16,509 [main:94] - GETTING ByteArray from Byte
2021-03-11 13:07:16,510 [main:94] - GETTING ByteArray from Float
2021-03-11 13:07:16,546 [main:94] - GETTING ByteArray from Array<Long>
2021-03-11 13:07:16,558 [main:101] - Case = [public fun kotlin.Array<out kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d16787e]]
2021-03-11 13:07:16,558 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d16787e]
2021-03-11 13:07:16,558 [main:105] - GENERATED CALL = (aLong).toByteArray()
2021-03-11 13:07:16,558 [main:63] - replacement of byteArrayOf(1) of type ByteArray is (aLong).toByteArray()
2021-03-11 13:07:16,702 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:16,703 [main:66] - Compilation checking started
2021-03-11 13:07:17,117 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = (aLong).toByteArray()
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:17,127 [main:56] - replacing (bDouble, DoubleArray)
2021-03-11 13:07:17,127 [main:38] - replacing bDouble DoubleArray
2021-03-11 13:07:17,127 [main:42] - Getting value of type DoubleArray
2021-03-11 13:07:17,268 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:07:17,415 [main:43] - GENERATING CALL OF fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:07:17,418 [main:61] - WITHOUT TYPE PARAMS = fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:07:17,563 [main:302] - generating value of type = Double true depth = 3
2021-03-11 13:07:17,565 [main:95] - GENERATED = doubleArrayOf(0.14211381548926505)
2021-03-11 13:07:17,565 [main:46] - GENERATED VALUE OF TYPE DoubleArray = doubleArrayOf(0.14211381548926505)
2021-03-11 13:07:17,565 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:17,569 [main:55] - randomType = UInt
2021-03-11 13:07:17,710 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:07:17,742 [main:94] - GETTING DoubleArray from ByteArray
2021-03-11 13:07:17,752 [main:94] - GETTING DoubleArray from Int
2021-03-11 13:07:17,787 [main:94] - GETTING DoubleArray from Array<Byte>
2021-03-11 13:07:17,797 [main:101] - Case = [public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]]
2021-03-11 13:07:17,797 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]
2021-03-11 13:07:17,798 [main:105] - GENERATED CALL = (aByte).toDoubleArray()
2021-03-11 13:07:17,798 [main:63] - replacement of bDouble of type DoubleArray is doubleArrayOf(0.14211381548926505)
2021-03-11 13:07:17,940 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:07:17,950 [main:56] - replacing (1, Byte)
2021-03-11 13:07:17,951 [main:38] - replacing 1 Byte
2021-03-11 13:07:17,951 [main:42] - Getting value of type Byte
2021-03-11 13:07:18,092 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:18,094 [main:46] - GENERATED VALUE OF TYPE Byte = -79
2021-03-11 13:07:18,094 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:18,097 [main:55] - randomType = UInt
2021-03-11 13:07:18,282 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:07:18,311 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@6c058afa]
2021-03-11 13:07:18,311 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@52278bb2]
2021-03-11 13:07:18,311 [main:66] - Generated call from random type = (1930521701.toUInt()).toUShort().toByte()
2021-03-11 13:07:18,312 [main:94] - GETTING Byte from Array<Int>
2021-03-11 13:07:18,321 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:07:18,322 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:07:18,322 [main:105] - GENERATED CALL = (aInt).size.toByte()
2021-03-11 13:07:18,322 [main:63] - replacement of 1 of type Byte is (1930521701.toUInt()).toUShort().toByte()
2021-03-11 13:07:18,467 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:18,467 [main:66] - Compilation checking started
2021-03-11 13:07:18,980 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:18,990 [main:56] - replacing ((bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++, Int)
2021-03-11 13:07:18,991 [main:38] - replacing (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++ Int
2021-03-11 13:07:18,991 [main:42] - Getting value of type Int
2021-03-11 13:07:19,134 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:19,136 [main:46] - GENERATED VALUE OF TYPE Int = -1899281381
2021-03-11 13:07:19,136 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:19,302 [main:55] - randomType = Sequence<UInt>
2021-03-11 13:07:19,302 [main:94] - GETTING Int from Int
2021-03-11 13:07:19,352 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 13:07:19,352 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:07:19,496 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:19,498 [main:105] - GENERATED CALL = (aInt[0]--).compareTo(-1066729615).absoluteValue
2021-03-11 13:07:19,498 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:07:19,498 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:07:19,642 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:19,644 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:07:19,644 [main:105] - GENERATED CALL = (aInt[0]--).compareTo(1366460461).unaryPlus()
2021-03-11 13:07:19,644 [main:101] - Case = [public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:07:19,644 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:07:19,788 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:19,790 [main:105] - GENERATED CALL = (aInt[0]--).times(-23)
2021-03-11 13:07:19,790 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@5f449f3f]]
2021-03-11 13:07:19,790 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:07:19,929 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:19,931 [main:105] - GENERATED CALL = (aInt[0]--).div(1364929325918338625).sign
2021-03-11 13:07:19,931 [main:101] - Case = [public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:07:19,931 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:07:20,074 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:20,076 [main:105] - GENERATED CALL = (aInt[0]--).coerceAtLeast(-1098285237)
2021-03-11 13:07:20,076 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:07:20,076 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:20,076 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:07:20,223 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:20,225 [main:105] - GENERATED CALL = (aInt[0]--).toInt().xor(-63569759)
2021-03-11 13:07:20,225 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 13:07:20,225 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:20,225 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:07:20,369 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:20,370 [main:105] - GENERATED CALL = (aInt[0]--).toInt().minus(27)
2021-03-11 13:07:20,371 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@5f449f3f]]
2021-03-11 13:07:20,371 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:20,371 [main:105] - GENERATED CALL = (aInt[0]--).toLong().sign
2021-03-11 13:07:20,371 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978], public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]]
2021-03-11 13:07:20,371 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:07:20,371 [main:137] - GENERATING call of type public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]
2021-03-11 13:07:20,371 [main:105] - GENERATED CALL = (aInt[0]--).toChar().toInt()
2021-03-11 13:07:20,371 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:07:20,371 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:07:20,512 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:20,513 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:07:20,656 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:20,657 [main:105] - GENERATED CALL = (aInt[0]--).compareTo(-1108785345).compareTo(-44)
2021-03-11 13:07:20,658 [main:63] - replacement of (bInt).sliceArray(List<Int>(165157730, {a: Int -> 142550443}))[(aDouble[0]++).toInt().plus(31)]++ of type Int is -1899281381
2021-03-11 13:07:20,801 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 13:07:20,801 [main:66] - Compilation checking started
2021-03-11 13:07:21,284 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:21,294 [main:56] - replacing (arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)), Array<Int>)
2021-03-11 13:07:21,295 [main:38] - replacing arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) Array<Int>
2021-03-11 13:07:21,295 [main:42] - Getting value of type Array<Int>
2021-03-11 13:07:21,433 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:07:21,572 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Int): Array<Int> = TODO()
2021-03-11 13:07:21,574 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Int): Array<Int> = TODO()
2021-03-11 13:07:22,001 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:07:22,003 [main:302] - generating value of type = Function1<Int, Int> false depth = 3
2021-03-11 13:07:22,004 [main:302] - generating value of type = Int true depth = 4
2021-03-11 13:07:22,006 [main:95] - GENERATED = Array<Int>(969595510, {a: Int -> -245846027})
2021-03-11 13:07:22,006 [main:46] - GENERATED VALUE OF TYPE Array<Int> = Array<Int>(969595510, {a: Int -> -245846027})
2021-03-11 13:07:22,006 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:22,011 [main:55] - randomType = Int
2021-03-11 13:07:22,143 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:22,186 [main:94] - GETTING Array<Int> from ByteArray
2021-03-11 13:07:22,198 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:07:22,230 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:07:22,259 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:07:22,287 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:07:22,288 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:07:22,316 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:07:22,317 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:07:22,318 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:07:22,319 [main:94] - GETTING Array<Int> from Array<Short>
2021-03-11 13:07:22,330 [main:63] - replacement of arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) of type Array<Int> is aShort
2021-03-11 13:07:22,460 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:07:22,461 [main:66] - Compilation checking started
2021-03-11 13:07:22,824 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = aShort
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()]) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:22,834 [main:56] - replacing (bShort, ShortArray)
2021-03-11 13:07:22,834 [main:38] - replacing bShort ShortArray
2021-03-11 13:07:22,834 [main:42] - Getting value of type ShortArray
2021-03-11 13:07:22,971 [main:302] - generating value of type = ShortArray false depth = 0
2021-03-11 13:07:23,150 [main:43] - GENERATING CALL OF fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:07:23,153 [main:61] - WITHOUT TYPE PARAMS = fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:07:23,296 [main:302] - generating value of type = Short true depth = 3
2021-03-11 13:07:23,298 [main:95] - GENERATED = shortArrayOf(5698)
2021-03-11 13:07:23,298 [main:46] - GENERATED VALUE OF TYPE ShortArray = shortArrayOf(5698)
2021-03-11 13:07:23,298 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:23,302 [main:55] - randomType = String
2021-03-11 13:07:23,438 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:07:23,463 [main:94] - GETTING ShortArray from Float
2021-03-11 13:07:23,491 [main:94] - GETTING ShortArray from Int
2021-03-11 13:07:23,521 [main:94] - GETTING ShortArray from Double
2021-03-11 13:07:23,549 [main:94] - GETTING ShortArray from Float
2021-03-11 13:07:23,550 [main:94] - GETTING ShortArray from Array<Double>
2021-03-11 13:07:23,561 [main:101] - Case = [public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]]
2021-03-11 13:07:23,561 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]
2021-03-11 13:07:23,561 [main:105] - GENERATED CALL = (aDouble).toShortArray()
2021-03-11 13:07:23,561 [main:63] - replacement of bShort of type ShortArray is shortArrayOf(5698)
2021-03-11 13:07:23,702 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:07:23,712 [main:56] - replacing ((aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()], Boolean)
2021-03-11 13:07:23,714 [main:38] - replacing (aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()] Boolean
2021-03-11 13:07:23,714 [main:42] - Getting value of type Boolean
2021-03-11 13:07:23,858 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:07:23,860 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 13:07:23,860 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:24,013 [main:55] - randomType = HashMap<Byte, Double>
2021-03-11 13:07:24,144 [main:302] - generating value of type = HashMap<Byte, Double> false depth = 0
2021-03-11 13:07:24,294 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(): HashMap<Byte, Double> = TODO()
2021-03-11 13:07:24,296 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(): HashMap<Byte, Double> = TODO()
2021-03-11 13:07:24,438 [main:95] - GENERATED = hashMapOf<Byte, Double>()
2021-03-11 13:07:24,532 [main:137] - GENERATING call of type public open fun containsValue(value: kotlin.Double): kotlin.Boolean defined in kotlin.collections.HashMap[DeserializedSimpleFunctionDescriptor@6e3cd553]
2021-03-11 13:07:24,665 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:07:24,667 [main:66] - Generated call from random type = (hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)
2021-03-11 13:07:24,667 [main:63] - replacement of (aShort).get(-1236663757).plus(0.5978920652696913) != (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()] of type Boolean is (hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)
2021-03-11 13:07:24,809 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:24,809 [main:66] - Compilation checking started
2021-03-11 13:07:25,400 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:25,411 [main:56] - replacing (aLong, Array<Long>)
2021-03-11 13:07:25,411 [main:38] - replacing aLong Array<Long>
2021-03-11 13:07:25,411 [main:42] - Getting value of type Array<Long>
2021-03-11 13:07:25,549 [main:302] - generating value of type = Array<Long> false depth = 0
2021-03-11 13:07:25,689 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Long): Array<Long> = TODO()
2021-03-11 13:07:25,691 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Long): Array<Long> = TODO()
2021-03-11 13:07:25,829 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:07:25,831 [main:95] - GENERATED = arrayOf<Long>(8215191412766285035)
2021-03-11 13:07:25,831 [main:46] - GENERATED VALUE OF TYPE Array<Long> = arrayOf<Long>(8215191412766285035)
2021-03-11 13:07:25,831 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:25,836 [main:55] - randomType = UByte
2021-03-11 13:07:25,973 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:07:26,016 [main:94] - GETTING Array<Long> from Float
2021-03-11 13:07:26,066 [main:94] - GETTING Array<Long> from Double
2021-03-11 13:07:26,099 [main:94] - GETTING Array<Long> from Array<Float>
2021-03-11 13:07:26,110 [main:63] - replacement of aLong of type Array<Long> is aFloat
2021-03-11 13:07:26,244 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:07:26,254 [main:56] - replacing (bShort[0], Short)
2021-03-11 13:07:26,254 [main:38] - replacing bShort[0] Short
2021-03-11 13:07:26,254 [main:42] - Getting value of type Short
2021-03-11 13:07:26,387 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:07:26,388 [main:46] - GENERATED VALUE OF TYPE Short = -22985
2021-03-11 13:07:26,388 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:26,538 [main:55] - randomType = Long?
2021-03-11 13:07:26,690 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:26,743 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:07:26,743 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:07:26,743 [main:66] - Generated call from random type = (-5110389425548703722)?.toDouble().toShort()
2021-03-11 13:07:26,744 [main:94] - GETTING Short from Float
2021-03-11 13:07:26,776 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]]
2021-03-11 13:07:26,776 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:26,776 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]
2021-03-11 13:07:26,776 [main:105] - GENERATED CALL = (bFloat[0]++).toShort().inv()
2021-03-11 13:07:26,776 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]]
2021-03-11 13:07:26,776 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:07:26,776 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:07:26,776 [main:105] - GENERATED CALL = (bFloat[0]++).toLong().toShort()
2021-03-11 13:07:26,776 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]]
2021-03-11 13:07:26,776 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:26,776 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeLowestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@74b19f99]
2021-03-11 13:07:26,776 [main:105] - GENERATED CALL = (bFloat[0]++).toShort().takeLowestOneBit()
2021-03-11 13:07:26,777 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:07:26,777 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:26,777 [main:105] - GENERATED CALL = (bFloat[0]++).toShort()
2021-03-11 13:07:26,777 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]]
2021-03-11 13:07:26,777 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:26,777 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]
2021-03-11 13:07:26,777 [main:105] - GENERATED CALL = (bFloat[0]++).toShort().toShort()
2021-03-11 13:07:26,777 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.or(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@6f857cd8]]
2021-03-11 13:07:26,777 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:26,777 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.or(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@6f857cd8]
2021-03-11 13:07:26,910 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:07:26,911 [main:105] - GENERATED CALL = (bFloat[0]++).toShort().or(10156)
2021-03-11 13:07:26,911 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.xor(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@461bb21c]]
2021-03-11 13:07:26,911 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:26,912 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.xor(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@461bb21c]
2021-03-11 13:07:27,044 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:07:27,046 [main:105] - GENERATED CALL = (bFloat[0]++).toShort().xor(-16872)
2021-03-11 13:07:27,046 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]]
2021-03-11 13:07:27,046 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:27,046 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]
2021-03-11 13:07:27,178 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:07:27,179 [main:105] - GENERATED CALL = (bFloat[0]++).toShort().coerceAtLeast(2860)
2021-03-11 13:07:27,180 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]]
2021-03-11 13:07:27,180 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:27,180 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateLeft(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5077a51b]
2021-03-11 13:07:27,312 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:27,313 [main:105] - GENERATED CALL = (bFloat[0]++).toShort().rotateLeft(-566210002)
2021-03-11 13:07:27,314 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]]
2021-03-11 13:07:27,314 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:27,314 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]
2021-03-11 13:07:27,448 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:27,450 [main:105] - GENERATED CALL = (bFloat[0]++).toShort().rotateRight(1982336983)
2021-03-11 13:07:27,450 [main:63] - replacement of bShort[0] of type Short is (bFloat[0]++).toShort()
2021-03-11 13:07:27,583 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:27,592 [main:56] - replacing (aInt, Array<Int>)
2021-03-11 13:07:27,592 [main:38] - replacing aInt Array<Int>
2021-03-11 13:07:27,592 [main:42] - Getting value of type Array<Int>
2021-03-11 13:07:27,724 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:07:27,857 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Int): Array<Int> = TODO()
2021-03-11 13:07:27,859 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Int): Array<Int> = TODO()
2021-03-11 13:07:28,034 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:07:28,036 [main:95] - GENERATED = arrayOf<Int>(-1966554165)
2021-03-11 13:07:28,036 [main:46] - GENERATED VALUE OF TYPE Array<Int> = arrayOf<Int>(-1966554165)
2021-03-11 13:07:28,036 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:28,180 [main:55] - randomType = Byte?
2021-03-11 13:07:28,318 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:28,351 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:07:28,382 [main:94] - GETTING Array<Int> from Short
2021-03-11 13:07:28,413 [main:94] - GETTING Array<Int> from FloatArray
2021-03-11 13:07:28,421 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:07:28,454 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:07:28,455 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:07:28,485 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:07:28,516 [main:94] - GETTING Array<Int> from ByteArray
2021-03-11 13:07:28,525 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:07:28,555 [main:94] - GETTING Array<Int> from Array<Byte>
2021-03-11 13:07:28,566 [main:63] - replacement of aInt of type Array<Int> is aByte
2021-03-11 13:07:28,700 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:07:28,709 [main:56] - replacing (Array<Int>(-1774323293, {a: Int -> -544864838})[0], Int)
2021-03-11 13:07:28,710 [main:38] - replacing Array<Int>(-1774323293, {a: Int -> -544864838})[0] Int
2021-03-11 13:07:28,710 [main:42] - Getting value of type Int
2021-03-11 13:07:28,841 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:28,843 [main:46] - GENERATED VALUE OF TYPE Int = -1685650789
2021-03-11 13:07:28,843 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:28,984 [main:55] - randomType = ULong
2021-03-11 13:07:29,114 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 13:07:29,144 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6903713b]
2021-03-11 13:07:29,144 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@10e873f1]
2021-03-11 13:07:29,144 [main:66] - Generated call from random type = (1331255100875550688.toULong()).toByte().unaryMinus()
2021-03-11 13:07:29,145 [main:94] - GETTING Int from Short
2021-03-11 13:07:29,175 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:07:29,175 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:07:29,306 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:29,307 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:07:29,308 [main:105] - GENERATED CALL = (aShort[0]++).div(-951196067122247295).countOneBits()
2021-03-11 13:07:29,308 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@5f449f3f]]
2021-03-11 13:07:29,308 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:07:29,437 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:29,438 [main:105] - GENERATED CALL = (aShort[0]++).div(5424241111905768119).sign
2021-03-11 13:07:29,438 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:07:29,438 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:29,438 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:07:29,439 [main:105] - GENERATED CALL = (aShort[0]++).toLong().countOneBits()
2021-03-11 13:07:29,439 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]]
2021-03-11 13:07:29,439 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:07:29,439 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]
2021-03-11 13:07:29,439 [main:105] - GENERATED CALL = (aShort[0]++).toDouble().roundToInt()
2021-03-11 13:07:29,439 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:07:29,439 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:29,439 [main:105] - GENERATED CALL = (aShort[0]++).toInt().sign
2021-03-11 13:07:29,439 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Char.code: kotlin.Int defined in kotlin[DeserializedPropertyDescriptor@3fb27dce]]
2021-03-11 13:07:29,439 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:07:29,439 [main:105] - GENERATED CALL = (aShort[0]++).toChar().code
2021-03-11 13:07:29,439 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]]
2021-03-11 13:07:29,439 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:07:29,439 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]
2021-03-11 13:07:29,568 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:29,570 [main:105] - GENERATED CALL = (aShort[0]++).toByte().rem(46)
2021-03-11 13:07:29,570 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:07:29,570 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:07:29,700 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:29,701 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:07:29,701 [main:105] - GENERATED CALL = (aShort[0]++).compareTo(-61).toInt()
2021-03-11 13:07:29,702 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:07:29,702 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:07:29,702 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:07:29,702 [main:105] - GENERATED CALL = (aShort[0]++).toFloat().toRawBits()
2021-03-11 13:07:29,702 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]]
2021-03-11 13:07:29,702 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:07:29,702 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]
2021-03-11 13:07:29,702 [main:105] - GENERATED CALL = (aShort[0]++).toFloat().toBits()
2021-03-11 13:07:29,702 [main:63] - replacement of Array<Int>(-1774323293, {a: Int -> -544864838})[0] of type Int is (aShort[0]++).toLong().countOneBits()
2021-03-11 13:07:29,831 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:29,831 [main:66] - Compilation checking started
2021-03-11 13:07:30,238 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    (aShort[0]++).toLong().countOneBits()++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:30,253 [main:56] - replacing (Array<Int>(1981781603, {a: Int -> 1300800566})[277920667], Int)
2021-03-11 13:07:30,255 [main:38] - replacing Array<Int>(1981781603, {a: Int -> 1300800566})[277920667] Int
2021-03-11 13:07:30,255 [main:42] - Getting value of type Int
2021-03-11 13:07:30,415 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:30,417 [main:46] - GENERATED VALUE OF TYPE Int = 846170473
2021-03-11 13:07:30,417 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:30,569 [main:55] - randomType = Float?
2021-03-11 13:07:30,704 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:07:30,737 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:30,737 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:07:30,867 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:30,869 [main:66] - Generated call from random type = (0.272295f)?.toInt().rotateLeft(-1190263280)
2021-03-11 13:07:30,869 [main:94] - GETTING Int from Int
2021-03-11 13:07:30,899 [main:101] - Case = [public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:07:30,899 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:07:30,899 [main:105] - GENERATED CALL = (aInt[0]++).toInt()
2021-03-11 13:07:30,899 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]]
2021-03-11 13:07:30,899 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:07:30,899 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]
2021-03-11 13:07:30,899 [main:105] - GENERATED CALL = (aInt[0]++).toByte().countLeadingZeroBits()
2021-03-11 13:07:30,899 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]]
2021-03-11 13:07:30,899 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:07:30,899 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:07:31,032 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:31,033 [main:105] - GENERATED CALL = (aInt[0]++).toShort().compareTo(73)
2021-03-11 13:07:31,033 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@674e1c07]]
2021-03-11 13:07:31,033 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:07:31,033 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@674e1c07]
2021-03-11 13:07:31,163 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:31,165 [main:105] - GENERATED CALL = (aInt[0]++).toByte().minus(102)
2021-03-11 13:07:31,165 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]]
2021-03-11 13:07:31,165 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:07:31,165 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]
2021-03-11 13:07:31,295 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:31,296 [main:105] - GENERATED CALL = (aInt[0]++).toShort().div(120)
2021-03-11 13:07:31,296 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]]
2021-03-11 13:07:31,296 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:07:31,296 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:07:31,426 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:31,427 [main:105] - GENERATED CALL = (aInt[0]++).toDouble().compareTo(-46)
2021-03-11 13:07:31,427 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111], public final val first: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@42e9ff13]]
2021-03-11 13:07:31,427 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1b6ed111]
2021-03-11 13:07:31,559 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:31,560 [main:105] - GENERATED CALL = (aInt[0]++).rangeTo(-101).first
2021-03-11 13:07:31,560 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]]
2021-03-11 13:07:31,560 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:31,560 [main:137] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3ea04bda]
2021-03-11 13:07:31,691 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:31,693 [main:105] - GENERATED CALL = (aInt[0]++).toInt().or(-1068132142)
2021-03-11 13:07:31,693 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:07:31,693 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:31,693 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:07:31,693 [main:105] - GENERATED CALL = (aInt[0]++).toInt().takeHighestOneBit()
2021-03-11 13:07:31,694 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 13:07:31,694 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:31,694 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:07:31,824 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:31,826 [main:105] - GENERATED CALL = (aInt[0]++).toInt().minus(-122)
2021-03-11 13:07:31,826 [main:63] - replacement of Array<Int>(1981781603, {a: Int -> 1300800566})[277920667] of type Int is (aInt[0]++).toShort().compareTo(73)
2021-03-11 13:07:31,958 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:31,958 [main:66] - Compilation checking started
2021-03-11 13:07:32,340 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>((false).compareTo(true).div(-5678225996434021006))
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (aInt[0]++).toShort().compareTo(73)--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:32,349 [main:56] - replacing (1, Short)
2021-03-11 13:07:32,349 [main:38] - replacing 1 Short
2021-03-11 13:07:32,350 [main:42] - Getting value of type Short
2021-03-11 13:07:32,480 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:07:32,482 [main:46] - GENERATED VALUE OF TYPE Short = 22072
2021-03-11 13:07:32,482 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:32,486 [main:55] - randomType = Double
2021-03-11 13:07:32,656 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:07:32,685 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:07:32,685 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]
2021-03-11 13:07:32,815 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:32,816 [main:66] - Generated call from random type = (0.21391761001955933).toShort().rotateRight(-334651759)
2021-03-11 13:07:32,816 [main:94] - GETTING Short from Short
2021-03-11 13:07:32,847 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]]
2021-03-11 13:07:32,847 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:07:32,847 [main:137] - GENERATING call of type public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@616fdaba]
2021-03-11 13:07:32,848 [main:105] - GENERATED CALL = (bShort[0]).toChar().toShort()
2021-03-11 13:07:32,848 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]]
2021-03-11 13:07:32,848 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:07:32,979 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:07:32,981 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:07:32,981 [main:105] - GENERATED CALL = (bShort[0]).div(0.6961552385000657).toShort()
2021-03-11 13:07:32,981 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], public final operator fun inc(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@37ca9861]]
2021-03-11 13:07:32,981 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:07:32,981 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@37ca9861]
2021-03-11 13:07:32,981 [main:105] - GENERATED CALL = (bShort[0]).toShort().inc()
2021-03-11 13:07:32,981 [main:101] - Case = [public fun kotlin.Short.coerceIn(minimumValue: kotlin.Short, maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725e09fb]]
2021-03-11 13:07:32,981 [main:137] - GENERATING call of type public fun kotlin.Short.coerceIn(minimumValue: kotlin.Short, maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725e09fb]
2021-03-11 13:07:33,110 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:07:33,242 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:07:33,243 [main:105] - GENERATED CALL = (bShort[0]).coerceIn(-32246, -10902)
2021-03-11 13:07:33,243 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]]
2021-03-11 13:07:33,243 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:33,243 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:07:33,243 [main:105] - GENERATED CALL = (bShort[0]).toInt().toShort()
2021-03-11 13:07:33,244 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:07:33,244 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:07:33,244 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:07:33,244 [main:105] - GENERATED CALL = (bShort[0]).toFloat().toShort()
2021-03-11 13:07:33,244 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]]
2021-03-11 13:07:33,244 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.inv(): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5ad75780]
2021-03-11 13:07:33,244 [main:105] - GENERATED CALL = (bShort[0]).inv()
2021-03-11 13:07:33,244 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]]
2021-03-11 13:07:33,244 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.takeHighestOneBit(): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@34ef28e0]
2021-03-11 13:07:33,244 [main:105] - GENERATED CALL = (bShort[0]).takeHighestOneBit()
2021-03-11 13:07:33,244 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]]
2021-03-11 13:07:33,244 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dfbaf7]
2021-03-11 13:07:33,244 [main:105] - GENERATED CALL = (bShort[0]).toShort()
2021-03-11 13:07:33,244 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]]
2021-03-11 13:07:33,244 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]
2021-03-11 13:07:33,373 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:33,375 [main:105] - GENERATED CALL = (bShort[0]).rotateRight(-973463620)
2021-03-11 13:07:33,375 [main:63] - replacement of 1 of type Short is (bShort[0]).takeHighestOneBit()
2021-03-11 13:07:33,504 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:33,513 [main:56] - replacing (bByte, ByteArray)
2021-03-11 13:07:33,513 [main:38] - replacing bByte ByteArray
2021-03-11 13:07:33,513 [main:42] - Getting value of type ByteArray
2021-03-11 13:07:33,642 [main:302] - generating value of type = ByteArray false depth = 0
2021-03-11 13:07:33,776 [main:43] - GENERATING CALL OF fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 13:07:33,778 [main:61] - WITHOUT TYPE PARAMS = fun byteArrayOf(elements: Byte): ByteArray = TODO()
2021-03-11 13:07:33,911 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 13:07:33,913 [main:95] - GENERATED = byteArrayOf(59)
2021-03-11 13:07:33,913 [main:46] - GENERATED VALUE OF TYPE ByteArray = byteArrayOf(59)
2021-03-11 13:07:33,913 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:34,060 [main:55] - randomType = LinkedHashSet<String>
2021-03-11 13:07:34,190 [main:302] - generating value of type = LinkedHashSet<String> false depth = 0
2021-03-11 13:07:34,325 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: String): LkedHashSet<Strg> = TODO()
2021-03-11 13:07:34,327 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: String): LkedHashSet<Strg> = TODO()
2021-03-11 13:07:34,462 [main:302] - generating value of type = String true depth = 3
2021-03-11 13:07:34,464 [main:95] - GENERATED = linkedSetOf<String>("zoqcm")
2021-03-11 13:07:34,584 [main:137] - GENERATING call of type public fun kotlin.collections.Collection<kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ca21186]
2021-03-11 13:07:34,585 [main:66] - Generated call from random type = (linkedSetOf<String>("zoqcm")).toByteArray()
2021-03-11 13:07:34,586 [main:94] - GETTING ByteArray from Byte
2021-03-11 13:07:34,616 [main:94] - GETTING ByteArray from Short
2021-03-11 13:07:34,647 [main:94] - GETTING ByteArray from Byte
2021-03-11 13:07:34,648 [main:94] - GETTING ByteArray from Float
2021-03-11 13:07:34,676 [main:94] - GETTING ByteArray from Array<Int>
2021-03-11 13:07:34,684 [main:101] - Case = [public fun kotlin.Array<out kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d16787e]]
2021-03-11 13:07:34,685 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Byte>.toByteArray(): kotlin.ByteArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7d16787e]
2021-03-11 13:07:34,685 [main:105] - GENERATED CALL = (aInt).toByteArray()
2021-03-11 13:07:34,685 [main:63] - replacement of bByte of type ByteArray is byteArrayOf(59)
2021-03-11 13:07:34,814 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:07:34,823 [main:56] - replacing (bLong, LongArray)
2021-03-11 13:07:34,823 [main:38] - replacing bLong LongArray
2021-03-11 13:07:34,823 [main:42] - Getting value of type LongArray
2021-03-11 13:07:34,953 [main:302] - generating value of type = LongArray false depth = 0
2021-03-11 13:07:35,086 [main:43] - GENERATING CALL OF fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:07:35,088 [main:61] - WITHOUT TYPE PARAMS = fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:07:35,225 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:07:35,227 [main:95] - GENERATED = longArrayOf(-7615989107795442975)
2021-03-11 13:07:35,227 [main:46] - GENERATED VALUE OF TYPE LongArray = longArrayOf(-7615989107795442975)
2021-03-11 13:07:35,227 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:35,373 [main:55] - randomType = Double?
2021-03-11 13:07:35,516 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:07:35,550 [main:94] - GETTING LongArray from Double
2021-03-11 13:07:35,581 [main:94] - GETTING LongArray from Int
2021-03-11 13:07:35,614 [main:94] - GETTING LongArray from Short
2021-03-11 13:07:35,646 [main:94] - GETTING LongArray from Float
2021-03-11 13:07:35,674 [main:94] - GETTING LongArray from Int
2021-03-11 13:07:35,675 [main:94] - GETTING LongArray from Int
2021-03-11 13:07:35,675 [main:94] - GETTING LongArray from Array<Float>
2021-03-11 13:07:35,686 [main:101] - Case = [public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]]
2021-03-11 13:07:35,686 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]
2021-03-11 13:07:35,686 [main:105] - GENERATED CALL = (aFloat).toLongArray()
2021-03-11 13:07:35,686 [main:63] - replacement of bLong of type LongArray is longArrayOf(-7615989107795442975)
2021-03-11 13:07:35,815 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:07:35,825 [main:56] - replacing (arrayOf<Long>((false).compareTo(true).div(-5678225996434021006)), Array<Long>)
2021-03-11 13:07:35,827 [main:38] - replacing arrayOf<Long>((false).compareTo(true).div(-5678225996434021006)) Array<Long>
2021-03-11 13:07:35,827 [main:42] - Getting value of type Array<Long>
2021-03-11 13:07:35,960 [main:302] - generating value of type = Array<Long> false depth = 0
2021-03-11 13:07:36,096 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Long): Array<Long> = TODO()
2021-03-11 13:07:36,099 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Long): Array<Long> = TODO()
2021-03-11 13:07:36,240 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:07:36,242 [main:95] - GENERATED = arrayOf<Long>(-6435637591053247787)
2021-03-11 13:07:36,242 [main:46] - GENERATED VALUE OF TYPE Array<Long> = arrayOf<Long>(-6435637591053247787)
2021-03-11 13:07:36,242 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:36,390 [main:55] - randomType = Collection<Int>
2021-03-11 13:07:36,391 [main:94] - GETTING Array<Long> from Array<Byte>
2021-03-11 13:07:36,405 [main:63] - replacement of arrayOf<Long>((false).compareTo(true).div(-5678225996434021006)) of type Array<Long> is arrayOf<Long>(-6435637591053247787)
2021-03-11 13:07:36,535 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:07:36,536 [main:66] - Compilation checking started
2021-03-11 13:07:37,035 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:37,045 [main:56] - replacing ((aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--, Int)
2021-03-11 13:07:37,046 [main:38] - replacing (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]-- Int
2021-03-11 13:07:37,046 [main:42] - Getting value of type Int
2021-03-11 13:07:37,217 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:37,219 [main:46] - GENERATED VALUE OF TYPE Int = -1011640329
2021-03-11 13:07:37,219 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:37,223 [main:55] - randomType = Byte
2021-03-11 13:07:37,367 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:37,414 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:37,415 [main:66] - Generated call from random type = (11).toInt().absoluteValue
2021-03-11 13:07:37,416 [main:94] - GETTING Int from Short
2021-03-11 13:07:37,454 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]]
2021-03-11 13:07:37,454 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:07:37,585 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:37,586 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:07:37,716 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:37,718 [main:105] - GENERATED CALL = (aShort[0]--).compareTo(18).shl(-389644531)
2021-03-11 13:07:37,718 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]]
2021-03-11 13:07:37,718 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@669c0c64]
2021-03-11 13:07:37,852 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:37,853 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@115b552c]
2021-03-11 13:07:37,854 [main:105] - GENERATED CALL = (aShort[0]--).div(746421832108799049).countLeadingZeroBits()
2021-03-11 13:07:37,854 [main:101] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1619ead0], public final val last: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@4d376558]]
2021-03-11 13:07:37,854 [main:137] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1619ead0]
2021-03-11 13:07:37,991 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:37,993 [main:105] - GENERATED CALL = (aShort[0]--).rangeTo(-63).last
2021-03-11 13:07:37,993 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1472d1ff]]
2021-03-11 13:07:37,993 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:07:37,993 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1472d1ff]
2021-03-11 13:07:37,994 [main:105] - GENERATED CALL = (aShort[0]--).toByte().unaryPlus()
2021-03-11 13:07:37,994 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:07:37,994 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:37,994 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:07:37,994 [main:105] - GENERATED CALL = (aShort[0]--).toInt().countOneBits()
2021-03-11 13:07:37,994 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]]
2021-03-11 13:07:37,994 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:07:37,994 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]
2021-03-11 13:07:37,994 [main:105] - GENERATED CALL = (aShort[0]--).toDouble().roundToInt()
2021-03-11 13:07:37,994 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]]
2021-03-11 13:07:37,994 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:07:37,994 [main:137] - GENERATING call of type public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@42f9c5cf]
2021-03-11 13:07:37,994 [main:105] - GENERATED CALL = (aShort[0]--).toChar().toInt()
2021-03-11 13:07:37,994 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:07:37,994 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:37,994 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:07:38,155 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:38,157 [main:105] - GENERATED CALL = (aShort[0]--).toInt().rotateRight(849945421)
2021-03-11 13:07:38,157 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]]
2021-03-11 13:07:38,157 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:07:38,302 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:38,304 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@170a158d]
2021-03-11 13:07:38,304 [main:105] - GENERATED CALL = (aShort[0]--).compareTo(42).dec()
2021-03-11 13:07:38,304 [main:101] - Case = [public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]]
2021-03-11 13:07:38,304 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:07:38,304 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@23fa2930]
2021-03-11 13:07:38,304 [main:105] - GENERATED CALL = (aShort[0]--).toShort().countLeadingZeroBits()
2021-03-11 13:07:38,304 [main:63] - replacement of (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]-- of type Int is (11).toInt().absoluteValue
2021-03-11 13:07:38,437 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:38,438 [main:66] - Compilation checking started
2021-03-11 13:07:38,820 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (11).toInt().absoluteValue
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:38,833 [main:56] - replacing (emptyArray<Byte>()[('蟖').toByte().rem(-28)], Byte)
2021-03-11 13:07:38,835 [main:38] - replacing emptyArray<Byte>()[('蟖').toByte().rem(-28)] Byte
2021-03-11 13:07:38,835 [main:42] - Getting value of type Byte
2021-03-11 13:07:38,967 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:38,969 [main:46] - GENERATED VALUE OF TYPE Byte = -3
2021-03-11 13:07:38,969 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:38,973 [main:55] - randomType = Char
2021-03-11 13:07:39,104 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:07:39,128 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:07:39,129 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]
2021-03-11 13:07:39,129 [main:66] - Generated call from random type = ('뚔').toByte().takeLowestOneBit()
2021-03-11 13:07:39,130 [main:94] - GETTING Byte from Array<Float>
2021-03-11 13:07:39,141 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@55e69343], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:07:39,141 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:07:39,141 [main:105] - GENERATED CALL = (aFloat).size.toByte()
2021-03-11 13:07:39,141 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@267bf28], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]]
2021-03-11 13:07:39,141 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@267bf28]
2021-03-11 13:07:39,271 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:39,272 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:07:39,273 [main:105] - GENERATED CALL = (aFloat).get(645818610).toByte()
2021-03-11 13:07:39,273 [main:63] - replacement of emptyArray<Byte>()[('蟖').toByte().rem(-28)] of type Byte is -3
2021-03-11 13:07:39,404 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 13:07:39,404 [main:66] - Compilation checking started
2021-03-11 13:07:39,809 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    -3--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:39,818 [main:56] - replacing (arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)), Array<Int>)
2021-03-11 13:07:39,820 [main:38] - replacing arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) Array<Int>
2021-03-11 13:07:39,820 [main:42] - Getting value of type Array<Int>
2021-03-11 13:07:39,960 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:07:40,096 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Int> = TODO()
2021-03-11 13:07:40,098 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Int> = TODO()
2021-03-11 13:07:40,234 [main:95] - GENERATED = enumValues<Int>()
2021-03-11 13:07:40,234 [main:46] - GENERATED VALUE OF TYPE Array<Int> = enumValues<Int>()
2021-03-11 13:07:40,234 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:40,523 [main:55] - randomType = Collection<UByte>
2021-03-11 13:07:40,524 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:07:40,555 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:07:40,585 [main:94] - GETTING Array<Int> from Short
2021-03-11 13:07:40,617 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:07:40,649 [main:94] - GETTING Array<Int> from Short
2021-03-11 13:07:40,650 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:07:40,651 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:07:40,680 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:07:40,712 [main:94] - GETTING Array<Int> from ByteArray
2021-03-11 13:07:40,722 [main:94] - GETTING Array<Int> from Short
2021-03-11 13:07:40,723 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:07:40,724 [main:94] - GETTING Array<Int> from Short
2021-03-11 13:07:40,724 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:07:40,725 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:07:40,726 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:07:40,727 [main:94] - GETTING Array<Int> from Array<Float>
2021-03-11 13:07:40,739 [main:63] - replacement of arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) of type Array<Int> is enumValues<Int>()
2021-03-11 13:07:40,868 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:07:40,868 [main:66] - Compilation checking started
2021-03-11 13:07:41,250 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = enumValues<Int>()
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]--
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:41,259 [main:56] - replacing (byteArrayOf(34)[(bByte).size.or(-1144148738)]--, Byte)
2021-03-11 13:07:41,261 [main:38] - replacing byteArrayOf(34)[(bByte).size.or(-1144148738)]-- Byte
2021-03-11 13:07:41,261 [main:42] - Getting value of type Byte
2021-03-11 13:07:41,397 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:41,398 [main:46] - GENERATED VALUE OF TYPE Byte = 38
2021-03-11 13:07:41,398 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:41,401 [main:55] - randomType = Char
2021-03-11 13:07:41,532 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:07:41,555 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:07:41,556 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@49ecd74f]
2021-03-11 13:07:41,556 [main:66] - Generated call from random type = ('ᬇ').toByte().inc()
2021-03-11 13:07:41,556 [main:94] - GETTING Byte from Byte
2021-03-11 13:07:41,585 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]]
2021-03-11 13:07:41,585 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:07:41,585 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:07:41,586 [main:105] - GENERATED CALL = (bByte[0]).toShort().toByte()
2021-03-11 13:07:41,586 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public open fun toByte(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@134162cc]]
2021-03-11 13:07:41,586 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:41,586 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@134162cc]
2021-03-11 13:07:41,586 [main:105] - GENERATED CALL = (bByte[0]).toByte().toByte()
2021-03-11 13:07:41,586 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]]
2021-03-11 13:07:41,586 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:41,586 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceAtLeast(minimumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@144bb0a5]
2021-03-11 13:07:41,716 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:41,718 [main:105] - GENERATED CALL = (bByte[0]).toByte().coerceAtLeast(-27)
2021-03-11 13:07:41,718 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]]
2021-03-11 13:07:41,718 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:41,719 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.takeLowestOneBit(): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@65c5e4f1]
2021-03-11 13:07:41,719 [main:105] - GENERATED CALL = (bByte[0]).toByte().takeLowestOneBit()
2021-03-11 13:07:41,719 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]]
2021-03-11 13:07:41,719 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:41,719 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]
2021-03-11 13:07:41,719 [main:105] - GENERATED CALL = (bByte[0]).toByte().inv()
2021-03-11 13:07:41,719 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]]
2021-03-11 13:07:41,719 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.and(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@735088ba]
2021-03-11 13:07:41,848 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:41,849 [main:105] - GENERATED CALL = (bByte[0]).and(-58)
2021-03-11 13:07:41,849 [main:101] - Case = [public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]]
2021-03-11 13:07:41,850 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]
2021-03-11 13:07:41,850 [main:105] - GENERATED CALL = (bByte[0]).dec()
2021-03-11 13:07:41,850 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]]
2021-03-11 13:07:41,850 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]
2021-03-11 13:07:41,850 [main:105] - GENERATED CALL = (bByte[0]).inv()
2021-03-11 13:07:41,850 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]]
2021-03-11 13:07:41,850 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:41,850 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]
2021-03-11 13:07:42,020 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:42,022 [main:105] - GENERATED CALL = (bByte[0]).toByte().or(-29)
2021-03-11 13:07:42,022 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]]
2021-03-11 13:07:42,022 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:42,022 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:07:42,022 [main:105] - GENERATED CALL = (bByte[0]).toLong().toByte()
2021-03-11 13:07:42,022 [main:63] - replacement of byteArrayOf(34)[(bByte).size.or(-1144148738)]-- of type Byte is byteArrayOf(34)[(bByte).size.or(-1144148738)]
2021-03-11 13:07:42,155 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(ARRAY_ACCESS_EXPRESSION)
2021-03-11 13:07:42,155 [main:66] - Compilation checking started
2021-03-11 13:07:42,642 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:42,657 [main:56] - replacing (aLong[(aShort[0]).toInt().shl(685653733)], Long)
2021-03-11 13:07:42,657 [main:38] - replacing aLong[(aShort[0]).toInt().shl(685653733)] Long
2021-03-11 13:07:42,657 [main:42] - Getting value of type Long
2021-03-11 13:07:42,795 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:42,797 [main:46] - GENERATED VALUE OF TYPE Long = 2461712234598076169
2021-03-11 13:07:42,797 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:42,940 [main:55] - randomType = Float?
2021-03-11 13:07:43,068 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:07:43,098 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:07:43,098 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@efa4745]
2021-03-11 13:07:43,231 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:43,233 [main:66] - Generated call from random type = (0.010668337f)?.toByte().minus(5851456392493208889)
2021-03-11 13:07:43,233 [main:94] - GETTING Long from Byte
2021-03-11 13:07:43,284 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Long.rotateLeft(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@1aef20d5]]
2021-03-11 13:07:43,284 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:43,284 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Long.rotateLeft(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@1aef20d5]
2021-03-11 13:07:43,421 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:43,422 [main:105] - GENERATED CALL = (bByte[0]).toLong().rotateLeft(911990479)
2021-03-11 13:07:43,422 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@5a2c59d]]
2021-03-11 13:07:43,422 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:07:43,423 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@5a2c59d]
2021-03-11 13:07:43,423 [main:105] - GENERATED CALL = (bByte[0]).toFloat().roundToLong()
2021-03-11 13:07:43,423 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Long.absoluteValue: kotlin.Long defined in kotlin.math[DeserializedPropertyDescriptor@317d957f]]
2021-03-11 13:07:43,423 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:43,423 [main:105] - GENERATED CALL = (bByte[0]).toLong().absoluteValue
2021-03-11 13:07:43,423 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@23c7f542]]
2021-03-11 13:07:43,423 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:43,423 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@23c7f542]
2021-03-11 13:07:43,423 [main:105] - GENERATED CALL = (bByte[0]).toLong().unaryPlus()
2021-03-11 13:07:43,423 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6a45febd]]
2021-03-11 13:07:43,423 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:43,423 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6a45febd]
2021-03-11 13:07:43,555 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:43,557 [main:105] - GENERATED CALL = (bByte[0]).toLong().ushr(982665293)
2021-03-11 13:07:43,557 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]]
2021-03-11 13:07:43,557 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:43,557 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]
2021-03-11 13:07:43,557 [main:105] - GENERATED CALL = (bByte[0]).toInt().toLong()
2021-03-11 13:07:43,557 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@508564d4]]
2021-03-11 13:07:43,557 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:07:43,557 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@508564d4]
2021-03-11 13:07:43,686 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:43,688 [main:105] - GENERATED CALL = (bByte[0]).toLong().rotateRight(1404731572)
2021-03-11 13:07:43,688 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]]
2021-03-11 13:07:43,688 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:43,688 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@41a96aa7]
2021-03-11 13:07:43,818 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:43,819 [main:105] - GENERATED CALL = (bByte[0]).toInt().div(1419432833640155694)
2021-03-11 13:07:43,819 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]]
2021-03-11 13:07:43,819 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:07:43,819 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:07:43,819 [main:105] - GENERATED CALL = (bByte[0]).toFloat().toLong()
2021-03-11 13:07:43,820 [main:101] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68], public final operator fun unaryMinus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@28246de9]]
2021-03-11 13:07:43,820 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@43117a68]
2021-03-11 13:07:43,954 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:43,956 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@28246de9]
2021-03-11 13:07:43,956 [main:105] - GENERATED CALL = (bByte[0]).div(-4856591463699768197).unaryMinus()
2021-03-11 13:07:43,956 [main:63] - replacement of aLong[(aShort[0]).toInt().shl(685653733)] of type Long is (0.010668337f)?.toByte().minus(5851456392493208889)
2021-03-11 13:07:44,084 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:44,093 [main:56] - replacing (Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]--, Int)
2021-03-11 13:07:44,094 [main:38] - replacing Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]-- Int
2021-03-11 13:07:44,094 [main:42] - Getting value of type Int
2021-03-11 13:07:44,223 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:44,225 [main:46] - GENERATED VALUE OF TYPE Int = -37109031
2021-03-11 13:07:44,225 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:44,228 [main:55] - randomType = Long
2021-03-11 13:07:44,357 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:07:44,387 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:44,388 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:07:44,521 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:44,522 [main:66] - Generated call from random type = (78190660510105222).toInt().minus(13)
2021-03-11 13:07:44,523 [main:94] - GETTING Int from Byte
2021-03-11 13:07:44,559 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:07:44,559 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 13:07:44,690 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:07:44,691 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:07:44,692 [main:105] - GENERATED CALL = (aByte[0]).div(0.774796f).toRawBits()
2021-03-11 13:07:44,692 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:07:44,692 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:44,692 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:07:44,821 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:44,823 [main:105] - GENERATED CALL = (aByte[0]).toInt().ushr(644998743)
2021-03-11 13:07:44,823 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@57941f83]]
2021-03-11 13:07:44,823 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:44,823 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@57941f83]
2021-03-11 13:07:44,823 [main:105] - GENERATED CALL = (aByte[0]).toByte().countOneBits()
2021-03-11 13:07:44,823 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]]
2021-03-11 13:07:44,823 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:44,823 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]
2021-03-11 13:07:44,953 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:44,954 [main:105] - GENERATED CALL = (aByte[0]).toByte().plus(-5)
2021-03-11 13:07:44,955 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 13:07:44,955 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:44,955 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:07:45,083 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:45,084 [main:105] - GENERATED CALL = (aByte[0]).toInt().minus(-87)
2021-03-11 13:07:45,085 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:07:45,085 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:07:45,216 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:45,218 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:07:45,348 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:45,350 [main:105] - GENERATED CALL = (aByte[0]).compareTo(106).coerceAtLeast(1470067919)
2021-03-11 13:07:45,350 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@513b2cda], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]]
2021-03-11 13:07:45,350 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@513b2cda]
2021-03-11 13:07:45,478 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:07:45,479 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:07:45,608 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:07:45,610 [main:105] - GENERATED CALL = (aByte[0]).equals("inydz").compareTo(false)
2021-03-11 13:07:45,610 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:07:45,610 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:07:45,739 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:45,740 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:07:45,870 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:45,872 [main:105] - GENERATED CALL = (aByte[0]).compareTo(0).rotateRight(1755500898)
2021-03-11 13:07:45,872 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2ecd32f2], public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]]
2021-03-11 13:07:45,872 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2ecd32f2]
2021-03-11 13:07:45,872 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]
2021-03-11 13:07:46,001 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:07:46,003 [main:105] - GENERATED CALL = (aByte[0]).toChar().minus('ϳ')
2021-03-11 13:07:46,003 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]]
2021-03-11 13:07:46,003 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:07:46,003 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]
2021-03-11 13:07:46,003 [main:105] - GENERATED CALL = (aByte[0]).toFloat().toInt()
2021-03-11 13:07:46,003 [main:63] - replacement of Array<Int>(1981781603, {a: Int -> 1300800566})[277920667]-- of type Int is (78190660510105222).toInt().minus(13)
2021-03-11 13:07:46,131 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:46,131 [main:66] - Compilation checking started
2021-03-11 13:07:46,619 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}"

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:46,629 [main:56] - replacing (aDouble, Array<Double>)
2021-03-11 13:07:46,629 [main:38] - replacing aDouble Array<Double>
2021-03-11 13:07:46,629 [main:42] - Getting value of type Array<Double>
2021-03-11 13:07:46,804 [main:302] - generating value of type = Array<Double> false depth = 0
2021-03-11 13:07:46,937 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Double> = TODO()
2021-03-11 13:07:46,940 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Double> = TODO()
2021-03-11 13:07:47,072 [main:95] - GENERATED = enumValues<Double>()
2021-03-11 13:07:47,072 [main:46] - GENERATED VALUE OF TYPE Array<Double> = enumValues<Double>()
2021-03-11 13:07:47,072 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:47,076 [main:55] - randomType = UInt
2021-03-11 13:07:47,205 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:07:47,232 [main:94] - GETTING Array<Double> from Long
2021-03-11 13:07:47,261 [main:94] - GETTING Array<Double> from Float
2021-03-11 13:07:47,290 [main:94] - GETTING Array<Double> from Double
2021-03-11 13:07:47,317 [main:94] - GETTING Array<Double> from Long
2021-03-11 13:07:47,318 [main:94] - GETTING Array<Double> from Byte
2021-03-11 13:07:47,348 [main:94] - GETTING Array<Double> from Long
2021-03-11 13:07:47,349 [main:94] - GETTING Array<Double> from Float
2021-03-11 13:07:47,350 [main:94] - GETTING Array<Double> from ShortArray
2021-03-11 13:07:47,360 [main:94] - GETTING Array<Double> from Long
2021-03-11 13:07:47,361 [main:94] - GETTING Array<Double> from Short
2021-03-11 13:07:47,392 [main:94] - GETTING Array<Double> from LongArray
2021-03-11 13:07:47,400 [main:94] - GETTING Array<Double> from Double
2021-03-11 13:07:47,401 [main:94] - GETTING Array<Double> from FloatArray
2021-03-11 13:07:47,410 [main:94] - GETTING Array<Double> from Byte
2021-03-11 13:07:47,411 [main:94] - GETTING Array<Double> from Float
2021-03-11 13:07:47,412 [main:94] - GETTING Array<Double> from DoubleArray
2021-03-11 13:07:47,421 [main:101] - Case = [public fun kotlin.DoubleArray.toTypedArray(): kotlin.Array<kotlin.Double> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65c9de88]]
2021-03-11 13:07:47,421 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.toTypedArray(): kotlin.Array<kotlin.Double> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65c9de88]
2021-03-11 13:07:47,421 [main:105] - GENERATED CALL = (bDouble).toTypedArray()
2021-03-11 13:07:47,421 [main:63] - replacement of aDouble of type Array<Double> is (bDouble).toTypedArray()
2021-03-11 13:07:47,550 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:47,559 [main:56] - replacing ("Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}", String)
2021-03-11 13:07:47,561 [main:38] - replacing "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}" String
2021-03-11 13:07:47,561 [main:42] - Getting value of type String
2021-03-11 13:07:47,693 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:07:47,695 [main:46] - GENERATED VALUE OF TYPE String = "mgeww"
2021-03-11 13:07:47,695 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:47,839 [main:55] - randomType = Int?
2021-03-11 13:07:47,971 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:48,005 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:07:48,006 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]
2021-03-11 13:07:48,006 [main:66] - Generated call from random type = (1173173913)?.toChar().uppercase()
2021-03-11 13:07:48,006 [main:94] - GETTING String from Double
2021-03-11 13:07:48,035 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:07:48,035 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:07:48,166 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:48,167 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:07:48,300 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:48,302 [main:105] - GENERATED CALL = (bDouble[0]--).compareTo(-114).toString(-1095572033)
2021-03-11 13:07:48,302 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]]
2021-03-11 13:07:48,302 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:07:48,302 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5a4ca676]
2021-03-11 13:07:48,434 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:07:48,437 [main:105] - GENERATED CALL = (bDouble[0]--).toChar().plus("mcxuw")
2021-03-11 13:07:48,437 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]]
2021-03-11 13:07:48,437 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:07:48,437 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7a419f6b]
2021-03-11 13:07:48,437 [main:105] - GENERATED CALL = (bDouble[0]--).toChar().uppercase()
2021-03-11 13:07:48,437 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]]
2021-03-11 13:07:48,437 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:07:48,438 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20eb4227]
2021-03-11 13:07:48,570 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:48,571 [main:105] - GENERATED CALL = (bDouble[0]--).toInt().toString(-1638495816)
2021-03-11 13:07:48,571 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]]
2021-03-11 13:07:48,571 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:07:48,571 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5fc4d474]
2021-03-11 13:07:48,700 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:48,701 [main:105] - GENERATED CALL = (bDouble[0]--).toShort().toString(-1344954447)
2021-03-11 13:07:48,702 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]]
2021-03-11 13:07:48,702 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:07:48,702 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69fa78ef]
2021-03-11 13:07:48,702 [main:105] - GENERATED CALL = (bDouble[0]--).toChar().titlecase()
2021-03-11 13:07:48,702 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]]
2021-03-11 13:07:48,702 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:07:48,702 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5380d100]
2021-03-11 13:07:48,829 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:48,831 [main:105] - GENERATED CALL = (bDouble[0]--).toByte().toString(479736549)
2021-03-11 13:07:48,831 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]]
2021-03-11 13:07:48,831 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:07:48,831 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@128ec32d]
2021-03-11 13:07:48,961 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:48,962 [main:105] - GENERATED CALL = (bDouble[0]--).toLong().toString(-1136416178)
2021-03-11 13:07:48,962 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]]
2021-03-11 13:07:48,963 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:07:48,963 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@78319847]
2021-03-11 13:07:48,963 [main:105] - GENERATED CALL = (bDouble[0]--).toChar().lowercase()
2021-03-11 13:07:48,963 [main:63] - replacement of "Failed post-increment Double: ${(bDouble[0]--).toFloat().plus(0.8087567477380319)} != ${(aShort[0]).toShort().minus(0.25776293954506724)}" of type String is (bDouble[0]--).toChar().titlecase()
2021-03-11 13:07:49,090 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:49,091 [main:66] - Compilation checking started
2021-03-11 13:07:49,569 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:49,579 [main:56] - replacing (bDouble, DoubleArray)
2021-03-11 13:07:49,580 [main:38] - replacing bDouble DoubleArray
2021-03-11 13:07:49,580 [main:42] - Getting value of type DoubleArray
2021-03-11 13:07:49,717 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:07:49,858 [main:43] - GENERATING CALL OF fun DoubleArray(size: kotlin.Int): DoubleArray = TODO()
2021-03-11 13:07:49,860 [main:61] - WITHOUT TYPE PARAMS = fun DoubleArray(size: kotlin.Int): DoubleArray = TODO()
2021-03-11 13:07:50,130 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:07:50,132 [main:95] - GENERATED = DoubleArray(249037571)
2021-03-11 13:07:50,132 [main:46] - GENERATED VALUE OF TYPE DoubleArray = DoubleArray(249037571)
2021-03-11 13:07:50,132 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:51,006 [main:55] - randomType = HashMap<LinkedHashMap<Short, Function1<List<Int>, Float?>>, HashSet<Double>>
2021-03-11 13:07:51,136 [main:302] - generating value of type = HashMap<LinkedHashMap<Short, Function1<List<Int>, Float?>>, HashSet<Double>> false depth = 0
2021-03-11 13:07:51,273 [main:43] - GENERATING CALL OF fun <K, V> HashMap(): HashMap<LinkedHashMap<Short, Function1<List<Int>, Float?>>, HashSet<Double>> = TODO()
2021-03-11 13:07:51,275 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> HashMap(): HashMap<LinkedHashMap<Short, Function1<List<Int>, Float?>>, HashSet<Double>> = TODO()
2021-03-11 13:07:51,462 [main:95] - GENERATED = HashMap<LinkedHashMap<Short, Function1<List<Int>, Float?>>, HashSet<Double>>()
2021-03-11 13:07:51,656 [main:137] - GENERATING call of type public fun kotlin.collections.Collection<kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c4fe25e]
2021-03-11 13:07:51,656 [main:66] - Generated call from random type = (HashMap<LinkedHashMap<Short, Function1<List<Int>, Float?>>, HashSet<Double>>()).values.toDoubleArray()
2021-03-11 13:07:51,656 [main:63] - replacement of bDouble of type DoubleArray is (HashMap<LinkedHashMap<Short, Function1<List<Int>, Float?>>, HashSet<Double>>()).values.toDoubleArray()
2021-03-11 13:07:51,787 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:51,787 [main:66] - Compilation checking started
2021-03-11 13:07:52,180 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf((bByte[0]--).toByte().compareTo(4))
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != (HashMap<LinkedHashMap<Short, Function1<List<Int>, Float?>>, HashSet<Double>>()).values.toDoubleArray()[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:07:52,189 [main:56] - replacing (aShort[(aLong[0]++).compareTo(-108).unaryPlus()], Byte)
2021-03-11 13:07:52,189 [main:38] - replacing aShort[(aLong[0]++).compareTo(-108).unaryPlus()] Byte
2021-03-11 13:07:52,189 [main:42] - Getting value of type Byte
2021-03-11 13:07:52,331 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:52,333 [main:46] - GENERATED VALUE OF TYPE Byte = -39
2021-03-11 13:07:52,333 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:52,337 [main:55] - randomType = Char
2021-03-11 13:07:52,476 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:07:52,495 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:07:52,495 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Byte defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7d4193a6]
2021-03-11 13:07:52,495 [main:66] - Generated call from random type = ('쳱').toByte().dec()
2021-03-11 13:07:52,496 [main:94] - GETTING Byte from DoubleArray
2021-03-11 13:07:52,504 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]]
2021-03-11 13:07:52,504 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:07:52,504 [main:105] - GENERATED CALL = (bDouble).size.toByte()
2021-03-11 13:07:52,505 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.DoubleArray[DeserializedSimpleFunctionDescriptor@7ae5a4ca], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:07:52,505 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.DoubleArray[DeserializedSimpleFunctionDescriptor@7ae5a4ca]
2021-03-11 13:07:52,636 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:52,637 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:07:52,637 [main:105] - GENERATED CALL = (bDouble).get(1240303532).toByte()
2021-03-11 13:07:52,638 [main:63] - replacement of aShort[(aLong[0]++).compareTo(-108).unaryPlus()] of type Byte is (bDouble).get(1240303532).toByte()
2021-03-11 13:07:52,775 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:52,785 [main:56] - replacing (bDouble, DoubleArray)
2021-03-11 13:07:52,785 [main:38] - replacing bDouble DoubleArray
2021-03-11 13:07:52,785 [main:42] - Getting value of type DoubleArray
2021-03-11 13:07:52,913 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:07:53,044 [main:43] - GENERATING CALL OF fun DoubleArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Double): DoubleArray = TODO()
2021-03-11 13:07:53,046 [main:61] - WITHOUT TYPE PARAMS = fun DoubleArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Double): DoubleArray = TODO()
2021-03-11 13:07:53,456 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:07:53,458 [main:302] - generating value of type = Function1<Int, Double> false depth = 3
2021-03-11 13:07:53,459 [main:302] - generating value of type = Double true depth = 4
2021-03-11 13:07:53,460 [main:95] - GENERATED = DoubleArray(-2006254290, {a: Int -> 0.9551548173632708})
2021-03-11 13:07:53,460 [main:46] - GENERATED VALUE OF TYPE DoubleArray = DoubleArray(-2006254290, {a: Int -> 0.9551548173632708})
2021-03-11 13:07:53,460 [main:49] - GENERATED IS CALL =true
2021-03-11 13:07:53,465 [main:55] - randomType = UShort
2021-03-11 13:07:53,592 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:07:53,620 [main:94] - GETTING DoubleArray from Double
2021-03-11 13:07:53,648 [main:94] - GETTING DoubleArray from Array<Float>
2021-03-11 13:07:53,658 [main:101] - Case = [public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]]
2021-03-11 13:07:53,658 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]
2021-03-11 13:07:53,659 [main:105] - GENERATED CALL = (aFloat).toDoubleArray()
2021-03-11 13:07:53,659 [main:63] - replacement of bDouble of type DoubleArray is (aFloat).toDoubleArray()
2021-03-11 13:07:53,789 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:53,798 [main:56] - replacing ((aByte).toByteArray()[(aShort[0]++).toByte().div(0)], Byte)
2021-03-11 13:07:53,798 [main:38] - replacing (aByte).toByteArray()[(aShort[0]++).toByte().div(0)] Byte
2021-03-11 13:07:53,798 [main:42] - Getting value of type Byte
2021-03-11 13:07:53,929 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:53,931 [main:46] - GENERATED VALUE OF TYPE Byte = 71
2021-03-11 13:07:53,931 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:53,935 [main:55] - randomType = Int
2021-03-11 13:07:54,067 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:54,100 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@67c65978]
2021-03-11 13:07:54,100 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:07:54,101 [main:66] - Generated call from random type = (1150653250).toChar().toByte()
2021-03-11 13:07:54,101 [main:94] - GETTING Byte from Byte
2021-03-11 13:07:54,132 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateLeft(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@5b08d322]]
2021-03-11 13:07:54,132 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:54,132 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateLeft(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@5b08d322]
2021-03-11 13:07:54,274 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:54,276 [main:105] - GENERATED CALL = (aByte[0]++).toByte().rotateLeft(-1878221670)
2021-03-11 13:07:54,276 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]]
2021-03-11 13:07:54,276 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:54,276 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]
2021-03-11 13:07:54,408 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:54,410 [main:105] - GENERATED CALL = (aByte[0]++).toByte().or(44)
2021-03-11 13:07:54,410 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]]
2021-03-11 13:07:54,410 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.or(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@18aea95f]
2021-03-11 13:07:54,539 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:54,541 [main:105] - GENERATED CALL = (aByte[0]++).or(15)
2021-03-11 13:07:54,541 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]]
2021-03-11 13:07:54,541 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:07:54,541 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:07:54,541 [main:105] - GENERATED CALL = (aByte[0]++).toShort().toByte()
2021-03-11 13:07:54,541 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]]
2021-03-11 13:07:54,541 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.inv(): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@150bb27f]
2021-03-11 13:07:54,541 [main:105] - GENERATED CALL = (aByte[0]++).inv()
2021-03-11 13:07:54,541 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:07:54,541 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]
2021-03-11 13:07:54,669 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:07:54,670 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:07:54,671 [main:105] - GENERATED CALL = (aByte[0]++).div(0.5165217072283854).toByte()
2021-03-11 13:07:54,671 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]]
2021-03-11 13:07:54,671 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:07:54,671 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]
2021-03-11 13:07:54,802 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:54,804 [main:105] - GENERATED CALL = (aByte[0]++).toByte().xor(44)
2021-03-11 13:07:54,804 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]]
2021-03-11 13:07:54,804 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:07:54,804 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:07:54,804 [main:105] - GENERATED CALL = (aByte[0]++).toDouble().toByte()
2021-03-11 13:07:54,804 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]]
2021-03-11 13:07:54,804 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Byte.xor(other: kotlin.Byte): kotlin.Byte defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@5a43f79d]
2021-03-11 13:07:54,932 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:54,933 [main:105] - GENERATED CALL = (aByte[0]++).xor(24)
2021-03-11 13:07:54,933 [main:101] - Case = [public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]]
2021-03-11 13:07:54,933 [main:137] - GENERATING call of type public fun kotlin.Byte.coerceIn(minimumValue: kotlin.Byte, maximumValue: kotlin.Byte): kotlin.Byte defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@741421e5]
2021-03-11 13:07:55,061 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:55,191 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:55,192 [main:105] - GENERATED CALL = (aByte[0]++).coerceIn(114, -78)
2021-03-11 13:07:55,192 [main:63] - replacement of (aByte).toByteArray()[(aShort[0]++).toByte().div(0)] of type Byte is (1150653250).toChar().toByte()
2021-03-11 13:07:55,321 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:55,330 [main:56] - replacing (0, Int)
2021-03-11 13:07:55,330 [main:38] - replacing 0 Int
2021-03-11 13:07:55,330 [main:42] - Getting value of type Int
2021-03-11 13:07:55,457 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:55,459 [main:46] - GENERATED VALUE OF TYPE Int = -520532016
2021-03-11 13:07:55,459 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:55,462 [main:55] - randomType = Byte
2021-03-11 13:07:55,589 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:55,622 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:07:55,751 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:55,752 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:07:55,889 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:55,891 [main:66] - Generated call from random type = (-4).compareTo(-99).shr(-1504295694)
2021-03-11 13:07:55,892 [main:94] - GETTING Int from DoubleArray
2021-03-11 13:07:55,902 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:07:55,902 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:07:56,033 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:56,035 [main:105] - GENERATED CALL = (bDouble).size.coerceAtLeast(1833552160)
2021-03-11 13:07:56,035 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:07:56,035 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:07:56,204 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:56,205 [main:105] - GENERATED CALL = (bDouble).size.rem(-92)
2021-03-11 13:07:56,205 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:07:56,205 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:07:56,206 [main:105] - GENERATED CALL = (bDouble).size.takeHighestOneBit()
2021-03-11 13:07:56,206 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]]
2021-03-11 13:07:56,206 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1acd302f]
2021-03-11 13:07:56,335 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:56,336 [main:105] - GENERATED CALL = (bDouble).size.div(-106)
2021-03-11 13:07:56,336 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.sumOf(selector: (kotlin.Double) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3281f7ab]]
2021-03-11 13:07:56,336 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.sumOf(selector: (kotlin.Double) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3281f7ab]
2021-03-11 13:07:56,465 [main:302] - generating value of type = Function1<Double, Int> false depth = 0
2021-03-11 13:07:56,466 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:07:56,468 [main:105] - GENERATED CALL = (bDouble).sumOf({a: Double -> -1438948290})
2021-03-11 13:07:56,468 [main:101] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun kotlin.DoubleArray.indexOf(element: kotlin.Double): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6143a41d]]
2021-03-11 13:07:56,468 [main:137] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun kotlin.DoubleArray.indexOf(element: kotlin.Double): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6143a41d]
2021-03-11 13:07:56,595 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:07:56,597 [main:105] - GENERATED CALL = (bDouble).indexOf(0.6402207021841569)
2021-03-11 13:07:56,597 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]]
2021-03-11 13:07:56,597 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@238c8a55]
2021-03-11 13:07:56,726 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:56,727 [main:105] - GENERATED CALL = (bDouble).size.rotateRight(76189247)
2021-03-11 13:07:56,727 [main:101] - Case = [public inline fun kotlin.DoubleArray.sumBy(selector: (kotlin.Double) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@42443dae]]
2021-03-11 13:07:56,727 [main:137] - GENERATING call of type public inline fun kotlin.DoubleArray.sumBy(selector: (kotlin.Double) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@42443dae]
2021-03-11 13:07:56,860 [main:302] - generating value of type = Function1<Double, Int> false depth = 0
2021-03-11 13:07:56,861 [main:302] - generating value of type = Int true depth = 1
2021-03-11 13:07:56,862 [main:105] - GENERATED CALL = (bDouble).sumBy({a: Double -> -1895897083})
2021-03-11 13:07:56,863 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:07:56,863 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:07:57,002 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:57,004 [main:105] - GENERATED CALL = (bDouble).size.rotateLeft(-854820047)
2021-03-11 13:07:57,004 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:07:57,004 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:07:57,131 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:07:57,133 [main:105] - GENERATED CALL = (bDouble).size.times(-48)
2021-03-11 13:07:57,133 [main:63] - replacement of 0 of type Int is (-4).compareTo(-99).shr(-1504295694)
2021-03-11 13:07:57,261 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:57,270 [main:56] - replacing (floatArrayOf(0.3158462f)[(aLong[0]).toInt().unaryMinus()], Float)
2021-03-11 13:07:57,270 [main:38] - replacing floatArrayOf(0.3158462f)[(aLong[0]).toInt().unaryMinus()] Float
2021-03-11 13:07:57,270 [main:42] - Getting value of type Float
2021-03-11 13:07:57,406 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:07:57,407 [main:46] - GENERATED VALUE OF TYPE Float = 0.7441094f
2021-03-11 13:07:57,407 [main:49] - GENERATED IS CALL =false
2021-03-11 13:07:57,411 [main:55] - randomType = UShort
2021-03-11 13:07:57,539 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:07:57,564 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@1e04383b]
2021-03-11 13:07:57,564 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:07:57,696 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:07:57,697 [main:66] - Generated call from random type = (23799.toUShort()).toLong().div(0.1695056f)
2021-03-11 13:07:57,698 [main:94] - GETTING Float from DoubleArray
2021-03-11 13:07:57,709 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]]
2021-03-11 13:07:57,709 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 13:07:57,836 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:07:57,838 [main:105] - GENERATED CALL = (bDouble).size.minus(0.4625203f)
2021-03-11 13:07:57,838 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:07:57,838 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:07:57,838 [main:105] - GENERATED CALL = (bDouble).size.toFloat()
2021-03-11 13:07:57,838 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.maxOf(selector: (kotlin.Double) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2903767f]]
2021-03-11 13:07:57,838 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.maxOf(selector: (kotlin.Double) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2903767f]
2021-03-11 13:07:57,966 [main:302] - generating value of type = Function1<Double, Float> false depth = 0
2021-03-11 13:07:57,967 [main:302] - generating value of type = Float true depth = 1
2021-03-11 13:07:57,969 [main:105] - GENERATED CALL = (bDouble).maxOf({a: Double -> 0.8560674f})
2021-03-11 13:07:57,969 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]]
2021-03-11 13:07:57,969 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:07:58,098 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:07:58,100 [main:105] - GENERATED CALL = (bDouble).size.div(0.7205027f)
2021-03-11 13:07:58,100 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]]
2021-03-11 13:07:58,100 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@62b2e31b]
2021-03-11 13:07:58,234 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:07:58,236 [main:105] - GENERATED CALL = (bDouble).size.rem(0.43975234f)
2021-03-11 13:07:58,236 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]]
2021-03-11 13:07:58,236 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]
2021-03-11 13:07:58,365 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:07:58,367 [main:105] - GENERATED CALL = (bDouble).size.plus(0.71106887f)
2021-03-11 13:07:58,367 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.DoubleArray[DeserializedSimpleFunctionDescriptor@7ae5a4ca], public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]]
2021-03-11 13:07:58,367 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.DoubleArray[DeserializedSimpleFunctionDescriptor@7ae5a4ca]
2021-03-11 13:07:58,495 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:07:58,496 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:07:58,497 [main:105] - GENERATED CALL = (bDouble).get(-479655589).toFloat()
2021-03-11 13:07:58,497 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.minOf(selector: (kotlin.Double) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c62af60]]
2021-03-11 13:07:58,497 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.minOf(selector: (kotlin.Double) -> kotlin.Float): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7c62af60]
2021-03-11 13:07:58,627 [main:302] - generating value of type = Function1<Double, Float> false depth = 0
2021-03-11 13:07:58,628 [main:302] - generating value of type = Float true depth = 1
2021-03-11 13:07:58,630 [main:105] - GENERATED CALL = (bDouble).minOf({a: Double -> 0.30017668f})
2021-03-11 13:07:58,630 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.DoubleArray[DeserializedPropertyDescriptor@44e2d573], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]]
2021-03-11 13:07:58,630 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:07:58,758 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:07:58,759 [main:105] - GENERATED CALL = (bDouble).size.times(0.58970183f)
2021-03-11 13:07:58,759 [main:63] - replacement of floatArrayOf(0.3158462f)[(aLong[0]).toInt().unaryMinus()] of type Float is (bDouble).size.plus(0.71106887f)
2021-03-11 13:07:58,894 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:07:58,903 [main:56] - replacing (aByte, Array<Byte>)
2021-03-11 13:07:58,903 [main:38] - replacing aByte Array<Byte>
2021-03-11 13:07:58,903 [main:42] - Getting value of type Array<Byte>
2021-03-11 13:07:59,036 [main:302] - generating value of type = Array<Byte> false depth = 0
2021-03-11 13:07:59,173 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Byte> = TODO()
2021-03-11 13:07:59,175 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Byte> = TODO()
2021-03-11 13:07:59,311 [main:95] - GENERATED = enumValues<Byte>()
2021-03-11 13:07:59,311 [main:46] - GENERATED VALUE OF TYPE Array<Byte> = enumValues<Byte>()
2021-03-11 13:07:59,311 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:00,036 [main:55] - randomType = LinkedHashMap<HashMap<Float?, Long>?, Byte?>
2021-03-11 13:08:00,167 [main:302] - generating value of type = LinkedHashMap<HashMap<Float?, Long>?, Byte?> false depth = 0
2021-03-11 13:08:00,302 [main:43] - GENERATING CALL OF fun <K, V> LinkedHashMap(): LinkedHashMap<HashMap<Float?, Long>?, Byte?> = TODO()
2021-03-11 13:08:00,304 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> LinkedHashMap(): LinkedHashMap<HashMap<Float?, Long>?, Byte?> = TODO()
2021-03-11 13:08:00,443 [main:95] - GENERATED = LinkedHashMap<HashMap<Float?, Long>?, Byte?>()
2021-03-11 13:08:00,594 [main:94] - GETTING Array<Byte> from DoubleArray
2021-03-11 13:08:00,603 [main:94] - GETTING Array<Byte> from Double
2021-03-11 13:08:00,632 [main:94] - GETTING Array<Byte> from Float
2021-03-11 13:08:00,662 [main:94] - GETTING Array<Byte> from Long
2021-03-11 13:08:00,741 [main:94] - GETTING Array<Byte> from Long
2021-03-11 13:08:00,742 [main:94] - GETTING Array<Byte> from Int
2021-03-11 13:08:00,777 [main:94] - GETTING Array<Byte> from Int
2021-03-11 13:08:00,778 [main:94] - GETTING Array<Byte> from Array<Int>
2021-03-11 13:08:00,787 [main:63] - replacement of aByte of type Array<Byte> is enumValues<Byte>()
2021-03-11 13:08:00,922 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:08:00,932 [main:56] - replacing (0, Int)
2021-03-11 13:08:00,932 [main:38] - replacing 0 Int
2021-03-11 13:08:00,932 [main:42] - Getting value of type Int
2021-03-11 13:08:01,065 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:01,067 [main:46] - GENERATED VALUE OF TYPE Int = 532019902
2021-03-11 13:08:01,067 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:01,070 [main:55] - randomType = UShort
2021-03-11 13:08:01,202 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:08:01,230 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@5da5c34b]
2021-03-11 13:08:01,230 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@42708880]
2021-03-11 13:08:01,230 [main:66] - Generated call from random type = (16523.toUShort()).toFloat().toInt()
2021-03-11 13:08:01,230 [main:63] - replacement of 0 of type Int is (16523.toUShort()).toFloat().toInt()
2021-03-11 13:08:01,358 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:01,367 [main:56] - replacing (intArrayOf((bByte[0]--).toByte().compareTo(4)), IntArray)
2021-03-11 13:08:01,368 [main:38] - replacing intArrayOf((bByte[0]--).toByte().compareTo(4)) IntArray
2021-03-11 13:08:01,368 [main:42] - Getting value of type IntArray
2021-03-11 13:08:01,496 [main:302] - generating value of type = IntArray false depth = 0
2021-03-11 13:08:01,629 [main:43] - GENERATING CALL OF fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:08:01,631 [main:61] - WITHOUT TYPE PARAMS = fun intArrayOf(elements: Int): IntArray = TODO()
2021-03-11 13:08:01,763 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:08:01,765 [main:95] - GENERATED = intArrayOf(-1447270195)
2021-03-11 13:08:01,765 [main:46] - GENERATED VALUE OF TYPE IntArray = intArrayOf(-1447270195)
2021-03-11 13:08:01,765 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:01,768 [main:55] - randomType = Boolean
2021-03-11 13:08:01,898 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:08:01,914 [main:94] - GETTING IntArray from ByteArray
2021-03-11 13:08:01,923 [main:94] - GETTING IntArray from Byte
2021-03-11 13:08:01,957 [main:94] - GETTING IntArray from Array<Long>
2021-03-11 13:08:01,966 [main:101] - Case = [public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]]
2021-03-11 13:08:01,966 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]
2021-03-11 13:08:01,966 [main:105] - GENERATED CALL = (aLong).toIntArray()
2021-03-11 13:08:01,966 [main:63] - replacement of intArrayOf((bByte[0]--).toByte().compareTo(4)) of type IntArray is intArrayOf(-1447270195)
2021-03-11 13:08:02,098 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:08:02,099 [main:66] - Compilation checking started
2021-03-11 13:08:02,569 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[0]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:02,578 [main:56] - replacing (0, Int)
2021-03-11 13:08:02,579 [main:38] - replacing 0 Int
2021-03-11 13:08:02,579 [main:42] - Getting value of type Int
2021-03-11 13:08:02,707 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:02,708 [main:46] - GENERATED VALUE OF TYPE Int = -7692892
2021-03-11 13:08:02,708 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:02,847 [main:55] - randomType = Double?
2021-03-11 13:08:02,976 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:03,009 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:08:03,009 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@57c1e7bc]
2021-03-11 13:08:03,009 [main:66] - Generated call from random type = (0.22015440904941663)?.toDouble().roundToInt()
2021-03-11 13:08:03,009 [main:94] - GETTING Int from Int
2021-03-11 13:08:03,039 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]]
2021-03-11 13:08:03,039 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:08:03,174 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:03,175 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a914616]
2021-03-11 13:08:03,176 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(-908982105).toInt()
2021-03-11 13:08:03,176 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:08:03,176 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:08:03,304 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:03,306 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:08:03,432 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:03,434 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(171500803).ushr(37851118)
2021-03-11 13:08:03,434 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:08:03,434 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:08:03,562 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:03,563 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:08:03,693 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:03,694 [main:105] - GENERATED CALL = (bInt[0]++).compareTo(2068974986).rem(76)
2021-03-11 13:08:03,694 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]]
2021-03-11 13:08:03,694 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:08:03,695 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]
2021-03-11 13:08:03,834 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:03,836 [main:105] - GENERATED CALL = (bInt[0]++).toShort().plus(39)
2021-03-11 13:08:03,836 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:08:03,836 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:08:03,836 [main:105] - GENERATED CALL = (bInt[0]++).countTrailingZeroBits()
2021-03-11 13:08:03,836 [main:101] - Case = [public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 13:08:03,836 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:08:03,966 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:03,967 [main:105] - GENERATED CALL = (bInt[0]++).minus(21)
2021-03-11 13:08:03,967 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]]
2021-03-11 13:08:03,967 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:08:03,968 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]
2021-03-11 13:08:03,968 [main:105] - GENERATED CALL = (bInt[0]++).toShort().unaryMinus()
2021-03-11 13:08:03,968 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]]
2021-03-11 13:08:03,968 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:08:03,968 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]
2021-03-11 13:08:03,968 [main:105] - GENERATED CALL = (bInt[0]++).toByte().toInt()
2021-03-11 13:08:03,968 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]]
2021-03-11 13:08:03,968 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3415540e]
2021-03-11 13:08:03,968 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4845562c]
2021-03-11 13:08:03,968 [main:105] - GENERATED CALL = (bInt[0]++).toByte().countLeadingZeroBits()
2021-03-11 13:08:03,968 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]]
2021-03-11 13:08:03,968 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:08:03,968 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:08:04,095 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:04,097 [main:105] - GENERATED CALL = (bInt[0]++).toLong().compareTo(95)
2021-03-11 13:08:04,097 [main:63] - replacement of 0 of type Int is (bInt[0]++).toShort().plus(39)
2021-03-11 13:08:04,227 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:04,227 [main:66] - Compilation checking started
2021-03-11 13:08:04,857 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:04,869 [main:56] - replacing ((aInt).toIntArray()[(false).compareTo(true).shl(-512772460)], Int)
2021-03-11 13:08:04,871 [main:38] - replacing (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)] Int
2021-03-11 13:08:04,872 [main:42] - Getting value of type Int
2021-03-11 13:08:05,011 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:05,012 [main:46] - GENERATED VALUE OF TYPE Int = -735397753
2021-03-11 13:08:05,012 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:05,338 [main:55] - randomType = ArrayList<ULong>
2021-03-11 13:08:05,497 [main:302] - generating value of type = ArrayList<ULong> false depth = 0
2021-03-11 13:08:05,682 [main:43] - GENERATING CALL OF fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<ULong> = TODO()
2021-03-11 13:08:05,686 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<ULong> = TODO()
2021-03-11 13:08:06,061 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:08:06,062 [main:95] - GENERATED = ArrayList<ULong>(505040858)
2021-03-11 13:08:06,281 [main:66] - Generated call from random type = (ArrayList<ULong>(505040858)).size
2021-03-11 13:08:06,282 [main:94] - GETTING Int from ShortArray
2021-03-11 13:08:06,298 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2cf3c09d]]
2021-03-11 13:08:06,298 [main:105] - GENERATED CALL = (bShort).size.sign
2021-03-11 13:08:06,299 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]]
2021-03-11 13:08:06,299 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29d2aeb7]
2021-03-11 13:08:06,299 [main:105] - GENERATED CALL = (bShort).size.inc()
2021-03-11 13:08:06,299 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:08:06,299 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:08:06,446 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:06,448 [main:105] - GENERATED CALL = (bShort).size.xor(1372257997)
2021-03-11 13:08:06,448 [main:101] - Case = [public inline fun kotlin.ShortArray.indexOfFirst(predicate: (kotlin.Short) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@100c57c9]]
2021-03-11 13:08:06,448 [main:137] - GENERATING call of type public inline fun kotlin.ShortArray.indexOfFirst(predicate: (kotlin.Short) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@100c57c9]
2021-03-11 13:08:06,591 [main:302] - generating value of type = Function1<Short, Boolean> false depth = 0
2021-03-11 13:08:06,592 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 13:08:06,594 [main:105] - GENERATED CALL = (bShort).indexOfFirst({a: Short -> true})
2021-03-11 13:08:06,594 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]]
2021-03-11 13:08:06,594 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:08:06,754 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:06,755 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]
2021-03-11 13:08:06,901 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:06,904 [main:105] - GENERATED CALL = (bShort).get(-248833398).rem(53)
2021-03-11 13:08:06,904 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]]
2021-03-11 13:08:06,904 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fcb3082]
2021-03-11 13:08:06,904 [main:105] - GENERATED CALL = (bShort).size.unaryMinus()
2021-03-11 13:08:06,904 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]]
2021-03-11 13:08:06,904 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:08:07,113 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:07,115 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f64de7b]
2021-03-11 13:08:07,324 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:07,327 [main:105] - GENERATED CALL = (bShort).get(-1733100710).div(81)
2021-03-11 13:08:07,327 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@668f6e3a]]
2021-03-11 13:08:07,328 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Short defined in kotlin.ShortArray[DeserializedSimpleFunctionDescriptor@74ebbc13]
2021-03-11 13:08:07,514 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:07,516 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@668f6e3a]
2021-03-11 13:08:07,680 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:07,682 [main:105] - GENERATED CALL = (bShort).get(-172206586).minus(-66)
2021-03-11 13:08:07,682 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]]
2021-03-11 13:08:07,682 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 13:08:07,830 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:07,831 [main:105] - GENERATED CALL = (bShort).size.and(-2008522936)
2021-03-11 13:08:07,831 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.ShortArray[DeserializedPropertyDescriptor@7aae1a85], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:08:07,832 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:08:07,832 [main:105] - GENERATED CALL = (bShort).size.countTrailingZeroBits()
2021-03-11 13:08:07,832 [main:63] - replacement of (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)] of type Int is (bShort).size.and(-2008522936)
2021-03-11 13:08:07,985 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:07,985 [main:66] - Compilation checking started
2021-03-11 13:08:08,420 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (bShort).size.and(-2008522936)--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:08,430 [main:56] - replacing ((aByte).toFloatArray()[(bLong).size.coerceAtMost(-571296886)], Float)
2021-03-11 13:08:08,430 [main:38] - replacing (aByte).toFloatArray()[(bLong).size.coerceAtMost(-571296886)] Float
2021-03-11 13:08:08,430 [main:42] - Getting value of type Float
2021-03-11 13:08:08,585 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:08,587 [main:46] - GENERATED VALUE OF TYPE Float = 0.5000779f
2021-03-11 13:08:08,587 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:08,591 [main:55] - randomType = UShort
2021-03-11 13:08:08,746 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:08:08,786 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@1d38db07]
2021-03-11 13:08:08,786 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@373492b4]
2021-03-11 13:08:08,786 [main:66] - Generated call from random type = (32031.toUShort()).toLong().toFloat()
2021-03-11 13:08:08,787 [main:94] - GETTING Float from Float
2021-03-11 13:08:08,828 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Float.sign: kotlin.Float defined in kotlin.math[DeserializedPropertyDescriptor@57448ff4]]
2021-03-11 13:08:08,829 [main:105] - GENERATED CALL = (aFloat[0]).sign
2021-03-11 13:08:08,829 [main:101] - Case = [public final operator fun times(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59d944a9]]
2021-03-11 13:08:08,829 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59d944a9]
2021-03-11 13:08:08,969 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:08,970 [main:105] - GENERATED CALL = (aFloat[0]).times(113)
2021-03-11 13:08:08,971 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@44f5b864]]
2021-03-11 13:08:08,971 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:08:08,971 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@44f5b864]
2021-03-11 13:08:09,111 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:09,113 [main:105] - GENERATED CALL = (aFloat[0]).toByte().times(0.33741403f)
2021-03-11 13:08:09,113 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun plus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1bda99b6]]
2021-03-11 13:08:09,113 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:08:09,113 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1bda99b6]
2021-03-11 13:08:09,252 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:09,253 [main:105] - GENERATED CALL = (aFloat[0]).toFloat().plus(17)
2021-03-11 13:08:09,253 [main:101] - Case = [public final operator fun minus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@23e8b346]]
2021-03-11 13:08:09,253 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@23e8b346]
2021-03-11 13:08:09,390 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:09,392 [main:105] - GENERATED CALL = (aFloat[0]).minus(-91)
2021-03-11 13:08:09,392 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]]
2021-03-11 13:08:09,392 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:08:09,392 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]
2021-03-11 13:08:09,530 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:09,531 [main:105] - GENERATED CALL = (aFloat[0]).toLong().minus(0.59854347f)
2021-03-11 13:08:09,532 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]]
2021-03-11 13:08:09,532 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:09,532 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]
2021-03-11 13:08:09,670 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:09,672 [main:105] - GENERATED CALL = (aFloat[0]).toInt().plus(0.92756283f)
2021-03-11 13:08:09,672 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]]
2021-03-11 13:08:09,672 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]
2021-03-11 13:08:09,807 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:09,809 [main:105] - GENERATED CALL = (aFloat[0]).withSign(0.15684438f)
2021-03-11 13:08:09,809 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@385df728]]
2021-03-11 13:08:09,809 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:08:09,809 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@385df728]
2021-03-11 13:08:09,951 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:09,952 [main:105] - GENERATED CALL = (aFloat[0]).toLong().plus(0.3234331f)
2021-03-11 13:08:09,952 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun unaryMinus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3061ada4]]
2021-03-11 13:08:09,952 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:08:09,952 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3061ada4]
2021-03-11 13:08:09,953 [main:105] - GENERATED CALL = (aFloat[0]).toFloat().unaryMinus()
2021-03-11 13:08:09,953 [main:63] - replacement of (aByte).toFloatArray()[(bLong).size.coerceAtMost(-571296886)] of type Float is (32031.toUShort()).toLong().toFloat()
2021-03-11 13:08:10,114 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:10,124 [main:56] - replacing (arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)), Array<Int>)
2021-03-11 13:08:10,125 [main:38] - replacing arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) Array<Int>
2021-03-11 13:08:10,125 [main:42] - Getting value of type Array<Int>
2021-03-11 13:08:10,271 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:08:10,435 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Int> = TODO()
2021-03-11 13:08:10,437 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Int> = TODO()
2021-03-11 13:08:10,588 [main:95] - GENERATED = enumValues<Int>()
2021-03-11 13:08:10,589 [main:46] - GENERATED VALUE OF TYPE Array<Int> = enumValues<Int>()
2021-03-11 13:08:10,589 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:10,592 [main:55] - randomType = Boolean
2021-03-11 13:08:10,759 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:08:10,775 [main:94] - GETTING Array<Int> from ByteArray
2021-03-11 13:08:10,790 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:08:10,842 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:08:10,891 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:08:10,944 [main:94] - GETTING Array<Int> from Array<Short>
2021-03-11 13:08:10,962 [main:63] - replacement of arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) of type Array<Int> is aShort
2021-03-11 13:08:11,117 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:08:11,118 [main:66] - Compilation checking started
2021-03-11 13:08:11,522 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = aShort
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:11,532 [main:56] - replacing (longArrayOf((aShort[0]--).toLong().xor(487472864545714146)), LongArray)
2021-03-11 13:08:11,534 [main:38] - replacing longArrayOf((aShort[0]--).toLong().xor(487472864545714146)) LongArray
2021-03-11 13:08:11,535 [main:42] - Getting value of type LongArray
2021-03-11 13:08:11,679 [main:302] - generating value of type = LongArray false depth = 0
2021-03-11 13:08:11,873 [main:43] - GENERATING CALL OF fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:08:11,875 [main:61] - WITHOUT TYPE PARAMS = fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:08:12,016 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:08:12,018 [main:95] - GENERATED = longArrayOf(1038190749253467442)
2021-03-11 13:08:12,018 [main:46] - GENERATED VALUE OF TYPE LongArray = longArrayOf(1038190749253467442)
2021-03-11 13:08:12,018 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:12,180 [main:55] - randomType = Byte?
2021-03-11 13:08:12,324 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:12,371 [main:94] - GETTING LongArray from Long
2021-03-11 13:08:12,410 [main:94] - GETTING LongArray from Array<Short>
2021-03-11 13:08:12,426 [main:101] - Case = [public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]]
2021-03-11 13:08:12,426 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]
2021-03-11 13:08:12,426 [main:105] - GENERATED CALL = (aShort).toLongArray()
2021-03-11 13:08:12,426 [main:63] - replacement of longArrayOf((aShort[0]--).toLong().xor(487472864545714146)) of type LongArray is (aShort).toLongArray()
2021-03-11 13:08:12,563 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:12,564 [main:66] - Compilation checking started
2021-03-11 13:08:12,950 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = (aShort).toLongArray()

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:12,959 [main:56] - replacing (bLong, LongArray)
2021-03-11 13:08:12,960 [main:38] - replacing bLong LongArray
2021-03-11 13:08:12,960 [main:42] - Getting value of type LongArray
2021-03-11 13:08:13,096 [main:302] - generating value of type = LongArray false depth = 0
2021-03-11 13:08:13,242 [main:43] - GENERATING CALL OF fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:08:13,245 [main:61] - WITHOUT TYPE PARAMS = fun longArrayOf(elements: Long): LongArray = TODO()
2021-03-11 13:08:13,383 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:08:13,385 [main:95] - GENERATED = longArrayOf(5675287853522109459)
2021-03-11 13:08:13,385 [main:46] - GENERATED VALUE OF TYPE LongArray = longArrayOf(5675287853522109459)
2021-03-11 13:08:13,385 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:13,388 [main:55] - randomType = Float
2021-03-11 13:08:13,521 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:13,558 [main:94] - GETTING LongArray from Int
2021-03-11 13:08:13,598 [main:94] - GETTING LongArray from Float
2021-03-11 13:08:13,636 [main:94] - GETTING LongArray from Double
2021-03-11 13:08:13,674 [main:94] - GETTING LongArray from Byte
2021-03-11 13:08:13,712 [main:94] - GETTING LongArray from Long
2021-03-11 13:08:13,748 [main:94] - GETTING LongArray from Array<Long>
2021-03-11 13:08:13,765 [main:101] - Case = [public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]]
2021-03-11 13:08:13,765 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Long>.toLongArray(): kotlin.LongArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e61ded]
2021-03-11 13:08:13,765 [main:105] - GENERATED CALL = (aLong).toLongArray()
2021-03-11 13:08:13,765 [main:63] - replacement of bLong of type LongArray is (aLong).toLongArray()
2021-03-11 13:08:13,904 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:13,913 [main:56] - replacing (0, Int)
2021-03-11 13:08:13,913 [main:38] - replacing 0 Int
2021-03-11 13:08:13,913 [main:42] - Getting value of type Int
2021-03-11 13:08:14,054 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:14,056 [main:46] - GENERATED VALUE OF TYPE Int = -1743092437
2021-03-11 13:08:14,056 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:14,232 [main:55] - randomType = Function1<Short, UByte>
2021-03-11 13:08:14,233 [main:94] - GETTING Int from Short
2021-03-11 13:08:14,294 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:08:14,294 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:14,295 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:08:14,295 [main:105] - GENERATED CALL = (aShort[0]).toInt().inv()
2021-03-11 13:08:14,295 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:08:14,295 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:08:14,435 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:14,437 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:08:14,572 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:14,574 [main:105] - GENERATED CALL = (aShort[0]).compareTo(-10).compareTo(116)
2021-03-11 13:08:14,574 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:08:14,574 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:08:14,574 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:08:14,574 [main:105] - GENERATED CALL = (aShort[0]).toLong().countOneBits()
2021-03-11 13:08:14,574 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@569b962e]]
2021-03-11 13:08:14,574 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:14,575 [main:105] - GENERATED CALL = (aShort[0]).toInt().absoluteValue
2021-03-11 13:08:14,575 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:08:14,575 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:08:14,712 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:14,713 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:08:14,851 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:14,853 [main:105] - GENERATED CALL = (aShort[0]).compareTo(107).ushr(1244172606)
2021-03-11 13:08:14,853 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:08:14,853 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:08:15,002 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:15,004 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:08:15,147 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:15,149 [main:105] - GENERATED CALL = (aShort[0]).compareTo(63).rem(26)
2021-03-11 13:08:15,150 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]]
2021-03-11 13:08:15,150 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1920efec]
2021-03-11 13:08:15,150 [main:137] - GENERATING call of type @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin public fun kotlin.Char.digitToInt(): kotlin.Int defined in kotlin.text[DeserializedSimpleFunctionDescriptor@788eda8f]
2021-03-11 13:08:15,150 [main:105] - GENERATED CALL = (aShort[0]).toChar().digitToInt()
2021-03-11 13:08:15,150 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:08:15,150 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:15,151 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:08:15,151 [main:105] - GENERATED CALL = (aShort[0]).toInt().countOneBits()
2021-03-11 13:08:15,151 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]]
2021-03-11 13:08:15,151 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:08:15,151 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@6279d5fe]
2021-03-11 13:08:15,151 [main:105] - GENERATED CALL = (aShort[0]).toFloat().toRawBits()
2021-03-11 13:08:15,151 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 13:08:15,151 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:15,151 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:08:15,298 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:15,300 [main:105] - GENERATED CALL = (aShort[0]).toInt().coerceAtMost(-1089607330)
2021-03-11 13:08:15,300 [main:63] - replacement of 0 of type Int is (aShort[0]).toFloat().toRawBits()
2021-03-11 13:08:15,440 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:15,450 [main:56] - replacing (bDouble, DoubleArray)
2021-03-11 13:08:15,450 [main:38] - replacing bDouble DoubleArray
2021-03-11 13:08:15,450 [main:42] - Getting value of type DoubleArray
2021-03-11 13:08:15,596 [main:302] - generating value of type = DoubleArray false depth = 0
2021-03-11 13:08:15,748 [main:43] - GENERATING CALL OF fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:08:15,752 [main:61] - WITHOUT TYPE PARAMS = fun doubleArrayOf(elements: Double): DoubleArray = TODO()
2021-03-11 13:08:15,893 [main:302] - generating value of type = Double true depth = 3
2021-03-11 13:08:15,895 [main:95] - GENERATED = doubleArrayOf(0.6224411970885755)
2021-03-11 13:08:15,895 [main:46] - GENERATED VALUE OF TYPE DoubleArray = doubleArrayOf(0.6224411970885755)
2021-03-11 13:08:15,895 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:15,899 [main:55] - randomType = Short
2021-03-11 13:08:16,036 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:08:16,076 [main:94] - GETTING DoubleArray from ShortArray
2021-03-11 13:08:16,089 [main:94] - GETTING DoubleArray from Int
2021-03-11 13:08:16,129 [main:94] - GETTING DoubleArray from Byte
2021-03-11 13:08:16,169 [main:94] - GETTING DoubleArray from Array<Int>
2021-03-11 13:08:16,177 [main:101] - Case = [public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]]
2021-03-11 13:08:16,177 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Double>.toDoubleArray(): kotlin.DoubleArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3e5b5d42]
2021-03-11 13:08:16,178 [main:105] - GENERATED CALL = (aInt).toDoubleArray()
2021-03-11 13:08:16,178 [main:63] - replacement of bDouble of type DoubleArray is doubleArrayOf(0.6224411970885755)
2021-03-11 13:08:16,313 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:08:16,324 [main:56] - replacing ((bFloat).toTypedArray()[(bLong).size.ushr(1085190782)], Float)
2021-03-11 13:08:16,325 [main:38] - replacing (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)] Float
2021-03-11 13:08:16,325 [main:42] - Getting value of type Float
2021-03-11 13:08:16,464 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:16,465 [main:46] - GENERATED VALUE OF TYPE Float = 0.33362603f
2021-03-11 13:08:16,465 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:16,468 [main:55] - randomType = UInt
2021-03-11 13:08:16,605 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 13:08:16,638 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@2ba3d01a]
2021-03-11 13:08:16,638 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]
2021-03-11 13:08:16,776 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:16,777 [main:66] - Generated call from random type = (1401239937.toUInt()).toLong().minus(0.3471201f)
2021-03-11 13:08:16,778 [main:94] - GETTING Float from Double
2021-03-11 13:08:16,813 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], public open fun toFloat(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@28ec2340]]
2021-03-11 13:08:16,813 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:08:16,813 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@28ec2340]
2021-03-11 13:08:16,814 [main:105] - GENERATED CALL = (bDouble[0]++).toFloat().toFloat()
2021-03-11 13:08:16,814 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3a9bf4ac]]
2021-03-11 13:08:16,814 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:08:16,814 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3a9bf4ac]
2021-03-11 13:08:16,951 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:16,952 [main:105] - GENERATED CALL = (bDouble[0]++).toByte().rem(0.5902284f)
2021-03-11 13:08:16,952 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@423d1bb5]]
2021-03-11 13:08:16,952 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:08:16,953 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@423d1bb5]
2021-03-11 13:08:17,148 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:17,150 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().plus(0.5087869f)
2021-03-11 13:08:17,150 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4eed8ede]]
2021-03-11 13:08:17,150 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:08:17,150 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4eed8ede]
2021-03-11 13:08:17,290 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:17,291 [main:105] - GENERATED CALL = (bDouble[0]++).toLong().rem(0.5389914f)
2021-03-11 13:08:17,291 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7dc61e05]]
2021-03-11 13:08:17,291 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:08:17,292 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7dc61e05]
2021-03-11 13:08:17,427 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:17,429 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().times(0.47181642f)
2021-03-11 13:08:17,429 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public open fun toFloat(): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4f742cfe]]
2021-03-11 13:08:17,429 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:08:17,429 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4f742cfe]
2021-03-11 13:08:17,429 [main:105] - GENERATED CALL = (bDouble[0]++).toShort().toFloat()
2021-03-11 13:08:17,429 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]]
2021-03-11 13:08:17,429 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:08:17,429 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]
2021-03-11 13:08:17,429 [main:105] - GENERATED CALL = (bDouble[0]++).toFloat().dec()
2021-03-11 13:08:17,429 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]]
2021-03-11 13:08:17,429 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:08:17,429 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]
2021-03-11 13:08:17,567 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:17,569 [main:105] - GENERATED CALL = (bDouble[0]++).toFloat().withSign(0.10001403f)
2021-03-11 13:08:17,569 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]]
2021-03-11 13:08:17,569 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:08:17,713 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:17,715 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:08:17,864 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:17,866 [main:105] - GENERATED CALL = (bDouble[0]++).compareTo(-32).div(0.66312337f)
2021-03-11 13:08:17,866 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], public final operator fun plus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1bda99b6]]
2021-03-11 13:08:17,866 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:08:17,866 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@1bda99b6]
2021-03-11 13:08:18,001 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:18,003 [main:105] - GENERATED CALL = (bDouble[0]++).toFloat().plus(-45)
2021-03-11 13:08:18,003 [main:63] - replacement of (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)] of type Float is (bDouble[0]++).toLong().rem(0.5389914f)
2021-03-11 13:08:18,139 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:18,140 [main:66] - Compilation checking started
2021-03-11 13:08:18,530 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bDouble[0]++).toLong().rem(0.5389914f)++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()]) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:18,540 [main:56] - replacing (aLong[(aFloat[0]--).toShort().times(-88)], Double)
2021-03-11 13:08:18,540 [main:38] - replacing aLong[(aFloat[0]--).toShort().times(-88)] Double
2021-03-11 13:08:18,540 [main:42] - Getting value of type Double
2021-03-11 13:08:18,681 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:18,683 [main:46] - GENERATED VALUE OF TYPE Double = 0.10237400158685417
2021-03-11 13:08:18,683 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:18,687 [main:55] - randomType = Boolean
2021-03-11 13:08:18,825 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:08:18,837 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:08:18,979 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:08:18,980 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:08:19,128 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:19,130 [main:66] - Generated call from random type = (true).compareTo(true).div(0.8106143895848259)
2021-03-11 13:08:19,131 [main:94] - GETTING Double from FloatArray
2021-03-11 13:08:19,144 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], public open fun toDouble(): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@359b1f57]]
2021-03-11 13:08:19,144 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 13:08:19,280 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:19,281 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@359b1f57]
2021-03-11 13:08:19,281 [main:105] - GENERATED CALL = (bFloat).get(-2119594538).toDouble()
2021-03-11 13:08:19,282 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.FloatArray.maxOf(selector: (kotlin.Float) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@48038067]]
2021-03-11 13:08:19,282 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.FloatArray.maxOf(selector: (kotlin.Float) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@48038067]
2021-03-11 13:08:19,417 [main:302] - generating value of type = Function1<Float, Double> false depth = 0
2021-03-11 13:08:19,418 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:08:19,420 [main:105] - GENERATED CALL = (bFloat).maxOf({a: Float -> 0.119413847275189})
2021-03-11 13:08:19,420 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]]
2021-03-11 13:08:19,420 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]
2021-03-11 13:08:19,555 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:19,557 [main:105] - GENERATED CALL = (bFloat).size.plus(0.8599003228327247)
2021-03-11 13:08:19,557 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]]
2021-03-11 13:08:19,557 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 13:08:19,695 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:19,696 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@19ceab91]
2021-03-11 13:08:19,834 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:19,836 [main:105] - GENERATED CALL = (bFloat).get(-499901642).div(0.9213831858573939)
2021-03-11 13:08:19,836 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]]
2021-03-11 13:08:19,836 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1f4fb161]
2021-03-11 13:08:19,836 [main:105] - GENERATED CALL = (bFloat).size.toDouble()
2021-03-11 13:08:19,836 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@5f0c90f2]]
2021-03-11 13:08:19,836 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 13:08:19,989 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:19,991 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@5f0c90f2]
2021-03-11 13:08:20,137 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:20,139 [main:105] - GENERATED CALL = (bFloat).get(96913809).rem(0.9936170412220457)
2021-03-11 13:08:20,139 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@546b593c]]
2021-03-11 13:08:20,139 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Float defined in kotlin.FloatArray[DeserializedSimpleFunctionDescriptor@3590ccd]
2021-03-11 13:08:20,284 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:20,285 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@546b593c]
2021-03-11 13:08:20,445 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:20,448 [main:105] - GENERATED CALL = (bFloat).get(1313899396).times(0.3916445646324008)
2021-03-11 13:08:20,448 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]]
2021-03-11 13:08:20,448 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]
2021-03-11 13:08:20,590 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:20,591 [main:105] - GENERATED CALL = (bFloat).size.minus(0.8949397936737088)
2021-03-11 13:08:20,591 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.FloatArray[DeserializedPropertyDescriptor@6bdeb445], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]]
2021-03-11 13:08:20,591 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:08:20,729 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:20,731 [main:105] - GENERATED CALL = (bFloat).size.div(0.6747573427793112)
2021-03-11 13:08:20,731 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.FloatArray.minOf(selector: (kotlin.Float) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3fbcce0a]]
2021-03-11 13:08:20,731 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.FloatArray.minOf(selector: (kotlin.Float) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3fbcce0a]
2021-03-11 13:08:20,873 [main:302] - generating value of type = Function1<Float, Double> false depth = 0
2021-03-11 13:08:20,874 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:08:20,876 [main:105] - GENERATED CALL = (bFloat).minOf({a: Float -> 0.6982624590718006})
2021-03-11 13:08:20,876 [main:63] - replacement of aLong[(aFloat[0]--).toShort().times(-88)] of type Double is (bFloat).size.div(0.6747573427793112)
2021-03-11 13:08:21,013 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:21,022 [main:56] - replacing ((bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()], Boolean)
2021-03-11 13:08:21,023 [main:38] - replacing (bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()] Boolean
2021-03-11 13:08:21,023 [main:42] - Getting value of type Boolean
2021-03-11 13:08:21,159 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:08:21,161 [main:46] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 13:08:21,161 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:21,165 [main:55] - randomType = Byte
2021-03-11 13:08:21,307 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:21,345 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:08:21,484 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:21,486 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f5f52b]
2021-03-11 13:08:21,623 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:08:21,624 [main:66] - Generated call from random type = (125).compareTo(67).equals("gouyr")
2021-03-11 13:08:21,624 [main:63] - replacement of (bDouble[0]--).times(120) != bDouble[(0.73492005391268).toInt().countOneBits()] of type Boolean is (125).compareTo(67).equals("gouyr")
2021-03-11 13:08:21,763 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:21,764 [main:66] - Compilation checking started
2021-03-11 13:08:22,266 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:22,276 [main:56] - replacing (0, Int)
2021-03-11 13:08:22,277 [main:38] - replacing 0 Int
2021-03-11 13:08:22,277 [main:42] - Getting value of type Int
2021-03-11 13:08:22,414 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:22,416 [main:46] - GENERATED VALUE OF TYPE Int = -93878369
2021-03-11 13:08:22,416 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:23,263 [main:55] - randomType = Triple<Set<Byte>, Char, HashMap<Int, Short?>?>
2021-03-11 13:08:23,412 [main:302] - generating value of type = Triple<Set<Byte>, Char, HashMap<Int, Short?>?> false depth = 0
2021-03-11 13:08:23,556 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Set<Byte>, second: Char, third: HashMap<Int, Short?>?): Triple<Set<Byte>, Char, HashMap<Int, Short?>?> = TODO()
2021-03-11 13:08:23,558 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Set<Byte>, second: Char, third: HashMap<Int, Short?>?): Triple<Set<Byte>, Char, HashMap<Int, Short?>?> = TODO()
2021-03-11 13:08:23,703 [main:302] - generating value of type = Set<Byte> false depth = 3
2021-03-11 13:08:23,844 [main:43] - GENERATING CALL OF fun <T> mutableSetOf(elements: Byte): Set<Byte> = TODO()
2021-03-11 13:08:23,846 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableSetOf(elements: Byte): Set<Byte> = TODO()
2021-03-11 13:08:23,988 [main:302] - generating value of type = Byte true depth = 6
2021-03-11 13:08:23,990 [main:95] - GENERATED = mutableSetOf<Byte>(27)
2021-03-11 13:08:23,990 [main:302] - generating value of type = Char true depth = 3
2021-03-11 13:08:23,991 [main:302] - generating value of type = HashMap<Int, Short?> false depth = 3
2021-03-11 13:08:24,133 [main:43] - GENERATING CALL OF fun <K, V> LinkedHashMap(initialCapacity: kotlin.Int, loadFactor: kotlin.Float): HashMap<Int, Short?> = TODO()
2021-03-11 13:08:24,136 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> LinkedHashMap(initialCapacity: kotlin.Int, loadFactor: kotlin.Float): HashMap<Int, Short?> = TODO()
2021-03-11 13:08:24,581 [main:302] - generating value of type = Int true depth = 6
2021-03-11 13:08:24,583 [main:302] - generating value of type = Float true depth = 6
2021-03-11 13:08:24,585 [main:95] - GENERATED = LinkedHashMap<Int, Short?>(1055998604, 0.962075f)
2021-03-11 13:08:24,585 [main:95] - GENERATED = Triple<Set<Byte>, Char, HashMap<Int, Short?>?>(mutableSetOf<Byte>(27), '걪', LinkedHashMap<Int, Short?>(1055998604, 0.962075f))
2021-03-11 13:08:24,612 [main:66] - Generated call from random type = (Triple<Set<Byte>, Char, HashMap<Int, Short?>?>(mutableSetOf<Byte>(27), '걪', LinkedHashMap<Int, Short?>(1055998604, 0.962075f))).third?.size!!
2021-03-11 13:08:24,613 [main:94] - GETTING Int from Double
2021-03-11 13:08:24,647 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246], @kotlin.ExperimentalStdlibApi @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Char.code: kotlin.Int defined in kotlin[DeserializedPropertyDescriptor@3fb27dce]]
2021-03-11 13:08:24,647 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@11b65246]
2021-03-11 13:08:24,648 [main:105] - GENERATED CALL = (bDouble[0]).toChar().code
2021-03-11 13:08:24,648 [main:101] - Case = [public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]]
2021-03-11 13:08:24,648 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]
2021-03-11 13:08:24,648 [main:105] - GENERATED CALL = (bDouble[0]).toInt()
2021-03-11 13:08:24,648 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]]
2021-03-11 13:08:24,648 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:08:24,648 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@64662ca7]
2021-03-11 13:08:24,789 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:24,791 [main:105] - GENERATED CALL = (bDouble[0]).toShort().times(13)
2021-03-11 13:08:24,791 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:08:24,791 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:24,791 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:08:24,791 [main:105] - GENERATED CALL = (bDouble[0]).toInt().inv()
2021-03-11 13:08:24,791 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]]
2021-03-11 13:08:24,791 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:08:24,791 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ee12662]
2021-03-11 13:08:24,791 [main:105] - GENERATED CALL = (bDouble[0]).toDouble().toInt()
2021-03-11 13:08:24,792 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]]
2021-03-11 13:08:24,792 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:08:24,792 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:08:24,930 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:24,932 [main:105] - GENERATED CALL = (bDouble[0]).toShort().compareTo(37)
2021-03-11 13:08:24,932 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1472d1ff]]
2021-03-11 13:08:24,932 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:08:24,932 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1472d1ff]
2021-03-11 13:08:24,932 [main:105] - GENERATED CALL = (bDouble[0]).toByte().unaryPlus()
2021-03-11 13:08:24,932 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]]
2021-03-11 13:08:24,932 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:24,932 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@63d8682a]
2021-03-11 13:08:24,932 [main:105] - GENERATED CALL = (bDouble[0]).toInt().takeLowestOneBit()
2021-03-11 13:08:24,933 [main:101] - Case = [public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]]
2021-03-11 13:08:24,933 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46f74945]
2021-03-11 13:08:24,933 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@73213738]
2021-03-11 13:08:24,933 [main:105] - GENERATED CALL = (bDouble[0]).toFloat().toBits()
2021-03-11 13:08:24,933 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:08:24,933 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:24,933 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:08:24,933 [main:105] - GENERATED CALL = (bDouble[0]).toInt().countOneBits()
2021-03-11 13:08:24,933 [main:63] - replacement of 0 of type Int is (bDouble[0]).toChar().code
2021-03-11 13:08:25,068 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:25,077 [main:56] - replacing (arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)), Array<Int>)
2021-03-11 13:08:25,078 [main:38] - replacing arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) Array<Int>
2021-03-11 13:08:25,078 [main:42] - Getting value of type Array<Int>
2021-03-11 13:08:25,212 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:08:25,368 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Int): Array<Int> = TODO()
2021-03-11 13:08:25,370 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Int): Array<Int> = TODO()
2021-03-11 13:08:25,824 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:08:25,825 [main:302] - generating value of type = Function1<Int, Int> false depth = 3
2021-03-11 13:08:25,826 [main:302] - generating value of type = Int true depth = 4
2021-03-11 13:08:25,828 [main:95] - GENERATED = Array<Int>(1406227652, {a: Int -> -810148346})
2021-03-11 13:08:25,828 [main:46] - GENERATED VALUE OF TYPE Array<Int> = Array<Int>(1406227652, {a: Int -> -810148346})
2021-03-11 13:08:25,828 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:25,831 [main:55] - randomType = UByte
2021-03-11 13:08:25,971 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:08:26,006 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:08:26,043 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:08:26,081 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:08:26,120 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:08:26,122 [main:94] - GETTING Array<Int> from Int
2021-03-11 13:08:26,123 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:08:26,124 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:08:26,162 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:08:26,163 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:08:26,202 [main:94] - GETTING Array<Int> from Float
2021-03-11 13:08:26,203 [main:94] - GETTING Array<Int> from Byte
2021-03-11 13:08:26,204 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:08:26,205 [main:94] - GETTING Array<Int> from Short
2021-03-11 13:08:26,245 [main:94] - GETTING Array<Int> from Array<Long>
2021-03-11 13:08:26,261 [main:63] - replacement of arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874)) of type Array<Int> is aLong
2021-03-11 13:08:26,401 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:08:26,401 [main:66] - Compilation checking started
2021-03-11 13:08:26,808 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = aLong
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:26,818 [main:56] - replacing (Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]--, Float)
2021-03-11 13:08:26,820 [main:38] - replacing Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]-- Float
2021-03-11 13:08:26,820 [main:42] - Getting value of type Float
2021-03-11 13:08:26,961 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:26,962 [main:46] - GENERATED VALUE OF TYPE Float = 0.29077363f
2021-03-11 13:08:26,962 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:27,270 [main:55] - randomType = Function1<LinkedHashSet<UShort>, Char>
2021-03-11 13:08:27,271 [main:94] - GETTING Float from Array<Byte>
2021-03-11 13:08:27,287 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@6eb3df0b]]
2021-03-11 13:08:27,287 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-11 13:08:27,425 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:27,427 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@6eb3df0b]
2021-03-11 13:08:27,564 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:27,566 [main:105] - GENERATED CALL = (aByte).get(210573718).minus(0.79081327f)
2021-03-11 13:08:27,566 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]]
2021-03-11 13:08:27,566 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2abc01c6]
2021-03-11 13:08:27,703 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:27,704 [main:105] - GENERATED CALL = (aByte).size.plus(0.30528796f)
2021-03-11 13:08:27,704 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]]
2021-03-11 13:08:27,704 [main:137] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@443adfbb]
2021-03-11 13:08:27,704 [main:105] - GENERATED CALL = (aByte).size.toFloat()
2021-03-11 13:08:27,704 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]]
2021-03-11 13:08:27,704 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 13:08:27,840 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:27,842 [main:105] - GENERATED CALL = (aByte).size.minus(0.8478228f)
2021-03-11 13:08:27,842 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]]
2021-03-11 13:08:27,842 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:08:27,979 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:27,980 [main:105] - GENERATED CALL = (aByte).size.div(0.66998804f)
2021-03-11 13:08:27,980 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@71982085], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]]
2021-03-11 13:08:27,980 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:08:28,179 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:28,180 [main:105] - GENERATED CALL = (aByte).size.times(0.98134273f)
2021-03-11 13:08:28,181 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2d6223d0]]
2021-03-11 13:08:28,181 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-11 13:08:28,317 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:28,318 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2d6223d0]
2021-03-11 13:08:28,456 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:28,459 [main:105] - GENERATED CALL = (aByte).get(-1548610919).plus(0.33066267f)
2021-03-11 13:08:28,459 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]]
2021-03-11 13:08:28,459 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-11 13:08:28,599 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:28,601 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 13:08:28,738 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:28,740 [main:105] - GENERATED CALL = (aByte).get(1680909453).div(0.3232643f)
2021-03-11 13:08:28,740 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Float>.sum(): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1aff6dc1]]
2021-03-11 13:08:28,740 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Float>.sum(): kotlin.Float defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1aff6dc1]
2021-03-11 13:08:28,740 [main:105] - GENERATED CALL = (aByte).sum()
2021-03-11 13:08:28,740 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3a9bf4ac]]
2021-03-11 13:08:28,740 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Byte defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-11 13:08:28,876 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:28,877 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3a9bf4ac]
2021-03-11 13:08:29,014 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:29,017 [main:105] - GENERATED CALL = (aByte).get(2008571140).rem(0.88721746f)
2021-03-11 13:08:29,017 [main:63] - replacement of Array<Float>(-1828000318, {a: Int -> 0.252429f})[(aDouble[0]++).toInt().countOneBits()]-- of type Float is (aByte).sum()
2021-03-11 13:08:29,153 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:29,153 [main:66] - Compilation checking started
2021-03-11 13:08:29,658 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    (aByte).sum()
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:29,667 [main:56] - replacing (0, Int)
2021-03-11 13:08:29,667 [main:38] - replacing 0 Int
2021-03-11 13:08:29,667 [main:42] - Getting value of type Int
2021-03-11 13:08:29,805 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:29,807 [main:46] - GENERATED VALUE OF TYPE Int = 1898761921
2021-03-11 13:08:29,807 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:29,810 [main:55] - randomType = Short
2021-03-11 13:08:29,948 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:08:29,991 [main:137] - GENERATING call of type public abstract fun toShort(): kotlin.Short defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1f551ced]
2021-03-11 13:08:29,991 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@29872edf]
2021-03-11 13:08:30,124 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:30,126 [main:66] - Generated call from random type = (21547).toShort().rem(-67)
2021-03-11 13:08:30,126 [main:63] - replacement of 0 of type Int is (21547).toShort().rem(-67)
2021-03-11 13:08:30,259 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:30,268 [main:56] - replacing (emptyArray<Double>()[(bInt[0]++).toShort().times(101)], Double)
2021-03-11 13:08:30,269 [main:38] - replacing emptyArray<Double>()[(bInt[0]++).toShort().times(101)] Double
2021-03-11 13:08:30,269 [main:42] - Getting value of type Double
2021-03-11 13:08:30,409 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:30,410 [main:46] - GENERATED VALUE OF TYPE Double = 0.9514587061068445
2021-03-11 13:08:30,410 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:30,413 [main:55] - randomType = UByte
2021-03-11 13:08:30,550 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:08:30,577 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@20001fcd]
2021-03-11 13:08:30,577 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@40f9cf69]
2021-03-11 13:08:30,712 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:30,713 [main:66] - Generated call from random type = (68.toUByte()).toFloat().plus(0.109539977366784)
2021-03-11 13:08:30,714 [main:94] - GETTING Double from Byte
2021-03-11 13:08:30,757 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toDouble(): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3bf4c059]]
2021-03-11 13:08:30,757 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:08:30,757 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3bf4c059]
2021-03-11 13:08:30,757 [main:105] - GENERATED CALL = (bByte[0]).toLong().toDouble()
2021-03-11 13:08:30,757 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]]
2021-03-11 13:08:30,757 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:30,757 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]
2021-03-11 13:08:30,896 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:30,897 [main:105] - GENERATED CALL = (bByte[0]).toInt().minus(0.3918030501722283)
2021-03-11 13:08:30,897 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]]
2021-03-11 13:08:30,898 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:08:30,898 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]
2021-03-11 13:08:30,898 [main:105] - GENERATED CALL = (bByte[0]).toDouble().toDouble()
2021-03-11 13:08:30,898 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba], public fun kotlin.Double.coerceAtMost(maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ff45f6f]]
2021-03-11 13:08:30,898 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]
2021-03-11 13:08:31,034 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:31,035 [main:137] - GENERATING call of type public fun kotlin.Double.coerceAtMost(maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1ff45f6f]
2021-03-11 13:08:31,173 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:31,175 [main:105] - GENERATED CALL = (bByte[0]).div(0.8107763027444619).coerceAtMost(0.5046386233412621)
2021-03-11 13:08:31,175 [main:101] - Case = [public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@717e92d5]]
2021-03-11 13:08:31,175 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@717e92d5]
2021-03-11 13:08:31,311 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:31,313 [main:105] - GENERATED CALL = (bByte[0]).plus(0.18671347089726253)
2021-03-11 13:08:31,313 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5d1bde7]]
2021-03-11 13:08:31,313 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:08:31,313 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5d1bde7]
2021-03-11 13:08:31,446 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:31,448 [main:105] - GENERATED CALL = (bByte[0]).toByte().rem(0.8422372507766135)
2021-03-11 13:08:31,448 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]]
2021-03-11 13:08:31,448 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:08:31,587 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:31,589 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]
2021-03-11 13:08:31,723 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:31,725 [main:105] - GENERATED CALL = (bByte[0]).compareTo(39).times(0.5636150572408053)
2021-03-11 13:08:31,725 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]]
2021-03-11 13:08:31,725 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:31,725 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7cd48c6b]
2021-03-11 13:08:31,864 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:31,866 [main:105] - GENERATED CALL = (bByte[0]).toInt().times(0.9042701772550417)
2021-03-11 13:08:31,866 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@68b7f942]]
2021-03-11 13:08:31,866 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:08:31,866 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@68b7f942]
2021-03-11 13:08:31,867 [main:105] - GENERATED CALL = (bByte[0]).toDouble().nextUp()
2021-03-11 13:08:31,867 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1c850bdd]]
2021-03-11 13:08:31,867 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:08:31,867 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1c850bdd]
2021-03-11 13:08:32,008 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:32,010 [main:105] - GENERATED CALL = (bByte[0]).toShort().plus(0.9031299061854956)
2021-03-11 13:08:32,010 [main:63] - replacement of emptyArray<Double>()[(bInt[0]++).toShort().times(101)] of type Double is (68.toUByte()).toFloat().plus(0.109539977366784)
2021-03-11 13:08:32,144 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:32,145 [main:66] - Compilation checking started
2021-03-11 13:08:32,550 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    (aByte).sum()
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    (68.toUByte()).toFloat().plus(0.109539977366784)--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:32,559 [main:56] - replacing (aShort, Array<Short>)
2021-03-11 13:08:32,559 [main:38] - replacing aShort Array<Short>
2021-03-11 13:08:32,559 [main:42] - Getting value of type Array<Short>
2021-03-11 13:08:32,691 [main:302] - generating value of type = Array<Short> false depth = 0
2021-03-11 13:08:32,828 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Short> = TODO()
2021-03-11 13:08:32,831 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Short> = TODO()
2021-03-11 13:08:32,979 [main:95] - GENERATED = emptyArray<Short>()
2021-03-11 13:08:32,979 [main:46] - GENERATED VALUE OF TYPE Array<Short> = emptyArray<Short>()
2021-03-11 13:08:32,979 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:33,293 [main:55] - randomType = MutableMap<Short, UInt?>
2021-03-11 13:08:33,295 [main:94] - GETTING Array<Short> from Double
2021-03-11 13:08:33,336 [main:94] - GETTING Array<Short> from Byte
2021-03-11 13:08:33,379 [main:94] - GETTING Array<Short> from Float
2021-03-11 13:08:33,434 [main:94] - GETTING Array<Short> from DoubleArray
2021-03-11 13:08:33,445 [main:94] - GETTING Array<Short> from Byte
2021-03-11 13:08:33,446 [main:94] - GETTING Array<Short> from Int
2021-03-11 13:08:33,488 [main:94] - GETTING Array<Short> from Long
2021-03-11 13:08:33,527 [main:94] - GETTING Array<Short> from Double
2021-03-11 13:08:33,527 [main:94] - GETTING Array<Short> from Array<Short>
2021-03-11 13:08:33,542 [main:101] - Case = [public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]]
2021-03-11 13:08:33,542 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]
2021-03-11 13:08:33,542 [main:105] - GENERATED CALL = (aShort).reversedArray()
2021-03-11 13:08:33,542 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]]
2021-03-11 13:08:33,542 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]
2021-03-11 13:08:33,542 [main:105] - GENERATED CALL = (aShort).sortedArrayDescending()
2021-03-11 13:08:33,542 [main:101] - Case = [public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]]
2021-03-11 13:08:33,542 [main:137] - GENERATING call of type public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]
2021-03-11 13:08:33,542 [main:105] - GENERATED CALL = (aShort).requireNoNulls()
2021-03-11 13:08:33,542 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]]
2021-03-11 13:08:33,542 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]
2021-03-11 13:08:33,543 [main:105] - GENERATED CALL = (aShort).sortedArray()
2021-03-11 13:08:33,543 [main:101] - Case = [public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]]
2021-03-11 13:08:33,543 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]
2021-03-11 13:08:33,731 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:08:33,871 [main:43] - GENERATING CALL OF fun UShortArray(size: kotlin.Int): Collection<Int> = TODO()
2021-03-11 13:08:33,874 [main:61] - WITHOUT TYPE PARAMS = fun UShortArray(size: kotlin.Int): Collection<Int> = TODO()
2021-03-11 13:08:34,163 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:08:34,164 [main:95] - GENERATED = UShortArray(-1047791052)
2021-03-11 13:08:34,164 [main:105] - GENERATED CALL = (aShort).sliceArray(UShortArray(-1047791052))
2021-03-11 13:08:34,164 [main:63] - replacement of aShort of type Array<Short> is (aShort).sliceArray(UShortArray(-1047791052))
2021-03-11 13:08:34,297 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:34,306 [main:56] - replacing ((aFloat).toDoubleArray()[(aFloat[0]).toInt().coerceAtLeast(1608847841)], Double)
2021-03-11 13:08:34,306 [main:38] - replacing (aFloat).toDoubleArray()[(aFloat[0]).toInt().coerceAtLeast(1608847841)] Double
2021-03-11 13:08:34,306 [main:42] - Getting value of type Double
2021-03-11 13:08:34,439 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:34,441 [main:46] - GENERATED VALUE OF TYPE Double = 0.9771028728310481
2021-03-11 13:08:34,441 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:34,443 [main:55] - randomType = UByte
2021-03-11 13:08:34,582 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:08:34,619 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7160f9a4]
2021-03-11 13:08:34,619 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6076b1a3]
2021-03-11 13:08:34,751 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:34,753 [main:66] - Generated call from random type = (70.toUByte()).toShort().minus(0.21324885247889935)
2021-03-11 13:08:34,754 [main:94] - GETTING Double from Short
2021-03-11 13:08:34,792 [main:101] - Case = [public open fun toDouble(): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28a1fac9]]
2021-03-11 13:08:34,792 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@28a1fac9]
2021-03-11 13:08:34,792 [main:105] - GENERATED CALL = (bShort[0]++).toDouble()
2021-03-11 13:08:34,792 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]]
2021-03-11 13:08:34,792 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:08:34,924 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:34,926 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@25f4be2d]
2021-03-11 13:08:34,926 [main:105] - GENERATED CALL = (bShort[0]++).div(0.1396609025459633).toDouble()
2021-03-11 13:08:34,926 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public final operator fun times(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5b7c2113]]
2021-03-11 13:08:34,926 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:08:35,059 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:35,060 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5b7c2113]
2021-03-11 13:08:35,205 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:35,207 [main:105] - GENERATED CALL = (bShort[0]++).div(0.22326707649330435).times(60)
2021-03-11 13:08:35,207 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]]
2021-03-11 13:08:35,207 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:08:35,344 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:35,346 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]
2021-03-11 13:08:35,496 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:35,497 [main:105] - GENERATED CALL = (bShort[0]++).div(0.29858586296359313).pow(0.1324028709244418)
2021-03-11 13:08:35,497 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.sign: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@23395b41]]
2021-03-11 13:08:35,497 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:08:35,635 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:35,636 [main:105] - GENERATED CALL = (bShort[0]++).div(0.5867690228015283).sign
2021-03-11 13:08:35,637 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2fc4f8bc]]
2021-03-11 13:08:35,637 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:08:35,637 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@2fc4f8bc]
2021-03-11 13:08:35,776 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:35,777 [main:105] - GENERATED CALL = (bShort[0]++).toByte().minus(0.22027007313201719)
2021-03-11 13:08:35,777 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]]
2021-03-11 13:08:35,777 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:08:35,777 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]
2021-03-11 13:08:35,778 [main:105] - GENERATED CALL = (bShort[0]++).toDouble().nextDown()
2021-03-11 13:08:35,778 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]]
2021-03-11 13:08:35,778 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@4dc7f1e6]
2021-03-11 13:08:35,778 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]
2021-03-11 13:08:35,912 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:35,913 [main:105] - GENERATED CALL = (bShort[0]++).toByte().div(0.3919534614949145)
2021-03-11 13:08:35,913 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun div(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@30770b75]]
2021-03-11 13:08:35,913 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:08:35,913 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@30770b75]
2021-03-11 13:08:36,049 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:36,051 [main:105] - GENERATED CALL = (bShort[0]++).toDouble().div(113)
2021-03-11 13:08:36,051 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1610336f]]
2021-03-11 13:08:36,051 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:08:36,051 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1610336f]
2021-03-11 13:08:36,195 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:36,197 [main:105] - GENERATED CALL = (bShort[0]++).toLong().times(0.08638674455324036)
2021-03-11 13:08:36,197 [main:63] - replacement of (aFloat).toDoubleArray()[(aFloat[0]).toInt().coerceAtLeast(1608847841)] of type Double is (bShort[0]++).toLong().times(0.08638674455324036)
2021-03-11 13:08:36,337 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:36,346 [main:56] - replacing (Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)], Short)
2021-03-11 13:08:36,347 [main:38] - replacing Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)] Short
2021-03-11 13:08:36,347 [main:42] - Getting value of type Short
2021-03-11 13:08:36,483 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:08:36,484 [main:46] - GENERATED VALUE OF TYPE Short = -28474
2021-03-11 13:08:36,484 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:36,488 [main:55] - randomType = String
2021-03-11 13:08:36,626 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:08:36,654 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1268a8b6]
2021-03-11 13:08:36,790 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:08:36,792 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:08:36,792 [main:66] - Generated call from random type = ("scjaj").compareTo("uexef").toShort()
2021-03-11 13:08:36,793 [main:94] - GETTING Short from Float
2021-03-11 13:08:36,828 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public fun kotlin.Short.coerceIn(minimumValue: kotlin.Short, maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725e09fb]]
2021-03-11 13:08:36,828 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:08:36,828 [main:137] - GENERATING call of type public fun kotlin.Short.coerceIn(minimumValue: kotlin.Short, maximumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@725e09fb]
2021-03-11 13:08:36,971 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:08:37,109 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:08:37,110 [main:105] - GENERATED CALL = (aFloat[0]).toShort().coerceIn(6653, 8376)
2021-03-11 13:08:37,110 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]]
2021-03-11 13:08:37,110 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:37,110 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:08:37,111 [main:105] - GENERATED CALL = (aFloat[0]).toInt().toShort()
2021-03-11 13:08:37,111 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:08:37,111 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:08:37,111 [main:105] - GENERATED CALL = (aFloat[0]).toShort()
2021-03-11 13:08:37,111 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]]
2021-03-11 13:08:37,111 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:08:37,111 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:08:37,111 [main:105] - GENERATED CALL = (aFloat[0]).toByte().toShort()
2021-03-11 13:08:37,111 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]]
2021-03-11 13:08:37,111 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:08:37,111 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Short defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@d5d9730]
2021-03-11 13:08:37,111 [main:105] - GENERATED CALL = (aFloat[0]).toShort().dec()
2021-03-11 13:08:37,111 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]]
2021-03-11 13:08:37,111 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:08:37,111 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline infix fun kotlin.Short.and(other: kotlin.Short): kotlin.Short defined in kotlin.experimental[DeserializedSimpleFunctionDescriptor@a62974a]
2021-03-11 13:08:37,249 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:08:37,251 [main:105] - GENERATED CALL = (aFloat[0]).toShort().and(-17616)
2021-03-11 13:08:37,251 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]]
2021-03-11 13:08:37,251 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:08:37,251 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Short.rotateRight(bitCount: kotlin.Int): kotlin.Short defined in kotlin[DeserializedSimpleFunctionDescriptor@5f4e4344]
2021-03-11 13:08:37,390 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:37,392 [main:105] - GENERATED CALL = (aFloat[0]).toShort().rotateRight(1592367639)
2021-03-11 13:08:37,392 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]]
2021-03-11 13:08:37,392 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:08:37,392 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:08:37,392 [main:105] - GENERATED CALL = (aFloat[0]).toFloat().toShort()
2021-03-11 13:08:37,392 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]]
2021-03-11 13:08:37,392 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:08:37,392 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@272dccd3]
2021-03-11 13:08:37,392 [main:105] - GENERATED CALL = (aFloat[0]).toLong().toShort()
2021-03-11 13:08:37,392 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]]
2021-03-11 13:08:37,392 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:08:37,393 [main:137] - GENERATING call of type public fun kotlin.Short.coerceAtLeast(minimumValue: kotlin.Short): kotlin.Short defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ed59c18]
2021-03-11 13:08:37,530 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:08:37,531 [main:105] - GENERATED CALL = (aFloat[0]).toShort().coerceAtLeast(18981)
2021-03-11 13:08:37,531 [main:63] - replacement of Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)] of type Short is (aFloat[0]).toFloat().toShort()
2021-03-11 13:08:37,670 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:37,670 [main:66] - Compilation checking started
2021-03-11 13:08:38,077 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    (aFloat[0]).toFloat().toShort()--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    (aByte).sum()
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:38,086 [main:56] - replacing (arrayOf<Float>(0.099164665f)[(bInt[0]).compareTo(-1403169113).ushr(-742288695)], Float)
2021-03-11 13:08:38,086 [main:38] - replacing arrayOf<Float>(0.099164665f)[(bInt[0]).compareTo(-1403169113).ushr(-742288695)] Float
2021-03-11 13:08:38,086 [main:42] - Getting value of type Float
2021-03-11 13:08:38,225 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:38,227 [main:46] - GENERATED VALUE OF TYPE Float = 0.39402443f
2021-03-11 13:08:38,227 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:38,229 [main:55] - randomType = UByte
2021-03-11 13:08:38,369 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 13:08:38,398 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toFloat(): kotlin.Float defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@29532d02]
2021-03-11 13:08:38,398 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtMost(maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@24a3b6ac]
2021-03-11 13:08:38,550 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:38,551 [main:66] - Generated call from random type = (15.toUByte()).toFloat().coerceAtMost(0.2952978f)
2021-03-11 13:08:38,552 [main:94] - GETTING Float from Int
2021-03-11 13:08:38,588 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5], public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]]
2021-03-11 13:08:38,588 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:08:38,728 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:38,729 [main:137] - GENERATING call of type public final operator fun dec(): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@21a9e25a]
2021-03-11 13:08:38,730 [main:105] - GENERATED CALL = (aInt[0]++).div(0.62435204f).dec()
2021-03-11 13:08:38,730 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public final operator fun div(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@58d4b10d]]
2021-03-11 13:08:38,730 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:08:38,730 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@58d4b10d]
2021-03-11 13:08:38,869 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:38,871 [main:105] - GENERATED CALL = (aInt[0]++).toFloat().div(-48)
2021-03-11 13:08:38,871 [main:101] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]]
2021-03-11 13:08:38,871 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:08:39,006 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:39,007 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:08:39,202 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:39,204 [main:105] - GENERATED CALL = (aInt[0]++).compareTo(1632977161).times(0.23233336f)
2021-03-11 13:08:39,204 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5], public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]]
2021-03-11 13:08:39,204 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:08:39,338 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:39,340 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]
2021-03-11 13:08:39,475 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:39,476 [main:105] - GENERATED CALL = (aInt[0]++).div(0.28506333f).coerceAtLeast(0.3232178f)
2021-03-11 13:08:39,476 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]]
2021-03-11 13:08:39,476 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:39,476 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:08:39,614 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:39,615 [main:105] - GENERATED CALL = (aInt[0]++).toInt().div(0.28135514f)
2021-03-11 13:08:39,616 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@69e9a86b]]
2021-03-11 13:08:39,616 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:08:39,616 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@69e9a86b]
2021-03-11 13:08:39,752 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:39,754 [main:105] - GENERATED CALL = (aInt[0]++).toFloat().rem(-24)
2021-03-11 13:08:39,754 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@75096f32]]
2021-03-11 13:08:39,754 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:08:39,755 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@75096f32]
2021-03-11 13:08:39,924 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:39,926 [main:105] - GENERATED CALL = (aInt[0]++).toShort().minus(0.10582113f)
2021-03-11 13:08:39,926 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]]
2021-03-11 13:08:39,926 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:08:39,926 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.withSign(sign: kotlin.Float): kotlin.Float defined in kotlin.math[DeserializedSimpleFunctionDescriptor@34d8b62]
2021-03-11 13:08:40,076 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:40,077 [main:105] - GENERATED CALL = (aInt[0]++).toFloat().withSign(0.56375724f)
2021-03-11 13:08:40,077 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]]
2021-03-11 13:08:40,077 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:08:40,077 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtLeast(minimumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@25e16307]
2021-03-11 13:08:40,213 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:40,214 [main:105] - GENERATED CALL = (aInt[0]++).toFloat().coerceAtLeast(0.58537775f)
2021-03-11 13:08:40,214 [main:101] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d], public fun kotlin.Float.coerceIn(minimumValue: kotlin.Float, maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@54e32b98]]
2021-03-11 13:08:40,214 [main:137] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4467222d]
2021-03-11 13:08:40,215 [main:137] - GENERATING call of type public fun kotlin.Float.coerceIn(minimumValue: kotlin.Float, maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@54e32b98]
2021-03-11 13:08:40,350 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:40,488 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:40,490 [main:105] - GENERATED CALL = (aInt[0]++).toFloat().coerceIn(0.5048031f, 0.61768866f)
2021-03-11 13:08:40,490 [main:63] - replacement of arrayOf<Float>(0.099164665f)[(bInt[0]).compareTo(-1403169113).ushr(-742288695)] of type Float is (aInt[0]++).toShort().minus(0.10582113f)
2021-03-11 13:08:40,625 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:40,635 [main:56] - replacing (bInt, IntArray)
2021-03-11 13:08:40,635 [main:38] - replacing bInt IntArray
2021-03-11 13:08:40,635 [main:42] - Getting value of type IntArray
2021-03-11 13:08:40,773 [main:302] - generating value of type = IntArray false depth = 0
2021-03-11 13:08:40,911 [main:43] - GENERATING CALL OF fun IntArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Int): IntArray = TODO()
2021-03-11 13:08:40,913 [main:61] - WITHOUT TYPE PARAMS = fun IntArray(size: kotlin.Int, init: (kotlin.Int)->kotlin.Int): IntArray = TODO()
2021-03-11 13:08:41,343 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:08:41,345 [main:302] - generating value of type = Function1<Int, Int> false depth = 3
2021-03-11 13:08:41,346 [main:302] - generating value of type = Int true depth = 4
2021-03-11 13:08:41,347 [main:95] - GENERATED = IntArray(-2133076576, {a: Int -> 1944414732})
2021-03-11 13:08:41,348 [main:46] - GENERATED VALUE OF TYPE IntArray = IntArray(-2133076576, {a: Int -> 1944414732})
2021-03-11 13:08:41,348 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:41,352 [main:55] - randomType = Float
2021-03-11 13:08:41,492 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:41,543 [main:94] - GETTING IntArray from Float
2021-03-11 13:08:41,589 [main:94] - GETTING IntArray from Byte
2021-03-11 13:08:41,626 [main:94] - GETTING IntArray from Int
2021-03-11 13:08:41,663 [main:94] - GETTING IntArray from ByteArray
2021-03-11 13:08:41,674 [main:94] - GETTING IntArray from Float
2021-03-11 13:08:41,674 [main:94] - GETTING IntArray from ShortArray
2021-03-11 13:08:41,686 [main:94] - GETTING IntArray from Long
2021-03-11 13:08:41,721 [main:94] - GETTING IntArray from Long
2021-03-11 13:08:41,722 [main:94] - GETTING IntArray from Short
2021-03-11 13:08:41,758 [main:94] - GETTING IntArray from FloatArray
2021-03-11 13:08:41,767 [main:94] - GETTING IntArray from Byte
2021-03-11 13:08:41,768 [main:94] - GETTING IntArray from Byte
2021-03-11 13:08:41,769 [main:94] - GETTING IntArray from Double
2021-03-11 13:08:41,802 [main:94] - GETTING IntArray from Int
2021-03-11 13:08:41,803 [main:94] - GETTING IntArray from Short
2021-03-11 13:08:41,803 [main:94] - GETTING IntArray from Double
2021-03-11 13:08:41,804 [main:94] - GETTING IntArray from LongArray
2021-03-11 13:08:41,813 [main:94] - GETTING IntArray from Short
2021-03-11 13:08:41,813 [main:94] - GETTING IntArray from Float
2021-03-11 13:08:41,814 [main:94] - GETTING IntArray from Int
2021-03-11 13:08:41,815 [main:94] - GETTING IntArray from Float
2021-03-11 13:08:41,816 [main:94] - GETTING IntArray from Array<Byte>
2021-03-11 13:08:41,827 [main:101] - Case = [public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]]
2021-03-11 13:08:41,828 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Int>.toIntArray(): kotlin.IntArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@738073dd]
2021-03-11 13:08:41,828 [main:105] - GENERATED CALL = (aByte).toIntArray()
2021-03-11 13:08:41,828 [main:63] - replacement of bInt of type IntArray is IntArray(-2133076576, {a: Int -> 1944414732})
2021-03-11 13:08:41,963 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:08:41,973 [main:56] - replacing (bShort, ShortArray)
2021-03-11 13:08:41,973 [main:38] - replacing bShort ShortArray
2021-03-11 13:08:41,973 [main:42] - Getting value of type ShortArray
2021-03-11 13:08:42,107 [main:302] - generating value of type = ShortArray false depth = 0
2021-03-11 13:08:42,245 [main:43] - GENERATING CALL OF fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:08:42,247 [main:61] - WITHOUT TYPE PARAMS = fun shortArrayOf(elements: Short): ShortArray = TODO()
2021-03-11 13:08:42,387 [main:302] - generating value of type = Short true depth = 3
2021-03-11 13:08:42,389 [main:95] - GENERATED = shortArrayOf(-2977)
2021-03-11 13:08:42,389 [main:46] - GENERATED VALUE OF TYPE ShortArray = shortArrayOf(-2977)
2021-03-11 13:08:42,390 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:42,541 [main:55] - randomType = ArrayList<UShort>
2021-03-11 13:08:42,674 [main:302] - generating value of type = ArrayList<UShort> false depth = 0
2021-03-11 13:08:42,817 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: UShort): ArrayList<UShort> = TODO()
2021-03-11 13:08:42,819 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: UShort): ArrayList<UShort> = TODO()
2021-03-11 13:08:42,975 [main:302] - generating value of type = UShort true depth = 3
2021-03-11 13:08:42,977 [main:95] - GENERATED = arrayListOf<UShort>(12840.toUShort())
2021-03-11 13:08:43,176 [main:137] - GENERATING call of type public fun kotlin.collections.Collection<kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@62c2da9e]
2021-03-11 13:08:43,176 [main:66] - Generated call from random type = (arrayListOf<UShort>(12840.toUShort())).toShortArray()
2021-03-11 13:08:43,177 [main:94] - GETTING ShortArray from Long
2021-03-11 13:08:43,216 [main:94] - GETTING ShortArray from Array<Byte>
2021-03-11 13:08:43,229 [main:101] - Case = [public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]]
2021-03-11 13:08:43,229 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Short>.toShortArray(): kotlin.ShortArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@70c6238]
2021-03-11 13:08:43,230 [main:105] - GENERATED CALL = (aByte).toShortArray()
2021-03-11 13:08:43,230 [main:63] - replacement of bShort of type ShortArray is (arrayListOf<UShort>(12840.toUShort())).toShortArray()
2021-03-11 13:08:43,372 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:43,381 [main:56] - replacing (0, Int)
2021-03-11 13:08:43,381 [main:38] - replacing 0 Int
2021-03-11 13:08:43,381 [main:42] - Getting value of type Int
2021-03-11 13:08:43,525 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:43,526 [main:46] - GENERATED VALUE OF TYPE Int = -525864897
2021-03-11 13:08:43,526 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:43,691 [main:55] - randomType = ArrayDeque<Long>
2021-03-11 13:08:43,853 [main:302] - generating value of type = ArrayDeque<Long> false depth = 0
2021-03-11 13:08:44,022 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Long>): ArrayDeque<Long> = TODO()
2021-03-11 13:08:44,025 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Long>): ArrayDeque<Long> = TODO()
2021-03-11 13:08:44,396 [main:302] - generating value of type = Collection<Long> false depth = 3
2021-03-11 13:08:44,553 [main:43] - GENERATING CALL OF fun <E> buildSet(builderAction: kotlin.collections.MutableSet<Long>.()->kotlin.Unit): Collection<Long> = TODO()
2021-03-11 13:08:44,556 [main:61] - WITHOUT TYPE PARAMS = fun <E> buildSet(builderAction: kotlin.collections.MutableSet<Long>.()->kotlin.Unit): Collection<Long> = TODO()
2021-03-11 13:08:44,867 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<MutableSet<Long>, Unit> false depth = 6
2021-03-11 13:08:44,869 [main:302] - generating value of type = Unit false depth = 7
2021-03-11 13:08:45,123 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 13:08:45,127 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-11 13:08:45,567 [main:302] - generating value of type = Boolean true depth = 10
2021-03-11 13:08:45,568 [main:302] - generating value of type = Function0<Any> false depth = 10
2021-03-11 13:08:45,569 [main:302] - generating value of type = Any false depth = 11
2021-03-11 13:08:45,569 [main:95] - GENERATED = require(true, { "znepl"})
2021-03-11 13:08:45,570 [main:95] - GENERATED = buildSet<Long>({ require(true, { "znepl"})})
2021-03-11 13:08:45,570 [main:95] - GENERATED = ArrayDeque<Long>(buildSet<Long>({ require(true, { "znepl"})}))
2021-03-11 13:08:45,714 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:08:45,850 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:45,852 [main:66] - Generated call from random type = (ArrayDeque<Long>(buildSet<Long>({ require(true, { "znepl"})}))).size.minus(-121)
2021-03-11 13:08:45,853 [main:94] - GETTING Int from Byte
2021-03-11 13:08:45,893 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d4ebc37]]
2021-03-11 13:08:45,893 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:08:45,894 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@3d4ebc37]
2021-03-11 13:08:45,894 [main:105] - GENERATED CALL = (aByte[0]--).toShort().toInt()
2021-03-11 13:08:45,894 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]]
2021-03-11 13:08:45,894 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:08:46,027 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:46,029 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@36f4c0f5]
2021-03-11 13:08:46,029 [main:105] - GENERATED CALL = (aByte[0]--).compareTo(96).takeHighestOneBit()
2021-03-11 13:08:46,029 [main:101] - Case = [public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3e11389b]]
2021-03-11 13:08:46,029 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3e11389b]
2021-03-11 13:08:46,164 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:46,166 [main:105] - GENERATED CALL = (aByte[0]--).div(119)
2021-03-11 13:08:46,166 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]]
2021-03-11 13:08:46,166 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:08:46,166 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@39b2b94b]
2021-03-11 13:08:46,166 [main:105] - GENERATED CALL = (aByte[0]--).toByte().toInt()
2021-03-11 13:08:46,166 [main:101] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]]
2021-03-11 13:08:46,166 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@72caf307]
2021-03-11 13:08:46,166 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@45eeca7f]
2021-03-11 13:08:46,302 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:46,303 [main:105] - GENERATED CALL = (aByte[0]--).toShort().plus(95)
2021-03-11 13:08:46,303 [main:101] - Case = [public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@57941f83]]
2021-03-11 13:08:46,304 [main:137] - GENERATING call of type public abstract fun toByte(): kotlin.Byte defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@c2464cb]
2021-03-11 13:08:46,304 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@57941f83]
2021-03-11 13:08:46,304 [main:105] - GENERATED CALL = (aByte[0]--).toByte().countOneBits()
2021-03-11 13:08:46,304 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:08:46,304 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:08:46,438 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:46,439 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:08:46,582 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:46,584 [main:105] - GENERATED CALL = (aByte[0]--).compareTo(118).xor(1255562319)
2021-03-11 13:08:46,584 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]]
2021-03-11 13:08:46,584 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:08:46,756 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:46,758 [main:137] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@17c521e0]
2021-03-11 13:08:46,895 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:46,897 [main:105] - GENERATED CALL = (aByte[0]--).compareTo(-33).shl(-1344159981)
2021-03-11 13:08:46,897 [main:101] - Case = [public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:08:46,897 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@461b8155]
2021-03-11 13:08:47,029 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:47,031 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:08:47,165 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:47,167 [main:105] - GENERATED CALL = (aByte[0]--).compareTo(-71).ushr(404197877)
2021-03-11 13:08:47,167 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]]
2021-03-11 13:08:47,167 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:08:47,167 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@52d89dd5]
2021-03-11 13:08:47,167 [main:105] - GENERATED CALL = (aByte[0]--).toLong().countOneBits()
2021-03-11 13:08:47,168 [main:63] - replacement of 0 of type Int is (aByte[0]--).compareTo(118).xor(1255562319)
2021-03-11 13:08:47,307 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:47,318 [main:56] - replacing (arrayOf<Float>((aShort[0]--).toChar().toFloat()), Array<Float>)
2021-03-11 13:08:47,319 [main:38] - replacing arrayOf<Float>((aShort[0]--).toChar().toFloat()) Array<Float>
2021-03-11 13:08:47,319 [main:42] - Getting value of type Array<Float>
2021-03-11 13:08:47,456 [main:302] - generating value of type = Array<Float> false depth = 0
2021-03-11 13:08:47,602 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Float): Array<Float> = TODO()
2021-03-11 13:08:47,605 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Float): Array<Float> = TODO()
2021-03-11 13:08:47,756 [main:302] - generating value of type = Float true depth = 3
2021-03-11 13:08:47,758 [main:95] - GENERATED = arrayOf<Float>(0.6485454f)
2021-03-11 13:08:47,758 [main:46] - GENERATED VALUE OF TYPE Array<Float> = arrayOf<Float>(0.6485454f)
2021-03-11 13:08:47,758 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:47,762 [main:55] - randomType = Char
2021-03-11 13:08:47,898 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:08:47,931 [main:94] - GETTING Array<Float> from Byte
2021-03-11 13:08:47,985 [main:94] - GETTING Array<Float> from Double
2021-03-11 13:08:48,025 [main:94] - GETTING Array<Float> from Float
2021-03-11 13:08:48,069 [main:94] - GETTING Array<Float> from Float
2021-03-11 13:08:48,070 [main:94] - GETTING Array<Float> from Double
2021-03-11 13:08:48,071 [main:94] - GETTING Array<Float> from IntArray
2021-03-11 13:08:48,087 [main:94] - GETTING Array<Float> from Byte
2021-03-11 13:08:48,088 [main:94] - GETTING Array<Float> from Long
2021-03-11 13:08:48,138 [main:94] - GETTING Array<Float> from Double
2021-03-11 13:08:48,139 [main:94] - GETTING Array<Float> from Array<Int>
2021-03-11 13:08:48,154 [main:63] - replacement of arrayOf<Float>((aShort[0]--).toChar().toFloat()) of type Array<Float> is aInt
2021-03-11 13:08:48,315 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:08:48,316 [main:66] - Compilation checking started
2021-03-11 13:08:48,734 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = aInt
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    (aByte).sum()
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:48,744 [main:56] - replacing (byteArrayOf(34)[(bByte).size.or(-1144148738)], Byte)
2021-03-11 13:08:48,744 [main:38] - replacing byteArrayOf(34)[(bByte).size.or(-1144148738)] Byte
2021-03-11 13:08:48,744 [main:42] - Getting value of type Byte
2021-03-11 13:08:48,899 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:48,900 [main:46] - GENERATED VALUE OF TYPE Byte = -7
2021-03-11 13:08:48,900 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:48,903 [main:55] - randomType = UShort
2021-03-11 13:08:49,031 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:08:49,066 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@48785448]
2021-03-11 13:08:49,066 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Byte.rotateLeft(bitCount: kotlin.Int): kotlin.Byte defined in kotlin[DeserializedSimpleFunctionDescriptor@5b08d322]
2021-03-11 13:08:49,204 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:49,206 [main:66] - Generated call from random type = (2327.toUShort()).toByte().rotateLeft(-1391373956)
2021-03-11 13:08:49,206 [main:63] - replacement of byteArrayOf(34)[(bByte).size.or(-1144148738)] of type Byte is (2327.toUShort()).toByte().rotateLeft(-1391373956)
2021-03-11 13:08:49,347 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:49,356 [main:56] - replacing ((aDouble).toShortArray()[(21547).toShort().rem(-67)], Short)
2021-03-11 13:08:49,356 [main:38] - replacing (aDouble).toShortArray()[(21547).toShort().rem(-67)] Short
2021-03-11 13:08:49,356 [main:42] - Getting value of type Short
2021-03-11 13:08:49,489 [main:302] - generating value of type = Short true depth = 0
2021-03-11 13:08:49,490 [main:46] - GENERATED VALUE OF TYPE Short = 16055
2021-03-11 13:08:49,490 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:49,636 [main:55] - randomType = Function1<Int, Long>
2021-03-11 13:08:49,637 [main:94] - GETTING Short from Array<Int>
2021-03-11 13:08:49,646 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@43ac29], public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]]
2021-03-11 13:08:49,646 [main:137] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6defb594]
2021-03-11 13:08:49,646 [main:105] - GENERATED CALL = (aInt).size.toShort()
2021-03-11 13:08:49,646 [main:63] - replacement of (aDouble).toShortArray()[(21547).toShort().rem(-67)] of type Short is (aInt).size.toShort()
2021-03-11 13:08:49,774 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:49,783 [main:56] - replacing (aShort[(true)?.compareTo(true).shr(-685211436)], Double)
2021-03-11 13:08:49,784 [main:38] - replacing aShort[(true)?.compareTo(true).shr(-685211436)] Double
2021-03-11 13:08:49,784 [main:42] - Getting value of type Double
2021-03-11 13:08:49,915 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:49,916 [main:46] - GENERATED VALUE OF TYPE Double = 0.6453929017223616
2021-03-11 13:08:49,916 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:49,920 [main:55] - randomType = Byte
2021-03-11 13:08:50,051 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:50,097 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@4198abba]
2021-03-11 13:08:50,225 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:50,226 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ebbab4b]
2021-03-11 13:08:50,352 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:50,353 [main:66] - Generated call from random type = (-51).div(0.9802066194871731).minus(-54)
2021-03-11 13:08:50,354 [main:94] - GETTING Double from Short
2021-03-11 13:08:50,389 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]]
2021-03-11 13:08:50,389 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:08:50,515 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:50,517 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6c5f8a23]
2021-03-11 13:08:50,641 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:50,643 [main:105] - GENERATED CALL = (bShort[0]++).compareTo(87).div(0.20005837417746686)
2021-03-11 13:08:50,643 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public final operator fun div(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@30770b75]]
2021-03-11 13:08:50,643 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:08:50,794 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:50,796 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@30770b75]
2021-03-11 13:08:50,986 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:50,988 [main:105] - GENERATED CALL = (bShort[0]++).div(0.4403843303292032).div(-50)
2021-03-11 13:08:50,988 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public fun kotlin.Double.coerceAtLeast(minimumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dbe6c2f]]
2021-03-11 13:08:50,988 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:08:51,122 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:51,123 [main:137] - GENERATING call of type public fun kotlin.Double.coerceAtLeast(minimumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7dbe6c2f]
2021-03-11 13:08:51,258 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:51,260 [main:105] - GENERATED CALL = (bShort[0]++).div(0.011552024085076162).coerceAtLeast(0.20987689066510107)
2021-03-11 13:08:51,260 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]]
2021-03-11 13:08:51,261 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:08:51,261 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Double.pow(x: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@c52595b]
2021-03-11 13:08:51,390 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:51,392 [main:105] - GENERATED CALL = (bShort[0]++).toDouble().pow(0.10358671064240466)
2021-03-11 13:08:51,392 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], public open fun toDouble(): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3bf4c059]]
2021-03-11 13:08:51,392 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:08:51,392 [main:137] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3bf4c059]
2021-03-11 13:08:51,392 [main:105] - GENERATED CALL = (bShort[0]++).toLong().toDouble()
2021-03-11 13:08:51,392 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public final operator fun plus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5fd21683]]
2021-03-11 13:08:51,392 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:08:51,528 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:51,529 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5fd21683]
2021-03-11 13:08:51,671 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:51,673 [main:105] - GENERATED CALL = (bShort[0]++).div(0.8659366584369055).plus(-104)
2021-03-11 13:08:51,673 [main:101] - Case = [public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6076b1a3]]
2021-03-11 13:08:51,673 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6076b1a3]
2021-03-11 13:08:51,830 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:51,832 [main:105] - GENERATED CALL = (bShort[0]++).minus(0.24474430803177316)
2021-03-11 13:08:51,832 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], public final operator fun inc(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@58e28efd]]
2021-03-11 13:08:51,832 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:08:51,832 [main:137] - GENERATING call of type public final operator fun inc(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@58e28efd]
2021-03-11 13:08:51,832 [main:105] - GENERATED CALL = (bShort[0]++).toDouble().inc()
2021-03-11 13:08:51,832 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.absoluteValue: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@170efff7]]
2021-03-11 13:08:51,833 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:08:51,965 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:51,967 [main:105] - GENERATED CALL = (bShort[0]++).div(0.16936137403806784).absoluteValue
2021-03-11 13:08:51,967 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]]
2021-03-11 13:08:51,967 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:08:51,967 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5c72ea80]
2021-03-11 13:08:52,092 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:52,094 [main:105] - GENERATED CALL = (bShort[0]++).toInt().plus(0.9902780840343364)
2021-03-11 13:08:52,094 [main:63] - replacement of aShort[(true)?.compareTo(true).shr(-685211436)] of type Double is 0.6453929017223616
2021-03-11 13:08:52,223 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(FLOAT_CONSTANT)
2021-03-11 13:08:52,223 [main:66] - Compilation checking started
2021-03-11 13:08:52,586 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914}))
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    (aByte).sum()
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    0.6453929017223616++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:52,595 [main:56] - replacing (arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914})), Array<Double>)
2021-03-11 13:08:52,596 [main:38] - replacing arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914})) Array<Double>
2021-03-11 13:08:52,596 [main:42] - Getting value of type Array<Double>
2021-03-11 13:08:52,722 [main:302] - generating value of type = Array<Double> false depth = 0
2021-03-11 13:08:52,853 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Double): Array<Double> = TODO()
2021-03-11 13:08:52,855 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Double): Array<Double> = TODO()
2021-03-11 13:08:53,256 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:08:53,257 [main:302] - generating value of type = Function1<Int, Double> false depth = 3
2021-03-11 13:08:53,259 [main:302] - generating value of type = Double true depth = 4
2021-03-11 13:08:53,260 [main:95] - GENERATED = Array<Double>(-1946076032, {a: Int -> 0.7580811333421495})
2021-03-11 13:08:53,260 [main:46] - GENERATED VALUE OF TYPE Array<Double> = Array<Double>(-1946076032, {a: Int -> 0.7580811333421495})
2021-03-11 13:08:53,260 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:53,554 [main:55] - randomType = Triple<Char, Byte, Long>
2021-03-11 13:08:53,680 [main:302] - generating value of type = Triple<Char, Byte, Long> false depth = 0
2021-03-11 13:08:53,816 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Char, second: Byte, third: Long): Triple<Char, Byte, Long> = TODO()
2021-03-11 13:08:53,819 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Char, second: Byte, third: Long): Triple<Char, Byte, Long> = TODO()
2021-03-11 13:08:53,949 [main:302] - generating value of type = Char true depth = 3
2021-03-11 13:08:53,950 [main:302] - generating value of type = Byte true depth = 3
2021-03-11 13:08:53,952 [main:302] - generating value of type = Long true depth = 3
2021-03-11 13:08:53,953 [main:95] - GENERATED = Triple<Char, Byte, Long>('溫', -19, -3328851174489580538)
2021-03-11 13:08:53,971 [main:94] - GETTING Array<Double> from Double
2021-03-11 13:08:53,999 [main:94] - GETTING Array<Double> from Double
2021-03-11 13:08:54,000 [main:94] - GETTING Array<Double> from LongArray
2021-03-11 13:08:54,008 [main:94] - GETTING Array<Double> from DoubleArray
2021-03-11 13:08:54,016 [main:101] - Case = [public fun kotlin.DoubleArray.toTypedArray(): kotlin.Array<kotlin.Double> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65c9de88]]
2021-03-11 13:08:54,016 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.toTypedArray(): kotlin.Array<kotlin.Double> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@65c9de88]
2021-03-11 13:08:54,016 [main:105] - GENERATED CALL = (bDouble).toTypedArray()
2021-03-11 13:08:54,016 [main:63] - replacement of arrayOf<Double>((bInt).sumOf({a: Int -> 0.01919955289242914})) of type Array<Double> is Array<Double>(-1946076032, {a: Int -> 0.7580811333421495})
2021-03-11 13:08:54,142 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:08:54,142 [main:66] - Compilation checking started
2021-03-11 13:08:54,582 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = Array<Double>(-1946076032, {a: Int -> 0.7580811333421495})
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    (aByte).sum()
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:54,591 [main:56] - replacing (emptyArray<Double>()[(bInt[0]++).toShort().times(101)], Double)
2021-03-11 13:08:54,592 [main:38] - replacing emptyArray<Double>()[(bInt[0]++).toShort().times(101)] Double
2021-03-11 13:08:54,592 [main:42] - Getting value of type Double
2021-03-11 13:08:54,712 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:08:54,714 [main:46] - GENERATED VALUE OF TYPE Double = 0.44339925935661817
2021-03-11 13:08:54,714 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:54,717 [main:55] - randomType = UShort
2021-03-11 13:08:54,837 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:08:54,870 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@3cff71e]
2021-03-11 13:08:54,871 [main:66] - Generated call from random type = (32649.toUShort()).toDouble().ulp
2021-03-11 13:08:54,871 [main:63] - replacement of emptyArray<Double>()[(bInt[0]++).toShort().times(101)] of type Double is (32649.toUShort()).toDouble().ulp
2021-03-11 13:08:54,991 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:54,991 [main:66] - Compilation checking started
2021-03-11 13:08:55,322 [main:49] - Result = false
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = floatArrayOf((aInt[0]).toFloat().dec())
    
    val aDouble: Array<Double> = Array<Double>(-1946076032, {a: Int -> 0.7580811333421495})
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    (aByte).sum()
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    (32649.toUShort()).toDouble().ulp--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:08:55,330 [main:56] - replacing (0, Int)
2021-03-11 13:08:55,330 [main:38] - replacing 0 Int
2021-03-11 13:08:55,330 [main:42] - Getting value of type Int
2021-03-11 13:08:55,450 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:55,451 [main:46] - GENERATED VALUE OF TYPE Int = 1166700225
2021-03-11 13:08:55,451 [main:49] - GENERATED IS CALL =false
2021-03-11 13:08:55,586 [main:55] - randomType = Set<Short>
2021-03-11 13:08:55,587 [main:94] - GETTING Int from Array<Long>
2021-03-11 13:08:55,602 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]]
2021-03-11 13:08:55,602 [main:137] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4ce5dba5]
2021-03-11 13:08:55,723 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:55,856 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:55,857 [main:105] - GENERATED CALL = (aLong).size.coerceIn(1216956941, 1162489656)
2021-03-11 13:08:55,857 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]]
2021-03-11 13:08:55,857 [main:137] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@63b4b582]
2021-03-11 13:08:55,857 [main:105] - GENERATED CALL = (aLong).size.inv()
2021-03-11 13:08:55,857 [main:101] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.Array<out T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@51b25bfd]]
2021-03-11 13:08:55,857 [main:137] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.Array<out T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@51b25bfd]
2021-03-11 13:08:55,979 [main:302] - generating value of type = T false depth = 0
2021-03-11 13:08:56,106 [main:43] - GENERATING CALL OF fun <T> maxOf(a: Comparable<T>, other: Comparable<T>): T = TODO()
2021-03-11 13:08:56,108 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: Comparable<T>, other: Comparable<T>): T = TODO()
2021-03-11 13:08:56,234 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-11 13:08:56,239 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-11 13:08:56,243 [main:95] - GENERATED = maxOf<Comparable<T>>(0.7261568f, 16600.toUShort())
2021-03-11 13:08:56,244 [main:105] - GENERATED CALL = (aLong).lastIndexOf(maxOf<Comparable<T>>(0.7261568f, 16600.toUShort()))
2021-03-11 13:08:56,244 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:08:56,244 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:08:56,364 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:56,365 [main:105] - GENERATED CALL = (aLong).size.xor(458757466)
2021-03-11 13:08:56,366 [main:101] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.Array<out T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2847aa80]]
2021-03-11 13:08:56,366 [main:137] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.Array<out T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2847aa80]
2021-03-11 13:08:56,531 [main:302] - generating value of type = T false depth = 0
2021-03-11 13:08:56,658 [main:43] - GENERATING CALL OF fun <T> minOf(a: Short, other: Short, comparator: kotlin.Comparator<Short>): T = TODO()
2021-03-11 13:08:56,660 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Short, other: Short, comparator: kotlin.Comparator<Short>): T = TODO()
2021-03-11 13:08:56,964 [main:302] - generating value of type = Short true depth = 3
2021-03-11 13:08:56,965 [main:302] - generating value of type = Short true depth = 3
2021-03-11 13:08:56,966 [main:302] - generating value of type = Comparator<Short> false depth = 3
2021-03-11 13:08:57,113 [main:43] - GENERATING CALL OF fun <T> reverseOrder(): Comparator<Short> = TODO()
2021-03-11 13:08:57,115 [main:61] - WITHOUT TYPE PARAMS = fun <T> reverseOrder(): Comparator<Short> = TODO()
2021-03-11 13:08:57,239 [main:95] - GENERATED = reverseOrder<Short>()
2021-03-11 13:08:57,239 [main:95] - GENERATED = minOf<Short>(-15555, -19552, reverseOrder<Short>())
2021-03-11 13:08:57,239 [main:105] - GENERATED CALL = (aLong).indexOf(minOf<Short>(-15555, -19552, reverseOrder<Short>()))
2021-03-11 13:08:57,239 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]]
2021-03-11 13:08:57,239 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c10c7e]
2021-03-11 13:08:57,359 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:57,360 [main:105] - GENERATED CALL = (aLong).size.rem(57)
2021-03-11 13:08:57,360 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]]
2021-03-11 13:08:57,360 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1d7b348c]
2021-03-11 13:08:57,480 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:08:57,481 [main:105] - GENERATED CALL = (aLong).size.compareTo(-65)
2021-03-11 13:08:57,481 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]]
2021-03-11 13:08:57,481 [main:137] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e5d0b7f]
2021-03-11 13:08:57,601 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:57,602 [main:105] - GENERATED CALL = (aLong).size.ushr(-2037793630)
2021-03-11 13:08:57,602 [main:101] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6c21f47d], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]]
2021-03-11 13:08:57,602 [main:137] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6c21f47d]
2021-03-11 13:08:57,722 [main:302] - generating value of type = Any false depth = 0
2021-03-11 13:08:57,722 [main:137] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@68b4b9db]
2021-03-11 13:08:57,841 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 13:08:57,842 [main:105] - GENERATED CALL = (aLong).equals("xrpgq").compareTo(true)
2021-03-11 13:08:57,842 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]]
2021-03-11 13:08:57,842 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@150a9b58]
2021-03-11 13:08:57,961 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:08:57,962 [main:105] - GENERATED CALL = (aLong).size.coerceAtMost(1504647697)
2021-03-11 13:08:57,962 [main:63] - replacement of 0 of type Int is (aLong).size.ushr(-2037793630)
2021-03-11 13:08:58,080 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:58,089 [main:56] - replacing (aInt, Array<Int>)
2021-03-11 13:08:58,089 [main:38] - replacing aInt Array<Int>
2021-03-11 13:08:58,089 [main:42] - Getting value of type Array<Int>
2021-03-11 13:08:58,209 [main:302] - generating value of type = Array<Int> false depth = 0
2021-03-11 13:08:58,333 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Int): Array<Int> = TODO()
2021-03-11 13:08:58,335 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->Int): Array<Int> = TODO()
2021-03-11 13:08:58,713 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:08:58,714 [main:302] - generating value of type = Function1<Int, Int> false depth = 3
2021-03-11 13:08:58,715 [main:302] - generating value of type = Int true depth = 4
2021-03-11 13:08:58,716 [main:95] - GENERATED = Array<Int>(-645197256, {a: Int -> 1243199063})
2021-03-11 13:08:58,716 [main:46] - GENERATED VALUE OF TYPE Array<Int> = Array<Int>(-645197256, {a: Int -> 1243199063})
2021-03-11 13:08:58,716 [main:49] - GENERATED IS CALL =true
2021-03-11 13:08:58,719 [main:55] - randomType = Float
2021-03-11 13:08:58,838 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:08:58,868 [main:94] - GETTING Array<Int> from Double
2021-03-11 13:08:58,895 [main:94] - GETTING Array<Int> from Long
2021-03-11 13:08:58,923 [main:94] - GETTING Array<Int> from Array<Int>
2021-03-11 13:08:58,932 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]]
2021-03-11 13:08:58,932 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2bdfa80e]
2021-03-11 13:08:58,932 [main:105] - GENERATED CALL = (aInt).sortedArray()
2021-03-11 13:08:58,932 [main:101] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]]
2021-03-11 13:08:58,932 [main:137] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@10bf1c7f]
2021-03-11 13:08:58,932 [main:105] - GENERATED CALL = (aInt).sortedArrayDescending()
2021-03-11 13:08:58,932 [main:101] - Case = [public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]]
2021-03-11 13:08:58,932 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@47c3fcde]
2021-03-11 13:08:59,051 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-11 13:08:59,175 [main:43] - GENERATING CALL OF fun <T> emptySet(): Collection<Int> = TODO()
2021-03-11 13:08:59,177 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptySet(): Collection<Int> = TODO()
2021-03-11 13:08:59,301 [main:95] - GENERATED = emptySet<Int>()
2021-03-11 13:08:59,301 [main:105] - GENERATED CALL = (aInt).sliceArray(emptySet<Int>())
2021-03-11 13:08:59,301 [main:101] - Case = [public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]]
2021-03-11 13:08:59,301 [main:137] - GENERATING call of type public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4efab4b7]
2021-03-11 13:08:59,301 [main:105] - GENERATED CALL = (aInt).reversedArray()
2021-03-11 13:08:59,301 [main:101] - Case = [public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]]
2021-03-11 13:08:59,301 [main:137] - GENERATING call of type public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@14c680bd]
2021-03-11 13:08:59,301 [main:105] - GENERATED CALL = (aInt).requireNoNulls()
2021-03-11 13:08:59,302 [main:63] - replacement of aInt of type Array<Int> is (aInt).sliceArray(emptySet<Int>())
2021-03-11 13:08:59,421 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:08:59,430 [main:56] - replacing (floatArrayOf((aInt[0]).toFloat().dec()), FloatArray)
2021-03-11 13:08:59,431 [main:38] - replacing floatArrayOf((aInt[0]).toFloat().dec()) FloatArray
2021-03-11 13:08:59,431 [main:42] - Getting value of type FloatArray
2021-03-11 13:08:59,551 [main:302] - generating value of type = FloatArray false depth = 0
2021-03-11 13:08:59,674 [main:43] - GENERATING CALL OF fun FloatArray(size: kotlin.Int): FloatArray = TODO()
2021-03-11 13:08:59,676 [main:61] - WITHOUT TYPE PARAMS = fun FloatArray(size: kotlin.Int): FloatArray = TODO()
2021-03-11 13:08:59,928 [main:302] - generating value of type = Int true depth = 3
2021-03-11 13:08:59,930 [main:95] - GENERATED = FloatArray(-1049031800)
2021-03-11 13:08:59,930 [main:46] - GENERATED VALUE OF TYPE FloatArray = FloatArray(-1049031800)
2021-03-11 13:08:59,930 [main:49] - GENERATED IS CALL =true
2021-03-11 13:09:00,058 [main:55] - randomType = Byte?
2021-03-11 13:09:00,178 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:00,211 [main:94] - GETTING FloatArray from DoubleArray
2021-03-11 13:09:00,219 [main:94] - GETTING FloatArray from Short
2021-03-11 13:09:00,248 [main:94] - GETTING FloatArray from Array<Float>
2021-03-11 13:09:00,257 [main:101] - Case = [public fun kotlin.Array<out kotlin.Float>.toFloatArray(): kotlin.FloatArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c77afa7]]
2021-03-11 13:09:00,257 [main:137] - GENERATING call of type public fun kotlin.Array<out kotlin.Float>.toFloatArray(): kotlin.FloatArray defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6c77afa7]
2021-03-11 13:09:00,258 [main:105] - GENERATED CALL = (aFloat).toFloatArray()
2021-03-11 13:09:00,258 [main:63] - replacement of floatArrayOf((aInt[0]).toFloat().dec()) of type FloatArray is FloatArray(-1049031800)
2021-03-11 13:09:00,376 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 13:09:00,376 [main:66] - Compilation checking started
2021-03-11 13:09:00,790 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = FloatArray(-1049031800)
    
    val aDouble: Array<Double> = Array<Double>(-1946076032, {a: Int -> 0.7580811333421495})
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    (aByte).sum()
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:09:00,798 [main:56] - replacing ((bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++, Float)
2021-03-11 13:09:00,799 [main:38] - replacing (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++ Float
2021-03-11 13:09:00,799 [main:42] - Getting value of type Float
2021-03-11 13:09:00,919 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:00,920 [main:46] - GENERATED VALUE OF TYPE Float = 0.4546277f
2021-03-11 13:09:00,920 [main:49] - GENERATED IS CALL =false
2021-03-11 13:09:00,922 [main:55] - randomType = String
2021-03-11 13:09:01,041 [main:302] - generating value of type = String true depth = 0
2021-03-11 13:09:01,058 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 13:09:01,176 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:01,177 [main:66] - Generated call from random type = ("umahi").length.minus(0.057314694f)
2021-03-11 13:09:01,178 [main:94] - GETTING Float from Long
2021-03-11 13:09:01,206 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]]
2021-03-11 13:09:01,206 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:09:01,326 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:01,327 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2862ca5]
2021-03-11 13:09:01,447 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:01,448 [main:105] - GENERATED CALL = (aLong[0]).compareTo(57).div(0.3308472f)
2021-03-11 13:09:01,448 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]]
2021-03-11 13:09:01,448 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:09:01,573 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:01,574 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5dca6386]
2021-03-11 13:09:01,696 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:01,697 [main:105] - GENERATED CALL = (aLong[0]).compareTo(-89).minus(0.23463303f)
2021-03-11 13:09:01,697 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea], public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]]
2021-03-11 13:09:01,697 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@15e7e5ea]
2021-03-11 13:09:01,872 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:01,873 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@42206830]
2021-03-11 13:09:02,000 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:02,001 [main:105] - GENERATED CALL = (aLong[0]).compareTo(93).times(0.5323478f)
2021-03-11 13:09:02,001 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe], public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@76592c22]]
2021-03-11 13:09:02,001 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@464172fe]
2021-03-11 13:09:02,001 [main:137] - GENERATING call of type public final fun toFloat(): kotlin.Float defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@76592c22]
2021-03-11 13:09:02,002 [main:105] - GENERATED CALL = (aLong[0]).toChar().toFloat()
2021-03-11 13:09:02,002 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf], public fun kotlin.Float.coerceIn(minimumValue: kotlin.Float, maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@54e32b98]]
2021-03-11 13:09:02,002 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:09:02,138 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:02,139 [main:137] - GENERATING call of type public fun kotlin.Float.coerceIn(minimumValue: kotlin.Float, maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@54e32b98]
2021-03-11 13:09:02,280 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:02,424 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:02,426 [main:105] - GENERATED CALL = (aLong[0]).div(0.28079867f).coerceIn(0.75081635f, 0.41338164f)
2021-03-11 13:09:02,426 [main:101] - Case = [public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]]
2021-03-11 13:09:02,426 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@109c0b89]
2021-03-11 13:09:02,572 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:02,573 [main:105] - GENERATED CALL = (aLong[0]).minus(0.8781175f)
2021-03-11 13:09:02,573 [main:101] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add], public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]]
2021-03-11 13:09:02,573 [main:137] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@39ff3add]
2021-03-11 13:09:02,574 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7df666f7]
2021-03-11 13:09:02,699 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:02,700 [main:105] - GENERATED CALL = (aLong[0]).toByte().div(0.21818233f)
2021-03-11 13:09:02,700 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf], public final operator fun minus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@23e8b346]]
2021-03-11 13:09:02,700 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:09:02,830 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:02,831 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Float defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@23e8b346]
2021-03-11 13:09:02,960 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:02,962 [main:105] - GENERATED CALL = (aLong[0]).div(0.8299546f).minus(-91)
2021-03-11 13:09:02,962 [main:101] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf], public fun kotlin.Float.coerceAtMost(maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@24a3b6ac]]
2021-03-11 13:09:02,962 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1a66dfdf]
2021-03-11 13:09:03,102 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:03,104 [main:137] - GENERATING call of type public fun kotlin.Float.coerceAtMost(maximumValue: kotlin.Float): kotlin.Float defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@24a3b6ac]
2021-03-11 13:09:03,244 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:03,245 [main:105] - GENERATED CALL = (aLong[0]).div(0.43740165f).coerceAtMost(0.6831384f)
2021-03-11 13:09:03,246 [main:101] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4eed8ede]]
2021-03-11 13:09:03,246 [main:137] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@5a9da58e]
2021-03-11 13:09:03,246 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Float): kotlin.Float defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4eed8ede]
2021-03-11 13:09:03,385 [main:302] - generating value of type = Float true depth = 0
2021-03-11 13:09:03,387 [main:105] - GENERATED CALL = (aLong[0]).toLong().rem(0.68831646f)
2021-03-11 13:09:03,388 [main:63] - replacement of (bFloat).toTypedArray()[(bLong).size.ushr(1085190782)]++ of type Float is (aLong[0]).toChar().toFloat()
2021-03-11 13:09:03,557 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:09:03,558 [main:66] - Compilation checking started
2021-03-11 13:09:04,066 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = FloatArray(-1049031800)
    
    val aDouble: Array<Double> = Array<Double>(-1946076032, {a: Int -> 0.7580811333421495})
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (aLong[0]).toChar().toFloat()
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    (aByte).sum()
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    aShort[(true)?.compareTo(true).shr(-685211436)]++
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:09:04,075 [main:56] - replacing (aShort[(true)?.compareTo(true).shr(-685211436)]++, Double)
2021-03-11 13:09:04,076 [main:38] - replacing aShort[(true)?.compareTo(true).shr(-685211436)]++ Double
2021-03-11 13:09:04,076 [main:42] - Getting value of type Double
2021-03-11 13:09:04,219 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:09:04,221 [main:46] - GENERATED VALUE OF TYPE Double = 0.9338164352788255
2021-03-11 13:09:04,221 [main:49] - GENERATED IS CALL =false
2021-03-11 13:09:04,405 [main:55] - randomType = Int?
2021-03-11 13:09:04,540 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:04,587 [main:137] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@33f80d9d]
2021-03-11 13:09:04,737 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:04,738 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@76abaec]
2021-03-11 13:09:04,870 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:09:04,872 [main:66] - Generated call from random type = (-649435641)?.compareTo(307788713).minus(0.013124588710100471)
2021-03-11 13:09:04,873 [main:94] - GETTING Double from DoubleArray
2021-03-11 13:09:04,882 [main:101] - Case = [public inline fun kotlin.DoubleArray.reduceRightIndexed(operation: (index: kotlin.Int, kotlin.Double, acc: kotlin.Double) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61a1ca20]]
2021-03-11 13:09:04,882 [main:137] - GENERATING call of type public inline fun kotlin.DoubleArray.reduceRightIndexed(operation: (index: kotlin.Int, kotlin.Double, acc: kotlin.Double) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61a1ca20]
2021-03-11 13:09:05,014 [main:302] - generating value of type = Function3<[@kotlin.ParameterName] Int, Double, [@kotlin.ParameterName] Double, Double> false depth = 0
2021-03-11 13:09:05,016 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:09:05,017 [main:105] - GENERATED CALL = (bDouble).reduceRightIndexed({a: Int, b: Double, c: Double -> 0.4990907941783469})
2021-03-11 13:09:05,018 [main:101] - Case = [public fun kotlin.DoubleArray.sum(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@369a654e]]
2021-03-11 13:09:05,018 [main:137] - GENERATING call of type public fun kotlin.DoubleArray.sum(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@369a654e]
2021-03-11 13:09:05,018 [main:105] - GENERATED CALL = (bDouble).sum()
2021-03-11 13:09:05,018 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.DoubleArray[DeserializedSimpleFunctionDescriptor@7ae5a4ca], public final operator fun plus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5fd21683]]
2021-03-11 13:09:05,018 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.DoubleArray[DeserializedSimpleFunctionDescriptor@7ae5a4ca]
2021-03-11 13:09:05,152 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:05,154 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5fd21683]
2021-03-11 13:09:05,299 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:05,301 [main:105] - GENERATED CALL = (bDouble).get(826540780).plus(64)
2021-03-11 13:09:05,301 [main:101] - Case = [public inline fun kotlin.DoubleArray.reduceIndexed(operation: (index: kotlin.Int, acc: kotlin.Double, kotlin.Double) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@22fef4d4]]
2021-03-11 13:09:05,301 [main:137] - GENERATING call of type public inline fun kotlin.DoubleArray.reduceIndexed(operation: (index: kotlin.Int, acc: kotlin.Double, kotlin.Double) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@22fef4d4]
2021-03-11 13:09:05,439 [main:302] - generating value of type = Function3<[@kotlin.ParameterName] Int, [@kotlin.ParameterName] Double, Double, Double> false depth = 0
2021-03-11 13:09:05,440 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:09:05,441 [main:105] - GENERATED CALL = (bDouble).reduceIndexed({a: Int, b: Double, c: Double -> 0.6125885063670273})
2021-03-11 13:09:05,441 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.DoubleArray[DeserializedSimpleFunctionDescriptor@7ae5a4ca], @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@68b7f942]]
2021-03-11 13:09:05,441 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.DoubleArray[DeserializedSimpleFunctionDescriptor@7ae5a4ca]
2021-03-11 13:09:05,586 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:05,588 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@68b7f942]
2021-03-11 13:09:05,588 [main:105] - GENERATED CALL = (bDouble).get(-1648770858).nextUp()
2021-03-11 13:09:05,588 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.maxOf(selector: (kotlin.Double) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15902953]]
2021-03-11 13:09:05,588 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.maxOf(selector: (kotlin.Double) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@15902953]
2021-03-11 13:09:05,724 [main:302] - generating value of type = Function1<Double, Double> false depth = 0
2021-03-11 13:09:05,725 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:09:05,726 [main:105] - GENERATED CALL = (bDouble).maxOf({a: Double -> 0.42509728953299464})
2021-03-11 13:09:05,726 [main:101] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.DoubleArray.component2(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f77b24]]
2021-03-11 13:09:05,726 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.DoubleArray.component2(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7f77b24]
2021-03-11 13:09:05,726 [main:105] - GENERATED CALL = (bDouble).component2()
2021-03-11 13:09:05,727 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.minOf(selector: (kotlin.Double) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@108ebd39]]
2021-03-11 13:09:05,727 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.internal.InlineOnly public inline fun kotlin.DoubleArray.minOf(selector: (kotlin.Double) -> kotlin.Double): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@108ebd39]
2021-03-11 13:09:05,864 [main:302] - generating value of type = Function1<Double, Double> false depth = 0
2021-03-11 13:09:05,866 [main:302] - generating value of type = Double true depth = 1
2021-03-11 13:09:05,868 [main:105] - GENERATED CALL = (bDouble).minOf({a: Double -> 0.30410910966476457})
2021-03-11 13:09:05,868 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.DoubleArray[DeserializedSimpleFunctionDescriptor@7ae5a4ca], public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ebbab4b]]
2021-03-11 13:09:05,868 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Double defined in kotlin.DoubleArray[DeserializedSimpleFunctionDescriptor@7ae5a4ca]
2021-03-11 13:09:06,033 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:06,034 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@ebbab4b]
2021-03-11 13:09:06,173 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:06,175 [main:105] - GENERATED CALL = (bDouble).get(1370750258).minus(-60)
2021-03-11 13:09:06,175 [main:101] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.DoubleArray.component3(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1057d9a4]]
2021-03-11 13:09:06,175 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.DoubleArray.component3(): kotlin.Double defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1057d9a4]
2021-03-11 13:09:06,175 [main:105] - GENERATED CALL = (bDouble).component3()
2021-03-11 13:09:06,175 [main:63] - replacement of aShort[(true)?.compareTo(true).shr(-685211436)]++ of type Double is (bDouble).sum()
2021-03-11 13:09:06,302 [main:33] - Trying to replace Element(POSTFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:09:06,302 [main:66] - Compilation checking started
2021-03-11 13:09:06,767 [main:53] - Result = true
Text:
fun box(): String {
    val aByte: Array<Byte> = Array<Byte>(1483428090, {a: Int -> -17})
    val bByte: ByteArray = byteArrayOf((1930521701.toUInt()).toUShort().toByte())
    
    val aShort: Array<Short> = emptyArray<Short>()
    val bShort: ShortArray = ShortArray(-1495482079, {a: Int -> 23620})
    
    val aInt: Array<Int> = arrayOf<Int>((aByte[0]--).compareTo(77).coerceAtMost(722529874))
    val bInt: IntArray = intArrayOf(-1447270195)
    
    val aLong: Array<Long> = arrayOf<Long>(-6435637591053247787)
    val bLong: LongArray = longArrayOf((aShort[0]--).toLong().xor(487472864545714146))

    val aFloat: Array<Float> = arrayOf<Float>((aShort[0]--).toChar().toFloat())
    val bFloat: FloatArray = FloatArray(-1049031800)
    
    val aDouble: Array<Double> = Array<Double>(-1946076032, {a: Int -> 0.7580811333421495})
    val bDouble: DoubleArray = DoubleArray(-1806556584, {a: Int -> 0.2057125457135599})

    emptyArray<Byte>()[('蟖').toByte().rem(-28)]--
    byteArrayOf(34)[(bByte).size.or(-1144148738)]
    if ((7).rangeTo(5).equals("psdeb")) return (57.toUByte()).toLong().toString(191804755)

    aByte[(aByte[0]++).div(0.27717453f).toBits()]++
    (false).compareTo(false).toByte()
    if ((ArrayDeque<Short>()).isNotEmpty()) return (bInt[0]++).toLong().toString(-1805654340)
    
    Array<Short>(-1121796693, {a: Int -> -23478})[(aInt[0]++).compareTo(-1480066691).coerceAtMost(2057379627)]--
    (aFloat).get(827805013).toShort()
    if ((bInt[0]++).compareTo(209948122).equals("bquuo")) return "uixkk"

    (aLong[0]).toShort().toShort()
    (-8200938406427831749).toShort().rotateLeft(1334926967)
    if ((bInt[0]++).toChar().isISOControl()) return (bFloat).size.toString(2102001077)
    
    (78190660510105222).toInt().minus(13)
    (aInt).toIntArray()[(false).compareTo(true).shl(-512772460)]--
    if ((bFloat).set(-419858181, 0.048983634f).equals("vrofk")) return (bDouble[0]).toChar().plus("vsqyp")

    Array<Int>(-1774323293, {a: Int -> -544864838})[(bInt[0]++).toShort().plus(39)]++
    -1899281381
    if ((bFloat[0]).toChar().isLetter()) return (bShort[0]).toLong().toString(-24156188)

    (aInt).sum()
    (aLong[0]--).toLong().coerceAtMost(-7318026973650123379)
    if ((aDouble[0]++).compareTo(-63).equals("shwtc")) return (aInt[0]--).toString(-148199261)

    (aByte[0]++).div(795745138441812413).coerceIn(855953549960239095, 3279057278643365852)
    (aLong[0]).toByte().plus(7138535456890184839)
    if (false) return ('棡').toLong().toString(1014294261)

    (aLong[0]).toChar().toFloat()
    (aLong).size.plus(0.0058092475f)
    if ((27255845.toUInt()).toLong().equals("lfork")) return (bShort[0]--).toChar().uppercase()

    (aByte).sum()
    (bInt[0]++).div(0.21818757f).coerceAtMost(0.8925585f)
    if ((aShort[0]++).toDouble().isNaN()) return (0.27438194f).toChar().lowercase()

    (bDouble).sum()
    (bInt[0]).toFloat().minus(0.49738065653229213)
    if ((hashMapOf<Byte, Double>()).containsValue(0.06760777982927502)) return (bDouble[0]--).toChar().titlecase()

    emptyArray<Double>()[(bInt[0]++).toShort().times(101)]--
    (bDouble).sortedArray()[(0.51171917f)?.toShort().minus(103)]--
    if ((125).compareTo(67).equals("gouyr")) return (87).toChar().titlecase()

    return (0.3107859f)?.toChar().plus("rgkjn")
}


2021-03-11 13:09:06,776 [main:56] - replacing (0, Int)
2021-03-11 13:09:06,776 [main:38] - replacing 0 Int
2021-03-11 13:09:06,776 [main:42] - Getting value of type Int
2021-03-11 13:09:06,905 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:06,906 [main:46] - GENERATED VALUE OF TYPE Int = -1966755839
2021-03-11 13:09:06,906 [main:49] - GENERATED IS CALL =false
2021-03-11 13:09:07,053 [main:55] - randomType = Char?
2021-03-11 13:09:07,184 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:09:07,212 [main:137] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@66ca5bd5]
2021-03-11 13:09:07,212 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]
2021-03-11 13:09:07,350 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:07,351 [main:66] - Generated call from random type = ('')?.toByte().plus(85)
2021-03-11 13:09:07,352 [main:94] - GETTING Int from Float
2021-03-11 13:09:07,404 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]]
2021-03-11 13:09:07,404 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:09:07,539 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:07,540 [main:137] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@983082e]
2021-03-11 13:09:07,669 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:07,671 [main:105] - GENERATED CALL = (aFloat[0]++).compareTo(108).coerceAtLeast(-1776630453)
2021-03-11 13:09:07,671 [main:101] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943], public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]]
2021-03-11 13:09:07,671 [main:137] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@468ad943]
2021-03-11 13:09:07,671 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@57c5c2d0]
2021-03-11 13:09:07,800 [main:302] - generating value of type = Char true depth = 0
2021-03-11 13:09:07,801 [main:105] - GENERATED CALL = (aFloat[0]++).toChar().minus('㧘')
2021-03-11 13:09:07,802 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]]
2021-03-11 13:09:07,802 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@59766015]
2021-03-11 13:09:07,802 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@76c8837c]
2021-03-11 13:09:07,926 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:07,928 [main:105] - GENERATED CALL = (aFloat[0]++).toByte().plus(-83)
2021-03-11 13:09:07,928 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]]
2021-03-11 13:09:07,928 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@52a0014c]
2021-03-11 13:09:07,928 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]
2021-03-11 13:09:07,928 [main:105] - GENERATED CALL = (aFloat[0]++).toLong().toInt()
2021-03-11 13:09:07,928 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]]
2021-03-11 13:09:07,928 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:09:07,928 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69c21701]
2021-03-11 13:09:08,055 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:08,056 [main:105] - GENERATED CALL = (aFloat[0]++).toInt().minus(-23)
2021-03-11 13:09:08,056 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]]
2021-03-11 13:09:08,056 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@686986fe]
2021-03-11 13:09:08,056 [main:105] - GENERATED CALL = (aFloat[0]++).roundToInt()
2021-03-11 13:09:08,056 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]]
2021-03-11 13:09:08,056 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:09:08,056 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@7f42ffb7]
2021-03-11 13:09:08,056 [main:105] - GENERATED CALL = (aFloat[0]++).toInt().countOneBits()
2021-03-11 13:09:08,056 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:09:08,056 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3a7cc34c]
2021-03-11 13:09:08,184 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:08,185 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:09:08,382 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:08,383 [main:105] - GENERATED CALL = (aFloat[0]++).compareTo(24).xor(903105588)
2021-03-11 13:09:08,383 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]]
2021-03-11 13:09:08,383 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3facdde8]
2021-03-11 13:09:08,383 [main:137] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@22c5d329]
2021-03-11 13:09:08,383 [main:105] - GENERATED CALL = (aFloat[0]++).toShort().unaryMinus()
2021-03-11 13:09:08,383 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]]
2021-03-11 13:09:08,383 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:09:08,383 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@520f2ae1]
2021-03-11 13:09:08,513 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:08,514 [main:105] - GENERATED CALL = (aFloat[0]++).toInt().xor(441641862)
2021-03-11 13:09:08,514 [main:63] - replacement of 0 of type Int is (aFloat[0]++).toInt().minus(-23)
2021-03-11 13:09:08,648 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:09:08,657 [main:56] - replacing (0, Int)
2021-03-11 13:09:08,657 [main:38] - replacing 0 Int
2021-03-11 13:09:08,657 [main:42] - Getting value of type Int
2021-03-11 13:09:08,785 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:08,786 [main:46] - GENERATED VALUE OF TYPE Int = -1404609461
2021-03-11 13:09:08,786 [main:49] - GENERATED IS CALL =false
2021-03-11 13:09:08,938 [main:55] - randomType = Function2<Int, Double, Char>
2021-03-11 13:09:08,939 [main:94] - GETTING Int from Double
2021-03-11 13:09:08,978 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]]
2021-03-11 13:09:08,978 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:09:09,104 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:09,105 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@bc75f4f]
2021-03-11 13:09:09,234 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:09,236 [main:105] - GENERATED CALL = (aDouble[0]).compareTo(80).rotateLeft(-1695500632)
2021-03-11 13:09:09,236 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]]
2021-03-11 13:09:09,236 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:09:09,236 [main:137] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4b1d4faf]
2021-03-11 13:09:09,364 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:09,365 [main:105] - GENERATED CALL = (aDouble[0]).toInt().times(9)
2021-03-11 13:09:09,365 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]]
2021-03-11 13:09:09,365 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:09:09,365 [main:137] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a829eed]
2021-03-11 13:09:09,498 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:09,500 [main:105] - GENERATED CALL = (aDouble[0]).toInt().shr(-683071187)
2021-03-11 13:09:09,500 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]]
2021-03-11 13:09:09,500 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:09:09,500 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@161f9889]
2021-03-11 13:09:09,500 [main:105] - GENERATED CALL = (aDouble[0]).toLong().countTrailingZeroBits()
2021-03-11 13:09:09,500 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]]
2021-03-11 13:09:09,500 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@38a57c93]
2021-03-11 13:09:09,628 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:09,629 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2c5c737d]
2021-03-11 13:09:09,629 [main:105] - GENERATED CALL = (aDouble[0]).compareTo(125).countTrailingZeroBits()
2021-03-11 13:09:09,629 [main:101] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a], public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]]
2021-03-11 13:09:09,629 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:09:09,629 [main:137] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@775d7f5d]
2021-03-11 13:09:09,630 [main:105] - GENERATED CALL = (aDouble[0]).toLong().toInt()
2021-03-11 13:09:09,630 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]]
2021-03-11 13:09:09,630 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:09:09,630 [main:137] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@760dad49]
2021-03-11 13:09:09,760 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:09,761 [main:105] - GENERATED CALL = (aDouble[0]).toInt().and(542630242)
2021-03-11 13:09:09,761 [main:101] - Case = [@kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]]
2021-03-11 13:09:09,761 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@69942950]
2021-03-11 13:09:09,761 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3f505eee]
2021-03-11 13:09:09,888 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:09,889 [main:105] - GENERATED CALL = (aDouble[0]).toByte().rem(77)
2021-03-11 13:09:09,889 [main:101] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@668f6e3a]]
2021-03-11 13:09:09,889 [main:137] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de3b7dd]
2021-03-11 13:09:09,889 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@668f6e3a]
2021-03-11 13:09:10,013 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:10,014 [main:105] - GENERATED CALL = (aDouble[0]).toShort().minus(-34)
2021-03-11 13:09:10,014 [main:101] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]]
2021-03-11 13:09:10,014 [main:137] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6bca1456]
2021-03-11 13:09:10,014 [main:137] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6e8e502f]
2021-03-11 13:09:10,015 [main:105] - GENERATED CALL = (aDouble[0]).toInt().unaryPlus()
2021-03-11 13:09:10,015 [main:63] - replacement of 0 of type Int is -1404609461
2021-03-11 13:09:10,152 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 13:09:10,160 [main:56] - replacing (bLong[(bFloat).size.countLeadingZeroBits()], Long)
2021-03-11 13:09:10,160 [main:38] - replacing bLong[(bFloat).size.countLeadingZeroBits()] Long
2021-03-11 13:09:10,160 [main:42] - Getting value of type Long
2021-03-11 13:09:10,288 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:09:10,289 [main:46] - GENERATED VALUE OF TYPE Long = 3172683493711958190
2021-03-11 13:09:10,289 [main:49] - GENERATED IS CALL =false
2021-03-11 13:09:10,292 [main:55] - randomType = UShort
2021-03-11 13:09:10,436 [main:302] - generating value of type = UShort true depth = 0
2021-03-11 13:09:10,479 [main:137] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@1e2ad76a]
2021-03-11 13:09:10,479 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2de6619a]
2021-03-11 13:09:10,479 [main:66] - Generated call from random type = (24575.toUShort()).toDouble().toLong()
2021-03-11 13:09:10,480 [main:94] - GETTING Long from Array<Long>
2021-03-11 13:09:10,494 [main:101] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@27660311], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]]
2021-03-11 13:09:10,494 [main:137] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@f49d9a5]
2021-03-11 13:09:10,495 [main:105] - GENERATED CALL = (aLong).size.toLong()
2021-03-11 13:09:10,495 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@40045f23]]
2021-03-11 13:09:10,495 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:09:10,625 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:10,626 [main:137] - GENERATING call of type public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@40045f23]
2021-03-11 13:09:10,754 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:09:10,755 [main:105] - GENERATED CALL = (aLong).get(963366137).coerceAtLeast(-3025636135740257199)
2021-03-11 13:09:10,755 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Long.rotateLeft(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@1aef20d5]]
2021-03-11 13:09:10,755 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:09:10,887 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:10,889 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Long.rotateLeft(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@1aef20d5]
2021-03-11 13:09:11,021 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:11,023 [main:105] - GENERATED CALL = (aLong).get(1000598144).rotateLeft(856081883)
2021-03-11 13:09:11,023 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@6eb1a9b2]]
2021-03-11 13:09:11,023 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:09:11,166 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:11,168 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@6eb1a9b2]
2021-03-11 13:09:11,168 [main:105] - GENERATED CALL = (aLong).get(153202377).takeHighestOneBit()
2021-03-11 13:09:11,168 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeLowestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@463a766]]
2021-03-11 13:09:11,168 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:09:11,298 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:11,300 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeLowestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@463a766]
2021-03-11 13:09:11,300 [main:105] - GENERATED CALL = (aLong).get(662250054).takeLowestOneBit()
2021-03-11 13:09:11,300 [main:101] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d8efd99]]
2021-03-11 13:09:11,300 [main:137] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Long>.sum(): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d8efd99]
2021-03-11 13:09:11,300 [main:105] - GENERATED CALL = (aLong).sum()
2021-03-11 13:09:11,300 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4baecbad]]
2021-03-11 13:09:11,300 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:09:11,425 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:11,427 [main:137] - GENERATING call of type public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4baecbad]
2021-03-11 13:09:11,427 [main:105] - GENERATED CALL = (aLong).get(595281080).inv()
2021-03-11 13:09:11,427 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], public final operator fun minus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@19797838]]
2021-03-11 13:09:11,427 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:09:11,552 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:11,553 [main:137] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@19797838]
2021-03-11 13:09:11,691 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:11,693 [main:105] - GENERATED CALL = (aLong).get(1519448105).minus(-128)
2021-03-11 13:09:11,693 [main:101] - Case = [public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9], public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@24c9fa8e]]
2021-03-11 13:09:11,693 [main:137] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@6786d6c9]
2021-03-11 13:09:11,820 [main:302] - generating value of type = Int true depth = 0
2021-03-11 13:09:11,821 [main:137] - GENERATING call of type public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@24c9fa8e]
2021-03-11 13:09:11,950 [main:302] - generating value of type = Long true depth = 0
2021-03-11 13:09:11,951 [main:105] - GENERATED CALL = (aLong).get(-268707849).xor(1973777299555986158)
2021-03-11 13:09:11,951 [main:101] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.sumOf(selector: (T) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@524a23e8]]
2021-03-11 13:09:11,952 [main:137] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.Array<out T>.sumOf(selector: (T) -> kotlin.Long): kotlin.Long defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@524a23e8]
2021-03-11 13:09:12,081 [main:302] - generating value of type = Function1<T, Long> false depth = 0
2021-03-11 13:09:12,083 [main:302] - generating value of type = Long true depth = 1
2021-03-11 13:09:12,084 [main:105] - GENERATED CALL = (aLong).sumOf({a: T -> 355669124478149330})
2021-03-11 13:09:12,084 [main:63] - replacement of bLong[(bFloat).size.countLeadingZeroBits()] of type Long is (aLong).get(1519448105).minus(-128)
2021-03-11 13:09:12,209 [main:33] - Trying to replace Element(ARRAY_ACCESS_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 13:09:12,219 [main:56] - replacing (aLong, Array<Long>)
2021-03-11 13:09:12,219 [main:38] - replacing aLong Array<Long>
2021-03-11 13:09:12,219 [main:42] - Getting value of type Array<Long>
2021-03-11 13:09:12,347 [main:302] - generating value of type = Array<Long> false depth = 0
2021-03-11 13:09:12,482 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Long> = TODO()
2021-03-11 13:09:12,484 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Long> = TODO()
2021-03-11 13:09:12,616 [main:95] - GENERATED = emptyArray<Long>()
2021-03-11 13:09:12,616 [main:46] - GENERATED VALUE OF TYPE Array<Long> = emptyArray<Long>()
2021-03-11 13:09:12,616 [main:49] - GENERATED IS CALL =true
2021-03-11 13:09:12,899 [main:55] - randomType = HashSet<Double>
2021-03-11 13:09:13,025 [main:302] - generating value of type = HashSet<Double> false depth = 0
2021-03-11 13:09:13,161 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Double): HashSet<Double> = TODO()
2021-03-11 13:09:13,163 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Double): HashSet<Double> = TODO()
2021-03-11 13:09:13,290 [main:302] - generating value of type = Double true depth = 3
2021-03-11 13:09:13,292 [main:95] - GENERATED = linkedSetOf<Double>(0.5057450066133634)
2021-03-11 13:09:13,412 [main:94] - GETTING Array<Long> from Array<Byte>
2021-03-11 13:09:13,422 [main:63] - replacement of aLong of type Array<Long> is aByte
2021-03-11 13:09:13,552 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 13:09:13,561 [main:56] - replacing ((bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()], Double)
2021-03-11 13:09:13,561 [main:38] - replacing (bDouble).sliceArray(setOfNotNull<Int>(-366667102))[(0.8369852669301577).toShort().countLeadingZeroBits()] Double
2021-03-11 13:09:13,561 [main:42] - Getting value of type Double
2021-03-11 13:09:13,691 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:09:13,692 [main:46] - GENERATED VALUE OF TYPE Double = 0.5104911948788706
2021-03-11 13:09:13,692 [main:49] - GENERATED IS CALL =false
2021-03-11 13:09:14,117 [main:55] - randomType = Function2<Short, Byte, ULong?>
2021-03-11 13:09:14,118 [main:94] - GETTING Double from Short
2021-03-11 13:09:14,238 [main:101] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@120440d0]]
2021-03-11 13:09:14,238 [main:137] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6761979e]
2021-03-11 13:09:14,367 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 13:09:14,368 [main:137] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@120440d0]
2021-03-11 13:09:14,496 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:09:14,497 [main:105] - GENERATED CALL = (aShort[0]++).compareTo(-37).rem(0.582178090915321)
2021-03-11 13:09:14,498 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]]
2021-03-11 13:09:14,498 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:09:14,622 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:09:14,623 [main:137] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@121ac560]
2021-03-11 13:09:14,623 [main:105] - GENERATED CALL = (aShort[0]++).div(0.10598971661640155).nextDown()
2021-03-11 13:09:14,623 [main:101] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.absoluteValue: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@170efff7]]
2021-03-11 13:09:14,623 [main:137] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6b35d71f]
2021-03-11 13:09:14,623 [main:105] - GENERATED CALL = (aShort[0]++).toDouble().absoluteValue
2021-03-11 13:09:14,624 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public fun kotlin.Double.coerceIn(minimumValue: kotlin.Double, maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5b73fd45]]
2021-03-11 13:09:14,624 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:09:14,774 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:09:14,775 [main:137] - GENERATING call of type public fun kotlin.Double.coerceIn(minimumValue: kotlin.Double, maximumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@5b73fd45]
2021-03-11 13:09:14,902 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:09:15,029 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:09:15,030 [main:105] - GENERATED CALL = (aShort[0]++).div(0.08733996698037794).coerceIn(0.7839067726494984, 0.8313005589574396)
2021-03-11 13:09:15,030 [main:101] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858], public final operator fun plus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5fd21683]]
2021-03-11 13:09:15,030 [main:137] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@7f1a0858]
2021-03-11 13:09:15,158 [main:302] - generating value of type = Double true depth = 0
2021-03-11 13:09:15,159 [main:137] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@5fd21683]
