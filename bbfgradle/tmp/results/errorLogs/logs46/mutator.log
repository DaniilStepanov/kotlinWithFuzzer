2021-03-11 23:38:02,634 [main:66] - Compilation checking started
2021-03-11 23:38:04,716 [main:112] - generating klass A text = class A : ArrayList<String>() {
    override val size: Int get() = super.size + 56
}
2021-03-11 23:38:05,121 [main:45] - Trying to change 11 nodes
2021-03-11 23:38:05,125 [main:53] - replacing (super, ArrayList<String>)
2021-03-11 23:38:05,125 [main:50] - replacing super ArrayList<String>
2021-03-11 23:38:05,125 [main:54] - Getting value of type ArrayList<String>
2021-03-11 23:38:05,309 [main:302] - generating value of type = ArrayList<String> false depth = 0
2021-03-11 23:38:05,849 [main:43] - GENERATING CALL OF fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<String> = TODO()
2021-03-11 23:38:05,869 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(initialCapacity: kotlin.Int): ArrayList<String> = TODO()
2021-03-11 23:38:06,176 [main:302] - generating value of type = Int true depth = 3
2021-03-11 23:38:06,178 [main:95] - GENERATED = ArrayList<String>(893962764)
2021-03-11 23:38:06,178 [main:58] - GENERATED VALUE OF TYPE ArrayList<String> = ArrayList<String>(893962764)
2021-03-11 23:38:06,179 [main:61] - GENERATED IS CALL =true
2021-03-11 23:38:06,811 [main:67] - randomType = HashMap<Double, Pair<A, Int>>
2021-03-11 23:38:06,928 [main:302] - generating value of type = HashMap<Double, Pair<A, Int>> false depth = 0
2021-03-11 23:38:07,098 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(pairs: Pair<Double, Pair<A, Int>>): HashMap<Double, Pair<A, Int>> = TODO()
2021-03-11 23:38:07,102 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(pairs: Pair<Double, Pair<A, Int>>): HashMap<Double, Pair<A, Int>> = TODO()
2021-03-11 23:38:07,227 [main:302] - generating value of type = Pair<Double, Pair<A, Int>> false depth = 3
2021-03-11 23:38:07,385 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Double, second: Pair<A, Int>): Pair<Double, Pair<A, Int>> = TODO()
2021-03-11 23:38:07,389 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Double, second: Pair<A, Int>): Pair<Double, Pair<A, Int>> = TODO()
2021-03-11 23:38:07,522 [main:302] - generating value of type = Double true depth = 6
2021-03-11 23:38:07,523 [main:302] - generating value of type = Pair<A, Int> false depth = 6
2021-03-11 23:38:07,631 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: A, second: Int): Pair<A, Int> = TODO()
2021-03-11 23:38:07,633 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: A, second: Int): Pair<A, Int> = TODO()
2021-03-11 23:38:07,788 [main:302] - generating value of type = A false depth = 9
2021-03-11 23:38:07,788 [main:112] - generating klass A text = class A : ArrayList<String>() {
    override val size: Int get() = super.size + 56
}
2021-03-11 23:38:07,789 [main:302] - generating value of type = Int true depth = 9
2021-03-11 23:38:07,789 [main:95] - GENERATED = Pair<A, Int>(A(), -1878200359)
2021-03-11 23:38:07,790 [main:95] - GENERATED = Pair<Double, Pair<A, Int>>(0.6375853027658406, Pair<A, Int>(A(), -1878200359))
2021-03-11 23:38:07,791 [main:95] - GENERATED = linkedMapOf<Double, Pair<A, Int>>(Pair<Double, Pair<A, Int>>(0.6375853027658406, Pair<A, Int>(A(), -1878200359)))
2021-03-11 23:38:08,194 [main:106] - GETTING ArrayList<String> from Int
2021-03-11 23:38:08,285 [main:106] - GETTING ArrayList<String> from Int
2021-03-11 23:38:08,285 [main:61] - replacement of super of type ArrayList<String> is ArrayList<String>(893962764)
2021-03-11 23:38:08,385 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 23:38:08,386 [main:66] - Compilation checking started
2021-03-11 23:38:09,089 [main:53] - Result = true
Text:
class A : ArrayList<String>() {
    override val size: Int get() = ArrayList<String>(893962764).size + 56
}

fun box(): String {
    val a = A()
    if (a.size != 56) return "fail: ${a.size}"

    return "OK"
}


2021-03-11 23:38:09,092 [main:53] - replacing ("fail: ${a.size}", String)
2021-03-11 23:38:09,092 [main:50] - replacing "fail: ${a.size}" String
2021-03-11 23:38:09,092 [main:54] - Getting value of type String
