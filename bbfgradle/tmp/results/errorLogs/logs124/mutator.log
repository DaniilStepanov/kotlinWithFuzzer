2021-03-12 12:12:17,866 [main:66] - Compilation checking started
2021-03-12 12:12:19,489 [main:50] - replacing id: Int Int
2021-03-12 12:12:19,489 [main:54] - Getting value of type Int
2021-03-12 12:12:19,679 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:19,682 [main:58] - GENERATED VALUE OF TYPE Int = 1546216694
2021-03-12 12:12:19,683 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:19,690 [main:67] - randomType = Container
2021-03-12 12:12:19,860 [main:302] - generating value of type = Container false depth = 0
2021-03-12 12:12:19,861 [main:112] - generating klass Container text = class Container {
    var id: Int? = null
}
2021-03-12 12:12:20,314 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]
2021-03-12 12:12:20,514 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:20,518 [main:78] - Generated call from random type = (Container()).id?.ushr(1087747507)!!
2021-03-12 12:12:20,519 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-12 12:12:20,537 [main:66] - Compilation checking started
2021-03-12 12:12:21,212 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int = 1546216694): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $containers1"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $containers2"

    return "OK"
}
2021-03-12 12:12:21,212 [main:50] - replacing from: Int = 0 Int
2021-03-12 12:12:21,212 [main:54] - Getting value of type Int
2021-03-12 12:12:21,357 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:21,358 [main:58] - GENERATED VALUE OF TYPE Int = -312996771
2021-03-12 12:12:21,359 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:22,067 [main:67] - randomType = Function1<Char, UByte?>
2021-03-12 12:12:22,068 [main:106] - GETTING Int from Int
2021-03-12 12:12:22,202 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]]
2021-03-12 12:12:22,202 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:22,203 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]
2021-03-12 12:12:22,204 [main:117] - GENERATED CALL = (id).toInt().takeLowestOneBit()
2021-03-12 12:12:22,205 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3062c0d4]]
2021-03-12 12:12:22,205 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:12:22,205 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3062c0d4]
2021-03-12 12:12:22,206 [main:117] - GENERATED CALL = (id).toShort().countOneBits()
2021-03-12 12:12:22,207 [main:113] - Case = [public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]]
2021-03-12 12:12:22,207 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]
2021-03-12 12:12:22,208 [main:117] - GENERATED CALL = (id).ushr(id)
2021-03-12 12:12:22,208 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]]
2021-03-12 12:12:22,208 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:22,208 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]
2021-03-12 12:12:22,209 [main:117] - GENERATED CALL = (id).compareTo(id).dec()
2021-03-12 12:12:22,209 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@182ce28a]]
2021-03-12 12:12:22,209 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c]
2021-03-12 12:12:22,210 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Byte.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@182ce28a]
2021-03-12 12:12:22,211 [main:117] - GENERATED CALL = (id).toByte().countTrailingZeroBits()
2021-03-12 12:12:22,211 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]]
2021-03-12 12:12:22,211 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:22,212 [main:149] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]
2021-03-12 12:12:22,335 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:22,337 [main:117] - GENERATED CALL = (id).compareTo(id).coerceIn(-266507062, id)
2021-03-12 12:12:22,337 [main:113] - Case = [public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]]
2021-03-12 12:12:22,338 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]
2021-03-12 12:12:22,481 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:22,483 [main:117] - GENERATED CALL = (id).plus(74)
2021-03-12 12:12:22,483 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]]
2021-03-12 12:12:22,483 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:22,483 [main:149] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]
2021-03-12 12:12:22,484 [main:117] - GENERATED CALL = (id).toInt().coerceIn(id, id)
2021-03-12 12:12:22,485 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]]
2021-03-12 12:12:22,485 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:22,599 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:22,600 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]
2021-03-12 12:12:22,601 [main:117] - GENERATED CALL = (id).compareTo(1183799556).inv()
2021-03-12 12:12:22,601 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]]
2021-03-12 12:12:22,601 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:22,602 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:22,750 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:22,752 [main:117] - GENERATED CALL = (id).toInt().and(1692700648)
2021-03-12 12:12:22,752 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-12 12:12:22,753 [main:66] - Compilation checking started
2021-03-12 12:12:23,369 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int = 1546216694): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int  = -312996771, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $containers1"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $containers2"

    return "OK"
}
2021-03-12 12:12:23,370 [main:50] - replacing from: Int = 0 Int
2021-03-12 12:12:23,370 [main:54] - Getting value of type Int
2021-03-12 12:12:23,493 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:23,494 [main:58] - GENERATED VALUE OF TYPE Int = 6903162
2021-03-12 12:12:23,494 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:23,626 [main:67] - randomType = Short
2021-03-12 12:12:23,751 [main:302] - generating value of type = Short true depth = 0
2021-03-12 12:12:23,832 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@55d0632f]
2021-03-12 12:12:23,959 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:23,960 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1394e8ef]
2021-03-12 12:12:23,961 [main:78] - Generated call from random type = (-13629).compareTo(-113).shr(to)
2021-03-12 12:12:23,961 [main:106] - GETTING Int from Int
2021-03-12 12:12:24,030 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]]
2021-03-12 12:12:24,030 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:24,031 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]
2021-03-12 12:12:24,143 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:24,145 [main:117] - GENERATED CALL = (from).toInt().plus(-105)
2021-03-12 12:12:24,146 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@23fb307f]]
2021-03-12 12:12:24,146 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:24,146 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@23fb307f]
2021-03-12 12:12:24,147 [main:117] - GENERATED CALL = (from).compareTo(to).xor(to)
2021-03-12 12:12:24,147 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]]
2021-03-12 12:12:24,147 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:24,148 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]
2021-03-12 12:12:24,298 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:24,300 [main:117] - GENERATED CALL = (from).toInt().ushr(758518650)
2021-03-12 12:12:24,300 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]]
2021-03-12 12:12:24,300 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:24,437 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:24,438 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]
2021-03-12 12:12:24,440 [main:117] - GENERATED CALL = (from).compareTo(467039012).ushr(to)
2021-03-12 12:12:24,441 [main:113] - Case = [public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@45f80a0a]]
2021-03-12 12:12:24,441 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@45f80a0a]
2021-03-12 12:12:24,552 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:24,553 [main:117] - GENERATED CALL = (from).or(-716547897)
2021-03-12 12:12:24,553 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1dbef693]]
2021-03-12 12:12:24,554 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:12:24,554 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1dbef693]
2021-03-12 12:12:24,691 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:24,693 [main:117] - GENERATED CALL = (from).toShort().rem(122)
2021-03-12 12:12:24,694 [main:113] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@e59eac7], @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@ef5a84]]
2021-03-12 12:12:24,694 [main:149] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@e59eac7]
2021-03-12 12:12:24,695 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.roundToInt(): kotlin.Int defined in kotlin.math[DeserializedSimpleFunctionDescriptor@ef5a84]
2021-03-12 12:12:24,696 [main:117] - GENERATED CALL = (from).toDouble().roundToInt()
2021-03-12 12:12:24,696 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]]
2021-03-12 12:12:24,696 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:24,697 [main:117] - GENERATED CALL = (from).and(to)
2021-03-12 12:12:24,697 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@655c30fc]]
2021-03-12 12:12:24,697 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:12:24,698 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@655c30fc]
2021-03-12 12:12:24,699 [main:117] - GENERATED CALL = (from).toShort().unaryMinus()
2021-03-12 12:12:24,699 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]]
2021-03-12 12:12:24,699 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:24,700 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]
2021-03-12 12:12:24,701 [main:117] - GENERATED CALL = (from).compareTo(from).takeLowestOneBit()
2021-03-12 12:12:24,701 [main:33] - Trying to replace Element(VALUE_PARAMETER) on Element(VALUE_PARAMETER)
2021-03-12 12:12:24,702 [main:66] - Compilation checking started
2021-03-12 12:12:25,041 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int = 1546216694): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int  = -312996771, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int  = (from).compareTo(467039012).ushr(to), to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $containers1"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $containers2"

    return "OK"
}
2021-03-12 12:12:25,265 [main:112] - generating klass Container text = class Container {
    var id: Int? = null
}
2021-03-12 12:12:25,266 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:12:25,530 [main:45] - Trying to change 32 nodes
2021-03-12 12:12:25,534 [main:53] - replacing (containers2, Int)
2021-03-12 12:12:25,534 [main:50] - replacing containers2 Int
2021-03-12 12:12:25,535 [main:54] - Getting value of type Int
2021-03-12 12:12:25,630 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:25,630 [main:58] - GENERATED VALUE OF TYPE Int = -1053390822
2021-03-12 12:12:25,631 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:25,631 [main:67] - randomType = Boolean
2021-03-12 12:12:25,743 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:12:25,766 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]
2021-03-12 12:12:25,896 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:12:25,898 [main:78] - Generated call from random type = (true).compareTo(false).sign
2021-03-12 12:12:25,898 [main:106] - GETTING Int from Int
2021-03-12 12:12:25,977 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@707ab6dc]]
2021-03-12 12:12:25,977 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:26,073 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:26,074 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@707ab6dc]
2021-03-12 12:12:26,075 [main:117] - GENERATED CALL = (containers1).compareTo(-1165633777).takeHighestOneBit()
2021-03-12 12:12:26,075 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee], public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@1b74e55a]]
2021-03-12 12:12:26,075 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee]
2021-03-12 12:12:26,076 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@1b74e55a]
2021-03-12 12:12:26,173 [main:302] - generating value of type = Char true depth = 0
2021-03-12 12:12:26,175 [main:117] - GENERATED CALL = (containers1).toChar().compareTo('⏨')
2021-03-12 12:12:26,175 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1d268d97]]
2021-03-12 12:12:26,176 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1d268d97]
2021-03-12 12:12:26,176 [main:117] - GENERATED CALL = (containers1).countOneBits()
2021-03-12 12:12:26,176 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@78b632b9]]
2021-03-12 12:12:26,177 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:26,177 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@78b632b9]
2021-03-12 12:12:26,332 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:26,334 [main:117] - GENERATED CALL = (containers1).compareTo(containers1).rem(102)
2021-03-12 12:12:26,335 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@31ae2cf], public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3d608051]]
2021-03-12 12:12:26,335 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@31ae2cf]
2021-03-12 12:12:26,335 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@3d608051]
2021-03-12 12:12:26,336 [main:117] - GENERATED CALL = (containers1).toFloat().toInt()
2021-03-12 12:12:26,336 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@770f78cc], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2eb4d9ee]]
2021-03-12 12:12:26,337 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@770f78cc]
2021-03-12 12:12:26,440 [main:302] - generating value of type = Long true depth = 0
2021-03-12 12:12:26,441 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2eb4d9ee]
2021-03-12 12:12:26,442 [main:117] - GENERATED CALL = (containers1).div(-4786369534658007329).countTrailingZeroBits()
2021-03-12 12:12:26,442 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@66db5a9a]]
2021-03-12 12:12:26,442 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:12:26,443 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@66db5a9a]
2021-03-12 12:12:26,546 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:26,547 [main:117] - GENERATED CALL = (containers1).toShort().plus(126)
2021-03-12 12:12:26,547 [main:113] - Case = [public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@266745fc], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@612070f5]]
2021-03-12 12:12:26,547 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Float): kotlin.Float defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@266745fc]
2021-03-12 12:12:26,672 [main:302] - generating value of type = Float true depth = 0
2021-03-12 12:12:26,674 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toRawBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@612070f5]
2021-03-12 12:12:26,675 [main:117] - GENERATED CALL = (containers1).div(0.75744104f).toRawBits()
2021-03-12 12:12:26,676 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5ebf2121]]
2021-03-12 12:12:26,676 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:26,676 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5ebf2121]
2021-03-12 12:12:26,677 [main:117] - GENERATED CALL = (containers1).toInt().toInt()
2021-03-12 12:12:26,677 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5be3bb4b]]
2021-03-12 12:12:26,677 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c]
2021-03-12 12:12:26,678 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5be3bb4b]
2021-03-12 12:12:26,678 [main:117] - GENERATED CALL = (containers1).toByte().unaryMinus()
2021-03-12 12:12:26,678 [main:61] - replacement of containers2 of type Int is (containers1).toFloat().toInt()
2021-03-12 12:12:26,783 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:26,784 [main:66] - Compilation checking started
2021-03-12 12:12:27,266 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $containers1"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $(containers1).toFloat().toInt()"

    return "OK"
}
2021-03-12 12:12:27,268 [main:53] - replacing (101, Int)
2021-03-12 12:12:27,268 [main:50] - replacing 101 Int
2021-03-12 12:12:27,269 [main:54] - Getting value of type Int
2021-03-12 12:12:27,404 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:27,404 [main:58] - GENERATED VALUE OF TYPE Int = -839802231
2021-03-12 12:12:27,405 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:27,546 [main:67] - randomType = List<TestClass>
2021-03-12 12:12:27,547 [main:106] - GETTING Int from Int?
2021-03-12 12:12:27,643 [main:113] - Case = [public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]]
2021-03-12 12:12:27,644 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]
2021-03-12 12:12:27,745 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:27,746 [main:117] - GENERATED CALL = (id).plus(-118)
2021-03-12 12:12:27,746 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]]
2021-03-12 12:12:27,747 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:27,747 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]
2021-03-12 12:12:27,747 [main:117] - GENERATED CALL = (id).and(containers2).unaryMinus()
2021-03-12 12:12:27,747 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5ebf2121]]
2021-03-12 12:12:27,748 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:27,748 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5ebf2121]
2021-03-12 12:12:27,748 [main:117] - GENERATED CALL = (id).toInt().toInt()
2021-03-12 12:12:27,748 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@380ce6fc]]
2021-03-12 12:12:27,748 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:27,844 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:27,844 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@380ce6fc]
2021-03-12 12:12:27,938 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:27,939 [main:117] - GENERATED CALL = (id).and(1720449483).minus(83)
2021-03-12 12:12:27,939 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@707ab6dc]]
2021-03-12 12:12:27,939 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:27,939 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@707ab6dc]
2021-03-12 12:12:27,940 [main:117] - GENERATED CALL = (id).and(containers2).takeHighestOneBit()
2021-03-12 12:12:27,940 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@46b72cab]]
2021-03-12 12:12:27,940 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:12:27,940 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@46b72cab]
2021-03-12 12:12:28,034 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:28,035 [main:117] - GENERATED CALL = (id).toShort().times(56)
2021-03-12 12:12:28,035 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]]
2021-03-12 12:12:28,035 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:28,156 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:28,157 [main:149] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]
2021-03-12 12:12:28,259 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:28,260 [main:117] - GENERATED CALL = (id).and(-212004514).coerceIn(241197362, containers1)
2021-03-12 12:12:28,260 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@69ef1429]]
2021-03-12 12:12:28,260 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:28,260 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@69ef1429]
2021-03-12 12:12:28,261 [main:117] - GENERATED CALL = (id).toInt().countLeadingZeroBits()
2021-03-12 12:12:28,261 [main:113] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ranges.IntRange.random(): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1364f66a]]
2021-03-12 12:12:28,261 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9]
2021-03-12 12:12:28,358 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:28,358 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.ranges.IntRange.random(): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1364f66a]
2021-03-12 12:12:28,359 [main:117] - GENERATED CALL = (id).rangeTo(16).random()
2021-03-12 12:12:28,359 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2c013860]]
2021-03-12 12:12:28,359 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:12:28,360 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2c013860]
2021-03-12 12:12:28,360 [main:117] - GENERATED CALL = (id).toShort().unaryPlus()
2021-03-12 12:12:28,360 [main:61] - replacement of 101 of type Int is (id).plus(-118)
2021-03-12 12:12:28,456 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:28,457 [main:66] - Compilation checking started
2021-03-12 12:12:28,745 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $containers1"

    val containers2 = testClass.createContainers2().size
    if (containers2 != (id).plus(-118)) return "fail 2: $(containers1).toFloat().toInt()"

    return "OK"
}
2021-03-12 12:12:28,748 [main:53] - replacing ("fail 2: $(containers1).toFloat().toInt()", String)
2021-03-12 12:12:28,749 [main:50] - replacing "fail 2: $(containers1).toFloat().toInt()" String
2021-03-12 12:12:28,749 [main:54] - Getting value of type String
2021-03-12 12:12:28,864 [main:302] - generating value of type = String true depth = 0
2021-03-12 12:12:28,867 [main:58] - GENERATED VALUE OF TYPE String = "abymk"
2021-03-12 12:12:28,868 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:28,996 [main:67] - randomType = UByte
2021-03-12 12:12:29,092 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 12:12:29,143 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@51b360bf]
2021-03-12 12:12:29,144 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a1afbd1]
2021-03-12 12:12:29,145 [main:78] - Generated call from random type = (125.toUByte()).toLong().toString(containers2)
2021-03-12 12:12:29,153 [main:106] - GETTING String from Int?
2021-03-12 12:12:29,219 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@11f58fcd]]
2021-03-12 12:12:29,219 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee]
2021-03-12 12:12:29,220 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@11f58fcd]
2021-03-12 12:12:29,221 [main:117] - GENERATED CALL = (Container().id).toChar().lowercase()
2021-03-12 12:12:29,221 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53ebdeac]]
2021-03-12 12:12:29,221 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee]
2021-03-12 12:12:29,221 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53ebdeac]
2021-03-12 12:12:29,328 [main:302] - generating value of type = String true depth = 0
2021-03-12 12:12:29,329 [main:117] - GENERATED CALL = (Container().id).toChar().plus("ksefr")
2021-03-12 12:12:29,330 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55370f97]]
2021-03-12 12:12:29,330 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:12:29,330 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55370f97]
2021-03-12 12:12:29,331 [main:117] - GENERATED CALL = (Container().id).toShort().toString(containers2)
2021-03-12 12:12:29,331 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a1afbd1]]
2021-03-12 12:12:29,331 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d]
2021-03-12 12:12:29,332 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a1afbd1]
2021-03-12 12:12:29,332 [main:117] - GENERATED CALL = (Container().id).toLong().toString(containers2)
2021-03-12 12:12:29,332 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5d0f67a0]]
2021-03-12 12:12:29,332 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee]
2021-03-12 12:12:29,333 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5d0f67a0]
2021-03-12 12:12:29,333 [main:117] - GENERATED CALL = (Container().id).toChar().uppercase()
2021-03-12 12:12:29,333 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]]
2021-03-12 12:12:29,334 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:29,334 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]
2021-03-12 12:12:29,335 [main:117] - GENERATED CALL = (Container().id).compareTo(containers1).toString(containers1)
2021-03-12 12:12:29,336 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]]
2021-03-12 12:12:29,336 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:29,336 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]
2021-03-12 12:12:29,450 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:29,452 [main:117] - GENERATED CALL = (Container().id).toInt().toString(-2140473910)
2021-03-12 12:12:29,452 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]]
2021-03-12 12:12:29,453 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:29,453 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]
2021-03-12 12:12:29,554 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:29,555 [main:117] - GENERATED CALL = (Container().id).and(containers2).toString(722514911)
2021-03-12 12:12:29,555 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8362d66]]
2021-03-12 12:12:29,556 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee]
2021-03-12 12:12:29,556 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8362d66]
2021-03-12 12:12:29,556 [main:117] - GENERATED CALL = (Container().id).toChar().titlecase()
2021-03-12 12:12:29,557 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@770f78cc], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a1afbd1]]
2021-03-12 12:12:29,557 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@770f78cc]
2021-03-12 12:12:29,673 [main:302] - generating value of type = Long true depth = 0
2021-03-12 12:12:29,674 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a1afbd1]
2021-03-12 12:12:29,675 [main:117] - GENERATED CALL = (Container().id).div(-8212035439700906604).toString(containers2)
2021-03-12 12:12:29,675 [main:61] - replacement of "fail 2: $(containers1).toFloat().toInt()" of type String is (Container().id).toInt().toString(-2140473910)
2021-03-12 12:12:29,788 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:29,789 [main:66] - Compilation checking started
2021-03-12 12:12:30,077 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $containers1"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return (Container().id).toInt().toString(-2140473910)

    return "OK"
}
2021-03-12 12:12:30,079 [main:53] - replacing (0, Int)
2021-03-12 12:12:30,080 [main:50] - replacing 0 Int
2021-03-12 12:12:30,080 [main:54] - Getting value of type Int
2021-03-12 12:12:30,176 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:30,176 [main:58] - GENERATED VALUE OF TYPE Int = 1524845985
2021-03-12 12:12:30,177 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:30,277 [main:67] - randomType = Long
2021-03-12 12:12:30,383 [main:302] - generating value of type = Long true depth = 0
2021-03-12 12:12:30,427 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:30,428 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@13ea03f4]
2021-03-12 12:12:30,428 [main:78] - Generated call from random type = (6919163343045874968).toInt().coerceAtLeast(from)
2021-03-12 12:12:30,430 [main:106] - GETTING Int from List<Container>
2021-03-12 12:12:30,473 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]]
2021-03-12 12:12:30,474 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]
2021-03-12 12:12:30,570 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:30,571 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.plus(-75)
2021-03-12 12:12:30,571 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]]
2021-03-12 12:12:30,572 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:30,668 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:30,669 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.and(-327600431)
2021-03-12 12:12:30,669 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]]
2021-03-12 12:12:30,669 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]
2021-03-12 12:12:30,670 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.ushr(from)
2021-03-12 12:12:30,670 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29ab89fc]]
2021-03-12 12:12:30,670 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29ab89fc]
2021-03-12 12:12:30,767 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:30,768 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.times(-89)
2021-03-12 12:12:30,769 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@4a4ce3f5]]
2021-03-12 12:12:30,769 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.absoluteValue
2021-03-12 12:12:30,769 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1394e8ef]]
2021-03-12 12:12:30,769 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1394e8ef]
2021-03-12 12:12:30,770 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.shr(from)
2021-03-12 12:12:30,770 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@22080528]]
2021-03-12 12:12:30,770 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@22080528]
2021-03-12 12:12:30,865 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:30,866 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.div(-58)
2021-03-12 12:12:30,866 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3d4fb16e]]
2021-03-12 12:12:30,866 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3d4fb16e]
2021-03-12 12:12:30,975 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:30,976 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.coerceAtMost(-2090248559)
2021-03-12 12:12:30,976 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@3893c26d]]
2021-03-12 12:12:30,977 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.sign
2021-03-12 12:12:30,977 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@17826240]]
2021-03-12 12:12:30,977 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@17826240]
2021-03-12 12:12:31,099 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:31,100 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.rotateLeft(918953546)
2021-03-12 12:12:31,100 [main:61] - replacement of 0 of type Int is (TestClass().createContainers2()).size.ushr(from)
2021-03-12 12:12:31,220 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:31,221 [main:66] - Compilation checking started
2021-03-12 12:12:31,495 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = (TestClass().createContainers2()).size.ushr(from), to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $containers1"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $(containers1).toFloat().toInt()"

    return "OK"
}
2021-03-12 12:12:31,497 [main:53] - replacing (containers1, Int)
2021-03-12 12:12:31,497 [main:50] - replacing containers1 Int
2021-03-12 12:12:31,497 [main:54] - Getting value of type Int
2021-03-12 12:12:31,597 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:31,597 [main:58] - GENERATED VALUE OF TYPE Int = 949793887
2021-03-12 12:12:31,598 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:31,598 [main:67] - randomType = Boolean
2021-03-12 12:12:31,691 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:12:31,706 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]
2021-03-12 12:12:31,799 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:12:31,800 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@326e024f]
2021-03-12 12:12:31,800 [main:78] - Generated call from random type = (true).compareTo(true).unaryPlus()
2021-03-12 12:12:31,802 [main:106] - GETTING Int from TestClass
2021-03-12 12:12:31,814 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]]
2021-03-12 12:12:31,815 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:12:31,815 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]
2021-03-12 12:12:31,910 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:12:32,038 [main:43] - GENERATING CALL OF fun <T> minOf(a: String, b: String, c: String, comparator: kotlin.Comparator<String>): T = TODO()
2021-03-12 12:12:32,042 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: String, b: String, c: String, comparator: kotlin.Comparator<String>): T = TODO()
2021-03-12 12:12:32,243 [main:302] - generating value of type = String true depth = 3
2021-03-12 12:12:32,244 [main:302] - generating value of type = String true depth = 3
2021-03-12 12:12:32,245 [main:302] - generating value of type = String true depth = 3
2021-03-12 12:12:32,246 [main:302] - generating value of type = Comparator<String> false depth = 3
2021-03-12 12:12:32,349 [main:43] - GENERATING CALL OF fun <T> reverseOrder(): Comparator<Strg> = TODO()
2021-03-12 12:12:32,352 [main:61] - WITHOUT TYPE PARAMS = fun <T> reverseOrder(): Comparator<Strg> = TODO()
2021-03-12 12:12:32,452 [main:95] - GENERATED = reverseOrder<String>()
2021-03-12 12:12:32,452 [main:95] - GENERATED = minOf<String>("xypgi", "vltph", "mmsba", reverseOrder<String>())
2021-03-12 12:12:32,553 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 12:12:32,816 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<Long>, selector: (T)->Long): Comparator<T> = TODO()
2021-03-12 12:12:32,819 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<Long>, selector: (T)->Long): Comparator<T> = TODO()
2021-03-12 12:12:33,101 [main:302] - generating value of type = Comparator<Long> false depth = 3
2021-03-12 12:12:33,199 [main:43] - GENERATING CALL OF fun <T> compareBy(selector: (Long)->kotlin.Comparable<*>?): Comparator<Long> = TODO()
2021-03-12 12:12:33,201 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareBy(selector: (Long)->kotlin.Comparable<*>?): Comparator<Long> = TODO()
2021-03-12 12:12:33,478 [main:302] - generating value of type = Function1<Long, Comparable<*>?> false depth = 6
2021-03-12 12:12:33,478 [main:302] - generating value of type = Comparable<*> false depth = 7
2021-03-12 12:12:33,487 [main:95] - GENERATED = compareBy<Long>({a: Long -> 122.toUByte()})
2021-03-12 12:12:33,487 [main:385] - Cant generate call of fun <T, K> compareByDescending(comparator: kotlin.Comparator<Long>, selector: (T)->Long): Comparator<T> = TODO()
2021-03-12 12:12:33,592 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:33,592 [main:158] - CANT GENERATE PARAMS FOR public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]
2021-03-12 12:12:33,593 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public val <T> kotlin.collections.List<T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@3e8b14e1]]
2021-03-12 12:12:33,593 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:12:33,594 [main:117] - GENERATED CALL = (testClass).createContainers1(containers1, containers1).lastIndex
2021-03-12 12:12:33,594 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34ef6fef]]
2021-03-12 12:12:33,594 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:12:33,691 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:33,692 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34ef6fef]
2021-03-12 12:12:33,783 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:12:34,081 [main:43] - GENERATING CALL OF fun <T> minOf(a: Short?, b: Short?, c: Short?, comparator: kotlin.Comparator<Short?>): T = TODO()
2021-03-12 12:12:34,082 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Short?, b: Short?, c: Short?, comparator: kotlin.Comparator<Short?>): T = TODO()
2021-03-12 12:12:34,268 [main:302] - generating value of type = Short true depth = 3
2021-03-12 12:12:34,268 [main:302] - generating value of type = Short true depth = 3
2021-03-12 12:12:34,268 [main:302] - generating value of type = Short true depth = 3
2021-03-12 12:12:34,269 [main:302] - generating value of type = Comparator<Short?> false depth = 3
2021-03-12 12:12:34,670 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<Sequence<ULong?>>, selector: (Short?)->Sequence<ULong?>): Comparator<Short?> = TODO()
2021-03-12 12:12:34,672 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<Sequence<ULong?>>, selector: (Short?)->Sequence<ULong?>): Comparator<Short?> = TODO()
2021-03-12 12:12:34,967 [main:302] - generating value of type = Comparator<Sequence<ULong?>> false depth = 6
2021-03-12 12:12:35,102 [main:43] - GENERATING CALL OF fun <T> nullsLast(comparator: kotlin.Comparator<Sequence<ULong?>>): Comparator<Sequence<ULong?>> = TODO()
2021-03-12 12:12:35,104 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(comparator: kotlin.Comparator<Sequence<ULong?>>): Comparator<Sequence<ULong?>> = TODO()
2021-03-12 12:12:35,323 [main:302] - generating value of type = Comparator<Sequence<ULong?>> false depth = 9
2021-03-12 12:12:35,413 [main:43] - GENERATING CALL OF fun <T> naturalOrder(): Comparator<Sequence<ULong?>> = TODO()
2021-03-12 12:12:35,415 [main:61] - WITHOUT TYPE PARAMS = fun <T> naturalOrder(): Comparator<Sequence<ULong?>> = TODO()
2021-03-12 12:12:35,511 [main:95] - GENERATED = naturalOrder<Sequence<ULong?>>()
2021-03-12 12:12:35,511 [main:95] - GENERATED = nullsLast<Sequence<ULong?>>(naturalOrder<Sequence<ULong?>>())
2021-03-12 12:12:35,511 [main:302] - generating value of type = Function1<Short?, Sequence<ULong?>> false depth = 6
2021-03-12 12:12:35,512 [main:302] - generating value of type = Sequence<ULong?> false depth = 7
2021-03-12 12:12:35,654 [main:43] - GENERATING CALL OF fun <T> sequenceOf(elements: ULong?): Sequence<ULong?> = TODO()
2021-03-12 12:12:35,657 [main:61] - WITHOUT TYPE PARAMS = fun <T> sequenceOf(elements: ULong?): Sequence<ULong?> = TODO()
2021-03-12 12:12:35,782 [main:302] - generating value of type = ULong true depth = 10
2021-03-12 12:12:35,783 [main:95] - GENERATED = sequenceOf<ULong?>(2852186023346644161.toULong())
2021-03-12 12:12:35,783 [main:95] - GENERATED = compareByDescending<Short?, Sequence<ULong?>>(nullsLast<Sequence<ULong?>>(naturalOrder<Sequence<ULong?>>()), {a: Short? -> sequenceOf<ULong?>(2852186023346644161.toULong())})
2021-03-12 12:12:35,784 [main:95] - GENERATED = minOf<Short?>(-3022, 24281, -20165, compareByDescending<Short?, Sequence<ULong?>>(nullsLast<Sequence<ULong?>>(naturalOrder<Sequence<ULong?>>()), {a: Short? -> sequenceOf<ULong?>(2852186023346644161.toULong())}))
2021-03-12 12:12:35,786 [main:117] - GENERATED CALL = (testClass).createContainers1(containers1, -413786210).indexOf(minOf<Short?>(-3022, 24281, -20165, compareByDescending<Short?, Sequence<ULong?>>(nullsLast<Sequence<ULong?>>(naturalOrder<Sequence<ULong?>>()), {a: Short? -> sequenceOf<ULong?>(2852186023346644161.toULong())})))
2021-03-12 12:12:35,786 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in TestClass[DeserializedSimpleFunctionDescriptor@7cd9be59], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]]
2021-03-12 12:12:35,786 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in TestClass[DeserializedSimpleFunctionDescriptor@7cd9be59]
2021-03-12 12:12:35,883 [main:302] - generating value of type = Any false depth = 0
2021-03-12 12:12:35,884 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]
2021-03-12 12:12:35,971 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:12:35,972 [main:117] - GENERATED CALL = (testClass).equals("fixzm").compareTo(true)
2021-03-12 12:12:35,973 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]]
2021-03-12 12:12:35,973 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:12:35,973 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]
2021-03-12 12:12:36,061 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:12:36,062 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:12:36,063 [main:117] - GENERATED CALL = (testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})
2021-03-12 12:12:36,063 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@47e5cad0]]
2021-03-12 12:12:36,063 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:12:36,148 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:36,149 [main:117] - GENERATED CALL = (testClass).createContainers1(-78372800, containers1).size
2021-03-12 12:12:36,150 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]]
2021-03-12 12:12:36,150 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:12:36,236 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:36,236 [main:149] - GENERATING call of type public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:12:36,334 [main:302] - generating value of type = K false depth = 0
2021-03-12 12:12:36,455 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:36,540 [main:302] - generating value of type = Function1<T, K?> false depth = 0
2021-03-12 12:12:36,540 [main:302] - generating value of type = K false depth = 1
2021-03-12 12:12:36,544 [main:158] - CANT GENERATE PARAMS FOR public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:12:36,545 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4676d454]]
2021-03-12 12:12:36,545 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:12:36,630 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:36,718 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:36,718 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4676d454]
2021-03-12 12:12:36,803 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:12:37,030 [main:43] - GENERATING CALL OF fun <T> checkNotNull(value: Byte): T = TODO()
2021-03-12 12:12:37,032 [main:61] - WITHOUT TYPE PARAMS = fun <T> checkNotNull(value: Byte): T = TODO()
2021-03-12 12:12:37,127 [main:302] - generating value of type = Byte true depth = 3
2021-03-12 12:12:37,127 [main:95] - GENERATED = checkNotNull<Byte>(-47)
2021-03-12 12:12:37,128 [main:117] - GENERATED CALL = (testClass).createContainers1(-1545445453, -1448720443).lastIndexOf(checkNotNull<Byte>(-47))
2021-03-12 12:12:37,129 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@420edebb]]
2021-03-12 12:12:37,129 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:12:37,214 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:37,305 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:37,306 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@420edebb]
2021-03-12 12:12:37,406 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:12:37,406 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:12:37,407 [main:117] - GENERATED CALL = (testClass).createContainers1(-2094341545, 1849845069).indexOfFirst({a: T -> true})
2021-03-12 12:12:37,408 [main:61] - replacement of containers1 of type Int is (testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})
2021-03-12 12:12:37,499 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:37,499 [main:66] - Compilation checking started
2021-03-12 12:12:37,894 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $(testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $(containers1).toFloat().toInt()"

    return "OK"
}


2021-03-12 12:12:37,896 [main:53] - replacing (from .. to, IntRange)
2021-03-12 12:12:37,896 [main:50] - replacing from .. to IntRange
2021-03-12 12:12:37,897 [main:54] - Getting value of type IntRange
2021-03-12 12:12:38,011 [main:302] - generating value of type = IntRange false depth = 0
2021-03-12 12:12:38,120 [main:43] - GENERATING CALL OF fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntRange = TODO()
2021-03-12 12:12:38,122 [main:61] - WITHOUT TYPE PARAMS = fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): IntRange = TODO()
2021-03-12 12:12:38,409 [main:302] - generating value of type = Int true depth = 3
2021-03-12 12:12:38,410 [main:302] - generating value of type = Int true depth = 3
2021-03-12 12:12:38,411 [main:95] - GENERATED = IntRange(451866730, 1261106562)
2021-03-12 12:12:38,411 [main:58] - GENERATED VALUE OF TYPE IntRange = IntRange(451866730, 1261106562)
2021-03-12 12:12:38,411 [main:61] - GENERATED IS CALL =true
2021-03-12 12:12:38,512 [main:67] - randomType = Boolean?
2021-03-12 12:12:38,604 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:12:38,629 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]
2021-03-12 12:12:38,741 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:12:38,742 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9]
2021-03-12 12:12:38,855 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:38,856 [main:78] - Generated call from random type = (false)?.compareTo(false).rangeTo(-7)
2021-03-12 12:12:38,857 [main:106] - GETTING IntRange from Int
2021-03-12 12:12:38,925 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c], public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b56795d]]
2021-03-12 12:12:38,925 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c]
2021-03-12 12:12:38,925 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1b56795d]
2021-03-12 12:12:39,019 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:39,020 [main:117] - GENERATED CALL = (from).toByte().rangeTo(89)
2021-03-12 12:12:39,021 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6ce9226e]]
2021-03-12 12:12:39,021 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:39,021 [main:149] - GENERATING call of type public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6ce9226e]
2021-03-12 12:12:39,111 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:39,112 [main:117] - GENERATED CALL = (from).toInt().until(75)
2021-03-12 12:12:39,113 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], public infix fun kotlin.Short.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3a3413af]]
2021-03-12 12:12:39,113 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:12:39,113 [main:149] - GENERATING call of type public infix fun kotlin.Short.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3a3413af]
2021-03-12 12:12:39,213 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:39,214 [main:117] - GENERATED CALL = (from).toShort().until(-105)
2021-03-12 12:12:39,215 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9]]
2021-03-12 12:12:39,215 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:39,215 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9]
2021-03-12 12:12:39,316 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:39,317 [main:117] - GENERATED CALL = (from).compareTo(to).rangeTo(106)
2021-03-12 12:12:39,317 [main:113] - Case = [public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6ce9226e]]
2021-03-12 12:12:39,317 [main:149] - GENERATING call of type public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6ce9226e]
2021-03-12 12:12:39,424 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:39,425 [main:117] - GENERATED CALL = (from).until(71)
2021-03-12 12:12:39,426 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c], public infix fun kotlin.Byte.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6a6ff523]]
2021-03-12 12:12:39,426 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c]
2021-03-12 12:12:39,426 [main:149] - GENERATING call of type public infix fun kotlin.Byte.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6a6ff523]
2021-03-12 12:12:39,563 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:39,565 [main:117] - GENERATED CALL = (from).toByte().until(10)
2021-03-12 12:12:39,566 [main:113] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9]]
2021-03-12 12:12:39,566 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9]
2021-03-12 12:12:39,675 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:39,676 [main:117] - GENERATED CALL = (from).rangeTo(-15)
2021-03-12 12:12:39,676 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2c18bd39]]
2021-03-12 12:12:39,676 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:12:39,676 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2c18bd39]
2021-03-12 12:12:39,762 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:39,763 [main:117] - GENERATED CALL = (from).toShort().rangeTo(-110)
2021-03-12 12:12:39,763 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9]]
2021-03-12 12:12:39,763 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:39,763 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9]
2021-03-12 12:12:39,848 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:39,849 [main:117] - GENERATED CALL = (from).toInt().rangeTo(9)
2021-03-12 12:12:39,849 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6ce9226e]]
2021-03-12 12:12:39,849 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:39,932 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:39,933 [main:149] - GENERATING call of type public infix fun kotlin.Int.until(to: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@6ce9226e]
2021-03-12 12:12:40,020 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:40,021 [main:117] - GENERATED CALL = (from).compareTo(763400127).until(-38)
2021-03-12 12:12:40,021 [main:61] - replacement of from .. to of type IntRange is (from).compareTo(763400127).until(-38)
2021-03-12 12:12:40,117 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:40,118 [main:66] - Compilation checking started
2021-03-12 12:12:40,542 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $(testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $(containers1).toFloat().toInt()"

    return "OK"
}


2021-03-12 12:12:40,544 [main:53] - replacing (q, Container)
2021-03-12 12:12:40,544 [main:50] - replacing q Container
2021-03-12 12:12:40,544 [main:54] - Getting value of type Container
2021-03-12 12:12:40,647 [main:302] - generating value of type = Container false depth = 0
2021-03-12 12:12:40,647 [main:112] - generating klass Container text = class Container {
    var id: Int? = null
}
2021-03-12 12:12:40,648 [main:58] - GENERATED VALUE OF TYPE Container = Container()
2021-03-12 12:12:40,648 [main:61] - GENERATED IS CALL =true
2021-03-12 12:12:40,745 [main:67] - randomType = Container?
2021-03-12 12:12:40,843 [main:302] - generating value of type = Container false depth = 0
2021-03-12 12:12:40,844 [main:112] - generating klass Container text = class Container {
    var id: Int? = null
}
2021-03-12 12:12:40,852 [main:106] - GETTING Container from Int?
2021-03-12 12:12:40,932 [main:106] - GETTING Container from List<Container>
2021-03-12 12:12:40,976 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.randomOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@43405ae5]]
2021-03-12 12:12:40,976 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.randomOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@43405ae5]
2021-03-12 12:12:40,976 [main:117] - GENERATED CALL = (TestClass().createContainers2()).randomOrNull()
2021-03-12 12:12:40,977 [main:113] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4348ea5e]]
2021-03-12 12:12:40,977 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4348ea5e]
2021-03-12 12:12:41,100 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 12:12:41,205 [main:43] - GENERATING CALL OF fun <T> compareBy(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:12:41,208 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareBy(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:12:41,437 [main:385] - Cant generate call of fun <T> compareBy(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:12:41,438 [main:158] - CANT GENERATE PARAMS FOR @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4348ea5e]
2021-03-12 12:12:41,438 [main:113] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@23b2eda9]]
2021-03-12 12:12:41,439 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@23b2eda9]
2021-03-12 12:12:41,563 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 12:12:41,658 [main:43] - GENERATING CALL OF fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:12:41,660 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:12:41,877 [main:385] - Cant generate call of fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:12:41,877 [main:158] - CANT GENERATE PARAMS FOR @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@23b2eda9]
2021-03-12 12:12:41,877 [main:113] - Case = [public abstract fun listIterator(): kotlin.collections.ListIterator<Container> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4b345920], public abstract fun next(): Container defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@626519ef]]
2021-03-12 12:12:41,877 [main:149] - GENERATING call of type public abstract fun listIterator(): kotlin.collections.ListIterator<Container> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4b345920]
2021-03-12 12:12:41,877 [main:149] - GENERATING call of type public abstract fun next(): Container defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@626519ef]
2021-03-12 12:12:41,878 [main:117] - GENERATED CALL = (TestClass().createContainers2()).listIterator().next()
2021-03-12 12:12:41,878 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76a9337c]]
2021-03-12 12:12:41,878 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76a9337c]
2021-03-12 12:12:41,985 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 12:12:42,094 [main:43] - GENERATING CALL OF fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:12:42,096 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:12:42,301 [main:385] - Cant generate call of fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:12:42,301 [main:158] - CANT GENERATE PARAMS FOR @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76a9337c]
2021-03-12 12:12:42,302 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3430415c]]
2021-03-12 12:12:42,302 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3430415c]
2021-03-12 12:12:42,302 [main:117] - GENERATED CALL = (TestClass().createContainers2()).single()
2021-03-12 12:12:42,302 [main:113] - Case = [@kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.minOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2332f57d]]
2021-03-12 12:12:42,303 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.minOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2332f57d]
2021-03-12 12:12:42,303 [main:117] - GENERATED CALL = (TestClass().createContainers2()).minOrNull()
2021-03-12 12:12:42,303 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.firstOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c41b93]]
2021-03-12 12:12:42,303 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.firstOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2c41b93]
2021-03-12 12:12:42,303 [main:117] - GENERATED CALL = (TestClass().createContainers2()).firstOrNull()
2021-03-12 12:12:42,304 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13defad1]]
2021-03-12 12:12:42,304 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@13defad1]
2021-03-12 12:12:42,399 [main:302] - generating value of type = Function1<Int, T> false depth = 0
2021-03-12 12:12:42,400 [main:302] - generating value of type = T false depth = 1
2021-03-12 12:12:42,543 [main:43] - GENERATING CALL OF fun <T> requireNotNull(value: Container): T = TODO()
2021-03-12 12:12:42,545 [main:61] - WITHOUT TYPE PARAMS = fun <T> requireNotNull(value: Container): T = TODO()
2021-03-12 12:12:42,691 [main:302] - generating value of type = Container false depth = 4
2021-03-12 12:12:42,691 [main:112] - generating klass Container text = class Container {
    var id: Int? = null
}
2021-03-12 12:12:42,692 [main:95] - GENERATED = requireNotNull<Container>(Container())
2021-03-12 12:12:42,693 [main:117] - GENERATED CALL = (TestClass().createContainers2()).elementAtOrElse(id, {a: Int -> requireNotNull<Container>(Container())})
2021-03-12 12:12:42,693 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5da712c9]]
2021-03-12 12:12:42,693 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5da712c9]
2021-03-12 12:12:42,694 [main:117] - GENERATED CALL = (TestClass().createContainers2()).elementAtOrNull(id)
2021-03-12 12:12:42,694 [main:61] - replacement of q of type Container is (TestClass().createContainers2()).single()
2021-03-12 12:12:42,813 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:42,813 [main:66] - Compilation checking started
2021-03-12 12:12:43,235 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $(testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $(containers1).toFloat().toInt()"

    return "OK"
}


2021-03-12 12:12:43,237 [main:53] - replacing ("fail 1: $(testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})", String)
2021-03-12 12:12:43,238 [main:50] - replacing "fail 1: $(testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})" String
2021-03-12 12:12:43,238 [main:54] - Getting value of type String
2021-03-12 12:12:43,342 [main:302] - generating value of type = String true depth = 0
2021-03-12 12:12:43,343 [main:58] - GENERATED VALUE OF TYPE String = "qloot"
2021-03-12 12:12:43,343 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:44,022 [main:67] - randomType = Map<Collection<Float?>?, UByte?>?
2021-03-12 12:12:44,024 [main:106] - GETTING String from List<Container>
2021-03-12 12:12:44,070 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]]
2021-03-12 12:12:44,070 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]
2021-03-12 12:12:44,161 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:44,162 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.toString(-895630546)
2021-03-12 12:12:44,163 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5fa5dc92]]
2021-03-12 12:12:44,163 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5fa5dc92]
2021-03-12 12:12:44,260 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 12:12:44,352 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 12:12:44,444 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 12:12:44,537 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 12:12:44,653 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 12:12:44,655 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 12:12:44,901 [main:302] - generating value of type = String true depth = 3
2021-03-12 12:12:44,902 [main:95] - GENERATED = StringBuilder("dtthy")
2021-03-12 12:12:44,991 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 12:12:44,991 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 12:12:45,088 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 12:12:45,089 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 12:12:45,262 [main:302] - generating value of type = String true depth = 4
2021-03-12 12:12:45,263 [main:95] - GENERATED = StringBuilder("ubpie")
2021-03-12 12:12:45,264 [main:117] - GENERATED CALL = (TestClass().createContainers2()).joinToString(StringBuilder(), "jxzul", "eally", containers1, StringBuilder("dtthy"), {a: T -> StringBuilder("ubpie")})
2021-03-12 12:12:45,264 [main:61] - replacement of "fail 1: $(testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})" of type String is (TestClass().createContainers2()).size.toString(-895630546)
2021-03-12 12:12:45,386 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:45,386 [main:66] - Compilation checking started
2021-03-12 12:12:45,812 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $(containers1).toFloat().toInt()"

    return "OK"
}


2021-03-12 12:12:45,813 [main:53] - replacing (from, Int)
2021-03-12 12:12:45,813 [main:50] - replacing from Int
2021-03-12 12:12:45,813 [main:54] - Getting value of type Int
2021-03-12 12:12:45,915 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:45,916 [main:58] - GENERATED VALUE OF TYPE Int = -608442004
2021-03-12 12:12:45,916 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:46,042 [main:67] - randomType = UByte
2021-03-12 12:12:46,144 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 12:12:46,186 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@4670622]
2021-03-12 12:12:46,186 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@2c013860]
2021-03-12 12:12:46,187 [main:78] - Generated call from random type = (10.toUByte()).toShort().unaryPlus()
2021-03-12 12:12:46,188 [main:106] - GETTING Int from List<Container>
2021-03-12 12:12:46,235 [main:113] - Case = [public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@420edebb]]
2021-03-12 12:12:46,235 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@420edebb]
2021-03-12 12:12:46,325 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:12:46,325 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:12:46,326 [main:117] - GENERATED CALL = (TestClass().createContainers1()).indexOfFirst({a: T -> false})
2021-03-12 12:12:46,326 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@23fb307f]]
2021-03-12 12:12:46,326 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@23fb307f]
2021-03-12 12:12:46,419 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:46,420 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.xor(-43682617)
2021-03-12 12:12:46,420 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): Container defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@384d2c8c], public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@7cf62b6d]]
2021-03-12 12:12:46,420 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): Container defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@384d2c8c]
2021-03-12 12:12:46,510 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:46,510 [main:117] - GENERATED CALL = (TestClass().createContainers1()).get(50707154).id
2021-03-12 12:12:46,511 [main:113] - Case = [public val <T> kotlin.collections.List<T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@3e8b14e1]]
2021-03-12 12:12:46,511 [main:117] - GENERATED CALL = (TestClass().createContainers1()).lastIndex
2021-03-12 12:12:46,511 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34ef6fef]]
2021-03-12 12:12:46,511 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34ef6fef]
2021-03-12 12:12:46,599 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:12:46,694 [main:43] - GENERATING CALL OF fun <T> maxOf(a: Boolean, b: Boolean): T = TODO()
2021-03-12 12:12:46,695 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: Boolean, b: Boolean): T = TODO()
2021-03-12 12:12:46,784 [main:302] - generating value of type = Boolean true depth = 3
2021-03-12 12:12:46,784 [main:302] - generating value of type = Boolean true depth = 3
2021-03-12 12:12:46,784 [main:95] - GENERATED = maxOf<Boolean>(true, false)
2021-03-12 12:12:46,785 [main:117] - GENERATED CALL = (TestClass().createContainers1()).indexOf(maxOf<Boolean>(true, false))
2021-03-12 12:12:46,785 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf]]
2021-03-12 12:12:46,785 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size
2021-03-12 12:12:46,785 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@9c6b1b4]]
2021-03-12 12:12:46,785 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@9c6b1b4]
2021-03-12 12:12:46,785 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.inc()
2021-03-12 12:12:46,785 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@17826240]]
2021-03-12 12:12:46,785 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@17826240]
2021-03-12 12:12:46,869 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:46,870 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.rotateLeft(1410628360)
2021-03-12 12:12:46,870 [main:113] - Case = [public abstract fun listIterator(): kotlin.collections.ListIterator<Container> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@277c1731], public abstract fun nextIndex(): kotlin.Int defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@34408134]]
2021-03-12 12:12:46,870 [main:149] - GENERATING call of type public abstract fun listIterator(): kotlin.collections.ListIterator<Container> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@277c1731]
2021-03-12 12:12:46,870 [main:149] - GENERATING call of type public abstract fun nextIndex(): kotlin.Int defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@34408134]
2021-03-12 12:12:46,870 [main:117] - GENERATED CALL = (TestClass().createContainers1()).listIterator().nextIndex()
2021-03-12 12:12:46,870 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]]
2021-03-12 12:12:46,871 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]
2021-03-12 12:12:46,871 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.unaryMinus()
2021-03-12 12:12:46,871 [main:61] - replacement of from of type Int is (TestClass().createContainers1()).indexOfFirst({a: T -> false})
2021-03-12 12:12:46,954 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:46,955 [main:53] - replacing (to, Int)
2021-03-12 12:12:46,955 [main:50] - replacing to Int
2021-03-12 12:12:46,955 [main:54] - Getting value of type Int
2021-03-12 12:12:47,059 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:47,060 [main:58] - GENERATED VALUE OF TYPE Int = 503589376
2021-03-12 12:12:47,060 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:47,159 [main:67] - randomType = UShort
2021-03-12 12:12:47,244 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 12:12:47,276 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@67fa55c8]
2021-03-12 12:12:47,277 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@16e1ae20]
2021-03-12 12:12:47,361 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 12:12:47,362 [main:78] - Generated call from random type = (33.toUShort()).toUByte().compareTo(36.toUByte())
2021-03-12 12:12:47,363 [main:106] - GETTING Int from List<Container>
2021-03-12 12:12:47,391 [main:113] - Case = [public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]]
2021-03-12 12:12:47,392 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]
2021-03-12 12:12:47,476 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:12:47,476 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:12:47,477 [main:117] - GENERATED CALL = (TestClass().createContainers1()).indexOfLast({a: T -> false})
2021-03-12 12:12:47,477 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@4a4ce3f5]]
2021-03-12 12:12:47,477 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.absoluteValue
2021-03-12 12:12:47,477 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@79b82278]]
2021-03-12 12:12:47,477 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@79b82278]
2021-03-12 12:12:47,477 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.countTrailingZeroBits()
2021-03-12 12:12:47,477 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]]
2021-03-12 12:12:47,478 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]
2021-03-12 12:12:47,478 [main:117] - GENERATED CALL = (TestClass().createContainers1()).count()
2021-03-12 12:12:47,478 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@3893c26d]]
2021-03-12 12:12:47,478 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.sign
2021-03-12 12:12:47,478 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@326e024f]]
2021-03-12 12:12:47,478 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@326e024f]
2021-03-12 12:12:47,478 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.unaryPlus()
2021-03-12 12:12:47,478 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2a83de69]]
2021-03-12 12:12:47,478 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2a83de69]
2021-03-12 12:12:47,479 [main:117] - GENERATED CALL = (TestClass().createContainers1()).sum()
2021-03-12 12:12:47,479 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@45f80a0a]]
2021-03-12 12:12:47,479 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@45f80a0a]
2021-03-12 12:12:47,561 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:47,562 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.or(1525147285)
2021-03-12 12:12:47,562 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1394e8ef]]
2021-03-12 12:12:47,562 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1394e8ef]
2021-03-12 12:12:47,646 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:47,646 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.shr(611869655)
2021-03-12 12:12:47,646 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]]
2021-03-12 12:12:47,647 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]
2021-03-12 12:12:47,750 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:12:47,848 [main:43] - GENERATING CALL OF fun <T> maxOf(a: String, b: String, c: String): T = TODO()
2021-03-12 12:12:47,849 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: String, b: String, c: String): T = TODO()
2021-03-12 12:12:47,937 [main:302] - generating value of type = String true depth = 3
2021-03-12 12:12:47,937 [main:302] - generating value of type = String true depth = 3
2021-03-12 12:12:47,937 [main:302] - generating value of type = String true depth = 3
2021-03-12 12:12:47,938 [main:95] - GENERATED = maxOf<String>("kqvtg", "muoqi", "fesna")
2021-03-12 12:12:48,022 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 12:12:48,196 [main:43] - GENERATING CALL OF fun <T, K> compareBy(comparator: kotlin.Comparator<Double>, selector: (T)->Double): Comparator<T> = TODO()
2021-03-12 12:12:48,198 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareBy(comparator: kotlin.Comparator<Double>, selector: (T)->Double): Comparator<T> = TODO()
2021-03-12 12:12:48,490 [main:302] - generating value of type = Comparator<Double> false depth = 3
2021-03-12 12:12:48,578 [main:43] - GENERATING CALL OF fun <T> nullsFirst(): Comparator<Double> = TODO()
2021-03-12 12:12:48,579 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsFirst(): Comparator<Double> = TODO()
2021-03-12 12:12:48,666 [main:95] - GENERATED = nullsFirst<Double>()
2021-03-12 12:12:48,666 [main:385] - Cant generate call of fun <T, K> compareBy(comparator: kotlin.Comparator<Double>, selector: (T)->Double): Comparator<T> = TODO()
2021-03-12 12:12:48,756 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:48,843 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:48,844 [main:158] - CANT GENERATE PARAMS FOR public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]
2021-03-12 12:12:48,844 [main:61] - replacement of to of type Int is (TestClass().createContainers1()).size.absoluteValue
2021-03-12 12:12:48,946 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:48,947 [main:53] - replacing ("fail 2: $(containers1).toFloat().toInt()", String)
2021-03-12 12:12:48,948 [main:50] - replacing "fail 2: $(containers1).toFloat().toInt()" String
2021-03-12 12:12:48,948 [main:54] - Getting value of type String
2021-03-12 12:12:49,061 [main:302] - generating value of type = String true depth = 0
2021-03-12 12:12:49,062 [main:58] - GENERATED VALUE OF TYPE String = "dtwek"
2021-03-12 12:12:49,062 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:49,063 [main:67] - randomType = Int
2021-03-12 12:12:49,152 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:49,211 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@770f78cc]
2021-03-12 12:12:49,299 [main:302] - generating value of type = Long true depth = 0
2021-03-12 12:12:49,300 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a1afbd1]
2021-03-12 12:12:49,386 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:49,387 [main:78] - Generated call from random type = (-334841241).div(848409185525042211).toString(1720250085)
2021-03-12 12:12:49,388 [main:106] - GETTING String from TestClass
2021-03-12 12:12:49,398 [main:106] - GETTING String from List<Container>
2021-03-12 12:12:49,443 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5fa5dc92]]
2021-03-12 12:12:49,443 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5fa5dc92]
2021-03-12 12:12:49,529 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 12:12:49,620 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 12:12:49,622 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 12:12:49,842 [main:302] - generating value of type = Int true depth = 3
2021-03-12 12:12:49,843 [main:95] - GENERATED = StringBuilder(1874752522)
2021-03-12 12:12:49,940 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 12:12:50,029 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 12:12:50,116 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 12:12:50,207 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 12:12:50,208 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 12:12:50,418 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 12:12:50,422 [main:95] - GENERATED = StringBuilder(StringBuilder())
2021-03-12 12:12:50,507 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 12:12:50,507 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 12:12:50,592 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 12:12:50,593 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 12:12:50,767 [main:302] - generating value of type = CharSequence false depth = 4
2021-03-12 12:12:50,874 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 12:12:50,876 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 12:12:51,061 [main:302] - generating value of type = CharSequence false depth = 7
2021-03-12 12:12:51,064 [main:95] - GENERATED = StringBuilder("auhem")
2021-03-12 12:12:51,064 [main:95] - GENERATED = StringBuilder(StringBuilder("auhem"))
2021-03-12 12:12:51,065 [main:117] - GENERATED CALL = (TestClass().createContainers1()).joinToString(StringBuilder(1874752522), StringBuilder(), StringBuilder(), containers2, StringBuilder(StringBuilder()), {a: T -> StringBuilder(StringBuilder("auhem"))})
2021-03-12 12:12:51,065 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]]
2021-03-12 12:12:51,065 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]
2021-03-12 12:12:51,066 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.toString(containers2)
2021-03-12 12:12:51,066 [main:61] - replacement of "fail 2: $(containers1).toFloat().toInt()" of type String is "dtwek"
2021-03-12 12:12:51,149 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 12:12:51,150 [main:66] - Compilation checking started
2021-03-12 12:12:51,504 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:12:51,505 [main:53] - replacing ("fail 1: $(testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})", String)
2021-03-12 12:12:51,505 [main:50] - replacing "fail 1: $(testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})" String
2021-03-12 12:12:51,505 [main:54] - Getting value of type String
2021-03-12 12:12:51,590 [main:302] - generating value of type = String true depth = 0
2021-03-12 12:12:51,591 [main:58] - GENERATED VALUE OF TYPE String = "daiap"
2021-03-12 12:12:51,591 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:52,243 [main:67] - randomType = Function2<Long, Set<Long>, ArrayDeque<Sequence<Container>>>
2021-03-12 12:12:52,244 [main:106] - GETTING String from Int?
2021-03-12 12:12:52,284 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@770f78cc], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a1afbd1]]
2021-03-12 12:12:52,284 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@770f78cc]
2021-03-12 12:12:52,369 [main:302] - generating value of type = Long true depth = 0
2021-03-12 12:12:52,370 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a1afbd1]
2021-03-12 12:12:52,473 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:52,474 [main:117] - GENERATED CALL = (Container().id).div(-3462906540119795736).toString(-1746026592)
2021-03-12 12:12:52,474 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8362d66]]
2021-03-12 12:12:52,474 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee]
2021-03-12 12:12:52,474 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8362d66]
2021-03-12 12:12:52,474 [main:117] - GENERATED CALL = (Container().id).toChar().titlecase()
2021-03-12 12:12:52,474 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]]
2021-03-12 12:12:52,475 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:52,570 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:52,570 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]
2021-03-12 12:12:52,654 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:52,655 [main:117] - GENERATED CALL = (Container().id).and(-1522006271).toString(772498122)
2021-03-12 12:12:52,655 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]]
2021-03-12 12:12:52,655 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:12:52,742 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:52,743 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]
2021-03-12 12:12:52,829 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:52,830 [main:117] - GENERATED CALL = (Container().id).compareTo(1014329766).toString(1813085374)
2021-03-12 12:12:52,830 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53ebdeac]]
2021-03-12 12:12:52,830 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee]
2021-03-12 12:12:52,830 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@53ebdeac]
2021-03-12 12:12:52,916 [main:302] - generating value of type = String true depth = 0
2021-03-12 12:12:52,917 [main:117] - GENERATED CALL = (Container().id).toChar().plus("ofxhr")
2021-03-12 12:12:52,917 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]]
2021-03-12 12:12:52,917 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:12:52,917 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52492392]
2021-03-12 12:12:53,020 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:53,020 [main:117] - GENERATED CALL = (Container().id).toInt().toString(1696328751)
2021-03-12 12:12:53,020 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a1afbd1]]
2021-03-12 12:12:53,021 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d]
2021-03-12 12:12:53,021 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2a1afbd1]
2021-03-12 12:12:53,122 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:53,123 [main:117] - GENERATED CALL = (Container().id).toLong().toString(-914378921)
2021-03-12 12:12:53,123 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55370f97]]
2021-03-12 12:12:53,124 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:12:53,124 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@55370f97]
2021-03-12 12:12:53,228 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:53,229 [main:117] - GENERATED CALL = (Container().id).toShort().toString(-1745205704)
2021-03-12 12:12:53,229 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5d0f67a0]]
2021-03-12 12:12:53,229 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee]
2021-03-12 12:12:53,229 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5d0f67a0]
2021-03-12 12:12:53,230 [main:117] - GENERATED CALL = (Container().id).toChar().uppercase()
2021-03-12 12:12:53,230 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@11f58fcd]]
2021-03-12 12:12:53,230 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee]
2021-03-12 12:12:53,230 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@11f58fcd]
2021-03-12 12:12:53,230 [main:117] - GENERATED CALL = (Container().id).toChar().lowercase()
2021-03-12 12:12:53,230 [main:61] - replacement of "fail 1: $(testClass).createContainers1(containers1, containers1).indexOfLast({a: T -> false})" of type String is (Container().id).toChar().uppercase()
2021-03-12 12:12:53,313 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:53,314 [main:53] - replacing (containers1, Int)
2021-03-12 12:12:53,314 [main:50] - replacing containers1 Int
2021-03-12 12:12:53,314 [main:54] - Getting value of type Int
2021-03-12 12:12:53,401 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:53,401 [main:58] - GENERATED VALUE OF TYPE Int = 1829928744
2021-03-12 12:12:53,401 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:53,490 [main:67] - randomType = Float
2021-03-12 12:12:53,573 [main:302] - generating value of type = Float true depth = 0
2021-03-12 12:12:53,612 [main:149] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@c9c03ea]
2021-03-12 12:12:53,612 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1f537655]
2021-03-12 12:12:53,613 [main:78] - Generated call from random type = (0.35506356f).toShort().countLeadingZeroBits()
2021-03-12 12:12:53,614 [main:106] - GETTING Int from List<Container>
2021-03-12 12:12:53,642 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]]
2021-03-12 12:12:53,642 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]
2021-03-12 12:12:53,643 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.inv()
2021-03-12 12:12:53,643 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3d4fb16e]]
2021-03-12 12:12:53,643 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3d4fb16e]
2021-03-12 12:12:53,741 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:53,742 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.coerceAtMost(-1360452609)
2021-03-12 12:12:53,742 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29ab89fc]]
2021-03-12 12:12:53,742 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@29ab89fc]
2021-03-12 12:12:53,832 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:53,832 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.times(126)
2021-03-12 12:12:53,833 [main:113] - Case = [public val <T> kotlin.collections.List<T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@3e8b14e1]]
2021-03-12 12:12:53,833 [main:117] - GENERATED CALL = (TestClass().createContainers2()).lastIndex
2021-03-12 12:12:53,833 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): Container defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a507beb], public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@7cf62b6d]]
2021-03-12 12:12:53,833 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): Container defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a507beb]
2021-03-12 12:12:53,917 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:53,918 [main:117] - GENERATED CALL = (TestClass().createContainers2()).get(-1498619533).id
2021-03-12 12:12:53,918 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e09e115]]
2021-03-12 12:12:53,918 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e09e115]
2021-03-12 12:12:53,999 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 12:12:54,000 [main:302] - generating value of type = Int true depth = 1
2021-03-12 12:12:54,000 [main:117] - GENERATED CALL = (TestClass().createContainers2()).sumOf({a: T -> -538472039})
2021-03-12 12:12:54,001 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@23fb307f]]
2021-03-12 12:12:54,001 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@23fb307f]
2021-03-12 12:12:54,001 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.xor(containers1)
2021-03-12 12:12:54,001 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1394e8ef]]
2021-03-12 12:12:54,001 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1394e8ef]
2021-03-12 12:12:54,001 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.shr(containers1)
2021-03-12 12:12:54,001 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@902d75c], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]]
2021-03-12 12:12:54,001 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@902d75c]
2021-03-12 12:12:54,084 [main:302] - generating value of type = Any false depth = 0
2021-03-12 12:12:54,084 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]
2021-03-12 12:12:54,170 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:12:54,170 [main:117] - GENERATED CALL = (TestClass().createContainers2()).equals("ooqsm").compareTo(true)
2021-03-12 12:12:54,171 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]]
2021-03-12 12:12:54,171 [main:149] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]
2021-03-12 12:12:54,253 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:54,254 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.coerceIn(-1510278508, containers1)
2021-03-12 12:12:54,254 [main:61] - replacement of containers1 of type Int is (TestClass().createContainers2()).size.inv()
2021-03-12 12:12:54,357 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:54,358 [main:66] - Compilation checking started
2021-03-12 12:12:54,751 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((TestClass().createContainers2()).size.inv() != 101) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:12:54,752 [main:53] - replacing (q.id, Int?)
2021-03-12 12:12:54,752 [main:50] - replacing q.id Int?
2021-03-12 12:12:54,752 [main:54] - Getting value of type Int?
2021-03-12 12:12:54,841 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:54,841 [main:58] - GENERATED VALUE OF TYPE Int? = 1236258168
2021-03-12 12:12:54,842 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:54,937 [main:67] - randomType = UByte
2021-03-12 12:12:55,021 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 12:12:55,074 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@7671208e]
2021-03-12 12:12:55,157 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 12:12:55,157 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]
2021-03-12 12:12:55,158 [main:78] - Generated call from random type = (21.toUByte()).compareTo(24.toUByte()).takeLowestOneBit()
2021-03-12 12:12:55,159 [main:106] - GETTING Int? from Container
2021-03-12 12:12:55,165 [main:113] - Case = [public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@f92b67d], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]]
2021-03-12 12:12:55,166 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]
2021-03-12 12:12:55,166 [main:117] - GENERATED CALL = (q)?.id?.dec()
2021-03-12 12:12:55,166 [main:113] - Case = [public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@f92b67d], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]]
2021-03-12 12:12:55,166 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:55,166 [main:117] - GENERATED CALL = (q)?.id?.and(id)
2021-03-12 12:12:55,166 [main:113] - Case = [public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@f92b67d], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5ebf2121]]
2021-03-12 12:12:55,166 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5ebf2121]
2021-03-12 12:12:55,167 [main:117] - GENERATED CALL = (q)?.id?.toInt()
2021-03-12 12:12:55,167 [main:113] - Case = [public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@f92b67d], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@45f80a0a]]
2021-03-12 12:12:55,167 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@45f80a0a]
2021-03-12 12:12:55,167 [main:117] - GENERATED CALL = (q)?.id?.or(id)
2021-03-12 12:12:55,167 [main:113] - Case = [public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@f92b67d], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@326e024f]]
2021-03-12 12:12:55,167 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@326e024f]
2021-03-12 12:12:55,168 [main:117] - GENERATED CALL = (q)?.id?.unaryPlus()
2021-03-12 12:12:55,168 [main:113] - Case = [public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@f92b67d], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@23fb307f]]
2021-03-12 12:12:55,168 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@23fb307f]
2021-03-12 12:12:55,248 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:55,248 [main:117] - GENERATED CALL = (q)?.id?.xor(-2096732836)
2021-03-12 12:12:55,249 [main:113] - Case = [public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@f92b67d], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]]
2021-03-12 12:12:55,249 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]
2021-03-12 12:12:55,249 [main:117] - GENERATED CALL = (q)?.id?.unaryMinus()
2021-03-12 12:12:55,249 [main:113] - Case = [public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@f92b67d]]
2021-03-12 12:12:55,250 [main:117] - GENERATED CALL = (q)?.id
2021-03-12 12:12:55,250 [main:113] - Case = [public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@f92b67d], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c93275]]
2021-03-12 12:12:55,250 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c93275]
2021-03-12 12:12:55,250 [main:117] - GENERATED CALL = (q)?.id?.shl(id)
2021-03-12 12:12:55,250 [main:113] - Case = [public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@f92b67d], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@380ce6fc]]
2021-03-12 12:12:55,250 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@380ce6fc]
2021-03-12 12:12:55,349 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:55,350 [main:117] - GENERATED CALL = (q)?.id?.minus(-107)
2021-03-12 12:12:55,350 [main:61] - replacement of q.id of type Int? is (q)?.id?.unaryMinus()
2021-03-12 12:12:55,434 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(SAFE_ACCESS_EXPRESSION)
2021-03-12 12:12:55,434 [main:66] - Compilation checking started
2021-03-12 12:12:55,688 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); (q)?.id?.unaryMinus() = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((TestClass().createContainers2()).size.inv() != 101) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:12:55,688 [main:53] - replacing (containers1, Int)
2021-03-12 12:12:55,689 [main:50] - replacing containers1 Int
2021-03-12 12:12:55,689 [main:54] - Getting value of type Int
2021-03-12 12:12:55,779 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:55,779 [main:58] - GENERATED VALUE OF TYPE Int = 1234625706
2021-03-12 12:12:55,779 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:55,872 [main:67] - randomType = Short
2021-03-12 12:12:55,956 [main:302] - generating value of type = Short true depth = 0
2021-03-12 12:12:56,006 [main:149] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@e59eac7]
2021-03-12 12:12:56,006 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@17803082]
2021-03-12 12:12:56,006 [main:78] - Generated call from random type = (-3384).toDouble().toInt()
2021-03-12 12:12:56,007 [main:106] - GETTING Int from List<Container>
2021-03-12 12:12:56,035 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2a83de69]]
2021-03-12 12:12:56,035 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2a83de69]
2021-03-12 12:12:56,035 [main:117] - GENERATED CALL = (TestClass().createContainers1()).sum()
2021-03-12 12:12:56,035 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5ebf2121]]
2021-03-12 12:12:56,035 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5ebf2121]
2021-03-12 12:12:56,035 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.toInt()
2021-03-12 12:12:56,036 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]]
2021-03-12 12:12:56,036 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]
2021-03-12 12:12:56,036 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.takeLowestOneBit()
2021-03-12 12:12:56,036 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]]
2021-03-12 12:12:56,036 [main:149] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]
2021-03-12 12:12:56,119 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:56,219 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:56,220 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.coerceIn(-958062118, 547421347)
2021-03-12 12:12:56,220 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]]
2021-03-12 12:12:56,220 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]
2021-03-12 12:12:56,220 [main:117] - GENERATED CALL = (TestClass().createContainers1()).count()
2021-03-12 12:12:56,220 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]]
2021-03-12 12:12:56,220 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]
2021-03-12 12:12:56,221 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.dec()
2021-03-12 12:12:56,221 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c93275]]
2021-03-12 12:12:56,221 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c93275]
2021-03-12 12:12:56,302 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:56,302 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.shl(-2102546793)
2021-03-12 12:12:56,302 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5dd94cfd]]
2021-03-12 12:12:56,302 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5dd94cfd]
2021-03-12 12:12:56,384 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 12:12:56,384 [main:302] - generating value of type = Int true depth = 1
2021-03-12 12:12:56,385 [main:117] - GENERATED CALL = (TestClass().createContainers1()).sumBy({a: T -> 1542307564})
2021-03-12 12:12:56,385 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@326e024f]]
2021-03-12 12:12:56,385 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@326e024f]
2021-03-12 12:12:56,386 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.unaryPlus()
2021-03-12 12:12:56,386 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1735dacf], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]]
2021-03-12 12:12:56,386 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]
2021-03-12 12:12:56,386 [main:117] - GENERATED CALL = (TestClass().createContainers1()).size.inv()
2021-03-12 12:12:56,386 [main:61] - replacement of containers1 of type Int is (TestClass().createContainers1()).sumBy({a: T -> 1542307564})
2021-03-12 12:12:56,467 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:56,468 [main:53] - replacing (TestClass(), TestClass)
2021-03-12 12:12:56,468 [main:50] - replacing TestClass() TestClass
2021-03-12 12:12:56,468 [main:54] - Getting value of type TestClass
2021-03-12 12:12:56,547 [main:302] - generating value of type = TestClass false depth = 0
2021-03-12 12:12:56,547 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:12:56,548 [main:58] - GENERATED VALUE OF TYPE TestClass = TestClass()
2021-03-12 12:12:56,548 [main:61] - GENERATED IS CALL =true
2021-03-12 12:12:56,633 [main:67] - randomType = Byte
2021-03-12 12:12:56,722 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:56,763 [main:106] - GETTING TestClass from Int?
2021-03-12 12:12:56,801 [main:106] - GETTING TestClass from TestClass
2021-03-12 12:12:56,807 [main:61] - replacement of TestClass() of type TestClass is testClass
2021-03-12 12:12:56,887 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-12 12:12:56,888 [main:66] - Compilation checking started
2021-03-12 12:12:57,127 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = testClass
    val containers1 = testClass.createContainers1().size
    if ((TestClass().createContainers2()).size.inv() != 101) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:12:57,128 [main:53] - replacing (100, Int)
2021-03-12 12:12:57,128 [main:50] - replacing 100 Int
2021-03-12 12:12:57,128 [main:54] - Getting value of type Int
2021-03-12 12:12:57,216 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:57,216 [main:58] - GENERATED VALUE OF TYPE Int = 703332103
2021-03-12 12:12:57,216 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:57,217 [main:67] - randomType = TestClass
2021-03-12 12:12:57,300 [main:302] - generating value of type = TestClass false depth = 0
2021-03-12 12:12:57,301 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:12:57,310 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@445c7672]
2021-03-12 12:12:57,392 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:57,393 [main:149] - GENERATING call of type public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:12:57,473 [main:302] - generating value of type = K false depth = 0
2021-03-12 12:12:57,556 [main:302] - generating value of type = Function1<T, K?> false depth = 0
2021-03-12 12:12:57,556 [main:302] - generating value of type = K false depth = 1
2021-03-12 12:12:57,560 [main:158] - CANT GENERATE PARAMS FOR public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:12:57,560 [main:78] - Generated call from random type = (TestClass()).null
2021-03-12 12:12:57,561 [main:106] - GETTING Int from List<Container>
2021-03-12 12:12:57,595 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]]
2021-03-12 12:12:57,596 [main:149] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]
2021-03-12 12:12:57,596 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.coerceIn(from, to)
2021-03-12 12:12:57,596 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]]
2021-03-12 12:12:57,596 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]
2021-03-12 12:12:57,676 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:12:57,677 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.plus(81)
2021-03-12 12:12:57,677 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e09e115]]
2021-03-12 12:12:57,677 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1e09e115]
2021-03-12 12:12:57,756 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 12:12:57,756 [main:302] - generating value of type = Int true depth = 1
2021-03-12 12:12:57,757 [main:117] - GENERATED CALL = (TestClass().createContainers2()).sumOf({a: T -> 1780499723})
2021-03-12 12:12:57,757 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@4a4ce3f5]]
2021-03-12 12:12:57,757 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.absoluteValue
2021-03-12 12:12:57,757 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): Container defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a507beb], public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@7cf62b6d]]
2021-03-12 12:12:57,757 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): Container defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a507beb]
2021-03-12 12:12:57,837 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:57,837 [main:117] - GENERATED CALL = (TestClass().createContainers2()).get(-1458015666).id
2021-03-12 12:12:57,837 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]]
2021-03-12 12:12:57,838 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]
2021-03-12 12:12:57,838 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.takeLowestOneBit()
2021-03-12 12:12:57,838 [main:113] - Case = [public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]]
2021-03-12 12:12:57,838 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]
2021-03-12 12:12:57,950 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:12:57,951 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:12:57,951 [main:117] - GENERATED CALL = (TestClass().createContainers2()).indexOfLast({a: T -> true})
2021-03-12 12:12:57,951 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]]
2021-03-12 12:12:57,952 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]
2021-03-12 12:12:57,952 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.ushr(from)
2021-03-12 12:12:57,952 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@13ea03f4]]
2021-03-12 12:12:57,952 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@13ea03f4]
2021-03-12 12:12:57,952 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.coerceAtLeast(to)
2021-03-12 12:12:57,952 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@326e024f]]
2021-03-12 12:12:57,952 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@326e024f]
2021-03-12 12:12:57,953 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.unaryPlus()
2021-03-12 12:12:57,953 [main:61] - replacement of 100 of type Int is (TestClass().createContainers2()).indexOfLast({a: T -> true})
2021-03-12 12:12:58,042 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:58,043 [main:66] - Compilation checking started
2021-03-12 12:12:58,260 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = (TestClass().createContainers2()).indexOfLast({a: T -> true})) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((TestClass().createContainers2()).size.inv() != 101) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:12:58,261 [main:53] - replacing ((TestClass().createContainers2()).size.inv() != 101, Boolean)
2021-03-12 12:12:58,262 [main:50] - replacing (TestClass().createContainers2()).size.inv() != 101 Boolean
2021-03-12 12:12:58,262 [main:54] - Getting value of type Boolean
2021-03-12 12:12:58,343 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:12:58,344 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 12:12:58,344 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:58,345 [main:67] - randomType = Container
2021-03-12 12:12:58,428 [main:302] - generating value of type = Container false depth = 0
2021-03-12 12:12:58,428 [main:112] - generating klass Container text = class Container {
    var id: Int? = null
}
2021-03-12 12:12:58,433 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in Container[DeserializedSimpleFunctionDescriptor@d2de84b]
2021-03-12 12:12:58,516 [main:302] - generating value of type = Any false depth = 0
2021-03-12 12:12:58,516 [main:78] - Generated call from random type = (Container()).equals("utane")
2021-03-12 12:12:58,516 [main:61] - replacement of (TestClass().createContainers2()).size.inv() != 101 of type Boolean is (Container()).equals("utane")
2021-03-12 12:12:58,597 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:12:58,598 [main:66] - Compilation checking started
2021-03-12 12:12:58,987 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:12:58,988 [main:53] - replacing (containers1, Int)
2021-03-12 12:12:58,988 [main:50] - replacing containers1 Int
2021-03-12 12:12:58,988 [main:54] - Getting value of type Int
2021-03-12 12:12:59,077 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:59,077 [main:58] - GENERATED VALUE OF TYPE Int = 472351146
2021-03-12 12:12:59,078 [main:61] - GENERATED IS CALL =false
2021-03-12 12:12:59,078 [main:67] - randomType = Container
2021-03-12 12:12:59,159 [main:302] - generating value of type = Container false depth = 0
2021-03-12 12:12:59,160 [main:112] - generating klass Container text = class Container {
    var id: Int? = null
}
2021-03-12 12:12:59,165 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:12:59,248 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:12:59,249 [main:78] - Generated call from random type = (Container()).id?.and(73252793)!!
2021-03-12 12:12:59,251 [main:106] - GETTING Int from List<Container>
2021-03-12 12:12:59,302 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1d268d97]]
2021-03-12 12:12:59,302 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1d268d97]
2021-03-12 12:12:59,303 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.countOneBits()
2021-03-12 12:12:59,303 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34ef6fef]]
2021-03-12 12:12:59,303 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34ef6fef]
2021-03-12 12:12:59,394 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:12:59,566 [main:43] - GENERATING CALL OF fun <T> maxOf(a: Char, b: Char, c: Char, comparator: kotlin.Comparator<Char>): T = TODO()
2021-03-12 12:12:59,567 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: Char, b: Char, c: Char, comparator: kotlin.Comparator<Char>): T = TODO()
2021-03-12 12:12:59,746 [main:302] - generating value of type = Char true depth = 3
2021-03-12 12:12:59,746 [main:302] - generating value of type = Char true depth = 3
2021-03-12 12:12:59,746 [main:302] - generating value of type = Char true depth = 3
2021-03-12 12:12:59,747 [main:302] - generating value of type = Comparator<Char> false depth = 3
2021-03-12 12:12:59,862 [main:43] - GENERATING CALL OF fun <T> compareByDescending(selector: (Char)->kotlin.Comparable<*>?): Comparator<Char> = TODO()
2021-03-12 12:12:59,864 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareByDescending(selector: (Char)->kotlin.Comparable<*>?): Comparator<Char> = TODO()
2021-03-12 12:13:00,044 [main:302] - generating value of type = Function1<Char, Comparable<*>?> false depth = 6
2021-03-12 12:13:00,045 [main:302] - generating value of type = Comparable<*> false depth = 7
2021-03-12 12:13:00,050 [main:95] - GENERATED = compareByDescending<Char>({a: Char -> 8719})
2021-03-12 12:13:00,050 [main:95] - GENERATED = maxOf<Char>('蚚', '먚', '흆', compareByDescending<Char>({a: Char -> 8719}))
2021-03-12 12:13:00,051 [main:117] - GENERATED CALL = (TestClass().createContainers2()).indexOf(maxOf<Char>('蚚', '먚', '흆', compareByDescending<Char>({a: Char -> 8719})))
2021-03-12 12:13:00,051 [main:113] - Case = [public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]]
2021-03-12 12:13:00,051 [main:149] - GENERATING call of type public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:13:00,131 [main:302] - generating value of type = K false depth = 0
2021-03-12 12:13:00,223 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:00,311 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:00,393 [main:302] - generating value of type = Function1<T, K?> false depth = 0
2021-03-12 12:13:00,394 [main:158] - CANT GENERATE PARAMS FOR public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:13:00,394 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@45f80a0a]]
2021-03-12 12:13:00,394 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@45f80a0a]
2021-03-12 12:13:00,478 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:00,479 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.or(466710078)
2021-03-12 12:13:00,479 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c93275]]
2021-03-12 12:13:00,479 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@36c93275]
2021-03-12 12:13:00,582 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:00,583 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.shl(50241632)
2021-03-12 12:13:00,583 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]]
2021-03-12 12:13:00,583 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]
2021-03-12 12:13:00,583 [main:117] - GENERATED CALL = (TestClass().createContainers2()).count()
2021-03-12 12:13:00,583 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3d4fb16e]]
2021-03-12 12:13:00,583 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@3d4fb16e]
2021-03-12 12:13:00,678 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:00,679 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.coerceAtMost(-105087152)
2021-03-12 12:13:00,679 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]]
2021-03-12 12:13:00,679 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]
2021-03-12 12:13:00,679 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.unaryMinus()
2021-03-12 12:13:00,679 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): Container defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a507beb], public final var id: kotlin.Int? defined in Container[PropertyDescriptorImpl@7cf62b6d]]
2021-03-12 12:13:00,679 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): Container defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a507beb]
2021-03-12 12:13:00,760 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:00,760 [main:117] - GENERATED CALL = (TestClass().createContainers2()).get(756300541).id
2021-03-12 12:13:00,760 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]]
2021-03-12 12:13:00,760 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]
2021-03-12 12:13:00,761 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.dec()
2021-03-12 12:13:00,761 [main:61] - replacement of containers1 of type Int is (TestClass().createContainers2()).size.unaryMinus()
2021-03-12 12:13:00,841 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:00,842 [main:53] - replacing (::createContainer, KFunction1<Int, Container>)
2021-03-12 12:13:00,842 [main:50] - replacing ::createContainer KFunction1<Int, Container>
2021-03-12 12:13:00,842 [main:54] - Getting value of type KFunction1<Int, Container>
2021-03-12 12:13:00,932 [main:302] - generating value of type = KFunction1<Int, Container> false depth = 0
2021-03-12 12:13:01,015 [main:58] - GENERATED VALUE OF TYPE KFunction1<Int, Container> = 
2021-03-12 12:13:01,100 [main:67] - randomType = UShort
2021-03-12 12:13:01,181 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 12:13:01,214 [main:106] - GETTING KFunction1<Int, Container> from List<Container>
2021-03-12 12:13:01,243 [main:106] - GETTING KFunction1<Int, Container> from Int
2021-03-12 12:13:01,280 [main:106] - GETTING KFunction1<Int, Container> from Int
2021-03-12 12:13:01,281 [main:106] - GETTING KFunction1<Int, Container> from Int?
2021-03-12 12:13:01,320 [main:106] - GETTING KFunction1<Int, Container> from List<Container>
2021-03-12 12:13:01,321 [main:106] - GETTING KFunction1<Int, Container> from Int?
2021-03-12 12:13:01,321 [main:58] - Cant find and generate replacement for ::createContainer type KFunction1<Int, Container>
2021-03-12 12:13:01,322 [main:53] - replacing (testClass.createContainers2().size, Int)
2021-03-12 12:13:01,322 [main:50] - replacing testClass.createContainers2().size Int
2021-03-12 12:13:01,322 [main:54] - Getting value of type Int
2021-03-12 12:13:01,433 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:01,433 [main:58] - GENERATED VALUE OF TYPE Int = 1290915903
2021-03-12 12:13:01,434 [main:61] - GENERATED IS CALL =false
2021-03-12 12:13:01,435 [main:67] - randomType = List<Container>
2021-03-12 12:13:01,436 [main:106] - GETTING Int from TestClass
2021-03-12 12:13:01,444 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]]
2021-03-12 12:13:01,444 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:13:01,445 [main:149] - GENERATING call of type public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:13:01,533 [main:302] - generating value of type = K false depth = 0
2021-03-12 12:13:01,619 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:01,698 [main:302] - generating value of type = Function1<T, K?> false depth = 0
2021-03-12 12:13:01,699 [main:302] - generating value of type = K false depth = 1
2021-03-12 12:13:01,702 [main:158] - CANT GENERATE PARAMS FOR public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:13:01,702 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]]
2021-03-12 12:13:01,702 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:13:01,702 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]
2021-03-12 12:13:01,786 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:13:01,872 [main:43] - GENERATING CALL OF fun <T> checkNotNull(value: TestClass, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 12:13:01,873 [main:61] - WITHOUT TYPE PARAMS = fun <T> checkNotNull(value: TestClass, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 12:13:02,042 [main:302] - generating value of type = TestClass false depth = 3
2021-03-12 12:13:02,043 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:13:02,043 [main:302] - generating value of type = Function0<Any> false depth = 3
2021-03-12 12:13:02,043 [main:302] - generating value of type = Any false depth = 4
2021-03-12 12:13:02,043 [main:95] - GENERATED = checkNotNull<TestClass>(TestClass(), { "gzkdz"})
2021-03-12 12:13:02,147 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 12:13:02,332 [main:43] - GENERATING CALL OF fun <T, K> compareBy(comparator: kotlin.Comparator<Char>, selector: (T)->Char): Comparator<T> = TODO()
2021-03-12 12:13:02,333 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareBy(comparator: kotlin.Comparator<Char>, selector: (T)->Char): Comparator<T> = TODO()
2021-03-12 12:13:02,593 [main:302] - generating value of type = Comparator<Char> false depth = 3
2021-03-12 12:13:02,760 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<ULong>, selector: (Char)->ULong): Comparator<Char> = TODO()
2021-03-12 12:13:02,762 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<ULong>, selector: (Char)->ULong): Comparator<Char> = TODO()
2021-03-12 12:13:03,084 [main:302] - generating value of type = Comparator<ULong> false depth = 6
2021-03-12 12:13:03,168 [main:43] - GENERATING CALL OF fun <T> nullsLast(comparator: kotlin.Comparator<ULong>): Comparator<ULong> = TODO()
2021-03-12 12:13:03,170 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(comparator: kotlin.Comparator<ULong>): Comparator<ULong> = TODO()
2021-03-12 12:13:03,336 [main:302] - generating value of type = Comparator<ULong> false depth = 9
2021-03-12 12:13:03,506 [main:43] - GENERATING CALL OF fun <T, K> compareBy(comparator: kotlin.Comparator<UShort>, selector: (ULong)->UShort): Comparator<ULong> = TODO()
2021-03-12 12:13:03,507 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareBy(comparator: kotlin.Comparator<UShort>, selector: (ULong)->UShort): Comparator<ULong> = TODO()
2021-03-12 12:13:03,880 [main:302] - generating value of type = Comparator<UShort> false depth = 12
2021-03-12 12:13:03,985 [main:43] - GENERATING CALL OF fun <T> reverseOrder(): Comparator<UShort> = TODO()
2021-03-12 12:13:03,986 [main:61] - WITHOUT TYPE PARAMS = fun <T> reverseOrder(): Comparator<UShort> = TODO()
2021-03-12 12:13:04,070 [main:95] - GENERATED = reverseOrder<UShort>()
2021-03-12 12:13:04,071 [main:302] - generating value of type = Function1<ULong, UShort> false depth = 12
2021-03-12 12:13:04,071 [main:302] - generating value of type = UShort true depth = 13
2021-03-12 12:13:04,071 [main:95] - GENERATED = compareBy<ULong, UShort>(reverseOrder<UShort>(), {a: ULong -> 465.toUShort()})
2021-03-12 12:13:04,072 [main:95] - GENERATED = nullsLast<ULong>(compareBy<ULong, UShort>(reverseOrder<UShort>(), {a: ULong -> 465.toUShort()}))
2021-03-12 12:13:04,072 [main:302] - generating value of type = Function1<Char, ULong> false depth = 6
2021-03-12 12:13:04,072 [main:302] - generating value of type = ULong true depth = 7
2021-03-12 12:13:04,072 [main:95] - GENERATED = compareByDescending<Char, ULong>(nullsLast<ULong>(compareBy<ULong, UShort>(reverseOrder<UShort>(), {a: ULong -> 465.toUShort()})), {a: Char -> 7228940193598399058.toULong()})
2021-03-12 12:13:04,072 [main:385] - Cant generate call of fun <T, K> compareBy(comparator: kotlin.Comparator<Char>, selector: (T)->Char): Comparator<T> = TODO()
2021-03-12 12:13:04,072 [main:158] - CANT GENERATE PARAMS FOR public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]
2021-03-12 12:13:04,073 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4676d454]]
2021-03-12 12:13:04,073 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:13:04,073 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4676d454]
2021-03-12 12:13:04,151 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:13:04,236 [main:43] - GENERATING CALL OF fun <T> minOf(a: Byte, other: Byte): T = TODO()
2021-03-12 12:13:04,237 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Byte, other: Byte): T = TODO()
2021-03-12 12:13:04,319 [main:302] - generating value of type = Byte true depth = 3
2021-03-12 12:13:04,319 [main:302] - generating value of type = Byte true depth = 3
2021-03-12 12:13:04,320 [main:95] - GENERATED = minOf<Byte>(-106, 75)
2021-03-12 12:13:04,320 [main:117] - GENERATED CALL = (testClass).createContainers1(containers1, containers2).lastIndexOf(minOf<Byte>(-106, 75))
2021-03-12 12:13:04,320 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in TestClass[DeserializedSimpleFunctionDescriptor@7cd9be59], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]]
2021-03-12 12:13:04,320 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in TestClass[DeserializedSimpleFunctionDescriptor@7cd9be59]
2021-03-12 12:13:04,399 [main:302] - generating value of type = Any false depth = 0
2021-03-12 12:13:04,400 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]
2021-03-12 12:13:04,478 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:13:04,479 [main:117] - GENERATED CALL = (testClass).equals("prxbg").compareTo(true)
2021-03-12 12:13:04,479 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@47e5cad0]]
2021-03-12 12:13:04,479 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:13:04,479 [main:117] - GENERATED CALL = (testClass).createContainers1(containers1, containers2).size
2021-03-12 12:13:04,479 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34ef6fef]]
2021-03-12 12:13:04,479 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:13:04,480 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34ef6fef]
2021-03-12 12:13:04,576 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:13:04,678 [main:43] - GENERATING CALL OF fun <T> requireNotNull(value: TestClass, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 12:13:04,679 [main:61] - WITHOUT TYPE PARAMS = fun <T> requireNotNull(value: TestClass, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 12:13:04,852 [main:302] - generating value of type = TestClass false depth = 3
2021-03-12 12:13:04,852 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:13:04,852 [main:302] - generating value of type = Function0<Any> false depth = 3
2021-03-12 12:13:04,852 [main:302] - generating value of type = Any false depth = 4
2021-03-12 12:13:04,853 [main:95] - GENERATED = requireNotNull<TestClass>(TestClass(), { "peoch"})
2021-03-12 12:13:04,853 [main:117] - GENERATED CALL = (testClass).createContainers1(containers2, containers2).indexOf(requireNotNull<TestClass>(TestClass(), { "peoch"}))
2021-03-12 12:13:04,853 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@420edebb]]
2021-03-12 12:13:04,853 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:13:04,933 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:05,015 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:05,016 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@420edebb]
2021-03-12 12:13:05,097 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:13:05,097 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:13:05,098 [main:117] - GENERATED CALL = (testClass).createContainers1(-263642945, 487402871).indexOfFirst({a: T -> true})
2021-03-12 12:13:05,098 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]]
2021-03-12 12:13:05,098 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:13:05,177 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:05,177 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]
2021-03-12 12:13:05,256 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:13:05,256 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:13:05,257 [main:117] - GENERATED CALL = (testClass).createContainers1(-821417722, containers2).indexOfLast({a: T -> false})
2021-03-12 12:13:05,257 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab], public val <T> kotlin.collections.List<T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@3e8b14e1]]
2021-03-12 12:13:05,257 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@3a8c4bab]
2021-03-12 12:13:05,336 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:05,336 [main:117] - GENERATED CALL = (testClass).createContainers1(containers1, -1933518555).lastIndex
2021-03-12 12:13:05,337 [main:61] - replacement of testClass.createContainers2().size of type Int is (testClass).createContainers1(-821417722, containers2).indexOfLast({a: T -> false})
2021-03-12 12:13:05,427 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:05,428 [main:66] - Compilation checking started
2021-03-12 12:13:05,667 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = (testClass).createContainers1(-821417722, containers2).indexOfLast({a: T -> false})
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:13:05,669 [main:53] - replacing (((from).compareTo(763400127).until(-38)).map(::createContainer), List<Container>)
2021-03-12 12:13:05,669 [main:50] - replacing ((from).compareTo(763400127).until(-38)).map(::createContainer) List<Container>
2021-03-12 12:13:05,669 [main:54] - Getting value of type List<Container>
2021-03-12 12:13:05,749 [main:302] - generating value of type = List<Container> false depth = 0
2021-03-12 12:13:05,833 [main:43] - GENERATING CALL OF fun <E> ArrayList(): List<Container> = TODO()
2021-03-12 12:13:05,834 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): List<Container> = TODO()
2021-03-12 12:13:05,917 [main:95] - GENERATED = ArrayList<Container>()
2021-03-12 12:13:05,917 [main:58] - GENERATED VALUE OF TYPE List<Container> = ArrayList<Container>()
2021-03-12 12:13:05,917 [main:61] - GENERATED IS CALL =true
2021-03-12 12:13:06,002 [main:67] - randomType = TestClass?
2021-03-12 12:13:06,087 [main:302] - generating value of type = TestClass false depth = 0
2021-03-12 12:13:06,087 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:13:06,097 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@7e63a06a]
2021-03-12 12:13:06,177 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:06,177 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.asReversed(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6e858079]
2021-03-12 12:13:06,178 [main:78] - Generated call from random type = (TestClass())?.createContainers1(488155209, to).asReversed()
2021-03-12 12:13:06,241 [main:106] - GETTING List<Container> from Int
2021-03-12 12:13:06,276 [main:106] - GETTING List<Container> from List<Container>
2021-03-12 12:13:06,304 [main:113] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@25b2d465]]
2021-03-12 12:13:06,305 [main:149] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.sorted(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@25b2d465]
2021-03-12 12:13:06,305 [main:117] - GENERATED CALL = (TestClass().createContainers1()).sorted()
2021-03-12 12:13:06,305 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.takeWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@53e23286]]
2021-03-12 12:13:06,305 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.takeWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@53e23286]
2021-03-12 12:13:06,402 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:13:06,403 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:13:06,403 [main:117] - GENERATED CALL = (TestClass().createContainers1()).takeWhile({a: T -> false})
2021-03-12 12:13:06,403 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.drop(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@691722b4]]
2021-03-12 12:13:06,403 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.drop(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@691722b4]
2021-03-12 12:13:06,404 [main:117] - GENERATED CALL = (TestClass().createContainers1()).drop(from)
2021-03-12 12:13:06,404 [main:113] - Case = [public operator fun <T> kotlin.collections.Collection<T>.plus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7cb326a9]]
2021-03-12 12:13:06,404 [main:149] - GENERATING call of type public operator fun <T> kotlin.collections.Collection<T>.plus(element: T): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7cb326a9]
2021-03-12 12:13:06,491 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:13:06,902 [main:43] - GENERATING CALL OF fun <T> requireNotNull(value: Pair<Short?, Sequence<Boolean>>, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 12:13:06,903 [main:61] - WITHOUT TYPE PARAMS = fun <T> requireNotNull(value: Pair<Short?, Sequence<Boolean>>, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 12:13:07,079 [main:302] - generating value of type = Pair<Short?, Sequence<Boolean>> false depth = 3
2021-03-12 12:13:07,198 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Short?, second: Sequence<Boolean>): Pair<Short?, Sequence<Boolean>> = TODO()
2021-03-12 12:13:07,199 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Short?, second: Sequence<Boolean>): Pair<Short?, Sequence<Boolean>> = TODO()
2021-03-12 12:13:07,295 [main:302] - generating value of type = Short true depth = 6
2021-03-12 12:13:07,296 [main:302] - generating value of type = Sequence<Boolean> false depth = 6
2021-03-12 12:13:07,382 [main:43] - GENERATING CALL OF fun <T> emptySequence(): Sequence<Boolean> = TODO()
2021-03-12 12:13:07,383 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptySequence(): Sequence<Boolean> = TODO()
2021-03-12 12:13:07,471 [main:95] - GENERATED = emptySequence<Boolean>()
2021-03-12 12:13:07,471 [main:95] - GENERATED = Pair<Short?, Sequence<Boolean>>(-30609, emptySequence<Boolean>())
2021-03-12 12:13:07,471 [main:302] - generating value of type = Function0<Any> false depth = 3
2021-03-12 12:13:07,471 [main:302] - generating value of type = Any false depth = 4
2021-03-12 12:13:07,472 [main:95] - GENERATED = requireNotNull<Pair<Short?, Sequence<Boolean>>>(Pair<Short?, Sequence<Boolean>>(-30609, emptySequence<Boolean>()), { "orjfk"})
2021-03-12 12:13:07,472 [main:117] - GENERATED CALL = (TestClass().createContainers1()).plus(requireNotNull<Pair<Short?, Sequence<Boolean>>>(Pair<Short?, Sequence<Boolean>>(-30609, emptySequence<Boolean>()), { "orjfk"}))
2021-03-12 12:13:07,472 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41eb69d8]]
2021-03-12 12:13:07,472 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41eb69d8]
2021-03-12 12:13:07,551 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-12 12:13:07,638 [main:43] - GENERATING CALL OF fun CharRange(start: kotlin.Char, endInclusive: kotlin.Char): Iterable<Int> = TODO()
2021-03-12 12:13:07,639 [main:61] - WITHOUT TYPE PARAMS = fun CharRange(start: kotlin.Char, endInclusive: kotlin.Char): Iterable<Int> = TODO()
2021-03-12 12:13:07,888 [main:302] - generating value of type = Char true depth = 3
2021-03-12 12:13:07,889 [main:302] - generating value of type = Char true depth = 3
2021-03-12 12:13:07,889 [main:95] - GENERATED = CharRange('㶔', '⾍')
2021-03-12 12:13:07,889 [main:117] - GENERATED CALL = (TestClass().createContainers1()).slice(CharRange('㶔', '⾍'))
2021-03-12 12:13:07,889 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.distinct(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@60157e9c]]
2021-03-12 12:13:07,889 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.distinct(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@60157e9c]
2021-03-12 12:13:07,890 [main:117] - GENERATED CALL = (TestClass().createContainers1()).distinct()
2021-03-12 12:13:07,890 [main:113] - Case = [public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.List<Container> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@431ea6b]]
2021-03-12 12:13:07,890 [main:149] - GENERATING call of type public abstract fun subList(fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.List<Container> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@431ea6b]
2021-03-12 12:13:07,890 [main:117] - GENERATED CALL = (TestClass().createContainers1()).subList(to, to)
2021-03-12 12:13:07,890 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filterNot(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6038ed66]]
2021-03-12 12:13:07,890 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filterNot(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6038ed66]
2021-03-12 12:13:08,003 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:13:08,003 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:13:08,004 [main:117] - GENERATED CALL = (TestClass().createContainers1()).filterNot({a: T -> true})
2021-03-12 12:13:08,004 [main:113] - Case = [public fun <T : kotlin.Any> kotlin.collections.List<T?>.requireNoNulls(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1b57a1f5]]
2021-03-12 12:13:08,004 [main:149] - GENERATING call of type public fun <T : kotlin.Any> kotlin.collections.List<T?>.requireNoNulls(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1b57a1f5]
2021-03-12 12:13:08,004 [main:117] - GENERATED CALL = (TestClass().createContainers1()).requireNoNulls()
2021-03-12 12:13:08,004 [main:113] - Case = [public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedByDescending(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6751f450]]
2021-03-12 12:13:08,005 [main:149] - GENERATING call of type public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedByDescending(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6751f450]
2021-03-12 12:13:08,105 [main:302] - generating value of type = Function1<T, R?> false depth = 0
2021-03-12 12:13:08,106 [main:302] - generating value of type = R false depth = 1
2021-03-12 12:13:08,225 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->TestClass): R = TODO()
2021-03-12 12:13:08,226 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->TestClass): R = TODO()
2021-03-12 12:13:08,470 [main:302] - generating value of type = Any false depth = 4
2021-03-12 12:13:08,470 [main:302] - generating value of type = Function0<TestClass> false depth = 4
2021-03-12 12:13:08,471 [main:302] - generating value of type = TestClass false depth = 5
2021-03-12 12:13:08,471 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:13:08,471 [main:95] - GENERATED = synchronized<TestClass>("bpsih", { TestClass()})
2021-03-12 12:13:08,472 [main:117] - GENERATED CALL = (TestClass().createContainers1()).sortedByDescending({a: T -> synchronized<TestClass>("bpsih", { TestClass()})})
2021-03-12 12:13:08,472 [main:61] - replacement of ((from).compareTo(763400127).until(-38)).map(::createContainer) of type List<Container> is (TestClass().createContainers1()).drop(from)
2021-03-12 12:13:08,551 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:08,551 [main:66] - Compilation checking started
2021-03-12 12:13:08,747 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = (TestClass().createContainers1()).drop(from)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:13:08,748 [main:53] - replacing (to, Int)
2021-03-12 12:13:08,749 [main:50] - replacing to Int
2021-03-12 12:13:08,749 [main:54] - Getting value of type Int
2021-03-12 12:13:08,829 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:08,829 [main:58] - GENERATED VALUE OF TYPE Int = 659358660
2021-03-12 12:13:08,830 [main:61] - GENERATED IS CALL =false
2021-03-12 12:13:08,830 [main:67] - randomType = Boolean
2021-03-12 12:13:08,921 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:13:08,935 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]
2021-03-12 12:13:09,034 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:13:09,034 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@69ef1429]
2021-03-12 12:13:09,035 [main:78] - Generated call from random type = (true).compareTo(true).countLeadingZeroBits()
2021-03-12 12:13:09,035 [main:106] - GETTING Int from Int
2021-03-12 12:13:09,077 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@707ab6dc]]
2021-03-12 12:13:09,078 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@707ab6dc]
2021-03-12 12:13:09,078 [main:117] - GENERATED CALL = (from).takeHighestOneBit()
2021-03-12 12:13:09,078 [main:113] - Case = [public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@13ea03f4]]
2021-03-12 12:13:09,078 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@13ea03f4]
2021-03-12 12:13:09,078 [main:117] - GENERATED CALL = (from).coerceAtLeast(to)
2021-03-12 12:13:09,078 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@49bdd957]]
2021-03-12 12:13:09,078 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c]
2021-03-12 12:13:09,078 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@49bdd957]
2021-03-12 12:13:09,156 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:09,157 [main:117] - GENERATED CALL = (from).toByte().rem(65)
2021-03-12 12:13:09,157 [main:113] - Case = [public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@380ce6fc]]
2021-03-12 12:13:09,157 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@380ce6fc]
2021-03-12 12:13:09,235 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:09,235 [main:117] - GENERATED CALL = (from).minus(-19)
2021-03-12 12:13:09,235 [main:113] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@e59eac7], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@727782da]]
2021-03-12 12:13:09,235 [main:149] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@e59eac7]
2021-03-12 12:13:09,235 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@727782da]
2021-03-12 12:13:09,314 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:09,315 [main:117] - GENERATED CALL = (from).toDouble().compareTo(115)
2021-03-12 12:13:09,315 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]]
2021-03-12 12:13:09,315 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:13:09,315 [main:149] - GENERATING call of type public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]
2021-03-12 12:13:09,315 [main:117] - GENERATED CALL = (from).toInt().coerceIn(from, to)
2021-03-12 12:13:09,315 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4f04ab10]]
2021-03-12 12:13:09,315 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:13:09,315 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4f04ab10]
2021-03-12 12:13:09,316 [main:117] - GENERATED CALL = (from).toShort().countTrailingZeroBits()
2021-03-12 12:13:09,316 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3062c0d4]]
2021-03-12 12:13:09,316 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:13:09,316 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3062c0d4]
2021-03-12 12:13:09,316 [main:117] - GENERATED CALL = (from).toShort().countOneBits()
2021-03-12 12:13:09,316 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]]
2021-03-12 12:13:09,316 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]
2021-03-12 12:13:09,316 [main:117] - GENERATED CALL = (from).takeLowestOneBit()
2021-03-12 12:13:09,316 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3c4f0087]]
2021-03-12 12:13:09,316 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d]
2021-03-12 12:13:09,317 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3c4f0087]
2021-03-12 12:13:09,317 [main:117] - GENERATED CALL = (from).toLong().countLeadingZeroBits()
2021-03-12 12:13:09,317 [main:61] - replacement of to of type Int is (from).toShort().countOneBits()
2021-03-12 12:13:09,400 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:09,400 [main:66] - Compilation checking started
2021-03-12 12:13:09,752 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = 0, to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. (from).toShort().countOneBits()).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:13:09,753 [main:53] - replacing (0, Int)
2021-03-12 12:13:09,753 [main:50] - replacing 0 Int
2021-03-12 12:13:09,753 [main:54] - Getting value of type Int
2021-03-12 12:13:09,835 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:09,835 [main:58] - GENERATED VALUE OF TYPE Int = 289212062
2021-03-12 12:13:09,835 [main:61] - GENERATED IS CALL =false
2021-03-12 12:13:09,918 [main:67] - randomType = Boolean?
2021-03-12 12:13:09,997 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:13:10,012 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]
2021-03-12 12:13:10,115 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:13:10,115 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]
2021-03-12 12:13:10,115 [main:78] - Generated call from random type = (true)?.compareTo(false).unaryMinus()
2021-03-12 12:13:10,116 [main:106] - GETTING Int from Int?
2021-03-12 12:13:10,155 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee], public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@468347e3]]
2021-03-12 12:13:10,155 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2fde21ee]
2021-03-12 12:13:10,155 [main:149] - GENERATING call of type public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@468347e3]
2021-03-12 12:13:10,155 [main:117] - GENERATED CALL = (id).toChar().toInt()
2021-03-12 12:13:10,156 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@76e87fa0]]
2021-03-12 12:13:10,156 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d]
2021-03-12 12:13:10,156 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@76e87fa0]
2021-03-12 12:13:10,156 [main:117] - GENERATED CALL = (id).toLong().countOneBits()
2021-03-12 12:13:10,156 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1c87b428]]
2021-03-12 12:13:10,156 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c]
2021-03-12 12:13:10,156 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1c87b428]
2021-03-12 12:13:10,238 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:10,239 [main:117] - GENERATED CALL = (id).toByte().div(2)
2021-03-12 12:13:10,239 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@3893c26d]]
2021-03-12 12:13:10,239 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:13:10,239 [main:117] - GENERATED CALL = (id).compareTo(from).sign
2021-03-12 12:13:10,239 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@6f4f47a6]]
2021-03-12 12:13:10,239 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d]
2021-03-12 12:13:10,240 [main:117] - GENERATED CALL = (id).toLong().sign
2021-03-12 12:13:10,240 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]]
2021-03-12 12:13:10,240 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:13:10,240 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]
2021-03-12 12:13:10,240 [main:117] - GENERATED CALL = (id).toInt().dec()
2021-03-12 12:13:10,240 [main:113] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9], public open val start: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@54793fdd]]
2021-03-12 12:13:10,240 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9]
2021-03-12 12:13:10,323 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:10,323 [main:117] - GENERATED CALL = (id).rangeTo(-106).start
2021-03-12 12:13:10,323 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1dbef693]]
2021-03-12 12:13:10,323 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@be947b2]
2021-03-12 12:13:10,324 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@1dbef693]
2021-03-12 12:13:10,402 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:10,403 [main:117] - GENERATED CALL = (id).toShort().rem(109)
2021-03-12 12:13:10,403 [main:113] - Case = [public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]]
2021-03-12 12:13:10,403 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]
2021-03-12 12:13:10,403 [main:117] - GENERATED CALL = (id).inv()
2021-03-12 12:13:10,404 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@4a4ce3f5]]
2021-03-12 12:13:10,404 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:13:10,404 [main:117] - GENERATED CALL = (id).compareTo(from).absoluteValue
2021-03-12 12:13:10,404 [main:61] - replacement of 0 of type Int is (true)?.compareTo(false).unaryMinus()
2021-03-12 12:13:10,483 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:10,483 [main:66] - Compilation checking started
2021-03-12 12:13:10,815 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = (true)?.compareTo(false).unaryMinus(), to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. (from).toShort().countOneBits()).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:13:10,816 [main:53] - replacing (101, Int)
2021-03-12 12:13:10,816 [main:50] - replacing 101 Int
2021-03-12 12:13:10,816 [main:54] - Getting value of type Int
2021-03-12 12:13:10,899 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:10,900 [main:58] - GENERATED VALUE OF TYPE Int = 1715091219
2021-03-12 12:13:10,900 [main:61] - GENERATED IS CALL =false
2021-03-12 12:13:11,359 [main:67] - randomType = Function2<Boolean, HashSet<Container>, Pair<Short?, Container>>
2021-03-12 12:13:11,360 [main:106] - GETTING Int from Int?
2021-03-12 12:13:11,399 [main:113] - Case = [public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]]
2021-03-12 12:13:11,399 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]
2021-03-12 12:13:11,399 [main:117] - GENERATED CALL = (Container().id).inv()
2021-03-12 12:13:11,399 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]]
2021-03-12 12:13:11,399 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:13:11,400 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:13:11,400 [main:117] - GENERATED CALL = (Container().id).and(containers2).and(containers1)
2021-03-12 12:13:11,400 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@284d5de4]]
2021-03-12 12:13:11,400 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c]
2021-03-12 12:13:11,400 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@284d5de4]
2021-03-12 12:13:11,482 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:11,483 [main:117] - GENERATED CALL = (Container().id).toByte().times(-101)
2021-03-12 12:13:11,483 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1d268d97]]
2021-03-12 12:13:11,483 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:13:11,483 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@1d268d97]
2021-03-12 12:13:11,483 [main:117] - GENERATED CALL = (Container().id).and(containers2).countOneBits()
2021-03-12 12:13:11,483 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c], public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@ef935a]]
2021-03-12 12:13:11,483 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@139f519c]
2021-03-12 12:13:11,483 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@ef935a]
2021-03-12 12:13:11,484 [main:117] - GENERATED CALL = (Container().id).toByte().toInt()
2021-03-12 12:13:11,484 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@3893c26d]]
2021-03-12 12:13:11,484 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:13:11,484 [main:117] - GENERATED CALL = (Container().id).compareTo(containers2).sign
2021-03-12 12:13:11,484 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@729f1db0]]
2021-03-12 12:13:11,484 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:13:11,484 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@729f1db0]
2021-03-12 12:13:11,484 [main:117] - GENERATED CALL = (Container().id).toInt().rotateRight(containers1)
2021-03-12 12:13:11,485 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@707ab6dc]]
2021-03-12 12:13:11,485 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:13:11,485 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@707ab6dc]
2021-03-12 12:13:11,485 [main:117] - GENERATED CALL = (Container().id).compareTo(containers2).takeHighestOneBit()
2021-03-12 12:13:11,485 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@31ae2cf], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@6de74550]]
2021-03-12 12:13:11,485 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@31ae2cf]
2021-03-12 12:13:11,485 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@6de74550]
2021-03-12 12:13:11,569 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:11,569 [main:117] - GENERATED CALL = (Container().id).toFloat().compareTo(-83)
2021-03-12 12:13:11,569 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@3893c26d]]
2021-03-12 12:13:11,570 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:13:11,653 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:11,654 [main:117] - GENERATED CALL = (Container().id).and(747843789).sign
2021-03-12 12:13:11,654 [main:61] - replacement of 101 of type Int is (Container().id).and(containers2).countOneBits()
2021-03-12 12:13:11,734 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:11,734 [main:66] - Compilation checking started
2021-03-12 12:13:11,954 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = (true)?.compareTo(false).unaryMinus(), to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. (from).toShort().countOneBits()).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != (Container().id).and(containers2).countOneBits()) return "dtwek"

    return "OK"
}


2021-03-12 12:13:11,954 [main:53] - replacing ((TestClass().createContainers2()).size.inv() != 101, Boolean)
2021-03-12 12:13:11,954 [main:50] - replacing (TestClass().createContainers2()).size.inv() != 101 Boolean
2021-03-12 12:13:11,954 [main:54] - Getting value of type Boolean
2021-03-12 12:13:12,037 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:13:12,037 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-12 12:13:12,037 [main:61] - GENERATED IS CALL =false
2021-03-12 12:13:12,123 [main:67] - randomType = TestClass?
2021-03-12 12:13:12,205 [main:302] - generating value of type = TestClass false depth = 0
2021-03-12 12:13:12,205 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = (true)?.compareTo(false).unaryMinus(), to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. (from).toShort().countOneBits()).map(::createContainer) }
}
2021-03-12 12:13:12,213 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in TestClass[DeserializedSimpleFunctionDescriptor@29aa79c5]
2021-03-12 12:13:12,294 [main:302] - generating value of type = Any false depth = 0
2021-03-12 12:13:12,294 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@35bbaef5]
2021-03-12 12:13:12,400 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:13:12,401 [main:78] - Generated call from random type = (TestClass())?.equals("gmsax").xor(true)
2021-03-12 12:13:12,401 [main:61] - replacement of (TestClass().createContainers2()).size.inv() != 101 of type Boolean is (TestClass())?.equals("gmsax").xor(true)
2021-03-12 12:13:12,484 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:12,484 [main:53] - replacing (to, Int)
2021-03-12 12:13:12,484 [main:50] - replacing to Int
2021-03-12 12:13:12,485 [main:54] - Getting value of type Int
2021-03-12 12:13:12,569 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:12,569 [main:58] - GENERATED VALUE OF TYPE Int = 384846796
2021-03-12 12:13:12,570 [main:61] - GENERATED IS CALL =false
2021-03-12 12:13:12,654 [main:67] - randomType = Short
2021-03-12 12:13:12,733 [main:302] - generating value of type = Short true depth = 0
2021-03-12 12:13:12,784 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:13:12,784 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:13:12,866 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:12,867 [main:78] - Generated call from random type = (-24571).toInt().and(-1413318641)
2021-03-12 12:13:12,868 [main:106] - GETTING Int from List<Container>
2021-03-12 12:13:12,902 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d]]
2021-03-12 12:13:12,903 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size
2021-03-12 12:13:12,903 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]]
2021-03-12 12:13:12,903 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6cb71851]
2021-03-12 12:13:12,992 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:12,993 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.plus(-35)
2021-03-12 12:13:12,993 [main:113] - Case = [public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]]
2021-03-12 12:13:12,993 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]
2021-03-12 12:13:13,073 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:13:13,074 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:13:13,074 [main:117] - GENERATED CALL = (TestClass().createContainers2()).indexOfLast({a: T -> false})
2021-03-12 12:13:13,075 [main:113] - Case = [public abstract fun listIterator(): kotlin.collections.ListIterator<Container> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4b345920], public abstract fun previousIndex(): kotlin.Int defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@578c6d7a]]
2021-03-12 12:13:13,075 [main:149] - GENERATING call of type public abstract fun listIterator(): kotlin.collections.ListIterator<Container> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4b345920]
2021-03-12 12:13:13,075 [main:149] - GENERATING call of type public abstract fun previousIndex(): kotlin.Int defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@578c6d7a]
2021-03-12 12:13:13,075 [main:117] - GENERATED CALL = (TestClass().createContainers2()).listIterator().previousIndex()
2021-03-12 12:13:13,075 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]]
2021-03-12 12:13:13,075 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]
2021-03-12 12:13:13,160 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:13:13,245 [main:43] - GENERATING CALL OF fun <T> enumValueOf(name: kotlin.String): T = TODO()
2021-03-12 12:13:13,246 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValueOf(name: kotlin.String): T = TODO()
2021-03-12 12:13:13,450 [main:302] - generating value of type = String true depth = 3
2021-03-12 12:13:13,450 [main:95] - GENERATED = enumValueOf<Enum<T>>("xirkd")
2021-03-12 12:13:13,543 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 12:13:13,635 [main:43] - GENERATING CALL OF fun <T> compareBy(selectors: Function1<T, Comparable<*>?>): Comparator<T> = TODO()
2021-03-12 12:13:13,636 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareBy(selectors: Function1<T, Comparable<*>?>): Comparator<T> = TODO()
2021-03-12 12:13:13,723 [main:302] - generating value of type = Function1<T, Comparable<*>?> false depth = 3
2021-03-12 12:13:13,723 [main:302] - generating value of type = Comparable<*> false depth = 4
2021-03-12 12:13:13,727 [main:95] - GENERATED = compareBy<T>({a: T -> -111})
2021-03-12 12:13:13,808 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:13,891 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:13,892 [main:117] - GENERATED CALL = (TestClass().createContainers2()).binarySearch(enumValueOf<Enum<T>>("xirkd"), compareBy<T>({a: T -> -111}), 2050846332, -1151926668)
2021-03-12 12:13:13,892 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]]
2021-03-12 12:13:13,892 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.count(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1645fba9]
2021-03-12 12:13:13,892 [main:117] - GENERATED CALL = (TestClass().createContainers2()).count()
2021-03-12 12:13:13,892 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5ebf2121]]
2021-03-12 12:13:13,892 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5ebf2121]
2021-03-12 12:13:13,892 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.toInt()
2021-03-12 12:13:13,892 [main:113] - Case = [public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]]
2021-03-12 12:13:13,893 [main:149] - GENERATING call of type public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:13:13,974 [main:302] - generating value of type = K false depth = 0
2021-03-12 12:13:14,058 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:14,138 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:14,220 [main:302] - generating value of type = Function1<T, K?> false depth = 0
2021-03-12 12:13:14,220 [main:302] - generating value of type = K false depth = 1
2021-03-12 12:13:14,224 [main:158] - CANT GENERATE PARAMS FOR public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:13:14,224 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@3893c26d]]
2021-03-12 12:13:14,224 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.sign
2021-03-12 12:13:14,224 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@627b9c7d], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]]
2021-03-12 12:13:14,225 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@607d36d5]
2021-03-12 12:13:14,225 [main:117] - GENERATED CALL = (TestClass().createContainers2()).size.takeLowestOneBit()
2021-03-12 12:13:14,225 [main:61] - replacement of to of type Int is (TestClass().createContainers2()).size.plus(-35)
2021-03-12 12:13:14,307 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:14,308 [main:53] - replacing (q, Container)
2021-03-12 12:13:14,308 [main:50] - replacing q Container
2021-03-12 12:13:14,308 [main:54] - Getting value of type Container
2021-03-12 12:13:14,420 [main:302] - generating value of type = Container false depth = 0
2021-03-12 12:13:14,420 [main:112] - generating klass Container text = class Container {
    var id: Int? = null
}
2021-03-12 12:13:14,420 [main:58] - GENERATED VALUE OF TYPE Container = Container()
2021-03-12 12:13:14,420 [main:61] - GENERATED IS CALL =true
2021-03-12 12:13:14,521 [main:67] - randomType = Double
2021-03-12 12:13:14,603 [main:302] - generating value of type = Double true depth = 0
2021-03-12 12:13:14,640 [main:106] - GETTING Container from List<Container>
2021-03-12 12:13:14,671 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component3(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7de2e3a1]]
2021-03-12 12:13:14,671 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component3(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7de2e3a1]
2021-03-12 12:13:14,672 [main:117] - GENERATED CALL = (TestClass().createContainers2()).component3()
2021-03-12 12:13:14,672 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3430415c]]
2021-03-12 12:13:14,672 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.single(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3430415c]
2021-03-12 12:13:14,672 [main:117] - GENERATED CALL = (TestClass().createContainers2()).single()
2021-03-12 12:13:14,672 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAt(index: kotlin.Int): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@727a8739]]
2021-03-12 12:13:14,672 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAt(index: kotlin.Int): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@727a8739]
2021-03-12 12:13:14,754 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:14,755 [main:117] - GENERATED CALL = (TestClass().createContainers2()).elementAt(-1896030010)
2021-03-12 12:13:14,755 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2dd7279f]]
2021-03-12 12:13:14,755 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2dd7279f]
2021-03-12 12:13:14,755 [main:117] - GENERATED CALL = (TestClass().createContainers2()).first()
2021-03-12 12:13:14,755 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b34ce2a]]
2021-03-12 12:13:14,755 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b34ce2a]
2021-03-12 12:13:14,836 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 12:13:14,923 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<Container>, selector: (T)->Container): Comparator<T> = TODO()
2021-03-12 12:13:14,924 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<Container>, selector: (T)->Container): Comparator<T> = TODO()
2021-03-12 12:13:15,176 [main:302] - generating value of type = Comparator<Container> false depth = 3
2021-03-12 12:13:15,260 [main:43] - GENERATING CALL OF fun <T> nullsLast(): Comparator<Contaer> = TODO()
2021-03-12 12:13:15,261 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(): Comparator<Contaer> = TODO()
2021-03-12 12:13:15,344 [main:95] - GENERATED = nullsLast<Container>()
2021-03-12 12:13:15,344 [main:385] - Cant generate call of fun <T, K> compareByDescending(comparator: kotlin.Comparator<Container>, selector: (T)->Container): Comparator<T> = TODO()
2021-03-12 12:13:15,344 [main:158] - CANT GENERATE PARAMS FOR @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.minWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4b34ce2a]
2021-03-12 12:13:15,344 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5da712c9]]
2021-03-12 12:13:15,344 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5da712c9]
2021-03-12 12:13:15,452 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:15,452 [main:117] - GENERATED CALL = (TestClass().createContainers2()).elementAtOrNull(1484837781)
2021-03-12 12:13:15,453 [main:113] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@23b2eda9]]
2021-03-12 12:13:15,453 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@23b2eda9]
2021-03-12 12:13:15,553 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 12:13:15,640 [main:43] - GENERATING CALL OF fun <T> nullsFirst(comparator: kotlin.Comparator<T>): Comparator<T> = TODO()
2021-03-12 12:13:15,641 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsFirst(comparator: kotlin.Comparator<T>): Comparator<T> = TODO()
2021-03-12 12:13:15,806 [main:385] - Cant generate call of fun <T> nullsFirst(comparator: kotlin.Comparator<T>): Comparator<T> = TODO()
2021-03-12 12:13:15,806 [main:158] - CANT GENERATE PARAMS FOR @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@23b2eda9]
2021-03-12 12:13:15,806 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76a9337c]]
2021-03-12 12:13:15,806 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76a9337c]
2021-03-12 12:13:15,886 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 12:13:15,972 [main:43] - GENERATING CALL OF fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:13:15,973 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:13:16,138 [main:385] - Cant generate call of fun <T> compareByDescending(selector: (T)->kotlin.Comparable<*>?): Comparator<T> = TODO()
2021-03-12 12:13:16,138 [main:158] - CANT GENERATE PARAMS FOR @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76a9337c]
2021-03-12 12:13:16,138 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): Container defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a507beb]]
2021-03-12 12:13:16,138 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): Container defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3a507beb]
2021-03-12 12:13:16,219 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:16,219 [main:117] - GENERATED CALL = (TestClass().createContainers2()).get(-103578478)
2021-03-12 12:13:16,220 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component5(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3dc03beb]]
2021-03-12 12:13:16,220 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component5(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3dc03beb]
2021-03-12 12:13:16,220 [main:117] - GENERATED CALL = (TestClass().createContainers2()).component5()
2021-03-12 12:13:16,220 [main:61] - replacement of q of type Container is (TestClass().createContainers2()).component5()
2021-03-12 12:13:16,301 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:16,419 [main:119] - TRYING TO REPLACE CONSTANT 763400127
2021-03-12 12:13:16,527 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-12 12:13:16,527 [main:66] - Compilation checking started
2021-03-12 12:13:16,758 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = (true)?.compareTo(false).unaryMinus(), to: Int = 100) = ((from).compareTo(compareTo(763400127)).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. (from).toShort().countOneBits()).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:13:16,758 [main:119] - TRYING TO REPLACE CONSTANT 38
2021-03-12 12:13:16,842 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-12 12:13:16,842 [main:66] - Compilation checking started
2021-03-12 12:13:17,061 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = (true)?.compareTo(false).unaryMinus(), to: Int = 100) = ((from).compareTo(763400127).until(size)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. (from).toShort().countOneBits()).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString(-895630546)

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:13:17,061 [main:119] - TRYING TO REPLACE CONSTANT 895630546
2021-03-12 12:13:17,147 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:17,147 [main:66] - Compilation checking started
2021-03-12 12:13:17,498 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = (true)?.compareTo(false).unaryMinus(), to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. (from).toShort().countOneBits()).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString((true)?.compareTo(false).unaryMinus())

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:13:17,498 [main:119] - TRYING TO REPLACE CONSTANT true
2021-03-12 12:13:17,615 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(BINARY_EXPRESSION)
2021-03-12 12:13:17,615 [main:66] - Compilation checking started
2021-03-12 12:13:17,863 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = (containers2 != 101)?.compareTo(false).unaryMinus(), to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. (from).toShort().countOneBits()).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString((true)?.compareTo(false).unaryMinus())

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:13:17,864 [main:119] - TRYING TO REPLACE CONSTANT false
2021-03-12 12:13:17,961 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-12 12:13:17,962 [main:66] - Compilation checking started
2021-03-12 12:13:18,353 [main:53] - Result = true
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return (TestClass().createContainers2()).single() }
    fun createContainers1(from: Int = (true)?.compareTo(equals("utane")).unaryMinus(), to: Int = 100) = ((from).compareTo(763400127).until(-38)).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. (from).toShort().countOneBits()).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if ((Container()).equals("utane")) return (TestClass().createContainers2()).size.toString((true)?.compareTo(false).unaryMinus())

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "dtwek"

    return "OK"
}


2021-03-12 12:13:18,386 [main:41] - AFTER TRY 0 res = class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $containers1"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $containers2"

    return "OK"
}
2021-03-12 12:13:18,558 [main:112] - generating klass Container text = class Container {
    var id: Int? = null
}
2021-03-12 12:13:18,559 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:13:18,720 [main:43] - Try №0
2021-03-12 12:13:19,429 [main:70] - Trying to insert fun fu0(a: Int): Int {
    var prope1 = 0
    for (i in a..prope0) {
        prope1++
    }
    return prope1
}
2021-03-12 12:13:19,523 [main:66] - Compilation checking started
2021-03-12 12:13:20,060 [main:104] - Trying to change 11 nodes
2021-03-12 12:13:20,060 [main:108] - replacing (Int, Companion)
2021-03-12 12:13:20,060 [main:50] - replacing Int Companion
2021-03-12 12:13:20,060 [main:54] - Getting value of type Companion
2021-03-12 12:13:20,143 [main:302] - generating value of type = Companion false depth = 0
2021-03-12 12:13:20,147 [main:58] - GENERATED VALUE OF TYPE Companion = 
2021-03-12 12:13:20,148 [main:67] - randomType = TestClass
2021-03-12 12:13:20,230 [main:302] - generating value of type = TestClass false depth = 0
2021-03-12 12:13:20,230 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:13:20,240 [main:106] - GETTING Companion from List<Container>
2021-03-12 12:13:20,273 [main:106] - GETTING Companion from List<Container>
2021-03-12 12:13:20,273 [main:106] - GETTING Companion from Int?
2021-03-12 12:13:20,310 [main:106] - GETTING Companion from TestClass
2021-03-12 12:13:20,317 [main:106] - GETTING Companion from Int
2021-03-12 12:13:20,352 [main:106] - GETTING Companion from Int
2021-03-12 12:13:20,353 [main:106] - GETTING Companion from List<Container>
2021-03-12 12:13:20,354 [main:106] - GETTING Companion from List<Container>
2021-03-12 12:13:20,354 [main:112] - Cant find and generate replacement for Int type Companion
2021-03-12 12:13:20,354 [main:108] - replacing ({
        prope1++
    }, Int)
2021-03-12 12:13:20,356 [main:50] - replacing {
        prope1++
    } Int
2021-03-12 12:13:20,356 [main:54] - Getting value of type Int
2021-03-12 12:13:20,439 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:20,439 [main:58] - GENERATED VALUE OF TYPE Int = -1117794727
2021-03-12 12:13:20,439 [main:61] - GENERATED IS CALL =false
2021-03-12 12:13:20,440 [main:67] - randomType = TestClass
2021-03-12 12:13:20,554 [main:302] - generating value of type = TestClass false depth = 0
2021-03-12 12:13:20,554 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:13:20,562 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4ed45a46]
2021-03-12 12:13:20,563 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]
2021-03-12 12:13:20,642 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:13:20,642 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:13:20,643 [main:78] - Generated call from random type = (TestClass()).createContainers1(containers1, containers2).indexOfLast({a: T -> false})
2021-03-12 12:13:20,643 [main:106] - GETTING Int from Int?
2021-03-12 12:13:20,689 [main:113] - Case = [public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]]
2021-03-12 12:13:20,689 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]
2021-03-12 12:13:20,690 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@78b632b9]]
2021-03-12 12:13:20,690 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:13:20,769 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:20,770 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@78b632b9]
2021-03-12 12:13:20,857 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:20,857 [main:117] - GENERATED CALL = (Container().id).compareTo(-1316147369).rem(27)
2021-03-12 12:13:20,857 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8], public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]]
2021-03-12 12:13:20,857 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21ba22e8]
2021-03-12 12:13:20,858 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2ee3bf7f]
2021-03-12 12:13:20,858 [main:117] - GENERATED CALL = (Container().id).toInt().dec()
2021-03-12 12:13:20,858 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5036158]]
2021-03-12 12:13:20,858 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:13:20,858 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@6f4f47a6]]
2021-03-12 12:13:20,858 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@6d80091d]
2021-03-12 12:13:20,858 [main:117] - GENERATED CALL = (Container().id).toLong().sign
2021-03-12 12:13:20,858 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]]
2021-03-12 12:13:20,859 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1af2f794]
2021-03-12 12:13:20,859 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@37899405]
2021-03-12 12:13:20,859 [main:117] - GENERATED CALL = (Container().id).compareTo(containers2).unaryMinus()
2021-03-12 12:13:20,859 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@770f78cc], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3c4f0087]]
2021-03-12 12:13:20,859 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@770f78cc]
2021-03-12 12:13:20,938 [main:302] - generating value of type = Long true depth = 0
2021-03-12 12:13:20,938 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3c4f0087]
2021-03-12 12:13:20,938 [main:117] - GENERATED CALL = (Container().id).div(1877821512662469102).countLeadingZeroBits()
2021-03-12 12:13:20,939 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], public fun kotlin.Int.coerceIn(minimumValue: kotlin.Int, maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@4856570a]]
2021-03-12 12:13:20,939 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:13:20,939 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1394e8ef]]
2021-03-12 12:13:20,939 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@75b81c7d]
2021-03-12 12:13:21,020 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:21,020 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1394e8ef]
2021-03-12 12:13:21,021 [main:117] - GENERATED CALL = (Container().id).and(-93850232).shr(containers1)
2021-03-12 12:13:21,021 [main:113] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9], public open val endInclusive: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@394cb4c]]
2021-03-12 12:13:21,021 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3e2544e9]
2021-03-12 12:13:21,100 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 12:13:21,100 [main:117] - GENERATED CALL = (Container().id).rangeTo(-117).endInclusive
2021-03-12 12:13:21,101 [main:115] - replacement of {
        prope1++
    } of type Int is (TestClass()).createContainers1(containers1, containers2).indexOfLast({a: T -> false})
2021-03-12 12:13:21,187 [main:33] - Trying to replace BLOCK on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 12:13:21,187 [main:66] - Compilation checking started
2021-03-12 12:13:21,411 [main:49] - Result = false
Text:
class Container {
    var id: Int? = null
}

class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}

fun box(): String {
    val testClass = TestClass()
    val containers1 = testClass.createContainers1().size
    if (containers1 != 101) return "fail 1: $containers1"

    val containers2 = testClass.createContainers2().size
    if (containers2 != 101) return "fail 2: $containers2"

    return "OK"
}

const val prope0 = Int.MAX_VALUE

fun fu0(a: Int): Int {
    val testClass = TestClass()
val containers1 = testClass.createContainers1().size
val containers2 = testClass.createContainers2().size
var prope1 = 0
    for (i in a..prope0) (TestClass()).createContainers1(containers1, containers2).indexOfLast({a: T -> false})
    return prope1
}


2021-03-12 12:13:21,412 [main:108] - replacing (Int, Companion)
2021-03-12 12:13:21,412 [main:50] - replacing Int Companion
2021-03-12 12:13:21,412 [main:54] - Getting value of type Companion
2021-03-12 12:13:21,520 [main:302] - generating value of type = Companion false depth = 0
2021-03-12 12:13:21,525 [main:58] - GENERATED VALUE OF TYPE Companion = 
2021-03-12 12:13:21,616 [main:67] - randomType = TestClass?
2021-03-12 12:13:21,737 [main:302] - generating value of type = TestClass false depth = 0
2021-03-12 12:13:21,738 [main:112] - generating klass TestClass text = class TestClass {

    private fun createContainer(id: Int): Container { val q = Container(); q.id = id; return q }
    fun createContainers1(from: Int = 0, to: Int = 100) = (from .. to).map(::createContainer)
    fun createContainers2(from: Int = 0, to: Int = 100): List<Container> { return (from .. to).map(::createContainer) }
}
2021-03-12 12:13:21,751 [main:106] - GETTING Companion from Int
2021-03-12 12:13:21,802 [main:106] - GETTING Companion from Int?
2021-03-12 12:13:21,837 [main:106] - GETTING Companion from List<Container>
2021-03-12 12:13:21,865 [main:106] - GETTING Companion from List<Container>
2021-03-12 12:13:21,866 [main:106] - GETTING Companion from List<Container>
2021-03-12 12:13:21,867 [main:106] - GETTING Companion from Int
2021-03-12 12:13:21,867 [main:106] - GETTING Companion from List<Container>
2021-03-12 12:13:21,868 [main:106] - GETTING Companion from TestClass
2021-03-12 12:13:21,874 [main:112] - Cant find and generate replacement for Int type Companion
2021-03-12 12:13:21,874 [main:108] - replacing (prope1, Int)
2021-03-12 12:13:21,874 [main:50] - replacing prope1 Int
2021-03-12 12:13:21,874 [main:54] - Getting value of type Int
2021-03-12 12:13:21,956 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:21,957 [main:58] - GENERATED VALUE OF TYPE Int = 472831757
2021-03-12 12:13:21,957 [main:61] - GENERATED IS CALL =false
2021-03-12 12:13:21,958 [main:67] - randomType = Container
2021-03-12 12:13:22,041 [main:302] - generating value of type = Container false depth = 0
2021-03-12 12:13:22,042 [main:112] - generating klass Container text = class Container {
    var id: Int? = null
}
2021-03-12 12:13:22,050 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@737b1767]
2021-03-12 12:13:22,050 [main:78] - Generated call from random type = (Container()).null!!
2021-03-12 12:13:22,051 [main:106] - GETTING Int from TestClass
2021-03-12 12:13:22,059 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63], public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]]
2021-03-12 12:13:22,060 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63]
2021-03-12 12:13:22,060 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@73343438]
2021-03-12 12:13:22,145 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 12:13:22,146 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 12:13:22,147 [main:117] - GENERATED CALL = (testClass).createContainers1(containers2, containers1).indexOfLast({a: T -> false})
2021-03-12 12:13:22,147 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in TestClass[DeserializedSimpleFunctionDescriptor@44c5dd57], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]]
2021-03-12 12:13:22,147 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in TestClass[DeserializedSimpleFunctionDescriptor@44c5dd57]
2021-03-12 12:13:22,229 [main:302] - generating value of type = Any false depth = 0
2021-03-12 12:13:22,230 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@317c4093]
2021-03-12 12:13:22,318 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 12:13:22,319 [main:117] - GENERATED CALL = (testClass).equals("kfdsq").compareTo(true)
2021-03-12 12:13:22,319 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63], public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4676d454]]
2021-03-12 12:13:22,319 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63]
2021-03-12 12:13:22,402 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:22,402 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63], public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626fd424]]
2021-03-12 12:13:22,402 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63]
2021-03-12 12:13:22,403 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63], public val <T> kotlin.collections.List<T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@3e8b14e1]]
2021-03-12 12:13:22,403 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63]
2021-03-12 12:13:22,484 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:22,485 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63], public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]]
2021-03-12 12:13:22,485 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63]
2021-03-12 12:13:22,566 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:22,567 [main:149] - GENERATING call of type public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:13:22,645 [main:302] - generating value of type = K false depth = 0
2021-03-12 12:13:22,727 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:22,830 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:22,917 [main:302] - generating value of type = Function1<T, K?> false depth = 0
2021-03-12 12:13:22,917 [main:302] - generating value of type = K false depth = 1
2021-03-12 12:13:22,921 [main:158] - CANT GENERATE PARAMS FOR public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@46a72c1e]
2021-03-12 12:13:22,921 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63], public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34ef6fef]]
2021-03-12 12:13:22,921 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63]
2021-03-12 12:13:23,030 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:23,137 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:23,137 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@34ef6fef]
2021-03-12 12:13:23,221 [main:302] - generating value of type = T false depth = 0
2021-03-12 12:13:23,310 [main:43] - GENERATING CALL OF fun <T> minOf(a: Comparable<T>, b: Comparable<T>): T = TODO()
2021-03-12 12:13:23,311 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Comparable<T>, b: Comparable<T>): T = TODO()
2021-03-12 12:13:23,398 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-12 12:13:23,402 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-12 12:13:23,490 [main:43] - GENERATING CALL OF fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<T> = TODO()
2021-03-12 12:13:23,491 [main:61] - WITHOUT TYPE PARAMS = fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<T> = TODO()
2021-03-12 12:13:23,805 [main:302] - generating value of type = Int true depth = 6
2021-03-12 12:13:23,805 [main:302] - generating value of type = Int true depth = 6
2021-03-12 12:13:23,806 [main:95] - GENERATED = KotlinVersion(-700456715, 903648363)
2021-03-12 12:13:23,807 [main:95] - GENERATED = minOf<Comparable<T>>(357927571.toUInt(), KotlinVersion(-700456715, 903648363))
2021-03-12 12:13:23,807 [main:117] - GENERATED CALL = (testClass).createContainers1(1258730260, 627359517).indexOf(minOf<Comparable<T>>(357927571.toUInt(), KotlinVersion(-700456715, 903648363)))
2021-03-12 12:13:23,808 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63], public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@56e5fe3a]]
2021-03-12 12:13:23,808 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63]
2021-03-12 12:13:23,908 [main:302] - generating value of type = Int true depth = 0
2021-03-12 12:13:23,909 [main:113] - Case = [public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63], public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@420edebb]]
2021-03-12 12:13:23,909 [main:149] - GENERATING call of type public final fun createContainers1(from: kotlin.Int = ..., to: kotlin.Int = ...): kotlin.collections.List<Container> defined in TestClass[SimpleFunctionDescriptorImpl@4dc4eb63]
