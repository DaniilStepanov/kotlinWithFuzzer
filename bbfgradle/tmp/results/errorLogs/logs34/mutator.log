2021-03-11 21:02:10,456 [main:66] - Compilation checking started
2021-03-11 21:02:12,954 [main:112] - generating klass DefaultBound text = class DefaultBound<T>
2021-03-11 21:02:15,042 [main:112] - generating klass NullableAnyBound text = class NullableAnyBound<T : Any?>
2021-03-11 21:02:15,750 [main:112] - generating klass NotNullAnyBound text = class NotNullAnyBound<T : Any>
2021-03-11 21:02:16,218 [main:112] - generating klass TwoBounds text = class TwoBounds<T : Cloneable> where T : Comparable<T>
2021-03-11 21:02:16,379 [main:112] - generating klass OtherParameterBound text = class OtherParameterBound<T : U, U : Number>
2021-03-11 21:02:16,709 [main:112] - generating klass RecursiveGeneric text = class RecursiveGeneric<T : Enum<T>>
2021-03-11 21:02:17,037 [main:112] - generating klass FunctionTypeParameter text = class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}
2021-03-11 21:02:17,366 [main:45] - Trying to change 17 nodes
2021-03-11 21:02:17,371 [main:53] - replacing (listOf(::nullableAny.returnType), List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493>)
2021-03-11 21:02:17,373 [main:50] - replacing listOf(::nullableAny.returnType) List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493>
2021-03-11 21:02:17,373 [main:54] - Getting value of type List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493>
2021-03-11 21:02:17,495 [main:302] - generating value of type = List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493> false depth = 0
2021-03-11 21:02:17,496 [main:309] - RECREATED ERROR TYPE = null
2021-03-11 21:02:17,496 [main:58] - GENERATED VALUE OF TYPE List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493> = 
2021-03-11 21:02:17,792 [main:67] - randomType = Int?
2021-03-11 21:02:17,968 [main:302] - generating value of type = Int true depth = 0
2021-03-11 21:02:18,216 [main:106] - GETTING List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493> from Any
2021-03-11 21:02:18,229 [main:106] - GETTING List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493> from [ERROR : Cloneable]
2021-03-11 21:02:18,238 [main:106] - GETTING List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493> from Any?
2021-03-11 21:02:18,245 [main:58] - Cant find and generate replacement for listOf(::nullableAny.returnType) type List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493>
2021-03-11 21:02:18,246 [main:53] - replacing ({ it.name == "foo" }, Function0<Boolean>)
2021-03-11 21:02:18,247 [main:50] - replacing { it.name == "foo" } Function0<Boolean>
2021-03-11 21:02:18,247 [main:54] - Getting value of type Function0<Boolean>
2021-03-11 21:02:18,362 [main:302] - generating value of type = Function0<Boolean> false depth = 0
2021-03-11 21:02:18,362 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 21:02:18,363 [main:58] - GENERATED VALUE OF TYPE Function0<Boolean> = { true}
2021-03-11 21:02:18,363 [main:61] - GENERATED IS CALL =false
2021-03-11 21:02:18,495 [main:67] - randomType = FunctionTypeParameter
2021-03-11 21:02:18,620 [main:302] - generating value of type = FunctionTypeParameter false depth = 0
2021-03-11 21:02:18,621 [main:112] - generating klass FunctionTypeParameter text = class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}
2021-03-11 21:02:18,633 [main:106] - GETTING Function0<Boolean> from Any
2021-03-11 21:02:18,640 [main:106] - GETTING Function0<Boolean> from Any?
2021-03-11 21:02:18,648 [main:106] - GETTING Function0<Boolean> from [ERROR : Cloneable]
2021-03-11 21:02:18,651 [main:61] - replacement of { it.name == "foo" } of type Function0<Boolean> is { true}
2021-03-11 21:02:18,790 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 21:02:18,791 [main:66] - Compilation checking started
2021-03-11 21:02:19,563 [main:53] - Result = true
Text:
import kotlin.reflect.KTypeProjection
import kotlin.reflect.KVariance
import kotlin.test.assertEquals

class DefaultBound<T>
class NullableAnyBound<T : Any?>
class NotNullAnyBound<T : Any>
class TwoBounds<T : Cloneable> where T : Comparable<T>

class OtherParameterBound<T : U, U : Number>

class RecursiveGeneric<T : Enum<T>>

class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}

fun nullableAny(): Any? = null
fun notNullAny(): Any = null!!

fun box(): String {
    assertEquals(listOf(::nullableAny.returnType), DefaultBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::nullableAny.returnType), NullableAnyBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::notNullAny.returnType), NotNullAnyBound::class.typeParameters.single().upperBounds)

    TwoBounds::class.typeParameters.single().let {
        val (cl, cm) = it.upperBounds
        assertEquals(Cloneable::class, cl.classifier)
        assertEquals(listOf(), cl.arguments)

        assertEquals(Comparable::class, cm.classifier)
        val cmt = cm.arguments.single()
        assertEquals(KVariance.INVARIANT, cmt.variance)
        assertEquals(it, cmt.type!!.classifier)
    }

    OtherParameterBound::class.typeParameters.let {
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    }

    FunctionTypeParameter::class.members.single { true}.let { foo ->
        assertEquals(foo.returnType, foo.typeParameters.single().upperBounds.single())
    }

    val recursiveGenericTypeParameter = RecursiveGeneric::class.typeParameters.single()
    val recursiveGenericBound = recursiveGenericTypeParameter.upperBounds.single()
    assertEquals(Enum::class, recursiveGenericBound.classifier)
    recursiveGenericBound.arguments.single().let { projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    }

    return "OK"
}
2021-03-11 21:02:19,564 [main:53] - replacing (it.name == "foo", Boolean)
2021-03-11 21:02:19,564 [main:50] - replacing it.name == "foo" Boolean
2021-03-11 21:02:19,564 [main:54] - Getting value of type Boolean
2021-03-11 21:02:19,686 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 21:02:19,687 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 21:02:19,687 [main:61] - GENERATED IS CALL =false
2021-03-11 21:02:19,820 [main:67] - randomType = Byte
2021-03-11 21:02:19,945 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 21:02:20,029 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1a524d81]
2021-03-11 21:02:20,030 [main:149] - GENERATING call of type public fun kotlin.Char.isSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2ec9eda7]
2021-03-11 21:02:20,030 [main:78] - Generated call from random type = (-8).toChar().isSurrogate()
2021-03-11 21:02:20,032 [main:106] - GETTING Boolean from [ERROR : Cloneable]
2021-03-11 21:02:20,036 [main:106] - GETTING Boolean from Any?
2021-03-11 21:02:20,041 [main:113] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4c0c90b]]
2021-03-11 21:02:20,042 [main:149] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0]
2021-03-11 21:02:20,042 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4c0c90b]
2021-03-11 21:02:20,167 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 21:02:20,168 [main:117] - GENERATED CALL = (nullableAny()).equals(nullableAny()).or(false)
2021-03-11 21:02:20,168 [main:113] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3c8ddf91]]
2021-03-11 21:02:20,168 [main:149] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0]
2021-03-11 21:02:20,297 [main:302] - generating value of type = Any false depth = 0
2021-03-11 21:02:20,300 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3c8ddf91]
2021-03-11 21:02:20,436 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 21:02:20,437 [main:117] - GENERATED CALL = (nullableAny()).equals("txvit").xor(true)
2021-03-11 21:02:20,437 [main:113] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7126d18f]]
2021-03-11 21:02:20,437 [main:149] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0]
2021-03-11 21:02:20,544 [main:302] - generating value of type = Any false depth = 0
2021-03-11 21:02:20,544 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7126d18f]
2021-03-11 21:02:20,544 [main:117] - GENERATED CALL = (nullableAny()).equals("mjevl").not()
2021-03-11 21:02:20,544 [main:113] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2fd4226e]]
2021-03-11 21:02:20,545 [main:149] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0]
2021-03-11 21:02:20,545 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2fd4226e]
2021-03-11 21:02:20,545 [main:117] - GENERATED CALL = (nullableAny()).equals(nullableAny()).equals(nullableAny())
2021-03-11 21:02:20,545 [main:113] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0]]
2021-03-11 21:02:20,545 [main:149] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0]
2021-03-11 21:02:20,545 [main:117] - GENERATED CALL = (nullableAny()).equals(nullableAny())
2021-03-11 21:02:20,546 [main:113] - Case = [public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6d750cd2]]
2021-03-11 21:02:20,546 [main:149] - GENERATING call of type public open operator fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Any[DeserializedSimpleFunctionDescriptor@4737a2d0]
2021-03-11 21:02:20,653 [main:302] - generating value of type = Any false depth = 0
2021-03-11 21:02:20,654 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@6d750cd2]
2021-03-11 21:02:20,767 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 21:02:20,769 [main:117] - GENERATED CALL = (nullableAny()).equals("bvcol").and(true)
2021-03-11 21:02:20,769 [main:61] - replacement of it.name == "foo" of type Boolean is (nullableAny()).equals("bvcol").and(true)
2021-03-11 21:02:20,927 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 21:02:20,928 [main:53] - replacing ({ (nullableAny()).equals("bvcol").and(true) }, Function0<Boolean>)
2021-03-11 21:02:20,928 [main:50] - replacing { (nullableAny()).equals("bvcol").and(true) } Function0<Boolean>
2021-03-11 21:02:20,928 [main:54] - Getting value of type Function0<Boolean>
2021-03-11 21:02:21,036 [main:302] - generating value of type = Function0<Boolean> false depth = 0
2021-03-11 21:02:21,036 [main:302] - generating value of type = Boolean true depth = 1
2021-03-11 21:02:21,037 [main:58] - GENERATED VALUE OF TYPE Function0<Boolean> = { true}
2021-03-11 21:02:21,037 [main:61] - GENERATED IS CALL =false
2021-03-11 21:02:21,272 [main:67] - randomType = Collection<Char>
2021-03-11 21:02:21,274 [main:106] - GETTING Function0<Boolean> from [ERROR : Cloneable]
2021-03-11 21:02:21,278 [main:106] - GETTING Function0<Boolean> from Any
2021-03-11 21:02:21,283 [main:106] - GETTING Function0<Boolean> from Any?
2021-03-11 21:02:21,287 [main:61] - replacement of { (nullableAny()).equals("bvcol").and(true) } of type Function0<Boolean> is { true}
2021-03-11 21:02:21,388 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 21:02:21,390 [main:53] - replacing ("OK", String)
2021-03-11 21:02:21,391 [main:50] - replacing "OK" String
2021-03-11 21:02:21,391 [main:54] - Getting value of type String
2021-03-11 21:02:21,562 [main:302] - generating value of type = String true depth = 0
2021-03-11 21:02:21,563 [main:58] - GENERATED VALUE OF TYPE String = "mqwjf"
2021-03-11 21:02:21,564 [main:61] - GENERATED IS CALL =false
2021-03-11 21:02:21,708 [main:67] - randomType = OtherParameterBound<Number, Number>
2021-03-11 21:02:21,826 [main:302] - generating value of type = OtherParameterBound<Number, Number> false depth = 0
2021-03-11 21:02:21,827 [main:112] - generating klass OtherParameterBound text = class OtherParameterBound<T : U, U : Number>
2021-03-11 21:02:22,059 [main:106] - GETTING String from [ERROR : <ERROR FUNCTION RETURN TYPE>]
2021-03-11 21:02:22,062 [main:106] - GETTING String from [ERROR : Cloneable]
2021-03-11 21:02:22,065 [main:106] - GETTING String from Any?
2021-03-11 21:02:22,070 [main:113] - Case = [public fun kotlin.Any?.toString(): kotlin.String defined in kotlin[DeserializedSimpleFunctionDescriptor@3226aaef]]
2021-03-11 21:02:22,070 [main:149] - GENERATING call of type public fun kotlin.Any?.toString(): kotlin.String defined in kotlin[DeserializedSimpleFunctionDescriptor@3226aaef]
2021-03-11 21:02:22,071 [main:117] - GENERATED CALL = (nullableAny()).toString()
2021-03-11 21:02:22,071 [main:61] - replacement of "OK" of type String is "mqwjf"
2021-03-11 21:02:22,216 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 21:02:22,216 [main:66] - Compilation checking started
2021-03-11 21:02:22,917 [main:53] - Result = true
Text:
import kotlin.reflect.KTypeProjection
import kotlin.reflect.KVariance
import kotlin.test.assertEquals

class DefaultBound<T>
class NullableAnyBound<T : Any?>
class NotNullAnyBound<T : Any>
class TwoBounds<T : Cloneable> where T : Comparable<T>

class OtherParameterBound<T : U, U : Number>

class RecursiveGeneric<T : Enum<T>>

class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}

fun nullableAny(): Any? = null
fun notNullAny(): Any = null!!

fun box(): String {
    assertEquals(listOf(::nullableAny.returnType), DefaultBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::nullableAny.returnType), NullableAnyBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::notNullAny.returnType), NotNullAnyBound::class.typeParameters.single().upperBounds)

    TwoBounds::class.typeParameters.single().let {
        val (cl, cm) = it.upperBounds
        assertEquals(Cloneable::class, cl.classifier)
        assertEquals(listOf(), cl.arguments)

        assertEquals(Comparable::class, cm.classifier)
        val cmt = cm.arguments.single()
        assertEquals(KVariance.INVARIANT, cmt.variance)
        assertEquals(it, cmt.type!!.classifier)
    }

    OtherParameterBound::class.typeParameters.let {
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    }

    FunctionTypeParameter::class.members.single { true}.let { foo ->
        assertEquals(foo.returnType, foo.typeParameters.single().upperBounds.single())
    }

    val recursiveGenericTypeParameter = RecursiveGeneric::class.typeParameters.single()
    val recursiveGenericBound = recursiveGenericTypeParameter.upperBounds.single()
    assertEquals(Enum::class, recursiveGenericBound.classifier)
    recursiveGenericBound.arguments.single().let { projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    }

    return "mqwjf"
}
2021-03-11 21:02:22,919 [main:53] - replacing (Number::class, KClass<Number>)
2021-03-11 21:02:22,920 [main:50] - replacing Number::class KClass<Number>
2021-03-11 21:02:22,920 [main:54] - Getting value of type KClass<Number>
2021-03-11 21:02:23,021 [main:302] - generating value of type = KClass<Number> false depth = 0
2021-03-11 21:02:23,123 [main:58] - GENERATED VALUE OF TYPE KClass<Number> = Number::class
2021-03-11 21:02:23,123 [main:61] - GENERATED IS CALL =false
2021-03-11 21:02:23,256 [main:67] - randomType = Double
2021-03-11 21:02:23,368 [main:302] - generating value of type = Double true depth = 0
2021-03-11 21:02:23,424 [main:106] - GETTING KClass<Number> from Any
2021-03-11 21:02:23,434 [main:106] - GETTING KClass<Number> from Any?
2021-03-11 21:02:23,444 [main:106] - GETTING KClass<Number> from [ERROR : Cloneable]
2021-03-11 21:02:23,448 [main:61] - replacement of Number::class of type KClass<Number> is Number::class
2021-03-11 21:02:23,573 [main:33] - Trying to replace Element(CLASS_LITERAL_EXPRESSION) on Element(CLASS_LITERAL_EXPRESSION)
2021-03-11 21:02:23,577 [main:53] - replacing ({
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    }, Function0<Unit>)
2021-03-11 21:02:23,577 [main:50] - replacing {
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    } Function0<Unit>
2021-03-11 21:02:23,577 [main:54] - Getting value of type Function0<Unit>
2021-03-11 21:02:23,688 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 21:02:23,688 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 21:02:23,800 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 21:02:23,805 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-11 21:02:24,170 [main:302] - generating value of type = Int true depth = 4
2021-03-11 21:02:24,171 [main:302] - generating value of type = Function1<Int, Unit> false depth = 4
2021-03-11 21:02:24,172 [main:302] - generating value of type = Unit false depth = 5
2021-03-11 21:02:24,299 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 21:02:24,302 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-11 21:02:24,516 [main:302] - generating value of type = Any false depth = 8
2021-03-11 21:02:24,517 [main:95] - GENERATED = println("mdpbx")
2021-03-11 21:02:24,517 [main:95] - GENERATED = repeat(-371488059, {a: Int -> println("mdpbx")})
2021-03-11 21:02:24,517 [main:58] - GENERATED VALUE OF TYPE Function0<Unit> = { repeat(-371488059, {a: Int -> println("mdpbx")})}
2021-03-11 21:02:24,518 [main:61] - GENERATED IS CALL =false
2021-03-11 21:02:24,626 [main:67] - randomType = Double
2021-03-11 21:02:24,725 [main:302] - generating value of type = Double true depth = 0
2021-03-11 21:02:24,776 [main:106] - GETTING Function0<Unit> from Any
2021-03-11 21:02:24,781 [main:106] - GETTING Function0<Unit> from Any?
2021-03-11 21:02:24,787 [main:106] - GETTING Function0<Unit> from [ERROR : Cloneable]
2021-03-11 21:02:24,789 [main:61] - replacement of {
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    } of type Function0<Unit> is { repeat(-371488059, {a: Int -> println("mdpbx")})}
2021-03-11 21:02:24,896 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 21:02:24,896 [main:66] - Compilation checking started
2021-03-11 21:02:25,513 [main:53] - Result = true
Text:
import kotlin.reflect.KTypeProjection
import kotlin.reflect.KVariance
import kotlin.test.assertEquals

class DefaultBound<T>
class NullableAnyBound<T : Any?>
class NotNullAnyBound<T : Any>
class TwoBounds<T : Cloneable> where T : Comparable<T>

class OtherParameterBound<T : U, U : Number>

class RecursiveGeneric<T : Enum<T>>

class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}

fun nullableAny(): Any? = null
fun notNullAny(): Any = null!!

fun box(): String {
    assertEquals(listOf(::nullableAny.returnType), DefaultBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::nullableAny.returnType), NullableAnyBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::notNullAny.returnType), NotNullAnyBound::class.typeParameters.single().upperBounds)

    TwoBounds::class.typeParameters.single().let {
        val (cl, cm) = it.upperBounds
        assertEquals(Cloneable::class, cl.classifier)
        assertEquals(listOf(), cl.arguments)

        assertEquals(Comparable::class, cm.classifier)
        val cmt = cm.arguments.single()
        assertEquals(KVariance.INVARIANT, cmt.variance)
        assertEquals(it, cmt.type!!.classifier)
    }

    OtherParameterBound::class.typeParameters.let { repeat(-371488059, {a: Int -> println("mdpbx")})}

    FunctionTypeParameter::class.members.single { true}.let { foo ->
        assertEquals(foo.returnType, foo.typeParameters.single().upperBounds.single())
    }

    val recursiveGenericTypeParameter = RecursiveGeneric::class.typeParameters.single()
    val recursiveGenericBound = recursiveGenericTypeParameter.upperBounds.single()
    assertEquals(Enum::class, recursiveGenericBound.classifier)
    recursiveGenericBound.arguments.single().let { projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    }

    return "mqwjf"
}


2021-03-11 21:02:25,515 [main:53] - replacing ({ projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    }, Function1<[ERROR : <Unknown lambda parameter type>], Unit>)
2021-03-11 21:02:25,515 [main:50] - replacing { projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    } Function1<[ERROR : <Unknown lambda parameter type>], Unit>
2021-03-11 21:02:25,516 [main:54] - Getting value of type Function1<[ERROR : <Unknown lambda parameter type>], Unit>
2021-03-11 21:02:25,619 [main:302] - generating value of type = Function1<[ERROR : <Unknown lambda parameter type>], Unit> false depth = 0
2021-03-11 21:02:25,619 [main:309] - RECREATED ERROR TYPE = null
2021-03-11 21:02:25,619 [main:58] - GENERATED VALUE OF TYPE Function1<[ERROR : <Unknown lambda parameter type>], Unit> = 
2021-03-11 21:02:26,090 [main:67] - randomType = List<Triple<UInt, Char, String>>
2021-03-11 21:02:26,093 [main:106] - GETTING Function1<[ERROR : <Unknown lambda parameter type>], Unit> from [ERROR : <ERROR FUNCTION RETURN TYPE>]
2021-03-11 21:02:26,098 [main:106] - GETTING Function1<[ERROR : <Unknown lambda parameter type>], Unit> from Any
2021-03-11 21:02:26,104 [main:106] - GETTING Function1<[ERROR : <Unknown lambda parameter type>], Unit> from [ERROR : Cloneable]
2021-03-11 21:02:26,108 [main:106] - GETTING Function1<[ERROR : <Unknown lambda parameter type>], Unit> from [ERROR : <ERROR FUNCTION RETURN TYPE>]
2021-03-11 21:02:26,109 [main:106] - GETTING Function1<[ERROR : <Unknown lambda parameter type>], Unit> from Any?
2021-03-11 21:02:26,114 [main:58] - Cant find and generate replacement for { projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    } type Function1<[ERROR : <Unknown lambda parameter type>], Unit>
2021-03-11 21:02:26,115 [main:53] - replacing (listOf(::nullableAny.returnType), List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493>)
2021-03-11 21:02:26,115 [main:50] - replacing listOf(::nullableAny.returnType) List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493>
2021-03-11 21:02:26,115 [main:54] - Getting value of type List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493>
2021-03-11 21:02:26,211 [main:302] - generating value of type = List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493> false depth = 0
2021-03-11 21:02:26,212 [main:309] - RECREATED ERROR TYPE = null
2021-03-11 21:02:26,212 [main:58] - GENERATED VALUE OF TYPE List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493> = 
2021-03-11 21:02:26,735 [main:67] - randomType = Sequence<Sequence<UShort?>>?
2021-03-11 21:02:26,739 [main:106] - GETTING List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493> from [ERROR : Cloneable]
2021-03-11 21:02:26,745 [main:106] - GETTING List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493> from Any
2021-03-11 21:02:26,754 [main:106] - GETTING List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493> from Any?
2021-03-11 21:02:26,760 [main:58] - Cant find and generate replacement for listOf(::nullableAny.returnType) type List<org.jetbrains.kotlin.types.ErrorUtils$UninferredParameterTypeConstructor@3204f493>
2021-03-11 21:02:26,760 [main:53] - replacing ({
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    }, Function0<Unit>)
2021-03-11 21:02:26,760 [main:50] - replacing {
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    } Function0<Unit>
2021-03-11 21:02:26,760 [main:54] - Getting value of type Function0<Unit>
2021-03-11 21:02:26,861 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-11 21:02:26,862 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 21:02:26,962 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 21:02:26,965 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-11 21:02:27,177 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 21:02:27,178 [main:95] - GENERATED = require(true)
2021-03-11 21:02:27,178 [main:58] - GENERATED VALUE OF TYPE Function0<Unit> = { require(true)}
2021-03-11 21:02:27,179 [main:61] - GENERATED IS CALL =false
2021-03-11 21:02:27,418 [main:67] - randomType = Byte?
2021-03-11 21:02:27,514 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 21:02:27,550 [main:106] - GETTING Function0<Unit> from Any
2021-03-11 21:02:27,554 [main:106] - GETTING Function0<Unit> from [ERROR : Cloneable]
2021-03-11 21:02:27,557 [main:106] - GETTING Function0<Unit> from Any?
2021-03-11 21:02:27,560 [main:61] - replacement of {
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    } of type Function0<Unit> is { require(true)}
2021-03-11 21:02:27,655 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 21:02:27,657 [main:53] - replacing ({ projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    }, Function1<[ERROR : <Unknown lambda parameter type>], Unit>)
2021-03-11 21:02:27,657 [main:50] - replacing { projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    } Function1<[ERROR : <Unknown lambda parameter type>], Unit>
2021-03-11 21:02:27,657 [main:54] - Getting value of type Function1<[ERROR : <Unknown lambda parameter type>], Unit>
2021-03-11 21:02:27,749 [main:302] - generating value of type = Function1<[ERROR : <Unknown lambda parameter type>], Unit> false depth = 0
2021-03-11 21:02:27,749 [main:309] - RECREATED ERROR TYPE = null
2021-03-11 21:02:27,749 [main:58] - GENERATED VALUE OF TYPE Function1<[ERROR : <Unknown lambda parameter type>], Unit> = 
2021-03-11 21:02:27,848 [main:67] - randomType = ULong
2021-03-11 21:02:27,958 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 21:02:28,014 [main:106] - GETTING Function1<[ERROR : <Unknown lambda parameter type>], Unit> from [ERROR : <ERROR FUNCTION RETURN TYPE>]
2021-03-11 21:02:28,018 [main:106] - GETTING Function1<[ERROR : <Unknown lambda parameter type>], Unit> from Any?
2021-03-11 21:02:28,024 [main:106] - GETTING Function1<[ERROR : <Unknown lambda parameter type>], Unit> from Any
2021-03-11 21:02:28,030 [main:106] - GETTING Function1<[ERROR : <Unknown lambda parameter type>], Unit> from [ERROR : Cloneable]
2021-03-11 21:02:28,034 [main:106] - GETTING Function1<[ERROR : <Unknown lambda parameter type>], Unit> from [ERROR : <ERROR FUNCTION RETURN TYPE>]
2021-03-11 21:02:28,034 [main:58] - Cant find and generate replacement for { projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    } type Function1<[ERROR : <Unknown lambda parameter type>], Unit>
2021-03-11 21:02:28,036 [main:53] - replacing (KVariance.INVARIANT, KVariance)
2021-03-11 21:02:28,036 [main:50] - replacing KVariance.INVARIANT KVariance
2021-03-11 21:02:28,037 [main:54] - Getting value of type KVariance
2021-03-11 21:02:28,128 [main:302] - generating value of type = KVariance false depth = 0
2021-03-11 21:02:28,131 [main:58] - GENERATED VALUE OF TYPE KVariance = kotlin.reflect.KVariance.INVARIANT
2021-03-11 21:02:28,131 [main:61] - GENERATED IS CALL =false
2021-03-11 21:02:28,430 [main:67] - randomType = DefaultBound<FunctionTypeParameter>
2021-03-11 21:02:28,531 [main:302] - generating value of type = DefaultBound<FunctionTypeParameter> false depth = 0
2021-03-11 21:02:28,531 [main:112] - generating klass DefaultBound text = class DefaultBound<T>
2021-03-11 21:02:28,981 [main:106] - GETTING KVariance from [ERROR : <ERROR FUNCTION RETURN TYPE>]
2021-03-11 21:02:28,984 [main:106] - GETTING KVariance from [ERROR : <ERROR FUNCTION RETURN TYPE>]
2021-03-11 21:02:28,985 [main:106] - GETTING KVariance from [ERROR : Cloneable]
2021-03-11 21:02:28,988 [main:106] - GETTING KVariance from Any
2021-03-11 21:02:28,994 [main:106] - GETTING KVariance from Any?
2021-03-11 21:02:28,998 [main:61] - replacement of KVariance.INVARIANT of type KVariance is kotlin.reflect.KVariance.INVARIANT
2021-03-11 21:02:29,096 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 21:02:29,096 [main:66] - Compilation checking started
2021-03-11 21:02:29,648 [main:53] - Result = true
Text:
import kotlin.reflect.KTypeProjection
import kotlin.reflect.KVariance
import kotlin.test.assertEquals

class DefaultBound<T>
class NullableAnyBound<T : Any?>
class NotNullAnyBound<T : Any>
class TwoBounds<T : Cloneable> where T : Comparable<T>

class OtherParameterBound<T : U, U : Number>

class RecursiveGeneric<T : Enum<T>>

class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}

fun nullableAny(): Any? = null
fun notNullAny(): Any = null!!

fun box(): String {
    assertEquals(listOf(::nullableAny.returnType), DefaultBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::nullableAny.returnType), NullableAnyBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::notNullAny.returnType), NotNullAnyBound::class.typeParameters.single().upperBounds)

    TwoBounds::class.typeParameters.single().let {
        val (cl, cm) = it.upperBounds
        assertEquals(Cloneable::class, cl.classifier)
        assertEquals(listOf(), cl.arguments)

        assertEquals(Comparable::class, cm.classifier)
        val cmt = cm.arguments.single()
        assertEquals(KVariance.INVARIANT, cmt.variance)
        assertEquals(it, cmt.type!!.classifier)
    }

    OtherParameterBound::class.typeParameters.let { repeat(-371488059, {a: Int -> println("mdpbx")})}

    FunctionTypeParameter::class.members.single { true}.let { foo ->
        assertEquals(foo.returnType, foo.typeParameters.single().upperBounds.single())
    }

    val recursiveGenericTypeParameter = RecursiveGeneric::class.typeParameters.single()
    val recursiveGenericBound = recursiveGenericTypeParameter.upperBounds.single()
    assertEquals(Enum::class, recursiveGenericBound.classifier)
    recursiveGenericBound.arguments.single().let { projection ->
        assertEquals(kotlin.reflect.KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    }

    return "mqwjf"
}


2021-03-11 21:02:29,752 [main:119] - TRYING TO REPLACE CONSTANT true
2021-03-11 21:02:29,860 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(BOOLEAN_CONSTANT)
2021-03-11 21:02:29,860 [main:66] - Compilation checking started
2021-03-11 21:02:30,447 [main:119] - TRYING TO REPLACE CONSTANT 371488059
2021-03-11 21:02:30,570 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-11 21:02:30,570 [main:66] - Compilation checking started
2021-03-11 21:02:31,065 [main:53] - Result = true
Text:
import kotlin.reflect.KTypeProjection
import kotlin.reflect.KVariance
import kotlin.test.assertEquals

class DefaultBound<T>
class NullableAnyBound<T : Any?>
class NotNullAnyBound<T : Any>
class TwoBounds<T : Cloneable> where T : Comparable<T>

class OtherParameterBound<T : U, U : Number>

class RecursiveGeneric<T : Enum<T>>

class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}

fun nullableAny(): Any? = null
fun notNullAny(): Any = null!!

fun box(): String {
    assertEquals(listOf(::nullableAny.returnType), DefaultBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::nullableAny.returnType), NullableAnyBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::notNullAny.returnType), NotNullAnyBound::class.typeParameters.single().upperBounds)

    TwoBounds::class.typeParameters.single().let {
        val (cl, cm) = it.upperBounds
        assertEquals(Cloneable::class, cl.classifier)
        assertEquals(listOf(), cl.arguments)

        assertEquals(Comparable::class, cm.classifier)
        val cmt = cm.arguments.single()
        assertEquals(KVariance.INVARIANT, cmt.variance)
        assertEquals(it, cmt.type!!.classifier)
    }

    OtherParameterBound::class.typeParameters.let { repeat(371488059, {a: Int -> println("mdpbx")})}

    FunctionTypeParameter::class.members.single { true}.let { foo ->
        assertEquals(foo.returnType, foo.typeParameters.single().upperBounds.single())
    }

    val recursiveGenericTypeParameter = RecursiveGeneric::class.typeParameters.single()
    val recursiveGenericBound = recursiveGenericTypeParameter.upperBounds.single()
    assertEquals(Enum::class, recursiveGenericBound.classifier)
    recursiveGenericBound.arguments.single().let { projection ->
        assertEquals(kotlin.reflect.KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    }

    return "mqwjf"
}


2021-03-11 21:02:31,084 [main:66] - Compilation checking started
2021-03-11 21:02:31,574 [main:41] - AFTER TRY 0 res = import kotlin.reflect.KTypeProjection
import kotlin.reflect.KVariance
import kotlin.test.assertEquals

class DefaultBound<T>
class NullableAnyBound<T : Any?>
class NotNullAnyBound<T : Any>
class TwoBounds<T : Cloneable> where T : Comparable<T>

class OtherParameterBound<T : U, U : Number>

class RecursiveGeneric<T : Enum<T>>

class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}

fun nullableAny(): Any? = null
fun notNullAny(): Any = null!!

fun box(): String {
    assertEquals(listOf(::nullableAny.returnType), DefaultBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::nullableAny.returnType), NullableAnyBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::notNullAny.returnType), NotNullAnyBound::class.typeParameters.single().upperBounds)

    TwoBounds::class.typeParameters.single().let {
        val (cl, cm) = it.upperBounds
        assertEquals(Cloneable::class, cl.classifier)
        assertEquals(listOf(), cl.arguments)

        assertEquals(Comparable::class, cm.classifier)
        val cmt = cm.arguments.single()
        assertEquals(KVariance.INVARIANT, cmt.variance)
        assertEquals(it, cmt.type!!.classifier)
    }

    OtherParameterBound::class.typeParameters.let {
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    }

    FunctionTypeParameter::class.members.single { it.name == "foo" }.let { foo ->
        assertEquals(foo.returnType, foo.typeParameters.single().upperBounds.single())
    }

    val recursiveGenericTypeParameter = RecursiveGeneric::class.typeParameters.single()
    val recursiveGenericBound = recursiveGenericTypeParameter.upperBounds.single()
    assertEquals(Enum::class, recursiveGenericBound.classifier)
    recursiveGenericBound.arguments.single().let { projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    }

    return "OK"
}
2021-03-11 21:02:31,756 [main:112] - generating klass DefaultBound text = class DefaultBound<T>
2021-03-11 21:02:32,060 [main:112] - generating klass NullableAnyBound text = class NullableAnyBound<T : Any?>
2021-03-11 21:02:32,870 [main:112] - generating klass NotNullAnyBound text = class NotNullAnyBound<T : Any>
2021-03-11 21:02:33,485 [main:112] - generating klass TwoBounds text = class TwoBounds<T : Cloneable> where T : Comparable<T>
2021-03-11 21:02:33,579 [main:112] - generating klass OtherParameterBound text = class OtherParameterBound<T : U, U : Number>
2021-03-11 21:02:33,848 [main:112] - generating klass RecursiveGeneric text = class RecursiveGeneric<T : Enum<T>>
2021-03-11 21:02:34,034 [main:112] - generating klass FunctionTypeParameter text = class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}
2021-03-11 21:02:34,234 [main:43] - Try №0
2021-03-11 21:02:35,025 [main:69] - Trying to insert inline fun fu0(prope0: () -> String) = prope0()
2021-03-11 21:02:35,162 [main:66] - Compilation checking started
2021-03-11 21:02:36,011 [main:103] - Trying to change 11 nodes
2021-03-11 21:02:36,012 [main:107] - replacing (Kla0("").prope0, String)
2021-03-11 21:02:36,012 [main:50] - replacing Kla0("").prope0 String
2021-03-11 21:02:36,012 [main:54] - Getting value of type String
2021-03-11 21:02:36,118 [main:302] - generating value of type = String true depth = 0
2021-03-11 21:02:36,119 [main:58] - GENERATED VALUE OF TYPE String = "awdck"
2021-03-11 21:02:36,119 [main:61] - GENERATED IS CALL =false
2021-03-11 21:02:36,479 [main:67] - randomType = ArrayDeque<RecursiveGeneric<Enum<T>>?>
2021-03-11 21:02:36,581 [main:302] - generating value of type = ArrayDeque<RecursiveGeneric<Enum<T>>?> false depth = 0
2021-03-11 21:02:36,692 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<RecursiveGeneric<Enum<T>>?> = TODO()
2021-03-11 21:02:36,694 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(initialCapacity: kotlin.Int): ArrayDeque<RecursiveGeneric<Enum<T>>?> = TODO()
2021-03-11 21:02:36,902 [main:302] - generating value of type = Int true depth = 3
2021-03-11 21:02:36,903 [main:95] - GENERATED = ArrayDeque<RecursiveGeneric<Enum<T>>?>(-1450787203)
2021-03-11 21:02:37,203 [main:149] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.ArrayDeque[DeserializedSimpleFunctionDescriptor@58d70c1]
2021-03-11 21:02:37,204 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@761b7425]
2021-03-11 21:02:37,205 [main:78] - Generated call from random type = (ArrayDeque<RecursiveGeneric<Enum<T>>?>(-1450787203)).toArray().contentToString()
2021-03-11 21:02:37,206 [main:106] - GETTING String from Any?
2021-03-11 21:02:37,212 [main:113] - Case = [public fun kotlin.Any?.toString(): kotlin.String defined in kotlin[DeserializedSimpleFunctionDescriptor@3226aaef]]
2021-03-11 21:02:37,212 [main:149] - GENERATING call of type public fun kotlin.Any?.toString(): kotlin.String defined in kotlin[DeserializedSimpleFunctionDescriptor@3226aaef]
2021-03-11 21:02:37,212 [main:117] - GENERATED CALL = (nullableAny()).toString()
2021-03-11 21:02:37,212 [main:114] - replacement of Kla0("").prope0 of type String is "awdck"
2021-03-11 21:02:37,320 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 21:02:37,321 [main:66] - Compilation checking started
2021-03-11 21:02:37,845 [main:53] - Result = true
Text:
import kotlin.reflect.KTypeProjection
import kotlin.reflect.KVariance
import kotlin.test.assertEquals

class DefaultBound<T>
class NullableAnyBound<T : Any?>
class NotNullAnyBound<T : Any>
class TwoBounds<T : Cloneable> where T : Comparable<T>

class OtherParameterBound<T : U, U : Number>

class RecursiveGeneric<T : Enum<T>>

class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}

fun nullableAny(): Any? = null
fun notNullAny(): Any = null!!

fun box(): String {
    assertEquals(listOf(::nullableAny.returnType), DefaultBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::nullableAny.returnType), NullableAnyBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::notNullAny.returnType), NotNullAnyBound::class.typeParameters.single().upperBounds)

    TwoBounds::class.typeParameters.single().let {
        val (cl, cm) = it.upperBounds
        assertEquals(Cloneable::class, cl.classifier)
        assertEquals(listOf(), cl.arguments)

        assertEquals(Comparable::class, cm.classifier)
        val cmt = cm.arguments.single()
        assertEquals(KVariance.INVARIANT, cmt.variance)
        assertEquals(it, cmt.type!!.classifier)
    }

    OtherParameterBound::class.typeParameters.let {
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    }

    FunctionTypeParameter::class.members.single { it.name == "foo" }.let { foo ->
        assertEquals(foo.returnType, foo.typeParameters.single().upperBounds.single())
    }

    val recursiveGenericTypeParameter = RecursiveGeneric::class.typeParameters.single()
    val recursiveGenericBound = recursiveGenericTypeParameter.upperBounds.single()
    assertEquals(Enum::class, recursiveGenericBound.classifier)
    recursiveGenericBound.arguments.single().let { projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    }

    return "OK"
}

inline fun fu0(prope0: () -> String) = prope0()

class Kla0 {
    val prope0 = fu0 { { "OK" }() }

    constructor(y: Int)
    constructor(y: String)
}

fun box643(): String = "awdck"


2021-03-11 21:02:37,845 [main:107] - replacing ({ { "OK" }() }, Function0<String>)
2021-03-11 21:02:37,845 [main:50] - replacing { { "OK" }() } Function0<String>
2021-03-11 21:02:37,845 [main:54] - Getting value of type Function0<String>
2021-03-11 21:02:37,948 [main:302] - generating value of type = Function0<String> false depth = 0
2021-03-11 21:02:37,949 [main:302] - generating value of type = String true depth = 1
2021-03-11 21:02:37,950 [main:58] - GENERATED VALUE OF TYPE Function0<String> = { "zrije"}
2021-03-11 21:02:37,950 [main:61] - GENERATED IS CALL =false
2021-03-11 21:02:37,951 [main:67] - randomType = String
2021-03-11 21:02:38,047 [main:302] - generating value of type = String true depth = 0
2021-03-11 21:02:38,077 [main:106] - GETTING Function0<String> from KClass<OtherParameterBound<*, *>>
2021-03-11 21:02:38,093 [main:106] - GETTING Function0<String> from KClass<RecursiveGeneric<*>>
2021-03-11 21:02:38,108 [main:106] - GETTING Function0<String> from KClass<FunctionTypeParameter>
2021-03-11 21:02:38,123 [main:106] - GETTING Function0<String> from KClass<NullableAnyBound<*>>
2021-03-11 21:02:38,137 [main:106] - GETTING Function0<String> from KClass<TwoBounds<*>>
2021-03-11 21:02:38,151 [main:106] - GETTING Function0<String> from KClass<DefaultBound<*>>
2021-03-11 21:02:38,167 [main:106] - GETTING Function0<String> from KClass<NotNullAnyBound<*>>
2021-03-11 21:02:38,197 [main:106] - GETTING Function0<String> from Any?
2021-03-11 21:02:38,204 [main:106] - GETTING Function0<String> from KFunction0<Any>
2021-03-11 21:02:38,247 [main:106] - GETTING Function0<String> from KFunction0<Any?>
2021-03-11 21:02:38,291 [main:106] - GETTING Function0<String> from [ERROR : Cloneable]
2021-03-11 21:02:38,295 [main:106] - GETTING Function0<String> from Any
2021-03-11 21:02:38,300 [main:114] - replacement of { { "OK" }() } of type Function0<String> is { "zrije"}
2021-03-11 21:02:38,403 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-11 21:02:38,403 [main:66] - Compilation checking started
2021-03-11 21:02:38,983 [main:53] - Result = true
Text:
import kotlin.reflect.KTypeProjection
import kotlin.reflect.KVariance
import kotlin.test.assertEquals

class DefaultBound<T>
class NullableAnyBound<T : Any?>
class NotNullAnyBound<T : Any>
class TwoBounds<T : Cloneable> where T : Comparable<T>

class OtherParameterBound<T : U, U : Number>

class RecursiveGeneric<T : Enum<T>>

class FunctionTypeParameter {
    fun <A : Cloneable> foo(): Cloneable = null!!
}

fun nullableAny(): Any? = null
fun notNullAny(): Any = null!!

fun box(): String {
    assertEquals(listOf(::nullableAny.returnType), DefaultBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::nullableAny.returnType), NullableAnyBound::class.typeParameters.single().upperBounds)
    assertEquals(listOf(::notNullAny.returnType), NotNullAnyBound::class.typeParameters.single().upperBounds)

    TwoBounds::class.typeParameters.single().let {
        val (cl, cm) = it.upperBounds
        assertEquals(Cloneable::class, cl.classifier)
        assertEquals(listOf(), cl.arguments)

        assertEquals(Comparable::class, cm.classifier)
        val cmt = cm.arguments.single()
        assertEquals(KVariance.INVARIANT, cmt.variance)
        assertEquals(it, cmt.type!!.classifier)
    }

    OtherParameterBound::class.typeParameters.let {
        val (t, u) = it
        assertEquals(u, t.upperBounds.single().classifier)
        assertEquals(Number::class, u.upperBounds.single().classifier)
    }

    FunctionTypeParameter::class.members.single { it.name == "foo" }.let { foo ->
        assertEquals(foo.returnType, foo.typeParameters.single().upperBounds.single())
    }

    val recursiveGenericTypeParameter = RecursiveGeneric::class.typeParameters.single()
    val recursiveGenericBound = recursiveGenericTypeParameter.upperBounds.single()
    assertEquals(Enum::class, recursiveGenericBound.classifier)
    recursiveGenericBound.arguments.single().let { projection ->
        assertEquals(KVariance.INVARIANT, projection.variance)
        assertEquals(recursiveGenericTypeParameter, projection.type!!.classifier)
    }

    return "OK"
}

inline fun fu0(prope0: () -> String) = prope0()

class Kla0 {
    val prope0 = fu0 { "zrije"}

    constructor(y: Int)
    constructor(y: String)
}

fun box643(): String = "awdck"


2021-03-11 21:02:38,984 [main:107] - replacing (prope0(), String)
2021-03-11 21:02:38,984 [main:50] - replacing prope0() String
2021-03-11 21:02:38,984 [main:54] - Getting value of type String
2021-03-11 21:02:39,086 [main:302] - generating value of type = String true depth = 0
2021-03-11 21:02:39,087 [main:58] - GENERATED VALUE OF TYPE String = "jpsee"
2021-03-11 21:02:39,087 [main:61] - GENERATED IS CALL =false
