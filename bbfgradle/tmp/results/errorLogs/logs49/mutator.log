2021-03-11 23:55:50,124 [main:66] - Compilation checking started
2021-03-11 23:55:52,220 [main:45] - Trying to change 55 nodes
2021-03-11 23:55:52,227 [main:53] - replacing (NZERO, Comparable<Any>)
2021-03-11 23:55:52,228 [main:50] - replacing NZERO Comparable<Any>
2021-03-11 23:55:52,228 [main:54] - Getting value of type Comparable<Any>
2021-03-11 23:55:52,373 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:55:52,831 [main:58] - GENERATED VALUE OF TYPE Comparable<Any> = 'è•š'
2021-03-11 23:55:52,832 [main:61] - GENERATED IS CALL =false
2021-03-11 23:55:53,507 [main:67] - randomType = Function2<Boolean, Char?, Int>
2021-03-11 23:55:53,507 [main:106] - GETTING Comparable<Any> from Comparable<Any>
2021-03-11 23:55:53,541 [main:61] - replacement of NZERO of type Comparable<Any> is PZERO
2021-03-11 23:55:53,704 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 23:55:53,705 [main:66] - Compilation checking started
2021-03-11 23:55:54,128 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return "fail 1 in Double"
    if (0.0 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-0.0 in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in DOUBLE_RANGE) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 4a !in Comparable"

    return "OK"
}
2021-03-11 23:55:54,131 [main:53] - replacing ((PZERO !in COMPARABLE_RANGE), Boolean)
2021-03-11 23:55:54,131 [main:50] - replacing (PZERO !in COMPARABLE_RANGE) Boolean
2021-03-11 23:55:54,131 [main:54] - Getting value of type Boolean
2021-03-11 23:55:54,284 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:55:54,284 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 23:55:54,285 [main:61] - GENERATED IS CALL =false
2021-03-11 23:55:54,530 [main:67] - randomType = Float?
2021-03-11 23:55:54,640 [main:302] - generating value of type = Float true depth = 0
2021-03-11 23:55:54,788 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@4c4249a8]
2021-03-11 23:55:54,886 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:55:54,887 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@3cb2f9c9]
2021-03-11 23:55:54,989 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:54,992 [main:78] - Generated call from random type = (0.95976514f)?.div(0.17846998353186394).equals("zypnu")
2021-03-11 23:55:54,994 [main:106] - GETTING Boolean from Comparable<Any>
2021-03-11 23:55:55,009 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]]
2021-03-11 23:55:55,009 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:55:55,103 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:55,104 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]
2021-03-11 23:55:55,104 [main:117] - GENERATED CALL = (PZERO).equals("qxltt").not()
2021-03-11 23:55:55,105 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]]
2021-03-11 23:55:55,105 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:55:55,200 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:55,201 [main:117] - GENERATED CALL = (PZERO).equals("otwqf")
2021-03-11 23:55:55,201 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7dfc1f89]]
2021-03-11 23:55:55,201 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:55:55,321 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:55,322 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7dfc1f89]
2021-03-11 23:55:55,425 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:55,426 [main:117] - GENERATED CALL = (PZERO).equals("yaofm").equals("uqkgd")
2021-03-11 23:55:55,427 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@e44af47]]
2021-03-11 23:55:55,427 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:55:55,554 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:55,555 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@e44af47]
2021-03-11 23:55:55,651 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:55:55,652 [main:117] - GENERATED CALL = (PZERO).equals("cxajp").or(false)
2021-03-11 23:55:55,652 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@25a1888]]
2021-03-11 23:55:55,653 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:55:55,753 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:55,754 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@25a1888]
2021-03-11 23:55:55,852 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:55:55,853 [main:117] - GENERATED CALL = (PZERO).equals("nedok").xor(true)
2021-03-11 23:55:55,853 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@191df20e]]
2021-03-11 23:55:55,854 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:55:55,955 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:55,956 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@191df20e]
2021-03-11 23:55:56,058 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:56,060 [main:117] - GENERATED CALL = (PZERO).compareTo("qltda").equals("qeagy")
2021-03-11 23:55:56,060 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@158f4c22]]
2021-03-11 23:55:56,060 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:55:56,161 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@158f4c22]
2021-03-11 23:55:56,268 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:55:56,270 [main:117] - GENERATED CALL = (PZERO).equals(null).and(false)
2021-03-11 23:55:56,270 [main:61] - replacement of (PZERO !in COMPARABLE_RANGE) of type Boolean is (PZERO).equals("nedok").xor(true)
2021-03-11 23:55:56,377 [main:33] - Trying to replace Element(PARENTHESIZED) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:55:56,378 [main:66] - Compilation checking started
2021-03-11 23:55:56,787 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return "fail 1 in Double"
    if (0.0 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-0.0 in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in DOUBLE_RANGE) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}
2021-03-11 23:55:56,790 [main:53] - replacing ("fail 1 in Double", String)
2021-03-11 23:55:56,790 [main:50] - replacing "fail 1 in Double" String
2021-03-11 23:55:56,790 [main:54] - Getting value of type String
2021-03-11 23:55:56,894 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:55:56,895 [main:58] - GENERATED VALUE OF TYPE String = "rdkui"
2021-03-11 23:55:56,895 [main:61] - GENERATED IS CALL =false
2021-03-11 23:55:57,874 [main:67] - randomType = Function2<UInt, MutableMap<Char?, Set<String>>, UInt>
2021-03-11 23:55:57,875 [main:106] - GETTING String from Comparable<Any>
2021-03-11 23:55:57,885 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]]
2021-03-11 23:55:57,885 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:55:57,968 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:57,969 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]
2021-03-11 23:55:58,065 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:55:58,067 [main:117] - GENERATED CALL = (PZERO).compareTo("iqgff").toString(1239787257)
2021-03-11 23:55:58,067 [main:61] - replacement of "fail 1 in Double" of type String is (PZERO).compareTo("iqgff").toString(1239787257)
2021-03-11 23:55:58,162 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:55:58,162 [main:66] - Compilation checking started
2021-03-11 23:55:58,621 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.0 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-0.0 in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in DOUBLE_RANGE) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}
2021-03-11 23:55:58,623 [main:53] - replacing (-0.0 !in DOUBLE_RANGE, Boolean)
2021-03-11 23:55:58,623 [main:50] - replacing -0.0 !in DOUBLE_RANGE Boolean
2021-03-11 23:55:58,623 [main:54] - Getting value of type Boolean
2021-03-11 23:55:58,726 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:55:58,726 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 23:55:58,727 [main:61] - GENERATED IS CALL =false
2021-03-11 23:55:59,178 [main:67] - randomType = MutableMap<Array<UByte>, Long>
2021-03-11 23:55:59,180 [main:106] - GETTING Boolean from ClosedRange<Comparable<Any>>
2021-03-11 23:55:59,194 [main:113] - Case = [public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@25a1888]]
2021-03-11 23:55:59,194 [main:149] - GENERATING call of type public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b]
2021-03-11 23:55:59,194 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@25a1888]
2021-03-11 23:55:59,301 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:55:59,303 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(NZERO).xor(false)
2021-03-11 23:55:59,303 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@3a307611]]
2021-03-11 23:55:59,303 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@3a307611]
2021-03-11 23:55:59,421 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:55:59,422 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).equals("qrasc")
2021-03-11 23:55:59,423 [main:113] - Case = [public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]]
2021-03-11 23:55:59,423 [main:149] - GENERATING call of type public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b]
2021-03-11 23:55:59,423 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]
2021-03-11 23:55:59,424 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(PZERO).not()
2021-03-11 23:55:59,424 [main:113] - Case = [public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@158f4c22]]
2021-03-11 23:55:59,424 [main:149] - GENERATING call of type public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b]
2021-03-11 23:55:59,514 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:55:59,613 [main:43] - GENERATING CALL OF fun <E> Enum(name: kotlin.String, ordinal: kotlin.Int): Comparable<Any> = TODO()
2021-03-11 23:55:59,615 [main:61] - WITHOUT TYPE PARAMS = fun <E> Enum(name: kotlin.String, ordinal: kotlin.Int): Comparable<Any> = TODO()
2021-03-11 23:55:59,938 [main:302] - generating value of type = String true depth = 3
2021-03-11 23:55:59,939 [main:302] - generating value of type = Int true depth = 3
2021-03-11 23:55:59,940 [main:95] - GENERATED = Enum<Enum<E>>("nobjw", -1978294486)
2021-03-11 23:55:59,940 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@158f4c22]
2021-03-11 23:56:00,032 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:00,034 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(Enum<Enum<E>>("nobjw", -1978294486)).and(false)
2021-03-11 23:56:00,034 [main:113] - Case = [public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7dfc1f89]]
2021-03-11 23:56:00,034 [main:149] - GENERATING call of type public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b]
2021-03-11 23:56:00,187 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:00,197 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7dfc1f89]
2021-03-11 23:56:00,321 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:00,322 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains("cswja").equals("czgja")
2021-03-11 23:56:00,322 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@42edcb56]]
2021-03-11 23:56:00,322 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@42edcb56]
2021-03-11 23:56:00,323 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).isEmpty()
2021-03-11 23:56:00,323 [main:113] - Case = [public abstract val endInclusive: kotlin.Comparable<kotlin.Any> defined in kotlin.ranges.ClosedRange[DeserializedPropertyDescriptor@4938a200], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]]
2021-03-11 23:56:00,323 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:56:00,409 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:00,410 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).endInclusive.equals("rwzfv")
2021-03-11 23:56:00,410 [main:113] - Case = [public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@e44af47]]
2021-03-11 23:56:00,410 [main:149] - GENERATING call of type public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b]
2021-03-11 23:56:00,411 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@e44af47]
2021-03-11 23:56:00,495 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:00,496 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(PZERO).or(false)
2021-03-11 23:56:00,497 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.jvm.JvmName public operator fun kotlin.ranges.ClosedRange<kotlin.Byte>.contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@44457c4d]]
2021-03-11 23:56:00,497 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.jvm.JvmName public operator fun kotlin.ranges.ClosedRange<kotlin.Byte>.contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@44457c4d]
2021-03-11 23:56:00,583 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:00,585 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(0.02590413812087622)
2021-03-11 23:56:00,585 [main:61] - replacement of -0.0 !in DOUBLE_RANGE of type Boolean is (COMPARABLE_RANGE).contains(0.02590413812087622)
2021-03-11 23:56:00,686 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:00,686 [main:66] - Compilation checking started
2021-03-11 23:56:00,969 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.0 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-0.0 in DOUBLE_RANGE)) return "fail 2 in Double"
    if ((COMPARABLE_RANGE).contains(0.02590413812087622)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:00,971 [main:53] - replacing (0.0, Double)
2021-03-11 23:56:00,972 [main:50] - replacing 0.0 Double
2021-03-11 23:56:00,972 [main:54] - Getting value of type Double
2021-03-11 23:56:01,075 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:01,076 [main:58] - GENERATED VALUE OF TYPE Double = 0.7661248988518727
2021-03-11 23:56:01,076 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:01,178 [main:67] - randomType = Short
2021-03-11 23:56:01,280 [main:302] - generating value of type = Short true depth = 0
2021-03-11 23:56:01,351 [main:149] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@1a266821]
2021-03-11 23:56:01,351 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@108ab927]
2021-03-11 23:56:01,352 [main:78] - Generated call from random type = (25588).toDouble().dec()
2021-03-11 23:56:01,352 [main:61] - replacement of 0.0 of type Double is (25588).toDouble().dec()
2021-03-11 23:56:01,471 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:01,472 [main:66] - Compilation checking started
2021-03-11 23:56:01,826 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.0 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in DOUBLE_RANGE) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:01,827 [main:53] - replacing (0.0, Double)
2021-03-11 23:56:01,828 [main:50] - replacing 0.0 Double
2021-03-11 23:56:01,828 [main:54] - Getting value of type Double
2021-03-11 23:56:01,913 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:01,913 [main:58] - GENERATED VALUE OF TYPE Double = 0.8129700914670323
2021-03-11 23:56:01,914 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:01,914 [main:67] - randomType = Double
2021-03-11 23:56:01,999 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:02,053 [main:149] - GENERATING call of type public open fun toFloat(): kotlin.Float defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@313bc1e6]
2021-03-11 23:56:02,054 [main:149] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@47c07998]
2021-03-11 23:56:02,054 [main:78] - Generated call from random type = (0.26649432053543354).toFloat().toDouble()
2021-03-11 23:56:02,055 [main:106] - GETTING Double from Comparable<Any>
2021-03-11 23:56:02,065 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e9afb2a]]
2021-03-11 23:56:02,065 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:02,150 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:02,151 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e9afb2a]
2021-03-11 23:56:02,247 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:02,249 [main:117] - GENERATED CALL = (PZERO).compareTo("jsqxb").div(0.35064333390670754)
2021-03-11 23:56:02,249 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54dc7b05]]
2021-03-11 23:56:02,249 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:02,356 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:02,356 [main:149] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54dc7b05]
2021-03-11 23:56:02,357 [main:117] - GENERATED CALL = (PZERO).compareTo("lfyvh").toDouble()
2021-03-11 23:56:02,357 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d76ccb3]]
2021-03-11 23:56:02,357 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:02,444 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:02,445 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d76ccb3]
2021-03-11 23:56:02,533 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:02,534 [main:117] - GENERATED CALL = (PZERO).compareTo("nugra").plus(0.5793074220905307)
2021-03-11 23:56:02,534 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edaff21]]
2021-03-11 23:56:02,534 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:02,615 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:02,615 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edaff21]
2021-03-11 23:56:02,698 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:02,699 [main:117] - GENERATED CALL = (PZERO).compareTo("komyf").minus(0.16146392453205516)
2021-03-11 23:56:02,699 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@61c1b0e3]]
2021-03-11 23:56:02,699 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:02,817 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:02,818 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@61c1b0e3]
2021-03-11 23:56:02,917 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:02,919 [main:117] - GENERATED CALL = (PZERO).compareTo("ofmcs").rem(0.5887162014069672)
2021-03-11 23:56:02,919 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a6dbab7]]
2021-03-11 23:56:02,919 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:03,008 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:03,008 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a6dbab7]
2021-03-11 23:56:03,091 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:03,092 [main:117] - GENERATED CALL = (PZERO).compareTo("gwlpt").times(0.23479359771695674)
2021-03-11 23:56:03,092 [main:61] - replacement of 0.0 of type Double is 0.8129700914670323
2021-03-11 23:56:03,176 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(FLOAT_CONSTANT)
2021-03-11 23:56:03,176 [main:66] - Compilation checking started
2021-03-11 23:56:03,505 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in DOUBLE_RANGE) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:03,506 [main:53] - replacing (DOUBLE_RANGE, ClosedFloatingPointRange<Double>)
2021-03-11 23:56:03,507 [main:50] - replacing DOUBLE_RANGE ClosedFloatingPointRange<Double>
2021-03-11 23:56:03,507 [main:54] - Getting value of type ClosedFloatingPointRange<Double>
2021-03-11 23:56:03,592 [main:302] - generating value of type = ClosedFloatingPointRange<Double> false depth = 0
2021-03-11 23:56:03,597 [main:58] - GENERATED VALUE OF TYPE ClosedFloatingPointRange<Double> = 
2021-03-11 23:56:03,694 [main:67] - randomType = Sequence<Boolean>
2021-03-11 23:56:03,698 [main:106] - GETTING ClosedFloatingPointRange<Double> from Comparable<Any>
2021-03-11 23:56:03,707 [main:106] - GETTING ClosedFloatingPointRange<Double> from ClosedFloatingPointRange<Double>
2021-03-11 23:56:03,726 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], @kotlin.SinceKotlin public operator fun kotlin.Double.rangeTo(that: kotlin.Double): kotlin.ranges.ClosedFloatingPointRange<kotlin.Double> defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@c85cbf7]]
2021-03-11 23:56:03,726 [main:149] - GENERATING call of type @kotlin.SinceKotlin public operator fun kotlin.Double.rangeTo(that: kotlin.Double): kotlin.ranges.ClosedFloatingPointRange<kotlin.Double> defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@c85cbf7]
2021-03-11 23:56:03,808 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:03,809 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)
2021-03-11 23:56:03,809 [main:61] - replacement of DOUBLE_RANGE of type ClosedFloatingPointRange<Double> is (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)
2021-03-11 23:56:03,893 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:03,894 [main:66] - Compilation checking started
2021-03-11 23:56:04,330 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:04,332 [main:53] - replacing ((PZERO !in COMPARABLE_RANGE), Boolean)
2021-03-11 23:56:04,333 [main:50] - replacing (PZERO !in COMPARABLE_RANGE) Boolean
2021-03-11 23:56:04,333 [main:54] - Getting value of type Boolean
2021-03-11 23:56:04,432 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:04,432 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 23:56:04,433 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:04,812 [main:67] - randomType = Collection<ArrayList<Int>>?
2021-03-11 23:56:04,814 [main:106] - GETTING Boolean from ClosedFloatingPointRange<Double>
2021-03-11 23:56:04,831 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@3cb2f9c9]]
2021-03-11 23:56:04,831 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@3cb2f9c9]
2021-03-11 23:56:04,958 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:04,959 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.equals("xjyqe")
2021-03-11 23:56:04,959 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@62032410]]
2021-03-11 23:56:04,960 [main:149] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@62032410]
2021-03-11 23:56:04,960 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.isInfinite()
2021-03-11 23:56:04,960 [main:113] - Case = [public open fun contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@42306a87]]
2021-03-11 23:56:04,960 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@42306a87]
2021-03-11 23:56:05,048 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:05,049 [main:117] - GENERATED CALL = (DOUBLE_RANGE).contains(0.14568074104524809)
2021-03-11 23:56:05,049 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@4519a993]]
2021-03-11 23:56:05,049 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@4519a993]
2021-03-11 23:56:05,050 [main:117] - GENERATED CALL = (DOUBLE_RANGE).isEmpty()
2021-03-11 23:56:05,050 [main:113] - Case = [public open fun contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@42306a87], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@25a1888]]
2021-03-11 23:56:05,050 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@42306a87]
2021-03-11 23:56:05,133 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:05,133 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@25a1888]
2021-03-11 23:56:05,215 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:05,216 [main:117] - GENERATED CALL = (DOUBLE_RANGE).contains(0.035774143555478255).xor(true)
2021-03-11 23:56:05,216 [main:113] - Case = [public open fun contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@42306a87], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@e44af47]]
2021-03-11 23:56:05,216 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@42306a87]
2021-03-11 23:56:05,300 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:05,301 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@e44af47]
2021-03-11 23:56:05,434 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:05,436 [main:117] - GENERATED CALL = (DOUBLE_RANGE).contains(0.6361846162054574).or(false)
2021-03-11 23:56:05,439 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@652aa08a]]
2021-03-11 23:56:05,439 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@652aa08a]
2021-03-11 23:56:05,559 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:05,559 [main:117] - GENERATED CALL = (DOUBLE_RANGE).equals("wjdtb")
2021-03-11 23:56:05,560 [main:113] - Case = [public open fun contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@42306a87], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]]
2021-03-11 23:56:05,560 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@42306a87]
2021-03-11 23:56:05,642 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:05,643 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]
2021-03-11 23:56:05,643 [main:117] - GENERATED CALL = (DOUBLE_RANGE).contains(0.49522863096572134).not()
2021-03-11 23:56:05,643 [main:113] - Case = [public open fun contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@42306a87], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7dfc1f89]]
2021-03-11 23:56:05,643 [main:149] - GENERATING call of type public open fun contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedSimpleFunctionDescriptor@42306a87]
2021-03-11 23:56:05,729 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:05,730 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7dfc1f89]
2021-03-11 23:56:05,812 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:05,813 [main:117] - GENERATED CALL = (DOUBLE_RANGE).contains(0.27678112346108164).equals("wppof")
2021-03-11 23:56:05,813 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@95d1b2c]]
2021-03-11 23:56:05,813 [main:149] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@95d1b2c]
2021-03-11 23:56:05,814 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.isFinite()
2021-03-11 23:56:05,814 [main:61] - replacement of (PZERO !in COMPARABLE_RANGE) of type Boolean is (DOUBLE_RANGE).endInclusive.isInfinite()
2021-03-11 23:56:05,910 [main:33] - Trying to replace Element(PARENTHESIZED) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:05,910 [main:66] - Compilation checking started
2021-03-11 23:56:06,303 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:06,305 [main:53] - replacing (DOUBLE_RANGE, ClosedFloatingPointRange<Double>)
2021-03-11 23:56:06,305 [main:50] - replacing DOUBLE_RANGE ClosedFloatingPointRange<Double>
2021-03-11 23:56:06,305 [main:54] - Getting value of type ClosedFloatingPointRange<Double>
2021-03-11 23:56:06,390 [main:302] - generating value of type = ClosedFloatingPointRange<Double> false depth = 0
2021-03-11 23:56:06,395 [main:58] - GENERATED VALUE OF TYPE ClosedFloatingPointRange<Double> = 
2021-03-11 23:56:06,960 [main:67] - randomType = Function2<HashMap<HashSet<Int>, Double>?, HashSet<String>, Float>
2021-03-11 23:56:06,961 [main:106] - GETTING ClosedFloatingPointRange<Double> from ClosedRange<Comparable<Any>>
2021-03-11 23:56:06,972 [main:106] - GETTING ClosedFloatingPointRange<Double> from Comparable<Any>
2021-03-11 23:56:06,981 [main:106] - GETTING ClosedFloatingPointRange<Double> from Comparable<Any>
2021-03-11 23:56:06,981 [main:106] - GETTING ClosedFloatingPointRange<Double> from ClosedFloatingPointRange<Double>
2021-03-11 23:56:06,996 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], @kotlin.SinceKotlin public operator fun kotlin.Double.rangeTo(that: kotlin.Double): kotlin.ranges.ClosedFloatingPointRange<kotlin.Double> defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@c85cbf7]]
2021-03-11 23:56:06,996 [main:149] - GENERATING call of type @kotlin.SinceKotlin public operator fun kotlin.Double.rangeTo(that: kotlin.Double): kotlin.ranges.ClosedFloatingPointRange<kotlin.Double> defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@c85cbf7]
2021-03-11 23:56:07,077 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:07,078 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.rangeTo(0.5764533549869867)
2021-03-11 23:56:07,078 [main:61] - replacement of DOUBLE_RANGE of type ClosedFloatingPointRange<Double> is DOUBLE_RANGE
2021-03-11 23:56:07,157 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 23:56:07,158 [main:53] - replacing (0.0, Double)
2021-03-11 23:56:07,158 [main:50] - replacing 0.0 Double
2021-03-11 23:56:07,158 [main:54] - Getting value of type Double
2021-03-11 23:56:07,256 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:07,257 [main:58] - GENERATED VALUE OF TYPE Double = 0.21689624545859088
2021-03-11 23:56:07,257 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:07,457 [main:67] - randomType = Long?
2021-03-11 23:56:07,536 [main:302] - generating value of type = Long true depth = 0
2021-03-11 23:56:07,576 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7da45702]
2021-03-11 23:56:07,654 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:07,655 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@e2f62ea]
2021-03-11 23:56:07,760 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 23:56:07,761 [main:78] - Generated call from random type = (8624155493965140454)?.div(0.4070818878894815).times(-86)
2021-03-11 23:56:07,763 [main:106] - GETTING Double from ClosedFloatingPointRange<Double>
2021-03-11 23:56:07,783 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public fun kotlin.Double.coerceAtLeast(minimumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@631e9827]]
2021-03-11 23:56:07,784 [main:149] - GENERATING call of type public fun kotlin.Double.coerceAtLeast(minimumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@631e9827]
2021-03-11 23:56:07,871 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:07,872 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.coerceAtLeast(0.43021833690265443)
2021-03-11 23:56:07,872 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@10732713]]
2021-03-11 23:56:07,872 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@10732713]
2021-03-11 23:56:07,952 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 23:56:07,954 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.rem(79)
2021-03-11 23:56:07,954 [main:113] - Case = [public abstract val start: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@3c7f2eb0]]
2021-03-11 23:56:07,954 [main:117] - GENERATED CALL = (DOUBLE_RANGE).start
2021-03-11 23:56:07,954 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@bb6af04]]
2021-03-11 23:56:07,954 [main:149] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@bb6af04]
2021-03-11 23:56:07,955 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.toDouble()
2021-03-11 23:56:07,955 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], @kotlin.SinceKotlin public val kotlin.Double.ulp: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@17e51302]]
2021-03-11 23:56:07,956 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.ulp
2021-03-11 23:56:07,956 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@42711887]]
2021-03-11 23:56:07,956 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextDown(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@42711887]
2021-03-11 23:56:07,956 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.nextDown()
2021-03-11 23:56:07,956 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], @kotlin.SinceKotlin public fun kotlin.Double.withSign(sign: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@3bc5b4c]]
2021-03-11 23:56:07,956 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.withSign(sign: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@3bc5b4c]
2021-03-11 23:56:08,044 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:08,046 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.withSign(0.8548513289092333)
2021-03-11 23:56:08,046 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public final operator fun inc(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46a42b5b]]
2021-03-11 23:56:08,046 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46a42b5b]
2021-03-11 23:56:08,047 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.inc()
2021-03-11 23:56:08,047 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Double.sign: kotlin.Double defined in kotlin.math[DeserializedPropertyDescriptor@6bc0f4e3]]
2021-03-11 23:56:08,048 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.sign
2021-03-11 23:56:08,048 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4a00533a]]
2021-03-11 23:56:08,048 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4a00533a]
2021-03-11 23:56:08,133 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 23:56:08,134 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.minus(56)
2021-03-11 23:56:08,134 [main:61] - replacement of 0.0 of type Double is (DOUBLE_RANGE).endInclusive.minus(56)
2021-03-11 23:56:08,229 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:08,230 [main:66] - Compilation checking started
2021-03-11 23:56:08,480 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -(DOUBLE_RANGE).endInclusive.minus(56)

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:08,481 [main:53] - replacing (0.0 as Comparable<Any>, Comparable<Any>)
2021-03-11 23:56:08,481 [main:50] - replacing 0.0 as Comparable<Any> Comparable<Any>
2021-03-11 23:56:08,481 [main:54] - Getting value of type Comparable<Any>
2021-03-11 23:56:08,571 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:08,576 [main:58] - GENERATED VALUE OF TYPE Comparable<Any> = 0.10356712f
2021-03-11 23:56:08,576 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:08,666 [main:67] - randomType = Long
2021-03-11 23:56:08,748 [main:302] - generating value of type = Long true depth = 0
2021-03-11 23:56:08,784 [main:106] - GETTING Comparable<Any> from ClosedFloatingPointRange<Double>
2021-03-11 23:56:08,798 [main:106] - GETTING Comparable<Any> from Comparable<Any>
2021-03-11 23:56:08,805 [main:61] - replacement of 0.0 as Comparable<Any> of type Comparable<Any> is 0.10356712f
2021-03-11 23:56:08,902 [main:33] - Trying to replace Element(BINARY_WITH_TYPE) on Element(FLOAT_CONSTANT)
2021-03-11 23:56:08,903 [main:66] - Compilation checking started
2021-03-11 23:56:09,163 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.10356712f
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:09,164 [main:53] - replacing (NZERO, Comparable<Any>)
2021-03-11 23:56:09,164 [main:50] - replacing NZERO Comparable<Any>
2021-03-11 23:56:09,164 [main:54] - Getting value of type Comparable<Any>
2021-03-11 23:56:09,248 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:09,253 [main:58] - GENERATED VALUE OF TYPE Comparable<Any> = 1053607597.toUInt()
2021-03-11 23:56:09,253 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:09,340 [main:67] - randomType = Long
2021-03-11 23:56:09,419 [main:302] - generating value of type = Long true depth = 0
2021-03-11 23:56:09,451 [main:106] - GETTING Comparable<Any> from Comparable<Any>
2021-03-11 23:56:09,456 [main:61] - replacement of NZERO of type Comparable<Any> is 1053607597.toUInt()
2021-03-11 23:56:09,547 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:09,548 [main:66] - Compilation checking started
2021-03-11 23:56:09,804 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. 1053607597.toUInt()

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:09,805 [main:53] - replacing ((-(25588).toDouble().dec() in DOUBLE_RANGE), Boolean)
2021-03-11 23:56:09,805 [main:50] - replacing (-(25588).toDouble().dec() in DOUBLE_RANGE) Boolean
2021-03-11 23:56:09,805 [main:54] - Getting value of type Boolean
2021-03-11 23:56:09,887 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:09,888 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 23:56:09,888 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:09,975 [main:67] - randomType = Float
2021-03-11 23:56:10,061 [main:302] - generating value of type = Float true depth = 0
2021-03-11 23:56:10,105 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@78af5cec]
2021-03-11 23:56:10,105 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@2c94770]
2021-03-11 23:56:10,192 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:10,193 [main:78] - Generated call from random type = (0.27872992f).toFloat().equals("pfcap")
2021-03-11 23:56:10,194 [main:106] - GETTING Boolean from ClosedRange<Comparable<Any>>
2021-03-11 23:56:10,204 [main:113] - Case = [public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@42edcb56]]
2021-03-11 23:56:10,204 [main:149] - GENERATING call of type public open fun isEmpty(): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@42edcb56]
2021-03-11 23:56:10,204 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).isEmpty()
2021-03-11 23:56:10,205 [main:113] - Case = [public abstract val endInclusive: kotlin.Comparable<kotlin.Any> defined in kotlin.ranges.ClosedRange[DeserializedPropertyDescriptor@4938a200], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]]
2021-03-11 23:56:10,205 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:56:10,315 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).endInclusive.equals(null)
2021-03-11 23:56:10,315 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.jvm.JvmName public operator fun kotlin.ranges.ClosedRange<kotlin.Byte>.contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@44457c4d]]
2021-03-11 23:56:10,315 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin @kotlin.jvm.JvmName public operator fun kotlin.ranges.ClosedRange<kotlin.Byte>.contains(value: kotlin.Double): kotlin.Boolean defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@44457c4d]
2021-03-11 23:56:10,405 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:10,406 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(0.5771127145885186)
2021-03-11 23:56:10,406 [main:113] - Case = [public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@158f4c22]]
2021-03-11 23:56:10,406 [main:149] - GENERATING call of type public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b]
2021-03-11 23:56:10,496 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:10,501 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@158f4c22]
2021-03-11 23:56:10,601 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:10,602 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(1395825178.toUInt()).and(false)
2021-03-11 23:56:10,602 [main:113] - Case = [public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@25a1888]]
2021-03-11 23:56:10,602 [main:149] - GENERATING call of type public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b]
2021-03-11 23:56:10,602 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@25a1888]
2021-03-11 23:56:10,688 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:10,688 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(PZERO).xor(true)
2021-03-11 23:56:10,688 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@3a307611]]
2021-03-11 23:56:10,689 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@3a307611]
2021-03-11 23:56:10,771 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:10,772 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).equals("ouzmv")
2021-03-11 23:56:10,772 [main:113] - Case = [public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7dfc1f89]]
2021-03-11 23:56:10,772 [main:149] - GENERATING call of type public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b]
2021-03-11 23:56:10,772 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7dfc1f89]
2021-03-11 23:56:10,854 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:10,854 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(PZERO).equals("wergf")
2021-03-11 23:56:10,854 [main:113] - Case = [public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@e44af47]]
2021-03-11 23:56:10,854 [main:149] - GENERATING call of type public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b]
2021-03-11 23:56:10,934 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:11,050 [main:43] - GENERATING CALL OF fun <E> Enum(name: kotlin.String, ordinal: kotlin.Int): Comparable<Any> = TODO()
2021-03-11 23:56:11,052 [main:61] - WITHOUT TYPE PARAMS = fun <E> Enum(name: kotlin.String, ordinal: kotlin.Int): Comparable<Any> = TODO()
2021-03-11 23:56:11,344 [main:302] - generating value of type = String true depth = 3
2021-03-11 23:56:11,345 [main:302] - generating value of type = Int true depth = 3
2021-03-11 23:56:11,345 [main:95] - GENERATED = Enum<Enum<E>>("fbelk", 1310978259)
2021-03-11 23:56:11,346 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@e44af47]
2021-03-11 23:56:11,424 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:11,424 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(Enum<Enum<E>>("fbelk", 1310978259)).or(false)
2021-03-11 23:56:11,425 [main:113] - Case = [public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]]
2021-03-11 23:56:11,425 [main:149] - GENERATING call of type public open operator fun contains(value: kotlin.Comparable<kotlin.Any>): kotlin.Boolean defined in kotlin.ranges.ClosedRange[DeserializedSimpleFunctionDescriptor@7f8c7c3b]
2021-03-11 23:56:11,504 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:11,511 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]
2021-03-11 23:56:11,511 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).contains(-935853426).not()
2021-03-11 23:56:11,511 [main:61] - replacement of (-(25588).toDouble().dec() in DOUBLE_RANGE) of type Boolean is (COMPARABLE_RANGE).contains(1395825178.toUInt()).and(false)
2021-03-11 23:56:11,597 [main:33] - Trying to replace Element(PARENTHESIZED) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:11,597 [main:66] - Compilation checking started
2021-03-11 23:56:11,812 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(COMPARABLE_RANGE).contains(1395825178.toUInt()).and(false)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:11,812 [main:53] - replacing (COMPARABLE_RANGE, ClosedRange<Comparable<Any>>)
2021-03-11 23:56:11,812 [main:50] - replacing COMPARABLE_RANGE ClosedRange<Comparable<Any>>
2021-03-11 23:56:11,812 [main:54] - Getting value of type ClosedRange<Comparable<Any>>
2021-03-11 23:56:11,906 [main:302] - generating value of type = ClosedRange<Comparable<Any>> false depth = 0
2021-03-11 23:56:11,992 [main:43] - GENERATING CALL OF fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): ClosedRange<Comparable<Any>> = TODO()
2021-03-11 23:56:11,993 [main:61] - WITHOUT TYPE PARAMS = fun LongRange(start: kotlin.Long, endInclusive: kotlin.Long): ClosedRange<Comparable<Any>> = TODO()
2021-03-11 23:56:12,254 [main:302] - generating value of type = Long true depth = 3
2021-03-11 23:56:12,255 [main:302] - generating value of type = Long true depth = 3
2021-03-11 23:56:12,255 [main:95] - GENERATED = LongRange(261372345946572844, 1197941147617011927)
2021-03-11 23:56:12,255 [main:58] - GENERATED VALUE OF TYPE ClosedRange<Comparable<Any>> = LongRange(261372345946572844, 1197941147617011927)
2021-03-11 23:56:12,256 [main:61] - GENERATED IS CALL =true
2021-03-11 23:56:12,628 [main:67] - randomType = LinkedHashSet<Short?>?
2021-03-11 23:56:12,718 [main:302] - generating value of type = LinkedHashSet<Short?> false depth = 0
2021-03-11 23:56:12,800 [main:43] - GENERATING CALL OF fun <E> LinkedHashSet(initialCapacity: kotlin.Int, loadFactor: kotlin.Float): LinkedHashSet<Short?> = TODO()
2021-03-11 23:56:12,801 [main:61] - WITHOUT TYPE PARAMS = fun <E> LinkedHashSet(initialCapacity: kotlin.Int, loadFactor: kotlin.Float): LinkedHashSet<Short?> = TODO()
2021-03-11 23:56:13,045 [main:302] - generating value of type = Int true depth = 3
2021-03-11 23:56:13,045 [main:302] - generating value of type = Float true depth = 3
2021-03-11 23:56:13,046 [main:95] - GENERATED = LinkedHashSet<Short?>(22190021, 0.72109747f)
2021-03-11 23:56:13,261 [main:61] - replacement of COMPARABLE_RANGE of type ClosedRange<Comparable<Any>> is LongRange(261372345946572844, 1197941147617011927)
2021-03-11 23:56:13,345 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 23:56:13,346 [main:53] - replacing (NZERO, Comparable<Any>)
2021-03-11 23:56:13,347 [main:50] - replacing NZERO Comparable<Any>
2021-03-11 23:56:13,347 [main:54] - Getting value of type Comparable<Any>
2021-03-11 23:56:13,443 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:13,448 [main:58] - GENERATED VALUE OF TYPE Comparable<Any> = 32136.toUShort()
2021-03-11 23:56:13,449 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:13,623 [main:67] - randomType = Array<UShort>
2021-03-11 23:56:13,702 [main:302] - generating value of type = Array<UShort> false depth = 0
2021-03-11 23:56:13,787 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: UShort): Array<UShort> = TODO()
2021-03-11 23:56:13,788 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: UShort): Array<UShort> = TODO()
2021-03-11 23:56:13,872 [main:302] - generating value of type = UShort true depth = 3
2021-03-11 23:56:13,872 [main:95] - GENERATED = arrayOf<UShort>(26660.toUShort())
2021-03-11 23:56:13,892 [main:106] - GETTING Comparable<Any> from ClosedFloatingPointRange<Double>
2021-03-11 23:56:13,908 [main:106] - GETTING Comparable<Any> from ClosedRange<Comparable<Any>>
2021-03-11 23:56:13,918 [main:113] - Case = [public abstract val start: kotlin.Comparable<kotlin.Any> defined in kotlin.ranges.ClosedRange[DeserializedPropertyDescriptor@459c68db]]
2021-03-11 23:56:13,919 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).start
2021-03-11 23:56:13,919 [main:113] - Case = [public abstract val endInclusive: kotlin.Comparable<kotlin.Any> defined in kotlin.ranges.ClosedRange[DeserializedPropertyDescriptor@4938a200]]
2021-03-11 23:56:13,919 [main:117] - GENERATED CALL = (COMPARABLE_RANGE).endInclusive
2021-03-11 23:56:13,919 [main:61] - replacement of NZERO of type Comparable<Any> is (COMPARABLE_RANGE).endInclusive
2021-03-11 23:56:14,000 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:14,000 [main:66] - Compilation checking started
2021-03-11 23:56:14,337 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if ((COMPARABLE_RANGE).endInclusive in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:14,337 [main:53] - replacing (-0.0, Double)
2021-03-11 23:56:14,337 [main:50] - replacing -0.0 Double
2021-03-11 23:56:14,337 [main:54] - Getting value of type Double
2021-03-11 23:56:14,429 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:14,430 [main:58] - GENERATED VALUE OF TYPE Double = 0.5708284447468922
2021-03-11 23:56:14,430 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:14,514 [main:67] - randomType = UInt
2021-03-11 23:56:14,595 [main:302] - generating value of type = UInt true depth = 0
2021-03-11 23:56:14,649 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@425d9e33]
2021-03-11 23:56:14,728 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 23:56:14,729 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@61c1b0e3]
2021-03-11 23:56:14,805 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:14,806 [main:78] - Generated call from random type = (1703957071.toUInt()).compareTo(12.toUByte()).rem(0.12218670907187534)
2021-03-11 23:56:14,807 [main:106] - GETTING Double from ClosedFloatingPointRange<Double>
2021-03-11 23:56:14,818 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public final operator fun unaryMinus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@605e50be]]
2021-03-11 23:56:14,818 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@605e50be]
2021-03-11 23:56:14,819 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.unaryMinus()
2021-03-11 23:56:14,819 [main:113] - Case = [public abstract val start: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@3c7f2eb0]]
2021-03-11 23:56:14,819 [main:117] - GENERATED CALL = (DOUBLE_RANGE).start
2021-03-11 23:56:14,819 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public fun kotlin.Double.coerceAtLeast(minimumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@631e9827]]
2021-03-11 23:56:14,819 [main:149] - GENERATING call of type public fun kotlin.Double.coerceAtLeast(minimumValue: kotlin.Double): kotlin.Double defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@631e9827]
2021-03-11 23:56:14,895 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:14,895 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.coerceAtLeast(0.37943101346377517)
2021-03-11 23:56:14,896 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public final operator fun inc(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46a42b5b]]
2021-03-11 23:56:14,896 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@46a42b5b]
2021-03-11 23:56:14,896 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.inc()
2021-03-11 23:56:14,896 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public final operator fun div(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@66249c29]]
2021-03-11 23:56:14,896 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@66249c29]
2021-03-11 23:56:14,974 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 23:56:14,975 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.div(-61)
2021-03-11 23:56:14,975 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4a00533a]]
2021-03-11 23:56:14,975 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@4a00533a]
2021-03-11 23:56:15,052 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 23:56:15,053 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.minus(-8)
2021-03-11 23:56:15,053 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6]]
2021-03-11 23:56:15,053 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive
2021-03-11 23:56:15,053 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], public final operator fun times(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@e2f62ea]]
2021-03-11 23:56:15,053 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@e2f62ea]
2021-03-11 23:56:15,184 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 23:56:15,185 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.times(117)
2021-03-11 23:56:15,185 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], @kotlin.SinceKotlin public fun kotlin.Double.withSign(sign: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@3bc5b4c]]
2021-03-11 23:56:15,186 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.withSign(sign: kotlin.Double): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@3bc5b4c]
2021-03-11 23:56:15,319 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:15,320 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.withSign(0.7522745000869078)
2021-03-11 23:56:15,321 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@3d676e41]]
2021-03-11 23:56:15,321 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Double.nextUp(): kotlin.Double defined in kotlin.math[DeserializedSimpleFunctionDescriptor@3d676e41]
2021-03-11 23:56:15,321 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.nextUp()
2021-03-11 23:56:15,321 [main:61] - replacement of -0.0 of type Double is (DOUBLE_RANGE).endInclusive.minus(-8)
2021-03-11 23:56:15,409 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:15,410 [main:66] - Compilation checking started
2021-03-11 23:56:15,606 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. (DOUBLE_RANGE).endInclusive.minus(-8)

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if ((COMPARABLE_RANGE).endInclusive in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:15,607 [main:53] - replacing (0.0, Double)
2021-03-11 23:56:15,608 [main:50] - replacing 0.0 Double
2021-03-11 23:56:15,608 [main:54] - Getting value of type Double
2021-03-11 23:56:15,685 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:15,685 [main:58] - GENERATED VALUE OF TYPE Double = 0.039151965808056244
2021-03-11 23:56:15,685 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:15,862 [main:67] - randomType = ULong?
2021-03-11 23:56:15,942 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 23:56:15,998 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2b73cdcc]
2021-03-11 23:56:15,998 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Double defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@605e50be]
2021-03-11 23:56:15,998 [main:78] - Generated call from random type = (1062641543074259109.toULong())?.toDouble().unaryMinus()
2021-03-11 23:56:15,998 [main:61] - replacement of 0.0 of type Double is (1062641543074259109.toULong())?.toDouble().unaryMinus()
2021-03-11 23:56:16,079 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:16,079 [main:66] - Compilation checking started
2021-03-11 23:56:16,463 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if ((COMPARABLE_RANGE).endInclusive in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:16,464 [main:53] - replacing (PZERO, Comparable<Any>)
2021-03-11 23:56:16,464 [main:50] - replacing PZERO Comparable<Any>
2021-03-11 23:56:16,464 [main:54] - Getting value of type Comparable<Any>
2021-03-11 23:56:16,548 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:16,553 [main:58] - GENERATED VALUE OF TYPE Comparable<Any> = 0.18301404f
2021-03-11 23:56:16,553 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:16,721 [main:67] - randomType = ULong?
2021-03-11 23:56:16,815 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 23:56:16,849 [main:61] - replacement of PZERO of type Comparable<Any> is 0.18301404f
2021-03-11 23:56:16,933 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(FLOAT_CONSTANT)
2021-03-11 23:56:16,934 [main:53] - replacing (0.0 as Comparable<Any>, Comparable<Any>)
2021-03-11 23:56:16,934 [main:50] - replacing 0.0 as Comparable<Any> Comparable<Any>
2021-03-11 23:56:16,934 [main:54] - Getting value of type Comparable<Any>
2021-03-11 23:56:17,012 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:17,016 [main:58] - GENERATED VALUE OF TYPE Comparable<Any> = 811769002243784109.toULong()
2021-03-11 23:56:17,017 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:17,181 [main:67] - randomType = HashSet<UByte>
2021-03-11 23:56:17,258 [main:302] - generating value of type = HashSet<UByte> false depth = 0
2021-03-11 23:56:17,338 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): HashSet<UByte> = TODO()
2021-03-11 23:56:17,339 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): HashSet<UByte> = TODO()
2021-03-11 23:56:17,420 [main:95] - GENERATED = linkedSetOf<UByte>()
2021-03-11 23:56:17,545 [main:106] - GETTING Comparable<Any> from ClosedFloatingPointRange<Double>
2021-03-11 23:56:17,559 [main:106] - GETTING Comparable<Any> from Comparable<Any>
2021-03-11 23:56:17,566 [main:61] - replacement of 0.0 as Comparable<Any> of type Comparable<Any> is 811769002243784109.toULong()
2021-03-11 23:56:17,645 [main:33] - Trying to replace Element(BINARY_WITH_TYPE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:17,645 [main:66] - Compilation checking started
2021-03-11 23:56:17,888 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 811769002243784109.toULong()
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if ((COMPARABLE_RANGE).endInclusive in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:17,890 [main:53] - replacing ("fail 3 in Comparable", String)
2021-03-11 23:56:17,890 [main:50] - replacing "fail 3 in Comparable" String
2021-03-11 23:56:17,890 [main:54] - Getting value of type String
2021-03-11 23:56:17,989 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:17,989 [main:58] - GENERATED VALUE OF TYPE String = "eeoie"
2021-03-11 23:56:17,989 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:18,236 [main:67] - randomType = ArrayList<Byte?>
2021-03-11 23:56:18,315 [main:302] - generating value of type = ArrayList<Byte?> false depth = 0
2021-03-11 23:56:18,411 [main:43] - GENERATING CALL OF fun <E> ArrayList(): ArrayList<Byte?> = TODO()
2021-03-11 23:56:18,412 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): ArrayList<Byte?> = TODO()
2021-03-11 23:56:18,495 [main:95] - GENERATED = ArrayList<Byte?>()
2021-03-11 23:56:18,666 [main:149] - GENERATING call of type protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.ArrayList[DeserializedSimpleFunctionDescriptor@20c8bb7f]
2021-03-11 23:56:18,667 [main:149] - GENERATING call of type public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@77530cf7]
2021-03-11 23:56:18,747 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 23:56:18,829 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 23:56:18,908 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 23:56:18,987 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:19,066 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-11 23:56:19,165 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-11 23:56:19,165 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-11 23:56:19,171 [main:78] - Generated call from random type = (ArrayList<Byte?>()).toArray().joinToString("xylws", "zqcmz", "jtofi", 2056871022, StringBuilder(), {a: T -> "zigcd"})
2021-03-11 23:56:19,171 [main:106] - GETTING String from ClosedRange<Comparable<Any>>
2021-03-11 23:56:19,182 [main:106] - GETTING String from Comparable<Any>
2021-03-11 23:56:19,189 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1d70dc00], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]]
2021-03-11 23:56:19,189 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1d70dc00]
2021-03-11 23:56:19,266 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:19,267 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]
2021-03-11 23:56:19,342 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:19,343 [main:117] - GENERATED CALL = (NZERO).compareTo("aumhg").toString(-559563149)
2021-03-11 23:56:19,343 [main:61] - replacement of "fail 3 in Comparable" of type String is (NZERO).compareTo("aumhg").toString(-559563149)
2021-03-11 23:56:19,419 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:19,419 [main:66] - Compilation checking started
2021-03-11 23:56:19,779 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if ((COMPARABLE_RANGE).endInclusive in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:19,779 [main:53] - replacing (0.0 .. -0.0, ClosedFloatingPointRange<Double>)
2021-03-11 23:56:19,779 [main:50] - replacing 0.0 .. -0.0 ClosedFloatingPointRange<Double>
2021-03-11 23:56:19,779 [main:54] - Getting value of type ClosedFloatingPointRange<Double>
2021-03-11 23:56:19,857 [main:302] - generating value of type = ClosedFloatingPointRange<Double> false depth = 0
2021-03-11 23:56:19,861 [main:58] - GENERATED VALUE OF TYPE ClosedFloatingPointRange<Double> = 
2021-03-11 23:56:19,942 [main:67] - randomType = ULong?
2021-03-11 23:56:20,020 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 23:56:20,059 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@46f4db33]
2021-03-11 23:56:20,060 [main:149] - GENERATING call of type @kotlin.SinceKotlin public operator fun kotlin.Double.rangeTo(that: kotlin.Double): kotlin.ranges.ClosedFloatingPointRange<kotlin.Double> defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@c85cbf7]
2021-03-11 23:56:20,155 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:20,156 [main:78] - Generated call from random type = (3489329803667572718.toULong())?.toDouble().rangeTo(0.481123818773195)
2021-03-11 23:56:20,156 [main:106] - GETTING ClosedFloatingPointRange<Double> from ClosedFloatingPointRange<Double>
2021-03-11 23:56:20,173 [main:113] - Case = [public abstract val endInclusive: kotlin.Double defined in kotlin.ranges.ClosedFloatingPointRange[DeserializedPropertyDescriptor@27546db6], @kotlin.SinceKotlin public operator fun kotlin.Double.rangeTo(that: kotlin.Double): kotlin.ranges.ClosedFloatingPointRange<kotlin.Double> defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@c85cbf7]]
2021-03-11 23:56:20,173 [main:149] - GENERATING call of type @kotlin.SinceKotlin public operator fun kotlin.Double.rangeTo(that: kotlin.Double): kotlin.ranges.ClosedFloatingPointRange<kotlin.Double> defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@c85cbf7]
2021-03-11 23:56:20,250 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:20,251 [main:117] - GENERATED CALL = (DOUBLE_RANGE).endInclusive.rangeTo(0.9235894329124202)
2021-03-11 23:56:20,251 [main:61] - replacement of 0.0 .. -0.0 of type ClosedFloatingPointRange<Double> is DOUBLE_RANGE
2021-03-11 23:56:20,330 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(REFERENCE_EXPRESSION)
2021-03-11 23:56:20,331 [main:66] - Compilation checking started
2021-03-11 23:56:20,538 [main:49] - Result = false
Text:
val DOUBLE_RANGE = DOUBLE_RANGE

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if (!(DOUBLE_RANGE).endInclusive.isInfinite()) return "fail 3 !in Comparable"
    if ((COMPARABLE_RANGE).endInclusive in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:20,540 [main:53] - replacing (!(DOUBLE_RANGE).endInclusive.isInfinite(), Boolean)
2021-03-11 23:56:20,540 [main:50] - replacing !(DOUBLE_RANGE).endInclusive.isInfinite() Boolean
2021-03-11 23:56:20,541 [main:54] - Getting value of type Boolean
2021-03-11 23:56:20,631 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:20,631 [main:58] - GENERATED VALUE OF TYPE Boolean = true
2021-03-11 23:56:20,631 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:20,712 [main:67] - randomType = Byte
2021-03-11 23:56:20,788 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 23:56:20,818 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@52d6e08c]
2021-03-11 23:56:20,894 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:20,895 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]
2021-03-11 23:56:20,895 [main:78] - Generated call from random type = (-54).equals("hdstz").not()
2021-03-11 23:56:20,896 [main:106] - GETTING Boolean from Comparable<Any>
2021-03-11 23:56:20,902 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]]
2021-03-11 23:56:20,902 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:56:20,979 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:20,980 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@27353d1c]
2021-03-11 23:56:20,980 [main:117] - GENERATED CALL = (PZERO).equals("thwzl").not()
2021-03-11 23:56:20,980 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@25a1888]]
2021-03-11 23:56:20,980 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:56:21,076 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:21,076 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@25a1888]
2021-03-11 23:56:21,153 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:21,154 [main:117] - GENERATED CALL = (PZERO).equals("hpqhy").xor(true)
2021-03-11 23:56:21,154 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@158f4c22]]
2021-03-11 23:56:21,154 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:56:21,230 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:21,231 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@158f4c22]
2021-03-11 23:56:21,307 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:21,308 [main:117] - GENERATED CALL = (PZERO).equals("nmdrq").and(false)
2021-03-11 23:56:21,308 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7dfc1f89]]
2021-03-11 23:56:21,308 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:56:21,383 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:21,384 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@7dfc1f89]
2021-03-11 23:56:21,461 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:21,461 [main:117] - GENERATED CALL = (PZERO).equals("stphf").equals("pmscm")
2021-03-11 23:56:21,461 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]]
2021-03-11 23:56:21,461 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:56:21,540 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:21,541 [main:117] - GENERATED CALL = (PZERO).equals("ehmlv")
2021-03-11 23:56:21,541 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@191df20e]]
2021-03-11 23:56:21,541 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:21,623 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:21,623 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@191df20e]
2021-03-11 23:56:21,700 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:21,700 [main:117] - GENERATED CALL = (PZERO).compareTo("frfsv").equals("gudet")
2021-03-11 23:56:21,700 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621], public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@e44af47]]
2021-03-11 23:56:21,701 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1ebb3621]
2021-03-11 23:56:21,777 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:21,777 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@e44af47]
2021-03-11 23:56:21,870 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:21,871 [main:117] - GENERATED CALL = (PZERO).equals("epazv").or(true)
2021-03-11 23:56:21,871 [main:61] - replacement of !(DOUBLE_RANGE).endInclusive.isInfinite() of type Boolean is (PZERO).equals("ehmlv")
2021-03-11 23:56:21,957 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:21,958 [main:66] - Compilation checking started
2021-03-11 23:56:22,269 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return "fail 3 !in Comparable"
    if ((COMPARABLE_RANGE).endInclusive in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:22,270 [main:53] - replacing (COMPARABLE_RANGE, ClosedRange<Comparable<Any>>)
2021-03-11 23:56:22,271 [main:50] - replacing COMPARABLE_RANGE ClosedRange<Comparable<Any>>
2021-03-11 23:56:22,271 [main:54] - Getting value of type ClosedRange<Comparable<Any>>
2021-03-11 23:56:22,350 [main:302] - generating value of type = ClosedRange<Comparable<Any>> false depth = 0
2021-03-11 23:56:22,430 [main:43] - GENERATING CALL OF fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): ClosedRange<Comparable<Any>> = TODO()
2021-03-11 23:56:22,431 [main:61] - WITHOUT TYPE PARAMS = fun IntRange(start: kotlin.Int, endInclusive: kotlin.Int): ClosedRange<Comparable<Any>> = TODO()
2021-03-11 23:56:22,667 [main:302] - generating value of type = Int true depth = 3
2021-03-11 23:56:22,667 [main:302] - generating value of type = Int true depth = 3
2021-03-11 23:56:22,668 [main:95] - GENERATED = IntRange(-1083415825, -690192243)
2021-03-11 23:56:22,668 [main:58] - GENERATED VALUE OF TYPE ClosedRange<Comparable<Any>> = IntRange(-1083415825, -690192243)
2021-03-11 23:56:22,668 [main:61] - GENERATED IS CALL =true
2021-03-11 23:56:22,669 [main:67] - randomType = Int
2021-03-11 23:56:22,761 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:22,797 [main:106] - GETTING ClosedRange<Comparable<Any>> from Comparable<Any>
2021-03-11 23:56:22,805 [main:106] - GETTING ClosedRange<Comparable<Any>> from ClosedFloatingPointRange<Double>
2021-03-11 23:56:22,817 [main:61] - replacement of COMPARABLE_RANGE of type ClosedRange<Comparable<Any>> is IntRange(-1083415825, -690192243)
2021-03-11 23:56:22,892 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 23:56:22,892 [main:66] - Compilation checking started
2021-03-11 23:56:23,224 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return "fail 3 !in Comparable"
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:23,225 [main:53] - replacing ((PZERO !in COMPARABLE_RANGE), Boolean)
2021-03-11 23:56:23,225 [main:50] - replacing (PZERO !in COMPARABLE_RANGE) Boolean
2021-03-11 23:56:23,225 [main:54] - Getting value of type Boolean
2021-03-11 23:56:23,352 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:23,352 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 23:56:23,352 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:23,464 [main:67] - randomType = UByte
2021-03-11 23:56:23,557 [main:302] - generating value of type = UByte true depth = 0
2021-03-11 23:56:23,596 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toDouble(): kotlin.Double defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@631a368c]
2021-03-11 23:56:23,597 [main:149] - GENERATING call of type public fun kotlin.Double.isFinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@95d1b2c]
2021-03-11 23:56:23,597 [main:78] - Generated call from random type = (62.toUByte()).toDouble().isFinite()
2021-03-11 23:56:23,597 [main:61] - replacement of (PZERO !in COMPARABLE_RANGE) of type Boolean is (62.toUByte()).toDouble().isFinite()
2021-03-11 23:56:23,683 [main:33] - Trying to replace Element(PARENTHESIZED) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:23,684 [main:53] - replacing ("fail 3 !in Comparable", String)
2021-03-11 23:56:23,685 [main:50] - replacing "fail 3 !in Comparable" String
2021-03-11 23:56:23,685 [main:54] - Getting value of type String
2021-03-11 23:56:23,775 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:23,776 [main:58] - GENERATED VALUE OF TYPE String = "sxyld"
2021-03-11 23:56:23,776 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:23,972 [main:67] - randomType = Byte?
2021-03-11 23:56:24,060 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 23:56:24,100 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@7c83eff1]
2021-03-11 23:56:24,185 [main:302] - generating value of type = Byte true depth = 0
2021-03-11 23:56:24,185 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]
2021-03-11 23:56:24,285 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:24,286 [main:78] - Generated call from random type = (-48)?.compareTo(-71).toString(-768540803)
2021-03-11 23:56:24,288 [main:106] - GETTING String from Comparable<Any>
2021-03-11 23:56:24,300 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]]
2021-03-11 23:56:24,300 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:24,409 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:24,409 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]
2021-03-11 23:56:24,518 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:24,519 [main:117] - GENERATED CALL = (PZERO).compareTo("delnw").toString(-1749029708)
2021-03-11 23:56:24,520 [main:61] - replacement of "fail 3 !in Comparable" of type String is (-48)?.compareTo(-71).toString(-768540803)
2021-03-11 23:56:24,615 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:24,615 [main:66] - Compilation checking started
2021-03-11 23:56:24,955 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:24,956 [main:53] - replacing (-0.0, Double)
2021-03-11 23:56:24,956 [main:50] - replacing -0.0 Double
2021-03-11 23:56:24,956 [main:54] - Getting value of type Double
2021-03-11 23:56:25,084 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:25,084 [main:58] - GENERATED VALUE OF TYPE Double = 0.8403158845534372
2021-03-11 23:56:25,084 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:25,085 [main:67] - randomType = String
2021-03-11 23:56:25,168 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:25,186 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@215c5c28]
2021-03-11 23:56:25,268 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:25,269 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edaff21]
2021-03-11 23:56:25,350 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:25,351 [main:78] - Generated call from random type = ("tguwi").compareTo("mxlhe").minus(0.9761838376346561)
2021-03-11 23:56:25,352 [main:106] - GETTING Double from Comparable<Any>
2021-03-11 23:56:25,358 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e9afb2a]]
2021-03-11 23:56:25,358 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:25,440 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:25,440 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e9afb2a]
2021-03-11 23:56:25,525 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:25,525 [main:117] - GENERATED CALL = (PZERO).compareTo("xftcp").div(0.2084365801061403)
2021-03-11 23:56:25,526 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a6dbab7]]
2021-03-11 23:56:25,526 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:25,609 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:25,609 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a6dbab7]
2021-03-11 23:56:25,691 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:25,692 [main:117] - GENERATED CALL = (PZERO).compareTo("eejrr").times(0.9822834893987544)
2021-03-11 23:56:25,692 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@61c1b0e3]]
2021-03-11 23:56:25,692 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:25,774 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:25,775 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@61c1b0e3]
2021-03-11 23:56:25,856 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:25,857 [main:117] - GENERATED CALL = (PZERO).compareTo("alwzq").rem(0.4832008425043052)
2021-03-11 23:56:25,857 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d76ccb3]]
2021-03-11 23:56:25,857 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:25,959 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:25,959 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d76ccb3]
2021-03-11 23:56:26,056 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:26,057 [main:117] - GENERATED CALL = (PZERO).compareTo("qheri").plus(0.13487021385083697)
2021-03-11 23:56:26,057 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edaff21]]
2021-03-11 23:56:26,057 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:26,144 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:26,144 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edaff21]
2021-03-11 23:56:26,226 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:26,227 [main:117] - GENERATED CALL = (PZERO).compareTo("bdobu").minus(0.9353364430601203)
2021-03-11 23:56:26,227 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54dc7b05]]
2021-03-11 23:56:26,227 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:26,312 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:26,313 [main:149] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54dc7b05]
2021-03-11 23:56:26,313 [main:117] - GENERATED CALL = (PZERO).compareTo("xmnob").toDouble()
2021-03-11 23:56:26,313 [main:61] - replacement of -0.0 of type Double is (PZERO).compareTo("xftcp").div(0.2084365801061403)
2021-03-11 23:56:26,395 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:26,396 [main:66] - Compilation checking started
2021-03-11 23:56:26,742 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:26,743 [main:53] - replacing ("fail 1 !in Double", String)
2021-03-11 23:56:26,743 [main:50] - replacing "fail 1 !in Double" String
2021-03-11 23:56:26,743 [main:54] - Getting value of type String
2021-03-11 23:56:26,828 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:26,829 [main:58] - GENERATED VALUE OF TYPE String = "ahjbo"
2021-03-11 23:56:26,829 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:27,298 [main:67] - randomType = Pair<Pair<UShort, String>, UByte>?
2021-03-11 23:56:27,379 [main:302] - generating value of type = Pair<Pair<UShort, String>, UByte> false depth = 0
2021-03-11 23:56:27,464 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Pair<UShort, String>, second: UByte): Pair<Pair<UShort, String>, UByte> = TODO()
2021-03-11 23:56:27,465 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Pair<UShort, String>, second: UByte): Pair<Pair<UShort, String>, UByte> = TODO()
2021-03-11 23:56:27,551 [main:302] - generating value of type = Pair<UShort, String> false depth = 3
2021-03-11 23:56:27,644 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: UShort, second: String): Pair<UShort, String> = TODO()
2021-03-11 23:56:27,645 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: UShort, second: String): Pair<UShort, String> = TODO()
2021-03-11 23:56:27,730 [main:302] - generating value of type = UShort true depth = 6
2021-03-11 23:56:27,731 [main:302] - generating value of type = String true depth = 6
2021-03-11 23:56:27,731 [main:95] - GENERATED = Pair<UShort, String>(6267.toUShort(), "vmxeu")
2021-03-11 23:56:27,731 [main:302] - generating value of type = UByte true depth = 3
2021-03-11 23:56:27,732 [main:95] - GENERATED = Pair<Pair<UShort, String>, UByte>(Pair<UShort, String>(6267.toUShort(), "vmxeu"), 19.toUByte())
2021-03-11 23:56:27,753 [main:149] - GENERATING call of type public final operator fun component2(): kotlin.String defined in kotlin.Pair[DeserializedSimpleFunctionDescriptor@29779212]
2021-03-11 23:56:27,754 [main:78] - Generated call from random type = (Pair<Pair<UShort, String>, UByte>(Pair<UShort, String>(6267.toUShort(), "vmxeu"), 19.toUByte()))?.first.component2()
2021-03-11 23:56:27,754 [main:106] - GETTING String from ClosedRange<Comparable<Any>>
2021-03-11 23:56:27,762 [main:106] - GETTING String from ClosedFloatingPointRange<Double>
2021-03-11 23:56:27,773 [main:106] - GETTING String from Comparable<Any>
2021-03-11 23:56:27,778 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1d70dc00], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]]
2021-03-11 23:56:27,778 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1d70dc00]
2021-03-11 23:56:27,880 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:27,881 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]
2021-03-11 23:56:27,973 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:27,974 [main:117] - GENERATED CALL = (NZERO).compareTo("ujwvu").toString(-205018270)
2021-03-11 23:56:27,974 [main:61] - replacement of "fail 1 !in Double" of type String is "ahjbo"
2021-03-11 23:56:28,055 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 23:56:28,056 [main:66] - Compilation checking started
2021-03-11 23:56:28,356 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "fail 4a !in Comparable"

    return "OK"
}


2021-03-11 23:56:28,357 [main:53] - replacing ("fail 1 !in Double", String)
2021-03-11 23:56:28,357 [main:50] - replacing "fail 1 !in Double" String
2021-03-11 23:56:28,357 [main:54] - Getting value of type String
2021-03-11 23:56:28,442 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:28,442 [main:58] - GENERATED VALUE OF TYPE String = "qloga"
2021-03-11 23:56:28,443 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:29,482 [main:67] - randomType = Function2<Long?, LinkedHashMap<List<ArrayDeque<Char?>?>?, Int?>?, UInt>
2021-03-11 23:56:29,482 [main:61] - replacement of "fail 1 !in Double" of type String is "qloga"
2021-03-11 23:56:29,564 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 23:56:29,566 [main:53] - replacing ("fail 4a !in Comparable", String)
2021-03-11 23:56:29,566 [main:50] - replacing "fail 4a !in Comparable" String
2021-03-11 23:56:29,566 [main:54] - Getting value of type String
2021-03-11 23:56:29,665 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:29,665 [main:58] - GENERATED VALUE OF TYPE String = "ranhn"
2021-03-11 23:56:29,665 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:29,848 [main:67] - randomType = ArrayDeque<Float>
2021-03-11 23:56:29,929 [main:302] - generating value of type = ArrayDeque<Float> false depth = 0
2021-03-11 23:56:30,014 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Float>): ArrayDeque<Float> = TODO()
2021-03-11 23:56:30,015 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Float>): ArrayDeque<Float> = TODO()
2021-03-11 23:56:30,185 [main:302] - generating value of type = Collection<Float> false depth = 3
2021-03-11 23:56:30,274 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Float>): Collection<Float> = TODO()
2021-03-11 23:56:30,275 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Float>): Collection<Float> = TODO()
2021-03-11 23:56:30,484 [main:302] - generating value of type = Collection<Float> false depth = 6
2021-03-11 23:56:30,574 [main:43] - GENERATING CALL OF fun <T> setOf(elements: Float): Collection<Float> = TODO()
2021-03-11 23:56:30,575 [main:61] - WITHOUT TYPE PARAMS = fun <T> setOf(elements: Float): Collection<Float> = TODO()
2021-03-11 23:56:30,658 [main:302] - generating value of type = Float true depth = 9
2021-03-11 23:56:30,659 [main:95] - GENERATED = setOf<Float>(0.24153203f)
2021-03-11 23:56:30,659 [main:95] - GENERATED = ArrayDeque<Float>(setOf<Float>(0.24153203f))
2021-03-11 23:56:30,659 [main:95] - GENERATED = ArrayDeque<Float>(ArrayDeque<Float>(setOf<Float>(0.24153203f)))
2021-03-11 23:56:30,812 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]
2021-03-11 23:56:30,894 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:30,894 [main:78] - Generated call from random type = (ArrayDeque<Float>(ArrayDeque<Float>(setOf<Float>(0.24153203f)))).size.toString(-429144537)
2021-03-11 23:56:30,895 [main:106] - GETTING String from ClosedRange<Comparable<Any>>
2021-03-11 23:56:30,903 [main:106] - GETTING String from Comparable<Any>
2021-03-11 23:56:30,909 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1d70dc00], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]]
2021-03-11 23:56:30,909 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@1d70dc00]
2021-03-11 23:56:30,989 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:30,990 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]
2021-03-11 23:56:31,070 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:31,071 [main:117] - GENERATED CALL = (NZERO).compareTo("piaoj").toString(609131944)
2021-03-11 23:56:31,071 [main:61] - replacement of "fail 4a !in Comparable" of type String is "ranhn"
2021-03-11 23:56:31,167 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-11 23:56:31,167 [main:66] - Compilation checking started
2021-03-11 23:56:31,469 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "ranhn"

    return "OK"
}


2021-03-11 23:56:31,469 [main:53] - replacing (!(DOUBLE_RANGE).endInclusive.isInfinite(), Boolean)
2021-03-11 23:56:31,469 [main:50] - replacing !(DOUBLE_RANGE).endInclusive.isInfinite() Boolean
2021-03-11 23:56:31,469 [main:54] - Getting value of type Boolean
2021-03-11 23:56:31,549 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:31,550 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 23:56:31,550 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:31,551 [main:67] - randomType = Double
2021-03-11 23:56:31,630 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:31,658 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@247c6867]
2021-03-11 23:56:31,659 [main:149] - GENERATING call of type public fun kotlin.Char.equals(other: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@a8f60d5]
2021-03-11 23:56:31,739 [main:302] - generating value of type = Char true depth = 0
2021-03-11 23:56:31,819 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:31,820 [main:78] - Generated call from random type = (0.01859828595968327).toChar().equals('âŽ¢', true)
2021-03-11 23:56:31,820 [main:61] - replacement of !(DOUBLE_RANGE).endInclusive.isInfinite() of type Boolean is (0.01859828595968327).toChar().equals('âŽ¢', true)
2021-03-11 23:56:31,900 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:31,900 [main:53] - replacing (0.0 as Comparable<Any>, Comparable<Any>)
2021-03-11 23:56:31,901 [main:50] - replacing 0.0 as Comparable<Any> Comparable<Any>
2021-03-11 23:56:31,901 [main:54] - Getting value of type Comparable<Any>
2021-03-11 23:56:31,983 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:31,987 [main:58] - GENERATED VALUE OF TYPE Comparable<Any> = 0.848873576777297
2021-03-11 23:56:31,988 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:31,989 [main:67] - randomType = String
2021-03-11 23:56:32,081 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:32,098 [main:106] - GETTING Comparable<Any> from Comparable<Any>
2021-03-11 23:56:32,103 [main:61] - replacement of 0.0 as Comparable<Any> of type Comparable<Any> is PZERO
2021-03-11 23:56:32,184 [main:33] - Trying to replace Element(BINARY_WITH_TYPE) on Element(REFERENCE_EXPRESSION)
2021-03-11 23:56:32,184 [main:66] - Compilation checking started
2021-03-11 23:56:32,363 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = PZERO
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return "fail 2 in Double"
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "ranhn"

    return "OK"
}


2021-03-11 23:56:32,365 [main:53] - replacing ("fail 2 in Double", String)
2021-03-11 23:56:32,365 [main:50] - replacing "fail 2 in Double" String
2021-03-11 23:56:32,365 [main:54] - Getting value of type String
2021-03-11 23:56:32,445 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:32,445 [main:58] - GENERATED VALUE OF TYPE String = "qmhpf"
2021-03-11 23:56:32,446 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:32,530 [main:67] - randomType = ULong?
2021-03-11 23:56:32,611 [main:302] - generating value of type = ULong true depth = 0
2021-03-11 23:56:32,649 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2111d449]
2021-03-11 23:56:32,649 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@724a3d3d]
2021-03-11 23:56:32,729 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:32,730 [main:78] - Generated call from random type = (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
2021-03-11 23:56:32,731 [main:106] - GETTING String from Comparable<Any>
2021-03-11 23:56:32,738 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]]
2021-03-11 23:56:32,739 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:32,835 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:32,835 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]
2021-03-11 23:56:32,919 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:32,919 [main:117] - GENERATED CALL = (PZERO).compareTo("dcxxl").toString(1948739496)
2021-03-11 23:56:32,919 [main:61] - replacement of "fail 2 in Double" of type String is (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
2021-03-11 23:56:33,011 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:33,012 [main:66] - Compilation checking started
2021-03-11 23:56:33,349 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "ranhn"

    return "OK"
}


2021-03-11 23:56:33,349 [main:53] - replacing (DOUBLE_RANGE, ClosedFloatingPointRange<Double>)
2021-03-11 23:56:33,349 [main:50] - replacing DOUBLE_RANGE ClosedFloatingPointRange<Double>
2021-03-11 23:56:33,349 [main:54] - Getting value of type ClosedFloatingPointRange<Double>
2021-03-11 23:56:33,431 [main:302] - generating value of type = ClosedFloatingPointRange<Double> false depth = 0
2021-03-11 23:56:33,434 [main:58] - GENERATED VALUE OF TYPE ClosedFloatingPointRange<Double> = 
2021-03-11 23:56:33,689 [main:67] - randomType = MutableMap<Char, UByte>
2021-03-11 23:56:33,689 [main:58] - Cant find and generate replacement for DOUBLE_RANGE type ClosedFloatingPointRange<Double>
2021-03-11 23:56:33,689 [main:53] - replacing (!(DOUBLE_RANGE).endInclusive.isInfinite(), Boolean)
2021-03-11 23:56:33,689 [main:50] - replacing !(DOUBLE_RANGE).endInclusive.isInfinite() Boolean
2021-03-11 23:56:33,689 [main:54] - Getting value of type Boolean
2021-03-11 23:56:33,772 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:33,772 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-11 23:56:33,773 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:33,773 [main:67] - randomType = Int
2021-03-11 23:56:33,855 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:56:33,885 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@292fcda]
2021-03-11 23:56:33,885 [main:149] - GENERATING call of type public fun kotlin.Char.isSurrogate(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@10f3868f]
2021-03-11 23:56:33,885 [main:78] - Generated call from random type = (1046315654).toChar().isSurrogate()
2021-03-11 23:56:33,885 [main:61] - replacement of !(DOUBLE_RANGE).endInclusive.isInfinite() of type Boolean is (1046315654).toChar().isSurrogate()
2021-03-11 23:56:33,966 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:33,966 [main:53] - replacing (NZERO, Comparable<Any>)
2021-03-11 23:56:33,966 [main:50] - replacing NZERO Comparable<Any>
2021-03-11 23:56:33,966 [main:54] - Getting value of type Comparable<Any>
2021-03-11 23:56:34,059 [main:302] - generating value of type = Comparable<Any> false depth = 0
2021-03-11 23:56:34,063 [main:58] - GENERATED VALUE OF TYPE Comparable<Any> = 0.15773736682352824
2021-03-11 23:56:34,064 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:34,064 [main:67] - randomType = String
2021-03-11 23:56:34,150 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:34,175 [main:61] - replacement of NZERO of type Comparable<Any> is 0.15773736682352824
2021-03-11 23:56:34,257 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(FLOAT_CONSTANT)
2021-03-11 23:56:34,258 [main:53] - replacing (0.0, Double)
2021-03-11 23:56:34,258 [main:50] - replacing 0.0 Double
2021-03-11 23:56:34,258 [main:54] - Getting value of type Double
2021-03-11 23:56:34,341 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:34,341 [main:58] - GENERATED VALUE OF TYPE Double = 0.8941109683354208
2021-03-11 23:56:34,341 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:34,342 [main:67] - randomType = Boolean
2021-03-11 23:56:34,421 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:34,432 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@36d4f8c1]
2021-03-11 23:56:34,512 [main:302] - generating value of type = Boolean true depth = 0
2021-03-11 23:56:34,513 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e9afb2a]
2021-03-11 23:56:34,595 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:34,595 [main:78] - Generated call from random type = (false).compareTo(false).div(0.6940174523989887)
2021-03-11 23:56:34,596 [main:106] - GETTING Double from Comparable<Any>
2021-03-11 23:56:34,602 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54dc7b05]]
2021-03-11 23:56:34,603 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:34,688 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:34,688 [main:149] - GENERATING call of type public open fun toDouble(): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@54dc7b05]
2021-03-11 23:56:34,688 [main:117] - GENERATED CALL = (PZERO).compareTo("amzjb").toDouble()
2021-03-11 23:56:34,689 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d76ccb3]]
2021-03-11 23:56:34,689 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:34,771 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:34,772 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d76ccb3]
2021-03-11 23:56:34,851 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:34,851 [main:117] - GENERATED CALL = (PZERO).compareTo("taxms").plus(0.8110125752162892)
2021-03-11 23:56:34,852 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@61c1b0e3]]
2021-03-11 23:56:34,852 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:34,946 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:34,947 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@61c1b0e3]
2021-03-11 23:56:35,037 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:35,038 [main:117] - GENERATED CALL = (PZERO).compareTo("ovptp").rem(0.6151252965615877)
2021-03-11 23:56:35,038 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a6dbab7]]
2021-03-11 23:56:35,038 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:35,121 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:35,122 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5a6dbab7]
2021-03-11 23:56:35,202 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:35,202 [main:117] - GENERATED CALL = (PZERO).compareTo("yqsxy").times(0.07240720532459388)
2021-03-11 23:56:35,202 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e9afb2a]]
2021-03-11 23:56:35,202 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:35,283 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:35,283 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e9afb2a]
2021-03-11 23:56:35,362 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:35,363 [main:117] - GENERATED CALL = (PZERO).compareTo("bmtjj").div(0.30930555696551965)
2021-03-11 23:56:35,363 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574], public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edaff21]]
2021-03-11 23:56:35,363 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@e184574]
2021-03-11 23:56:35,443 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:56:35,443 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edaff21]
2021-03-11 23:56:35,524 [main:302] - generating value of type = Double true depth = 0
2021-03-11 23:56:35,525 [main:117] - GENERATED CALL = (PZERO).compareTo("khueq").minus(0.11728789796749695)
2021-03-11 23:56:35,525 [main:61] - replacement of 0.0 of type Double is 0.8941109683354208
2021-03-11 23:56:35,606 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(FLOAT_CONSTANT)
2021-03-11 23:56:35,607 [main:66] - Compilation checking started
2021-03-11 23:56:36,087 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(true)) return "ranhn"

    return "OK"
}


2021-03-11 23:56:36,168 [main:119] - TRYING TO REPLACE CONSTANT true
2021-03-11 23:56:36,247 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 23:56:36,248 [main:66] - Compilation checking started
2021-03-11 23:56:36,546 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:36,546 [main:119] - TRYING TO REPLACE CONSTANT 1239787257
2021-03-11 23:56:36,641 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-11 23:56:36,642 [main:66] - Compilation checking started
2021-03-11 23:56:36,876 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(compareTo("xftcp"))
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(25588).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:36,876 [main:119] - TRYING TO REPLACE CONSTANT 25588
2021-03-11 23:56:36,966 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-11 23:56:36,966 [main:66] - Compilation checking started
2021-03-11 23:56:37,346 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(-1083415825).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo(0.6895084397675105)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:37,346 [main:119] - TRYING TO REPLACE CONSTANT 0.6895084397675105
2021-03-11 23:56:37,451 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:37,451 [main:66] - Compilation checking started
2021-03-11 23:56:37,759 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(1062641543074259109.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(-1083415825).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo((DOUBLE_RANGE).endInclusive)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:37,759 [main:119] - TRYING TO REPLACE CONSTANT 1062641543074259109
2021-03-11 23:56:37,845 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 23:56:37,845 [main:66] - Compilation checking started
2021-03-11 23:56:38,179 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(4401246270620509833.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(-1083415825).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo((DOUBLE_RANGE).endInclusive)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString(-559563149)
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:38,179 [main:119] - TRYING TO REPLACE CONSTANT 559563149
2021-03-11 23:56:38,261 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:38,262 [main:66] - Compilation checking started
2021-03-11 23:56:38,599 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(4401246270620509833.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(-1083415825).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo((DOUBLE_RANGE).endInclusive)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString((PZERO).compareTo("xftcp"))
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:38,600 [main:119] - TRYING TO REPLACE CONSTANT 1083415825
2021-03-11 23:56:38,682 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 23:56:38,683 [main:66] - Compilation checking started
2021-03-11 23:56:38,896 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(4401246270620509833.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(-1083415825).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo((DOUBLE_RANGE).endInclusive)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString((PZERO).compareTo("xftcp"))
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(compareTo("iqgff"), -690192243)) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:38,897 [main:119] - TRYING TO REPLACE CONSTANT 690192243
2021-03-11 23:56:38,985 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-11 23:56:38,986 [main:66] - Compilation checking started
2021-03-11 23:56:39,282 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(4401246270620509833.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(-1083415825).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo((DOUBLE_RANGE).endInclusive)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString((PZERO).compareTo("xftcp"))
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString(-768540803)
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, (PZERO).compareTo("iqgff"))) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:39,282 [main:119] - TRYING TO REPLACE CONSTANT 48
2021-03-11 23:56:39,364 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-11 23:56:39,365 [main:66] - Compilation checking started
2021-03-11 23:56:39,678 [main:119] - TRYING TO REPLACE CONSTANT 768540803
2021-03-11 23:56:39,760 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(PARENTHESIZED)
2021-03-11 23:56:39,761 [main:66] - Compilation checking started
2021-03-11 23:56:40,041 [main:53] - Result = true
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(4401246270620509833.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(-1083415825).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo((DOUBLE_RANGE).endInclusive)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString((PZERO).compareTo("xftcp"))
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString((-48))
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, (PZERO).compareTo("iqgff"))) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:40,041 [main:119] - TRYING TO REPLACE CONSTANT 71
2021-03-11 23:56:40,123 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 23:56:40,123 [main:66] - Compilation checking started
2021-03-11 23:56:40,330 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(4401246270620509833.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(-1083415825).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo((DOUBLE_RANGE).endInclusive)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString((PZERO).compareTo("xftcp"))
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(compareTo("xftcp")).toString((-48))
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, (PZERO).compareTo("iqgff"))) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:40,330 [main:119] - TRYING TO REPLACE CONSTANT 0.2084365801061403
2021-03-11 23:56:40,417 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-11 23:56:40,418 [main:66] - Compilation checking started
2021-03-11 23:56:40,620 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(4401246270620509833.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(-1083415825).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(-1661435293)
    if ((PZERO).compareTo("xftcp").div(dec()) !in (DOUBLE_RANGE).endInclusive.rangeTo((DOUBLE_RANGE).endInclusive)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString((PZERO).compareTo("xftcp"))
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString((-48))
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, (PZERO).compareTo("iqgff"))) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:40,620 [main:119] - TRYING TO REPLACE CONSTANT 4401246270620509833
2021-03-11 23:56:40,713 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-11 23:56:40,713 [main:66] - Compilation checking started
2021-03-11 23:56:40,997 [main:119] - TRYING TO REPLACE CONSTANT 1661435293
2021-03-11 23:56:41,079 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 23:56:41,080 [main:66] - Compilation checking started
2021-03-11 23:56:41,274 [main:49] - Result = false
Text:
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -(4401246270620509833.toULong())?.toDouble().unaryMinus() as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.8941109683354208 in DOUBLE_RANGE)) return (PZERO).compareTo("iqgff").toString(1239787257)
    if (0.8129700914670323 !in DOUBLE_RANGE) return "ahjbo"
    if (!(-(-1083415825).toDouble().dec() in DOUBLE_RANGE)) return (4401246270620509833.toULong())?.toUShort().toString(compareTo(-71))
    if ((PZERO).compareTo("xftcp").div(0.2084365801061403) !in (DOUBLE_RANGE).endInclusive.rangeTo((DOUBLE_RANGE).endInclusive)) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return (NZERO).compareTo("aumhg").toString((PZERO).compareTo("xftcp"))
    if ((PZERO).equals("ehmlv")) return (-48)?.compareTo(-71).toString((-48))
    if ((COMPARABLE_RANGE).endInclusive in IntRange(-1083415825, (PZERO).compareTo("iqgff"))) return "fail 4 in Comparable"
    if (!(PZERO).equals("nedok").xor(!(PZERO).equals("nedok").xor(true))) return "ranhn"

    return "OK"
}


2021-03-11 23:56:41,295 [main:41] - AFTER TRY 0 res = val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return "fail 1 in Double"
    if (0.0 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-0.0 in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in DOUBLE_RANGE) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(NZERO !in COMPARABLE_RANGE)) return "fail 4a !in Comparable"

    return "OK"
}
2021-03-11 23:56:41,575 [main:43] - Try â„–0
2021-03-11 23:56:52,537 [main:48] - Already checked
2021-03-11 23:56:56,837 [main:69] - Trying to insert fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
2021-03-11 23:56:57,048 [main:66] - Compilation checking started
2021-03-11 23:56:58,161 [main:103] - Trying to change 141 nodes
2021-03-11 23:56:58,161 [main:107] - replacing (c, SuspendFunction0<Unit>)
2021-03-11 23:56:58,163 [main:50] - replacing c SuspendFunction0<Unit>
2021-03-11 23:56:58,163 [main:54] - Getting value of type SuspendFunction0<Unit>
2021-03-11 23:56:58,314 [main:302] - generating value of type = SuspendFunction0<Unit> false depth = 0
2021-03-11 23:56:58,316 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 23:56:58,465 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 23:56:58,468 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 23:56:58,827 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 23:56:58,830 [main:95] - GENERATED = check(false)
2021-03-11 23:56:58,830 [main:58] - GENERATED VALUE OF TYPE SuspendFunction0<Unit> = { check(false)}
2021-03-11 23:56:58,830 [main:61] - GENERATED IS CALL =false
2021-03-11 23:56:58,835 [main:67] - randomType = String
2021-03-11 23:56:58,988 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:56:59,025 [main:106] - GETTING SuspendFunction0<Unit> from Boolean
2021-03-11 23:56:59,041 [main:106] - GETTING SuspendFunction0<Unit> from Comparable<Any>
2021-03-11 23:56:59,051 [main:106] - GETTING SuspendFunction0<Unit> from Boolean
2021-03-11 23:56:59,053 [main:106] - GETTING SuspendFunction0<Unit> from Double
2021-03-11 23:56:59,111 [main:106] - GETTING SuspendFunction0<Unit> from Comparable<Any>
2021-03-11 23:56:59,112 [main:106] - GETTING SuspendFunction0<Unit> from Boolean
2021-03-11 23:56:59,114 [main:106] - GETTING SuspendFunction0<Unit> from Boolean
2021-03-11 23:56:59,114 [main:114] - replacement of c of type SuspendFunction0<Unit> is { check(false)}
2021-03-11 23:56:59,281 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 23:56:59,281 [main:66] - Compilation checking started
2021-03-11 23:56:59,767 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return "fail 1 in Double"
    if (0.0 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-0.0 in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in DOUBLE_RANGE) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(NZERO !in COMPARABLE_RANGE)) return "fail 4a !in Comparable"

    return "OK"
}

interface Kla0 {
    suspend fun fu4()
}

suspend inline fun fu0(crossinline c: suspend () -> Unit) {
    val prope2 = object : Kla0 {
        override suspend fun fu4() {
            val prope9 = object: Kla0 {
                override suspend fun fu4() {
                    val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
c()
                    { check(false)}()
                }
            }
            prope9.fu4()
            prope9.fu4()
        }
    }
    prope2.fu4()
    prope2.fu4()
}

fun fu1(c: suspend () -> Unit) {
    c.startCoroutine(Kla6)
}

fun box624(): String {
    fu1 {
        fu0 {
            prope1.fu11()
            prope1.fu11()
        }
    }
    prope1.fu12(numberOfSuspensions = 16)
    return "OK"
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu9(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu10() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope7 = {
            prope1.prope6 = true
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-11 23:56:59,770 [main:107] - replacing (prope3.getOrThrow(), Ty0)
2021-03-11 23:56:59,773 [main:50] - replacing prope3.getOrThrow() Ty0
2021-03-11 23:56:59,773 [main:54] - Getting value of type Ty0
2021-03-11 23:56:59,941 [main:302] - generating value of type = Ty0 false depth = 0
2021-03-11 23:56:59,946 [main:58] - GENERATED VALUE OF TYPE Ty0 = 
2021-03-11 23:56:59,956 [main:67] - randomType = Kla4
2021-03-11 23:57:00,106 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-11 23:57:00,108 [main:112] - generating klass Kla4 text = class Kla4 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu8(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu9(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}
2021-03-11 23:57:00,117 [main:106] - GETTING Ty0 from Boolean
2021-03-11 23:57:00,128 [main:106] - GETTING Ty0 from Boolean
2021-03-11 23:57:00,129 [main:106] - GETTING Ty0 from Boolean
2021-03-11 23:57:00,130 [main:106] - GETTING Ty0 from Double
2021-03-11 23:57:00,159 [main:106] - GETTING Ty0 from Comparable<Any>
2021-03-11 23:57:00,165 [main:106] - GETTING Ty0 from Comparable<Any>
2021-03-11 23:57:00,165 [main:106] - GETTING Ty0 from Boolean
2021-03-11 23:57:00,165 [main:111] - Cant find and generate replacement for prope3.getOrThrow() type Ty0
2021-03-11 23:57:00,165 [main:107] - replacing ("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n"), String)
2021-03-11 23:57:00,167 [main:50] - replacing "tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n") String
2021-03-11 23:57:00,167 [main:54] - Getting value of type String
2021-03-11 23:57:00,335 [main:302] - generating value of type = String true depth = 0
2021-03-11 23:57:00,337 [main:58] - GENERATED VALUE OF TYPE String = "ljzcs"
2021-03-11 23:57:00,338 [main:61] - GENERATED IS CALL =false
2021-03-11 23:57:00,867 [main:67] - randomType = ArrayList<Array<Float>>
2021-03-11 23:57:01,014 [main:302] - generating value of type = ArrayList<Array<Float>> false depth = 0
2021-03-11 23:57:01,166 [main:43] - GENERATING CALL OF fun <T> arrayListOf(): ArrayList<Array<Float>> = TODO()
2021-03-11 23:57:01,170 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(): ArrayList<Array<Float>> = TODO()
2021-03-11 23:57:01,365 [main:95] - GENERATED = arrayListOf<Array<Float>>()
2021-03-11 23:57:01,567 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]
2021-03-11 23:57:01,719 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:57:01,722 [main:78] - Generated call from random type = (arrayListOf<Array<Float>>()).size.toString(635043110)
2021-03-11 23:57:01,723 [main:106] - GETTING String from Comparable<Any>
2021-03-11 23:57:01,732 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@2dbe178], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]]
2021-03-11 23:57:01,732 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Any): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@2dbe178]
2021-03-11 23:57:01,901 [main:302] - generating value of type = Any false depth = 0
2021-03-11 23:57:01,901 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4746ef6b]
2021-03-11 23:57:02,044 [main:302] - generating value of type = Int true depth = 0
2021-03-11 23:57:02,046 [main:117] - GENERATED CALL = (NZERO).compareTo("ffjft").toString(1148193376)
2021-03-11 23:57:02,046 [main:114] - replacement of "tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n") of type String is "ljzcs"
2021-03-11 23:57:02,191 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-11 23:57:02,192 [main:66] - Compilation checking started
2021-03-11 23:57:02,886 [main:53] - Result = true
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return "fail 1 in Double"
    if (0.0 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-0.0 in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in DOUBLE_RANGE) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(NZERO !in COMPARABLE_RANGE)) return "fail 4a !in Comparable"

    return "OK"
}

interface Kla0 {
    suspend fun fu4()
}

suspend inline fun fu0(crossinline c: suspend () -> Unit) {
    val prope2 = object : Kla0 {
        override suspend fun fu4() {
            val prope9 = object: Kla0 {
                override suspend fun fu4() {
                    val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
c()
                    c()
                }
            }
            prope9.fu4()
            prope9.fu4()
        }
    }
    prope2.fu4()
    prope2.fu4()
}

fun fu1(c: suspend () -> Unit) {
    c.startCoroutine(Kla6)
}

fun box624(): String {
    fu1 {
        fu0 {
            prope1.fu11()
            prope1.fu11()
        }
    }
    prope1.fu12(numberOfSuspensions = 16)
    return "OK"
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu8(method: String) {
        val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("ljzcs") }
    }

    fun fu9(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu10() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope7 = {
            prope1.prope6 = true
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-11 23:57:02,888 [main:107] - replacing (c, SuspendFunction0<Unit>)
2021-03-11 23:57:02,888 [main:50] - replacing c SuspendFunction0<Unit>
2021-03-11 23:57:02,888 [main:54] - Getting value of type SuspendFunction0<Unit>
2021-03-11 23:57:03,026 [main:302] - generating value of type = SuspendFunction0<Unit> false depth = 0
2021-03-11 23:57:03,029 [main:302] - generating value of type = Unit false depth = 1
2021-03-11 23:57:03,176 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 23:57:03,180 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean): Unit = TODO()
2021-03-11 23:57:03,480 [main:302] - generating value of type = Boolean true depth = 4
2021-03-11 23:57:03,482 [main:95] - GENERATED = check(true)
2021-03-11 23:57:03,483 [main:58] - GENERATED VALUE OF TYPE SuspendFunction0<Unit> = { check(true)}
2021-03-11 23:57:03,483 [main:61] - GENERATED IS CALL =false
2021-03-11 23:57:03,492 [main:67] - randomType = Kla0
2021-03-11 23:57:03,493 [main:106] - GETTING SuspendFunction0<Unit> from Comparable<Any>
2021-03-11 23:57:03,502 [main:106] - GETTING SuspendFunction0<Unit> from Boolean
2021-03-11 23:57:03,517 [main:106] - GETTING SuspendFunction0<Unit> from Comparable<Any>
2021-03-11 23:57:03,518 [main:106] - GETTING SuspendFunction0<Unit> from Boolean
2021-03-11 23:57:03,519 [main:106] - GETTING SuspendFunction0<Unit> from Boolean
2021-03-11 23:57:03,520 [main:106] - GETTING SuspendFunction0<Unit> from Double
2021-03-11 23:57:03,571 [main:106] - GETTING SuspendFunction0<Unit> from Boolean
2021-03-11 23:57:03,571 [main:114] - replacement of c of type SuspendFunction0<Unit> is { check(true)}
2021-03-11 23:57:03,723 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-11 23:57:03,724 [main:66] - Compilation checking started
2021-03-11 23:57:04,142 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return "fail 1 in Double"
    if (0.0 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-0.0 in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in DOUBLE_RANGE) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(NZERO !in COMPARABLE_RANGE)) return "fail 4a !in Comparable"

    return "OK"
}

interface Kla0 {
    suspend fun fu4()
}

suspend inline fun fu0(crossinline c: suspend () -> Unit) {
    val prope2 = object : Kla0 {
        override suspend fun fu4() {
            val prope9 = object: Kla0 {
                override suspend fun fu4() {
                    val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
c()
                    { check(true)}()
                }
            }
            prope9.fu4()
            prope9.fu4()
        }
    }
    prope2.fu4()
    prope2.fu4()
}

fun fu1(c: suspend () -> Unit) {
    c.startCoroutine(Kla6)
}

fun box624(): String {
    fu1 {
        fu0 {
            prope1.fu11()
            prope1.fu11()
        }
    }
    prope1.fu12(numberOfSuspensions = 16)
    return "OK"
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu8(method: String) {
        val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("ljzcs") }
    }

    fun fu9(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu10() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope7 = {
            prope1.prope6 = true
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-11 23:57:04,145 [main:107] - replacing (this, Kla2)
2021-03-11 23:57:04,148 [main:50] - replacing this Kla2
2021-03-11 23:57:04,148 [main:54] - Getting value of type Kla2
2021-03-11 23:57:04,330 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-11 23:57:04,332 [main:112] - generating klass Kla2 text = class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
this.prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}
2021-03-11 23:57:04,333 [main:58] - GENERATED VALUE OF TYPE Kla2 = Kla2()
2021-03-11 23:57:04,333 [main:61] - GENERATED IS CALL =true
2021-03-11 23:57:04,489 [main:67] - randomType = Kla6?
2021-03-11 23:57:04,632 [main:302] - generating value of type = Kla6 false depth = 0
2021-03-11 23:57:04,634 [main:112] - generating klass Kla6 text = object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope7 = {
            prope1.prope6 = true
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}
2021-03-11 23:57:04,665 [main:106] - GETTING Kla2 from Boolean
2021-03-11 23:57:04,677 [main:106] - GETTING Kla2 from Boolean
2021-03-11 23:57:04,677 [main:106] - GETTING Kla2 from Boolean
2021-03-11 23:57:04,678 [main:106] - GETTING Kla2 from Comparable<Any>
2021-03-11 23:57:04,685 [main:106] - GETTING Kla2 from Comparable<Any>
2021-03-11 23:57:04,686 [main:106] - GETTING Kla2 from Double
2021-03-11 23:57:04,716 [main:106] - GETTING Kla2 from Boolean
2021-03-11 23:57:04,716 [main:114] - replacement of this of type Kla2 is Kla2()
2021-03-11 23:57:04,844 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-11 23:57:04,844 [main:66] - Compilation checking started
2021-03-11 23:57:05,516 [main:53] - Result = true
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
val DOUBLE_RANGE = 0.0 .. -0.0

val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO

fun box(): String {
    if (!(0.0 in DOUBLE_RANGE)) return "fail 1 in Double"
    if (0.0 !in DOUBLE_RANGE) return "fail 1 !in Double"
    if (!(-0.0 in DOUBLE_RANGE)) return "fail 2 in Double"
    if (-0.0 !in DOUBLE_RANGE) return "fail 2 !in Double"

    if (PZERO in COMPARABLE_RANGE) return "fail 3 in Comparable"
    if (!(PZERO !in COMPARABLE_RANGE)) return "fail 3 !in Comparable"
    if (NZERO in COMPARABLE_RANGE) return "fail 4 in Comparable"
    if (!(NZERO !in COMPARABLE_RANGE)) return "fail 4a !in Comparable"

    return "OK"
}

interface Kla0 {
    suspend fun fu4()
}

suspend inline fun fu0(crossinline c: suspend () -> Unit) {
    val prope2 = object : Kla0 {
        override suspend fun fu4() {
            val prope9 = object: Kla0 {
                override suspend fun fu4() {
                    val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
c()
                    c()
                }
            }
            prope9.fu4()
            prope9.fu4()
        }
    }
    prope2.fu4()
    prope2.fu4()
}

fun fu1(c: suspend () -> Unit) {
    c.startCoroutine(Kla6)
}

fun box624(): String {
    fu1 {
        fu0 {
            prope1.fu11()
            prope1.fu11()
        }
    }
    prope1.fu12(numberOfSuspensions = 16)
    return "OK"
}

fun <Ty0> fu2(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        x(prope3.getOrThrow())
    }
}

fun fu3(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.exceptionOrNull()?.let(x)
    }
}

open class Kla1(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla7 : Kla1()
    override fun resumeWith(prope3: Result<Any?>) {
        prope3.getOrThrow()
    }
}

class Kla2 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Any?>) {
        val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
Kla2().prope3 = prope3.getOrThrow()
    }

    var prope3: Any? = null
}

abstract class Kla3<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope3: Result<Ty0>) {
        val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
if (prope3.isSuccess) {
            resume(prope3.getOrThrow())
        } else {
            fu5(prope3.exceptionOrNull()!!)
        }
    }

    abstract fun fu5(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla4 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu7() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu7(it)
    }

    fun fu7(c: Continuation<*>) {
        if (c !is CoroutineStackFrame) error("Continuation " + c + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope8: CoroutineStackFrame? = c
        while (prope8 != null) {
            prope4.add(prope8.getStackTraceElement())
            prope8 = prope8.callerFrame
        }
    }

    fun fu8(method: String) {
        val DOUBLE_RANGE = 0.0 .. -0.0
val PZERO = 0.0 as Comparable<Any>
val NZERO = -0.0 as Comparable<Any>
val COMPARABLE_RANGE = PZERO .. NZERO
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("ljzcs") }
    }

    fun fu9(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope0 = Kla4()

class Kla5 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu10() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu11() = suspendCoroutine<Unit> { c ->
        prope5++
        prope7 = { c.resume(Unit) }
    }

    fun fu12(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope1 = Kla5()

object Kla6: Kla3<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope1.prope7 = {
            prope1.prope6 = true
        }
    }

    override fun fu5(exception: Throwable) {
        throw exception
    }
}


2021-03-11 23:57:05,519 [main:107] - replacing (it?.methodName?.startsWith(method) == true, Boolean)
2021-03-11 23:57:05,522 [main:50] - replacing it?.methodName?.startsWith(method) == true Boolean
2021-03-11 23:57:05,522 [main:54] - Getting value of type Boolean
