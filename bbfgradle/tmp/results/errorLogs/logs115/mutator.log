2021-03-12 10:51:42,661 [main:66] - Compilation checking started
2021-03-12 10:51:45,196 [main:45] - Trying to change 53 nodes
2021-03-12 10:51:45,201 [main:53] - replacing (intListMin, Int)
2021-03-12 10:51:45,202 [main:50] - replacing intListMin Int
2021-03-12 10:51:45,202 [main:54] - Getting value of type Int
2021-03-12 10:51:45,395 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:45,398 [main:58] - GENERATED VALUE OF TYPE Int = 1427367738
2021-03-12 10:51:45,399 [main:61] - GENERATED IS CALL =false
2021-03-12 10:51:45,403 [main:67] - randomType = String
2021-03-12 10:51:45,578 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:51:45,708 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bed2ec1]
2021-03-12 10:51:45,710 [main:78] - Generated call from random type = ("ozkwg").length.inv()
2021-03-12 10:51:45,729 [main:106] - GETTING Int from List<Long>
2021-03-12 10:51:45,803 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1062338c]]
2021-03-12 10:51:45,803 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1062338c]
2021-03-12 10:51:45,804 [main:117] - GENERATED CALL = (longList).size.unaryMinus()
2021-03-12 10:51:45,804 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f9d4357]]
2021-03-12 10:51:45,804 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f9d4357]
2021-03-12 10:51:45,806 [main:117] - GENERATED CALL = (longList).size.or(intListMin)
2021-03-12 10:51:45,808 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@358b0b42]]
2021-03-12 10:51:45,808 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@358b0b42]
2021-03-12 10:51:46,006 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:51:46,487 [main:43] - GENERATING CALL OF fun <T> minOf(a: Set<Float>, b: Set<Float>, c: Set<Float>, comparator: kotlin.Comparator<Set<Float>>): T = TODO()
2021-03-12 10:51:46,491 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Set<Float>, b: Set<Float>, c: Set<Float>, comparator: kotlin.Comparator<Set<Float>>): T = TODO()
2021-03-12 10:51:46,834 [main:302] - generating value of type = Set<Float> false depth = 3
2021-03-12 10:51:46,987 [main:43] - GENERATING CALL OF fun <T> hashSetOf(): Set<Float> = TODO()
2021-03-12 10:51:46,993 [main:61] - WITHOUT TYPE PARAMS = fun <T> hashSetOf(): Set<Float> = TODO()
2021-03-12 10:51:47,174 [main:95] - GENERATED = hashSetOf<Float>()
2021-03-12 10:51:47,174 [main:302] - generating value of type = Set<Float> false depth = 3
2021-03-12 10:51:47,406 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): Set<Float> = TODO()
2021-03-12 10:51:47,411 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): Set<Float> = TODO()
2021-03-12 10:51:47,583 [main:95] - GENERATED = linkedSetOf<Float>()
2021-03-12 10:51:47,583 [main:302] - generating value of type = Set<Float> false depth = 3
2021-03-12 10:51:47,727 [main:43] - GENERATING CALL OF fun <T> setOf(elements: Float): Set<Float> = TODO()
2021-03-12 10:51:47,730 [main:61] - WITHOUT TYPE PARAMS = fun <T> setOf(elements: Float): Set<Float> = TODO()
2021-03-12 10:51:47,865 [main:302] - generating value of type = Float true depth = 6
2021-03-12 10:51:47,867 [main:95] - GENERATED = setOf<Float>(0.7709786f)
2021-03-12 10:51:47,867 [main:302] - generating value of type = Comparator<Set<Float>> false depth = 3
2021-03-12 10:51:48,193 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<Char>, selector: (Set<Float>)->Char): Comparator<Set<Float>> = TODO()
2021-03-12 10:51:48,197 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<Char>, selector: (Set<Float>)->Char): Comparator<Set<Float>> = TODO()
2021-03-12 10:51:48,634 [main:302] - generating value of type = Comparator<Char> false depth = 6
2021-03-12 10:51:48,820 [main:43] - GENERATING CALL OF fun <T> compareByDescending(selector: (Char)->kotlin.Comparable<*>?): Comparator<Char> = TODO()
2021-03-12 10:51:48,824 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareByDescending(selector: (Char)->kotlin.Comparable<*>?): Comparator<Char> = TODO()
2021-03-12 10:51:49,113 [main:302] - generating value of type = Function1<Char, Comparable<*>?> false depth = 9
2021-03-12 10:51:49,113 [main:302] - generating value of type = Comparable<*> false depth = 10
2021-03-12 10:51:49,245 [main:43] - GENERATING CALL OF fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<*> = TODO()
2021-03-12 10:51:49,247 [main:61] - WITHOUT TYPE PARAMS = fun KotlinVersion(major: kotlin.Int, minor: kotlin.Int): Comparable<*> = TODO()
2021-03-12 10:51:49,707 [main:302] - generating value of type = Int true depth = 13
2021-03-12 10:51:49,708 [main:302] - generating value of type = Int true depth = 13
2021-03-12 10:51:49,708 [main:95] - GENERATED = KotlinVersion(44435444, -1513126980)
2021-03-12 10:51:49,709 [main:95] - GENERATED = compareByDescending<Char>({a: Char -> KotlinVersion(44435444, -1513126980)})
2021-03-12 10:51:49,710 [main:302] - generating value of type = Function1<Set<Float>, Char> false depth = 6
2021-03-12 10:51:49,710 [main:302] - generating value of type = Char true depth = 7
2021-03-12 10:51:49,712 [main:95] - GENERATED = compareByDescending<Set<Float>, Char>(compareByDescending<Char>({a: Char -> KotlinVersion(44435444, -1513126980)}), {a: Set<Float> -> '涎'})
2021-03-12 10:51:49,713 [main:95] - GENERATED = minOf<Set<Float>>(hashSetOf<Float>(), linkedSetOf<Float>(), setOf<Float>(0.7709786f), compareByDescending<Set<Float>, Char>(compareByDescending<Char>({a: Char -> KotlinVersion(44435444, -1513126980)}), {a: Set<Float> -> '涎'}))
2021-03-12 10:51:49,717 [main:117] - GENERATED CALL = (longList).indexOf(minOf<Set<Float>>(hashSetOf<Float>(), linkedSetOf<Float>(), setOf<Float>(0.7709786f), compareByDescending<Set<Float>, Char>(compareByDescending<Char>({a: Char -> KotlinVersion(44435444, -1513126980)}), {a: Set<Float> -> '涎'})))
2021-03-12 10:51:49,718 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@57a205c1], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]]
2021-03-12 10:51:49,718 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@57a205c1]
2021-03-12 10:51:49,852 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:51:49,852 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]
2021-03-12 10:51:49,994 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:51:49,996 [main:117] - GENERATED CALL = (longList).equals("nriew").compareTo(true)
2021-03-12 10:51:49,996 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6114fc0f]]
2021-03-12 10:51:49,997 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6114fc0f]
2021-03-12 10:51:50,131 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:51:50,398 [main:43] - GENERATING CALL OF fun <T> requireNotNull(value: Short, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 10:51:50,401 [main:61] - WITHOUT TYPE PARAMS = fun <T> requireNotNull(value: Short, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 10:51:50,695 [main:302] - generating value of type = Short true depth = 3
2021-03-12 10:51:50,696 [main:302] - generating value of type = Function0<Any> false depth = 3
2021-03-12 10:51:50,696 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:51:50,697 [main:95] - GENERATED = requireNotNull<Short>(22313, { "domut"})
2021-03-12 10:51:50,698 [main:117] - GENERATED CALL = (longList).lastIndexOf(requireNotNull<Short>(22313, { "domut"}))
2021-03-12 10:51:50,699 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]]
2021-03-12 10:51:50,699 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]
2021-03-12 10:51:50,700 [main:117] - GENERATED CALL = (longList).size.toInt()
2021-03-12 10:51:50,701 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], @kotlin.SinceKotlin public val kotlin.Long.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@2d4d2d55]]
2021-03-12 10:51:50,701 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:51:50,832 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:50,834 [main:117] - GENERATED CALL = (longList).get(-944329325).sign
2021-03-12 10:51:50,834 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2e2e20c]]
2021-03-12 10:51:50,834 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2e2e20c]
2021-03-12 10:51:50,835 [main:117] - GENERATED CALL = (longList).size.rotateRight(intListMin)
2021-03-12 10:51:50,835 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d0a60f1]]
2021-03-12 10:51:50,836 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d0a60f1]
2021-03-12 10:51:50,836 [main:117] - GENERATED CALL = (longList).size.shl(intListMin)
2021-03-12 10:51:50,837 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3e36c5]]
2021-03-12 10:51:50,837 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:51:50,971 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:50,972 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3e36c5]
2021-03-12 10:51:50,973 [main:117] - GENERATED CALL = (longList).get(-1290739042).countTrailingZeroBits()
2021-03-12 10:51:50,974 [main:61] - replacement of intListMin of type Int is 1427367738
2021-03-12 10:51:51,098 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-12 10:51:51,099 [main:66] - Compilation checking started
2021-03-12 10:51:51,783 [main:53] - Result = true
Text:
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:51:51,787 [main:53] - replacing (1, Int)
2021-03-12 10:51:51,787 [main:50] - replacing 1 Int
2021-03-12 10:51:51,788 [main:54] - Getting value of type Int
2021-03-12 10:51:51,929 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:51,929 [main:58] - GENERATED VALUE OF TYPE Int = -1947656230
2021-03-12 10:51:51,930 [main:61] - GENERATED IS CALL =false
2021-03-12 10:51:52,316 [main:67] - randomType = Map<Double, Short>
2021-03-12 10:51:52,317 [main:106] - GETTING Int from Int
2021-03-12 10:51:52,412 [main:113] - Case = [public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3b31d4cf]]
2021-03-12 10:51:52,413 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3b31d4cf]
2021-03-12 10:51:52,414 [main:117] - GENERATED CALL = (intListMin).unaryPlus()
2021-03-12 10:51:52,414 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@404f665e]]
2021-03-12 10:51:52,414 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:51:52,415 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@404f665e]
2021-03-12 10:51:52,415 [main:117] - GENERATED CALL = (intListMin).toLong().countLeadingZeroBits()
2021-03-12 10:51:52,415 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3b342b4d]]
2021-03-12 10:51:52,415 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3b342b4d]
2021-03-12 10:51:52,416 [main:117] - GENERATED CALL = (intListMin).countOneBits()
2021-03-12 10:51:52,416 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@185ea2dd]]
2021-03-12 10:51:52,416 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:51:52,417 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@185ea2dd]
2021-03-12 10:51:52,523 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:51:52,525 [main:117] - GENERATED CALL = (intListMin).toInt().div(62)
2021-03-12 10:51:52,525 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3780cdef]]
2021-03-12 10:51:52,525 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:51:52,525 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3780cdef]
2021-03-12 10:51:52,669 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:51:52,670 [main:117] - GENERATED CALL = (intListMin).toInt().plus(-49)
2021-03-12 10:51:52,671 [main:113] - Case = [public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]]
2021-03-12 10:51:52,671 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]
2021-03-12 10:51:52,671 [main:117] - GENERATED CALL = (intListMin).toInt()
2021-03-12 10:51:52,672 [main:113] - Case = [public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e6ebf10]]
2021-03-12 10:51:52,672 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e6ebf10]
2021-03-12 10:51:52,789 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:51:52,790 [main:117] - GENERATED CALL = (intListMin).minus(57)
2021-03-12 10:51:52,790 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bed2ec1]]
2021-03-12 10:51:52,790 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:51:52,915 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:52,916 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bed2ec1]
2021-03-12 10:51:52,917 [main:117] - GENERATED CALL = (intListMin).compareTo(443711104).inv()
2021-03-12 10:51:52,917 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3b342b4d]]
2021-03-12 10:51:52,917 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:51:52,918 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3b342b4d]
2021-03-12 10:51:52,919 [main:117] - GENERATED CALL = (intListMin).toInt().countOneBits()
2021-03-12 10:51:52,919 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]]
2021-03-12 10:51:52,919 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:51:52,919 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]
2021-03-12 10:51:52,920 [main:117] - GENERATED CALL = (intListMin).compareTo(intListMax).toInt()
2021-03-12 10:51:52,920 [main:61] - replacement of 1 of type Int is (intListMin).minus(57)
2021-03-12 10:51:53,037 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:51:53,038 [main:66] - Compilation checking started
2021-03-12 10:51:53,651 [main:53] - Result = true
Text:
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -(intListMin).minus(57)
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:51:53,653 [main:53] - replacing (intList.maxByOrNull { it }, Int?)
2021-03-12 10:51:53,653 [main:50] - replacing intList.maxByOrNull { it } Int?
2021-03-12 10:51:53,654 [main:54] - Getting value of type Int?
2021-03-12 10:51:53,820 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:53,820 [main:58] - GENERATED VALUE OF TYPE Int? = -1855128919
2021-03-12 10:51:53,821 [main:61] - GENERATED IS CALL =false
2021-03-12 10:51:53,822 [main:67] - randomType = Int
2021-03-12 10:51:53,978 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:54,058 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@abb1493]
2021-03-12 10:51:54,058 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@77c8e613]
2021-03-12 10:51:54,059 [main:78] - Generated call from random type = (1638774365).toByte().unaryPlus()
2021-03-12 10:51:54,059 [main:106] - GETTING Int? from Int
2021-03-12 10:51:54,135 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]]
2021-03-12 10:51:54,135 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:51:54,136 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]
2021-03-12 10:51:54,273 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:54,275 [main:117] - GENERATED CALL = (intListMin)?.compareTo(intListMax).and(-322409788)
2021-03-12 10:51:54,275 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@53006505]]
2021-03-12 10:51:54,275 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:51:54,275 [main:149] - GENERATING call of type public final fun toInt(): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@53006505]
2021-03-12 10:51:54,276 [main:117] - GENERATED CALL = (intListMin)?.toChar().toInt()
2021-03-12 10:51:54,276 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]]
2021-03-12 10:51:54,276 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]
2021-03-12 10:51:54,277 [main:117] - GENERATED CALL = (intListMin)?.and(intListMin)
2021-03-12 10:51:54,277 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1062338c]]
2021-03-12 10:51:54,277 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:51:54,277 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1062338c]
2021-03-12 10:51:54,278 [main:117] - GENERATED CALL = (intListMin)?.compareTo(intListMin).unaryMinus()
2021-03-12 10:51:54,278 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3649ff26]]
2021-03-12 10:51:54,278 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:51:54,278 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3649ff26]
2021-03-12 10:51:54,389 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:51:54,390 [main:117] - GENERATED CALL = (intListMin)?.toInt().times(101)
2021-03-12 10:51:54,391 [main:113] - Case = [public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7bc9a65e]]
2021-03-12 10:51:54,391 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7bc9a65e]
2021-03-12 10:51:54,538 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:54,539 [main:117] - GENERATED CALL = (intListMin)?.coerceAtLeast(-983804666)
2021-03-12 10:51:54,540 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@27f065]]
2021-03-12 10:51:54,540 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:51:54,541 [main:117] - GENERATED CALL = (intListMin)?.compareTo(intListMin).absoluteValue
2021-03-12 10:51:54,541 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@abb1493], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5f032635]]
2021-03-12 10:51:54,541 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@abb1493]
2021-03-12 10:51:54,541 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@5f032635]
2021-03-12 10:51:54,672 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:51:54,673 [main:117] - GENERATED CALL = (intListMin)?.toByte().plus(81)
2021-03-12 10:51:54,673 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]]
2021-03-12 10:51:54,673 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:51:54,674 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]
2021-03-12 10:51:54,675 [main:117] - GENERATED CALL = (intListMin)?.compareTo(intListMax).toInt()
2021-03-12 10:51:54,675 [main:113] - Case = [public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d0a60f1]]
2021-03-12 10:51:54,675 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d0a60f1]
2021-03-12 10:51:54,676 [main:117] - GENERATED CALL = (intListMin)?.shl(intListMax)
2021-03-12 10:51:54,676 [main:61] - replacement of intList.maxByOrNull { it } of type Int? is (intListMin)?.toInt().times(101)
2021-03-12 10:51:54,801 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:51:54,802 [main:66] - Compilation checking started
2021-03-12 10:51:55,322 [main:53] - Result = true
Text:
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:51:55,324 [main:53] - replacing (it, Int)
2021-03-12 10:51:55,324 [main:50] - replacing it Int
2021-03-12 10:51:55,324 [main:54] - Getting value of type Int
2021-03-12 10:51:55,454 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:55,454 [main:58] - GENERATED VALUE OF TYPE Int = 812292192
2021-03-12 10:51:55,455 [main:61] - GENERATED IS CALL =false
2021-03-12 10:51:55,608 [main:67] - randomType = UShort
2021-03-12 10:51:55,724 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:51:55,780 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UShort.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@16c82dc7]
2021-03-12 10:51:55,781 [main:78] - Generated call from random type = (29628.toUShort()).countTrailingZeroBits()
2021-03-12 10:51:55,782 [main:106] - GETTING Int from List<Long>
2021-03-12 10:51:55,812 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bed2ec1]]
2021-03-12 10:51:55,812 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bed2ec1]
2021-03-12 10:51:55,813 [main:117] - GENERATED CALL = (longList).size.inv()
2021-03-12 10:51:55,813 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public val kotlin.Int.absoluteValue: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@27f065]]
2021-03-12 10:51:55,814 [main:117] - GENERATED CALL = (longList).size.absoluteValue
2021-03-12 10:51:55,814 [main:113] - Case = [public abstract fun contains(element: kotlin.Long): kotlin.Boolean defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2d79b8ad], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]]
2021-03-12 10:51:55,814 [main:149] - GENERATING call of type public abstract fun contains(element: kotlin.Long): kotlin.Boolean defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2d79b8ad]
2021-03-12 10:51:55,940 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:51:55,941 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]
2021-03-12 10:51:56,098 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:51:56,100 [main:117] - GENERATED CALL = (longList).contains(-5416457484949851230).compareTo(false)
2021-03-12 10:51:56,100 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@57a205c1], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]]
2021-03-12 10:51:56,100 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@57a205c1]
2021-03-12 10:51:56,211 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]
2021-03-12 10:51:56,329 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:51:56,330 [main:117] - GENERATED CALL = (longList).equals(null).compareTo(true)
2021-03-12 10:51:56,331 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bd3df07]]
2021-03-12 10:51:56,331 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bd3df07]
2021-03-12 10:51:56,448 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 10:51:56,449 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:51:56,451 [main:117] - GENERATED CALL = (longList).sumOf({a: T -> 1017004962})
2021-03-12 10:51:56,451 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@358b0b42]]
2021-03-12 10:51:56,451 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.indexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@358b0b42]
2021-03-12 10:51:56,576 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:51:56,704 [main:43] - GENERATING CALL OF fun <T> minOf(a: UByte, other: UByte): T = TODO()
2021-03-12 10:51:56,706 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: UByte, other: UByte): T = TODO()
2021-03-12 10:51:56,845 [main:302] - generating value of type = UByte true depth = 3
2021-03-12 10:51:56,845 [main:302] - generating value of type = UByte true depth = 3
2021-03-12 10:51:56,846 [main:95] - GENERATED = minOf<UByte>(16.toUByte(), 119.toUByte())
2021-03-12 10:51:56,848 [main:117] - GENERATED CALL = (longList).indexOf(minOf<UByte>(16.toUByte(), 119.toUByte()))
2021-03-12 10:51:56,848 [main:113] - Case = [public abstract fun listIterator(): kotlin.collections.ListIterator<kotlin.Long> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@47f0d8db], public abstract fun previousIndex(): kotlin.Int defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@16f4afe9]]
2021-03-12 10:51:56,848 [main:149] - GENERATING call of type public abstract fun listIterator(): kotlin.collections.ListIterator<kotlin.Long> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@47f0d8db]
2021-03-12 10:51:56,849 [main:149] - GENERATING call of type public abstract fun previousIndex(): kotlin.Int defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@16f4afe9]
2021-03-12 10:51:56,850 [main:117] - GENERATED CALL = (longList).listIterator().previousIndex()
2021-03-12 10:51:56,850 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@54e0ed78]]
2021-03-12 10:51:56,851 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@54e0ed78]
2021-03-12 10:51:56,992 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:51:57,232 [main:43] - GENERATING CALL OF fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<Char>)->kotlin.Unit): T = TODO()
2021-03-12 10:51:57,234 [main:61] - WITHOUT TYPE PARAMS = fun <T> suspendCoroutine(block: (kotlin.coroutines.Continuation<Char>)->kotlin.Unit): T = TODO()
2021-03-12 10:51:57,469 [main:302] - generating value of type = Function1<Continuation<Char>, Unit> false depth = 3
2021-03-12 10:51:57,470 [main:302] - generating value of type = Unit false depth = 4
2021-03-12 10:51:57,645 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:51:57,648 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:51:58,067 [main:302] - generating value of type = Boolean true depth = 7
2021-03-12 10:51:58,067 [main:302] - generating value of type = Function0<Any> false depth = 7
2021-03-12 10:51:58,068 [main:302] - generating value of type = Any false depth = 8
2021-03-12 10:51:58,068 [main:95] - GENERATED = check(false, { "stllb"})
2021-03-12 10:51:58,069 [main:95] - GENERATED = suspendCoroutine<Char>({a: Continuation<Char> -> check(false, { "stllb"})})
2021-03-12 10:51:58,187 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 10:51:58,287 [main:43] - GENERATING CALL OF fun <T> nullsLast(): Comparator<T> = TODO()
2021-03-12 10:51:58,289 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(): Comparator<T> = TODO()
2021-03-12 10:51:58,429 [main:95] - GENERATED = nullsLast<T>()
2021-03-12 10:51:58,547 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:58,550 [main:117] - GENERATED CALL = (longList).binarySearch(suspendCoroutine<Char>({a: Continuation<Char> -> check(false, { "stllb"})}), nullsLast<T>(), -146118303, intListMin)
2021-03-12 10:51:58,550 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3b31d4cf]]
2021-03-12 10:51:58,550 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3b31d4cf]
2021-03-12 10:51:58,551 [main:117] - GENERATED CALL = (longList).size.unaryPlus()
2021-03-12 10:51:58,551 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3e36c5]]
2021-03-12 10:51:58,551 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:51:58,662 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:58,662 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3e36c5]
2021-03-12 10:51:58,663 [main:117] - GENERATED CALL = (longList).get(-1251327640).countTrailingZeroBits()
2021-03-12 10:51:58,663 [main:61] - replacement of it of type Int is (longList).get(-1251327640).countTrailingZeroBits()
2021-03-12 10:51:58,783 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:51:58,784 [main:66] - Compilation checking started
2021-03-12 10:51:59,256 [main:53] - Result = true
Text:
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { (longList).get(-1251327640).countTrailingZeroBits() } ?: -1
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:51:59,256 [main:53] - replacing (intListMin, Int)
2021-03-12 10:51:59,256 [main:50] - replacing intListMin Int
2021-03-12 10:51:59,256 [main:54] - Getting value of type Int
2021-03-12 10:51:59,388 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:51:59,389 [main:58] - GENERATED VALUE OF TYPE Int = 767242701
2021-03-12 10:51:59,389 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:00,076 [main:67] - randomType = HashMap<ArrayList<Double?>, Char>?
2021-03-12 10:52:00,200 [main:302] - generating value of type = HashMap<ArrayList<Double?>, Char> false depth = 0
2021-03-12 10:52:00,323 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): HashMap<ArrayList<Double?>, Char> = TODO()
2021-03-12 10:52:00,324 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): HashMap<ArrayList<Double?>, Char> = TODO()
2021-03-12 10:52:00,433 [main:95] - GENERATED = linkedMapOf<ArrayList<Double?>, Char>()
2021-03-12 10:52:00,620 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5b9bd44a]
2021-03-12 10:52:00,733 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:00,735 [main:78] - Generated call from random type = (linkedMapOf<ArrayList<Double?>, Char>())?.size.xor(-631375258)
2021-03-12 10:52:00,735 [main:61] - replacement of intListMin of type Int is (linkedMapOf<ArrayList<Double?>, Char>())?.size.xor(-631375258)
2021-03-12 10:52:00,842 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:00,843 [main:53] - replacing (intListMax, Int)
2021-03-12 10:52:00,843 [main:50] - replacing intListMax Int
2021-03-12 10:52:00,843 [main:54] - Getting value of type Int
2021-03-12 10:52:00,943 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:00,943 [main:58] - GENERATED VALUE OF TYPE Int = 215884239
2021-03-12 10:52:00,944 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:00,945 [main:67] - randomType = Long
2021-03-12 10:52:01,093 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:01,177 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:52:01,178 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@4bca0913]
2021-03-12 10:52:01,179 [main:78] - Generated call from random type = (7861754052736259140).toInt().dec()
2021-03-12 10:52:01,179 [main:106] - GETTING Int from Int
2021-03-12 10:52:01,255 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2d5b950b]]
2021-03-12 10:52:01,255 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2d5b950b]
2021-03-12 10:52:01,256 [main:117] - GENERATED CALL = (intListMax).countLeadingZeroBits()
2021-03-12 10:52:01,256 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3e36c5]]
2021-03-12 10:52:01,256 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:52:01,256 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3e36c5]
2021-03-12 10:52:01,256 [main:117] - GENERATED CALL = (intListMax).toLong().countTrailingZeroBits()
2021-03-12 10:52:01,257 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3b342b4d]]
2021-03-12 10:52:01,257 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:52:01,257 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3b342b4d]
2021-03-12 10:52:01,257 [main:117] - GENERATED CALL = (intListMax).toInt().countOneBits()
2021-03-12 10:52:01,258 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3649ff26]]
2021-03-12 10:52:01,258 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:52:01,364 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:01,365 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3649ff26]
2021-03-12 10:52:01,472 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:01,473 [main:117] - GENERATED CALL = (intListMax).compareTo(-1386546854).times(-32)
2021-03-12 10:52:01,473 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2de55285]]
2021-03-12 10:52:01,473 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:52:01,474 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2de55285]
2021-03-12 10:52:01,474 [main:117] - GENERATED CALL = (intListMax).compareTo(intListMax).takeLowestOneBit()
2021-03-12 10:52:01,474 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6602be73]]
2021-03-12 10:52:01,474 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4]
2021-03-12 10:52:01,474 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@6602be73]
2021-03-12 10:52:01,475 [main:117] - GENERATED CALL = (intListMax).toShort().unaryPlus()
2021-03-12 10:52:01,475 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4cea19ad], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2702326d]]
2021-03-12 10:52:01,475 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4cea19ad]
2021-03-12 10:52:01,475 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Float.toBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2702326d]
2021-03-12 10:52:01,475 [main:117] - GENERATED CALL = (intListMax).toFloat().toBits()
2021-03-12 10:52:01,475 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d0a60f1]]
2021-03-12 10:52:01,476 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:52:01,476 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5d0a60f1]
2021-03-12 10:52:01,476 [main:117] - GENERATED CALL = (intListMax).toInt().shl(intListMin)
2021-03-12 10:52:01,476 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@486262a4]]
2021-03-12 10:52:01,476 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:52:01,477 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@486262a4]
2021-03-12 10:52:01,477 [main:117] - GENERATED CALL = (intListMax).compareTo(intListMin).takeHighestOneBit()
2021-03-12 10:52:01,477 [main:113] - Case = [public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ad05fb1], public final val first: kotlin.Int defined in kotlin.ranges.IntRange[DeserializedPropertyDescriptor@257f3205]]
2021-03-12 10:52:01,477 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Byte): kotlin.ranges.IntRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ad05fb1]
2021-03-12 10:52:01,585 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:01,586 [main:117] - GENERATED CALL = (intListMax).rangeTo(120).first
2021-03-12 10:52:01,586 [main:61] - replacement of intListMax of type Int is (intListMax).countLeadingZeroBits()
2021-03-12 10:52:01,693 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:01,693 [main:66] - Compilation checking started
2021-03-12 10:52:02,189 [main:53] - Result = true
Text:
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { (longList).get(-1251327640).countTrailingZeroBits() } ?: -1
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:02,191 [main:53] - replacing ({ (longList).get(-1251327640).countTrailingZeroBits() }, Function1<Int, Int>)
2021-03-12 10:52:02,192 [main:50] - replacing { (longList).get(-1251327640).countTrailingZeroBits() } Function1<Int, Int>
2021-03-12 10:52:02,192 [main:54] - Getting value of type Function1<Int, Int>
2021-03-12 10:52:02,378 [main:302] - generating value of type = Function1<Int, Int> false depth = 0
2021-03-12 10:52:02,378 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:52:02,379 [main:58] - GENERATED VALUE OF TYPE Function1<Int, Int> = {a: Int -> -1862662976}
2021-03-12 10:52:02,379 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:02,503 [main:67] - randomType = UShort
2021-03-12 10:52:02,602 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:52:02,658 [main:106] - GETTING Function1<Int, Int> from Int
2021-03-12 10:52:02,732 [main:106] - GETTING Function1<Int, Int> from List<Long>
2021-03-12 10:52:02,779 [main:106] - GETTING Function1<Int, Int> from List<Int>
2021-03-12 10:52:02,819 [main:61] - replacement of { (longList).get(-1251327640).countTrailingZeroBits() } of type Function1<Int, Int> is {a: Int -> -1862662976}
2021-03-12 10:52:02,920 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 10:52:02,921 [main:66] - Compilation checking started
2021-03-12 10:52:03,404 [main:53] - Result = true
Text:
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull {a: Int -> -1862662976} ?: -1
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:03,406 [main:53] - replacing (-(intListMin).minus(57), Int)
2021-03-12 10:52:03,407 [main:50] - replacing -(intListMin).minus(57) Int
2021-03-12 10:52:03,407 [main:54] - Getting value of type Int
2021-03-12 10:52:03,520 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:03,521 [main:58] - GENERATED VALUE OF TYPE Int = -1953304436
2021-03-12 10:52:03,521 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:03,644 [main:67] - randomType = UShort
2021-03-12 10:52:03,765 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:52:03,826 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUByte(): kotlin.UByte defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@d3f2db2]
2021-03-12 10:52:03,826 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.ExperimentalUnsignedTypes @kotlin.internal.InlineOnly public inline fun kotlin.UByte.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2b1d57c9]
2021-03-12 10:52:03,827 [main:78] - Generated call from random type = (5835.toUShort()).toUByte().countLeadingZeroBits()
2021-03-12 10:52:03,828 [main:106] - GETTING Int from List<Int>
2021-03-12 10:52:03,864 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.max(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61a13ade]]
2021-03-12 10:52:03,864 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.max(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61a13ade]
2021-03-12 10:52:03,865 [main:117] - GENERATED CALL = (intList).max()
2021-03-12 10:52:03,865 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6848faeb]]
2021-03-12 10:52:03,865 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6848faeb]
2021-03-12 10:52:03,980 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-12 10:52:03,981 [main:302] - generating value of type = R false depth = 1
2021-03-12 10:52:04,242 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->UInt): R = TODO()
2021-03-12 10:52:04,244 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->UInt): R = TODO()
2021-03-12 10:52:04,707 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:52:04,708 [main:302] - generating value of type = Function0<UInt> false depth = 4
2021-03-12 10:52:04,708 [main:302] - generating value of type = UInt true depth = 5
2021-03-12 10:52:04,709 [main:95] - GENERATED = synchronized<UInt>("lsers", { 2096679345.toUInt()})
2021-03-12 10:52:04,710 [main:117] - GENERATED CALL = (intList).minByOrNull({a: T -> synchronized<UInt>("lsers", { 2096679345.toUInt()})})
2021-03-12 10:52:04,711 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1d6b5be4], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b9675be]]
2021-03-12 10:52:04,711 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b9675be]
2021-03-12 10:52:04,711 [main:117] - GENERATED CALL = (intList).size.shr(intListMin)
2021-03-12 10:52:04,712 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7dd8713e]]
2021-03-12 10:52:04,712 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7dd8713e]
2021-03-12 10:52:04,838 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 10:52:04,962 [main:43] - GENERATING CALL OF fun <T> nullsLast(comparator: kotlin.Comparator<T>): Comparator<T> = TODO()
2021-03-12 10:52:04,970 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(comparator: kotlin.Comparator<T>): Comparator<T> = TODO()
2021-03-12 10:52:05,236 [main:385] - Cant generate call of fun <T> nullsLast(comparator: kotlin.Comparator<T>): Comparator<T> = TODO()
2021-03-12 10:52:05,236 [main:158] - CANT GENERATE PARAMS FOR @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7dd8713e]
2021-03-12 10:52:05,236 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.randomOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7b8b1ada]]
2021-03-12 10:52:05,237 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Collection<T>.randomOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7b8b1ada]
2021-03-12 10:52:05,237 [main:117] - GENERATED CALL = (intList).randomOrNull()
2021-03-12 10:52:05,237 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.singleOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b61601d]]
2021-03-12 10:52:05,237 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.singleOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b61601d]
2021-03-12 10:52:05,238 [main:117] - GENERATED CALL = (intList).singleOrNull()
2021-03-12 10:52:05,238 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAt(index: kotlin.Int): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7dc83b83]]
2021-03-12 10:52:05,238 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAt(index: kotlin.Int): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7dc83b83]
2021-03-12 10:52:05,343 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:05,344 [main:117] - GENERATED CALL = (intList).elementAt(348268429)
2021-03-12 10:52:05,344 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1d6b5be4], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6d7625db]]
2021-03-12 10:52:05,345 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6d7625db]
2021-03-12 10:52:05,467 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:05,468 [main:117] - GENERATED CALL = (intList).size.compareTo(-80)
2021-03-12 10:52:05,468 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1d6b5be4], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2d5b950b]]
2021-03-12 10:52:05,468 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2d5b950b]
2021-03-12 10:52:05,469 [main:117] - GENERATED CALL = (intList).size.countLeadingZeroBits()
2021-03-12 10:52:05,469 [main:113] - Case = [@kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.maxOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@216cc310]]
2021-03-12 10:52:05,469 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.maxOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@216cc310]
2021-03-12 10:52:05,469 [main:117] - GENERATED CALL = (intList).maxOrNull()
2021-03-12 10:52:05,469 [main:61] - replacement of -(intListMin).minus(57) of type Int is (intList).max()
2021-03-12 10:52:05,585 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:05,585 [main:66] - Compilation checking started
2021-03-12 10:52:05,901 [main:49] - Result = false
Text:
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull {a: Int -> -1862662976} ?: -1
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: (intList).max()
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:05,902 [main:53] - replacing (3, Int)
2021-03-12 10:52:05,902 [main:50] - replacing 3 Int
2021-03-12 10:52:05,902 [main:54] - Getting value of type Int
2021-03-12 10:52:06,049 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:06,050 [main:58] - GENERATED VALUE OF TYPE Int = -1500472122
2021-03-12 10:52:06,050 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:06,411 [main:67] - randomType = Map<Float, ULong>
2021-03-12 10:52:06,412 [main:106] - GETTING Int from List<Int>
2021-03-12 10:52:06,452 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Int defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@ab7aeb2]]
2021-03-12 10:52:06,452 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Int defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@ab7aeb2]
2021-03-12 10:52:06,606 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:06,607 [main:117] - GENERATED CALL = (intList).get(-11387428)
2021-03-12 10:52:06,608 [main:113] - Case = [public val <T> kotlin.collections.List<T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@4e639564]]
2021-03-12 10:52:06,609 [main:117] - GENERATED CALL = (intList).lastIndex
2021-03-12 10:52:06,609 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f8a57c2]]
2021-03-12 10:52:06,609 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f8a57c2]
2021-03-12 10:52:06,609 [main:117] - GENERATED CALL = (intList).sum()
2021-03-12 10:52:06,610 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component4(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@662468cb]]
2021-03-12 10:52:06,610 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component4(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@662468cb]
2021-03-12 10:52:06,610 [main:117] - GENERATED CALL = (intList).component4()
2021-03-12 10:52:06,610 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1d6b5be4]]
2021-03-12 10:52:06,610 [main:117] - GENERATED CALL = (intList).size
2021-03-12 10:52:06,611 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.min(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@480284c3]]
2021-03-12 10:52:06,611 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.min(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@480284c3]
2021-03-12 10:52:06,611 [main:117] - GENERATED CALL = (intList).min()
2021-03-12 10:52:06,611 [main:113] - Case = [public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58e53c27]]
2021-03-12 10:52:06,611 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfLast(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@58e53c27]
2021-03-12 10:52:06,746 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:52:06,747 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:52:06,748 [main:117] - GENERATED CALL = (intList).indexOfLast({a: T -> true})
2021-03-12 10:52:06,749 [main:113] - Case = [public abstract fun listIterator(): kotlin.collections.ListIterator<kotlin.Int> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@13670094], public abstract fun next(): kotlin.Int defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@281509e4]]
2021-03-12 10:52:06,749 [main:149] - GENERATING call of type public abstract fun listIterator(): kotlin.collections.ListIterator<kotlin.Int> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@13670094]
2021-03-12 10:52:06,749 [main:149] - GENERATING call of type public abstract fun next(): kotlin.Int defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@281509e4]
2021-03-12 10:52:06,749 [main:117] - GENERATED CALL = (intList).listIterator().next()
2021-03-12 10:52:06,749 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1d6b5be4], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3bff0935]]
2021-03-12 10:52:06,750 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3bff0935]
2021-03-12 10:52:06,891 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:06,892 [main:117] - GENERATED CALL = (intList).size.rem(39)
2021-03-12 10:52:06,892 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1d6b5be4], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b9675be]]
2021-03-12 10:52:06,893 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b9675be]
2021-03-12 10:52:07,011 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:07,011 [main:117] - GENERATED CALL = (intList).size.shr(1049188269)
2021-03-12 10:52:07,011 [main:61] - replacement of 3 of type Int is -1500472122
2021-03-12 10:52:07,135 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-12 10:52:07,135 [main:66] - Compilation checking started
2021-03-12 10:52:07,561 [main:53] - Result = true
Text:
val intList = listOf(1, 2, -1500472122)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull {a: Int -> -1862662976} ?: -1
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:07,563 [main:53] - replacing (1, Int)
2021-03-12 10:52:07,563 [main:50] - replacing 1 Int
2021-03-12 10:52:07,563 [main:54] - Getting value of type Int
2021-03-12 10:52:07,721 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:07,721 [main:58] - GENERATED VALUE OF TYPE Int = -868203780
2021-03-12 10:52:07,721 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:07,860 [main:67] - randomType = Byte
2021-03-12 10:52:07,962 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:08,010 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3b334425]
2021-03-12 10:52:08,117 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:08,118 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@3b342b4d]
2021-03-12 10:52:08,119 [main:78] - Generated call from random type = (-38).compareTo(-5).countOneBits()
2021-03-12 10:52:08,120 [main:106] - GETTING Int from List<Long>
2021-03-12 10:52:08,176 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6114fc0f]]
2021-03-12 10:52:08,177 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6114fc0f]
2021-03-12 10:52:08,294 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:52:08,533 [main:43] - GENERATING CALL OF fun <T> maxOf(a: Array<Long>, b: Array<Long>, c: Array<Long>, comparator: kotlin.Comparator<Array<Long>>): T = TODO()
2021-03-12 10:52:08,536 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: Array<Long>, b: Array<Long>, c: Array<Long>, comparator: kotlin.Comparator<Array<Long>>): T = TODO()
2021-03-12 10:52:08,780 [main:302] - generating value of type = Array<Long> false depth = 3
2021-03-12 10:52:08,889 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Long> = TODO()
2021-03-12 10:52:08,890 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Long> = TODO()
2021-03-12 10:52:09,051 [main:95] - GENERATED = emptyArray<Long>()
2021-03-12 10:52:09,052 [main:302] - generating value of type = Array<Long> false depth = 3
2021-03-12 10:52:09,238 [main:43] - GENERATING CALL OF fun <T> emptyArray(): Array<Long> = TODO()
2021-03-12 10:52:09,240 [main:61] - WITHOUT TYPE PARAMS = fun <T> emptyArray(): Array<Long> = TODO()
2021-03-12 10:52:09,417 [main:95] - GENERATED = emptyArray<Long>()
2021-03-12 10:52:09,417 [main:302] - generating value of type = Array<Long> false depth = 3
2021-03-12 10:52:09,594 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Long> = TODO()
2021-03-12 10:52:09,596 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Long> = TODO()
2021-03-12 10:52:09,724 [main:95] - GENERATED = enumValues<Long>()
2021-03-12 10:52:09,724 [main:302] - generating value of type = Comparator<Array<Long>> false depth = 3
2021-03-12 10:52:09,843 [main:43] - GENERATING CALL OF fun <T> compareByDescending(selector: (Array<Long>)->kotlin.Comparable<*>?): Comparator<Array<Long>> = TODO()
2021-03-12 10:52:09,844 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareByDescending(selector: (Array<Long>)->kotlin.Comparable<*>?): Comparator<Array<Long>> = TODO()
2021-03-12 10:52:10,114 [main:302] - generating value of type = Function1<Array<Long>, Comparable<*>?> false depth = 6
2021-03-12 10:52:10,114 [main:302] - generating value of type = Comparable<*> false depth = 7
2021-03-12 10:52:10,123 [main:95] - GENERATED = compareByDescending<Array<Long>>({a: Array<Long> -> 0.3798267576033415})
2021-03-12 10:52:10,124 [main:95] - GENERATED = maxOf<Array<Long>>(emptyArray<Long>(), emptyArray<Long>(), enumValues<Long>(), compareByDescending<Array<Long>>({a: Array<Long> -> 0.3798267576033415}))
2021-03-12 10:52:10,125 [main:117] - GENERATED CALL = (longList).lastIndexOf(maxOf<Array<Long>>(emptyArray<Long>(), emptyArray<Long>(), enumValues<Long>(), compareByDescending<Array<Long>>({a: Array<Long> -> 0.3798267576033415})))
2021-03-12 10:52:10,126 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bed2ec1]]
2021-03-12 10:52:10,126 [main:149] - GENERATING call of type public final fun inv(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7bed2ec1]
2021-03-12 10:52:10,126 [main:117] - GENERATED CALL = (longList).size.inv()
2021-03-12 10:52:10,126 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e6ebf10]]
2021-03-12 10:52:10,127 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e6ebf10]
2021-03-12 10:52:10,276 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:10,277 [main:117] - GENERATED CALL = (longList).size.minus(-111)
2021-03-12 10:52:10,277 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@54e0ed78]]
2021-03-12 10:52:10,277 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@54e0ed78]
2021-03-12 10:52:10,412 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:52:10,556 [main:43] - GENERATING CALL OF fun <T> minOf(a: Comparable<T>, b: Comparable<T>): T = TODO()
2021-03-12 10:52:10,557 [main:61] - WITHOUT TYPE PARAMS = fun <T> minOf(a: Comparable<T>, b: Comparable<T>): T = TODO()
2021-03-12 10:52:10,698 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-12 10:52:10,707 [main:302] - generating value of type = Comparable<T> false depth = 3
2021-03-12 10:52:10,715 [main:95] - GENERATED = minOf<Comparable<T>>(0.4133008f, 24763.toUShort())
2021-03-12 10:52:10,824 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 10:52:11,175 [main:43] - GENERATING CALL OF fun <T, K> compareByDescending(comparator: kotlin.Comparator<UShort?>, selector: (T)->UShort?): Comparator<T> = TODO()
2021-03-12 10:52:11,176 [main:61] - WITHOUT TYPE PARAMS = fun <T, K> compareByDescending(comparator: kotlin.Comparator<UShort?>, selector: (T)->UShort?): Comparator<T> = TODO()
2021-03-12 10:52:11,522 [main:302] - generating value of type = Comparator<UShort?> false depth = 3
2021-03-12 10:52:11,627 [main:43] - GENERATING CALL OF fun <T> nullsLast(): Comparator<UShort?> = TODO()
2021-03-12 10:52:11,629 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(): Comparator<UShort?> = TODO()
2021-03-12 10:52:11,730 [main:95] - GENERATED = nullsLast<UShort?>()
2021-03-12 10:52:11,730 [main:385] - Cant generate call of fun <T, K> compareByDescending(comparator: kotlin.Comparator<UShort?>, selector: (T)->UShort?): Comparator<T> = TODO()
2021-03-12 10:52:11,821 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:11,931 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:11,932 [main:158] - CANT GENERATE PARAMS FOR public fun <T> kotlin.collections.List<T>.binarySearch(element: T, comparator: kotlin.Comparator<in T>, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ...): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@54e0ed78]
2021-03-12 10:52:11,932 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@162726e8]]
2021-03-12 10:52:11,932 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:11,932 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countOneBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@162726e8]
2021-03-12 10:52:11,933 [main:117] - GENERATED CALL = (longList).get(intListMin).countOneBits()
2021-03-12 10:52:11,933 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3b31d4cf]]
2021-03-12 10:52:11,933 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3b31d4cf]
2021-03-12 10:52:11,933 [main:117] - GENERATED CALL = (longList).size.unaryPlus()
2021-03-12 10:52:11,933 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ffe7432]]
2021-03-12 10:52:11,934 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6ffe7432]
2021-03-12 10:52:11,934 [main:117] - GENERATED CALL = (longList).size.inc()
2021-03-12 10:52:11,934 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@6b9f203c]]
2021-03-12 10:52:11,934 [main:117] - GENERATED CALL = (longList).size.sign
2021-03-12 10:52:11,934 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2de55285]]
2021-03-12 10:52:11,934 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2de55285]
2021-03-12 10:52:11,935 [main:117] - GENERATED CALL = (longList).size.takeLowestOneBit()
2021-03-12 10:52:11,935 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2d5b950b]]
2021-03-12 10:52:11,935 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Int.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2d5b950b]
2021-03-12 10:52:11,935 [main:117] - GENERATED CALL = (longList).size.countLeadingZeroBits()
2021-03-12 10:52:11,935 [main:61] - replacement of 1 of type Int is (longList).size.takeLowestOneBit()
2021-03-12 10:52:12,053 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:12,054 [main:66] - Compilation checking started
2021-03-12 10:52:12,575 [main:53] - Result = true
Text:
val intList = listOf(1, 2, -1500472122)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull {a: Int -> -1862662976} ?: -(longList).size.takeLowestOneBit()
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:12,577 [main:53] - replacing (longList.maxByOrNull { it } ?: -1, Long)
2021-03-12 10:52:12,577 [main:50] - replacing longList.maxByOrNull { it } ?: -1 Long
2021-03-12 10:52:12,577 [main:54] - Getting value of type Long
2021-03-12 10:52:12,705 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:12,705 [main:58] - GENERATED VALUE OF TYPE Long = -2090157264418475547
2021-03-12 10:52:12,705 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:12,834 [main:67] - randomType = Char
2021-03-12 10:52:12,945 [main:302] - generating value of type = Char true depth = 0
2021-03-12 10:52:12,986 [main:149] - GENERATING call of type public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@2586ccb7]
2021-03-12 10:52:12,987 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@1dfedd64]
2021-03-12 10:52:13,091 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:13,093 [main:78] - Generated call from random type = ('튩').toLong().or(-6551166088703583848)
2021-03-12 10:52:13,095 [main:106] - GETTING Long from Int
2021-03-12 10:52:13,162 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@519b645c]]
2021-03-12 10:52:13,162 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:52:13,163 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@519b645c]
2021-03-12 10:52:13,163 [main:117] - GENERATED CALL = (intListMax).compareTo(intListMin).toLong()
2021-03-12 10:52:13,164 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@74cae819]]
2021-03-12 10:52:13,164 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:13,164 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@74cae819]
2021-03-12 10:52:13,165 [main:117] - GENERATED CALL = (intListMax).div(longListMax).xor(longListMax)
2021-03-12 10:52:13,165 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4cea19ad], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@d032512]]
2021-03-12 10:52:13,165 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4cea19ad]
2021-03-12 10:52:13,165 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Float.roundToLong(): kotlin.Long defined in kotlin.math[DeserializedSimpleFunctionDescriptor@d032512]
2021-03-12 10:52:13,165 [main:117] - GENERATED CALL = (intListMax).toFloat().roundToLong()
2021-03-12 10:52:13,166 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@30c8ab4c]]
2021-03-12 10:52:13,166 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:52:13,166 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@30c8ab4c]
2021-03-12 10:52:13,166 [main:117] - GENERATED CALL = (intListMax).toLong().and(longListMin)
2021-03-12 10:52:13,166 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeLowestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@7537f673]]
2021-03-12 10:52:13,167 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:52:13,167 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeLowestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@7537f673]
2021-03-12 10:52:13,167 [main:117] - GENERATED CALL = (intListMax).toLong().takeLowestOneBit()
2021-03-12 10:52:13,167 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e2a1bdc]]
2021-03-12 10:52:13,167 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:52:13,268 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:13,269 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e2a1bdc]
2021-03-12 10:52:13,269 [main:117] - GENERATED CALL = (intListMax).compareTo(-1967124663).minus(longListMin)
2021-03-12 10:52:13,269 [main:113] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3222e820], public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@1a671c3d]]
2021-03-12 10:52:13,270 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3222e820]
2021-03-12 10:52:13,387 [main:302] - generating value of type = Double true depth = 0
2021-03-12 10:52:13,389 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@1a671c3d]
2021-03-12 10:52:13,389 [main:117] - GENERATED CALL = (intListMax).div(0.004666099695403325).toLong()
2021-03-12 10:52:13,389 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e2a1bdc]]
2021-03-12 10:52:13,389 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:52:13,390 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e2a1bdc]
2021-03-12 10:52:13,528 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:13,529 [main:117] - GENERATED CALL = (intListMax).toInt().minus(-5175669088156483373)
2021-03-12 10:52:13,530 [main:113] - Case = [public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@20fc0bee]]
2021-03-12 10:52:13,530 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@20fc0bee]
2021-03-12 10:52:13,530 [main:117] - GENERATED CALL = (intListMax).plus(longListMin)
2021-03-12 10:52:13,531 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeLowestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@7537f673]]
2021-03-12 10:52:13,531 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:13,531 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeLowestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@7537f673]
2021-03-12 10:52:13,532 [main:117] - GENERATED CALL = (intListMax).div(longListMax).takeLowestOneBit()
2021-03-12 10:52:13,532 [main:61] - replacement of longList.maxByOrNull { it } ?: -1 of type Long is (intListMax).div(0.004666099695403325).toLong()
2021-03-12 10:52:13,630 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:13,631 [main:66] - Compilation checking started
2021-03-12 10:52:14,025 [main:53] - Result = true
Text:
val intList = listOf(1, 2, -1500472122)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull {a: Int -> -1862662976} ?: -(longList).size.takeLowestOneBit()
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:14,027 [main:53] - replacing (longListMax, Long)
2021-03-12 10:52:14,028 [main:50] - replacing longListMax Long
2021-03-12 10:52:14,028 [main:54] - Getting value of type Long
2021-03-12 10:52:14,118 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:14,119 [main:58] - GENERATED VALUE OF TYPE Long = 8420083382916090534
2021-03-12 10:52:14,119 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:14,435 [main:67] - randomType = LinkedHashMap<Float, Double>
2021-03-12 10:52:14,552 [main:302] - generating value of type = LinkedHashMap<Float, Double> false depth = 0
2021-03-12 10:52:14,652 [main:43] - GENERATING CALL OF fun <K, V> LinkedHashMap(original: kotlin.collections.Map<Float, Double>): LinkedHashMap<Float, Double> = TODO()
2021-03-12 10:52:14,654 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> LinkedHashMap(original: kotlin.collections.Map<Float, Double>): LinkedHashMap<Float, Double> = TODO()
2021-03-12 10:52:14,846 [main:302] - generating value of type = Map<Float, Double> false depth = 3
2021-03-12 10:52:14,936 [main:43] - GENERATING CALL OF fun <K, V> HashMap(): Map<Float, Double> = TODO()
2021-03-12 10:52:14,937 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> HashMap(): Map<Float, Double> = TODO()
2021-03-12 10:52:15,030 [main:95] - GENERATED = HashMap<Float, Double>()
2021-03-12 10:52:15,031 [main:95] - GENERATED = LinkedHashMap<Float, Double>(HashMap<Float, Double>())
2021-03-12 10:52:15,219 [main:149] - GENERATING call of type public open fun get(key: kotlin.Float): kotlin.Double? defined in kotlin.collections.LinkedHashMap[DeserializedSimpleFunctionDescriptor@6c8826f7]
2021-03-12 10:52:15,342 [main:302] - generating value of type = Float true depth = 0
2021-03-12 10:52:15,342 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@1a671c3d]
2021-03-12 10:52:15,343 [main:78] - Generated call from random type = (LinkedHashMap<Float, Double>(HashMap<Float, Double>())).get(0.77981025f)?.toLong()!!
2021-03-12 10:52:15,346 [main:106] - GETTING Long from List<Long>
2021-03-12 10:52:15,409 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.findLast(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@258184e7]]
2021-03-12 10:52:15,410 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.findLast(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@258184e7]
2021-03-12 10:52:15,507 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:52:15,508 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:52:15,509 [main:117] - GENERATED CALL = (longList).findLast({a: T -> false})
2021-03-12 10:52:15,510 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.lastOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@116e349d]]
2021-03-12 10:52:15,510 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.lastOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@116e349d]
2021-03-12 10:52:15,510 [main:117] - GENERATED CALL = (longList).lastOrNull()
2021-03-12 10:52:15,510 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final infix fun shl(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5636f71b]]
2021-03-12 10:52:15,510 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:15,631 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:15,633 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5636f71b]
2021-03-12 10:52:15,634 [main:117] - GENERATED CALL = (longList).get(147570926).shl(intListMin)
2021-03-12 10:52:15,634 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2186360e]]
2021-03-12 10:52:15,634 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:15,770 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:15,771 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2186360e]
2021-03-12 10:52:15,884 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:15,885 [main:117] - GENERATED CALL = (longList).get(-616560350).div(26)
2021-03-12 10:52:15,886 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final operator fun plus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@18c84d2d]]
2021-03-12 10:52:15,886 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:15,993 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:15,994 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@18c84d2d]
2021-03-12 10:52:16,094 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:16,095 [main:117] - GENERATED CALL = (longList).get(907532032).plus(-57)
2021-03-12 10:52:16,096 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e2a1bdc]]
2021-03-12 10:52:16,096 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e2a1bdc]
2021-03-12 10:52:16,218 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:16,219 [main:117] - GENERATED CALL = (longList).size.minus(7816052315212977899)
2021-03-12 10:52:16,219 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@74cae819]]
2021-03-12 10:52:16,219 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:16,220 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@74cae819]
2021-03-12 10:52:16,220 [main:117] - GENERATED CALL = (longList).get(intListMax).xor(longListMin)
2021-03-12 10:52:16,220 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6848faeb]]
2021-03-12 10:52:16,221 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6848faeb]
2021-03-12 10:52:16,354 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-12 10:52:16,354 [main:302] - generating value of type = R false depth = 1
2021-03-12 10:52:16,496 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->Double): R = TODO()
2021-03-12 10:52:16,501 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->Double): R = TODO()
2021-03-12 10:52:16,893 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:52:16,893 [main:302] - generating value of type = Function0<Double> false depth = 4
2021-03-12 10:52:16,894 [main:302] - generating value of type = Double true depth = 5
2021-03-12 10:52:16,895 [main:95] - GENERATED = synchronized<Double>("uutqa", { 0.7149522352859993})
2021-03-12 10:52:16,898 [main:117] - GENERATED CALL = (longList).minByOrNull({a: T -> synchronized<Double>("uutqa", { 0.7149522352859993})})
2021-03-12 10:52:16,898 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1ba5b2a8]]
2021-03-12 10:52:16,898 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1ba5b2a8]
2021-03-12 10:52:16,898 [main:117] - GENERATED CALL = (longList).size.times(longListMin)
2021-03-12 10:52:16,899 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c5a438e]]
2021-03-12 10:52:16,899 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:16,899 [main:149] - GENERATING call of type public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c5a438e]
2021-03-12 10:52:16,899 [main:117] - GENERATED CALL = (longList).get(intListMin).inv()
2021-03-12 10:52:16,899 [main:61] - replacement of longListMax of type Long is 8420083382916090534
2021-03-12 10:52:16,998 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-12 10:52:16,999 [main:66] - Compilation checking started
2021-03-12 10:52:17,344 [main:53] - Result = true
Text:
val intList = listOf(1, 2, -1500472122)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull {a: Int -> -1862662976} ?: -(longList).size.takeLowestOneBit()
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:17,346 [main:53] - replacing ({ it }, Function1<Long, Long>)
2021-03-12 10:52:17,347 [main:50] - replacing { it } Function1<Long, Long>
2021-03-12 10:52:17,347 [main:54] - Getting value of type Function1<Long, Long>
2021-03-12 10:52:17,473 [main:302] - generating value of type = Function1<Long, Long> false depth = 0
2021-03-12 10:52:17,473 [main:302] - generating value of type = Long true depth = 1
2021-03-12 10:52:17,474 [main:58] - GENERATED VALUE OF TYPE Function1<Long, Long> = {a: Long -> -9163559572848409132}
2021-03-12 10:52:17,474 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:18,090 [main:67] - randomType = HashMap<ArrayList<ULong>, UByte>?
2021-03-12 10:52:18,204 [main:302] - generating value of type = HashMap<ArrayList<ULong>, UByte> false depth = 0
2021-03-12 10:52:18,301 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(): HashMap<ArrayList<ULong>, UByte> = TODO()
2021-03-12 10:52:18,302 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(): HashMap<ArrayList<ULong>, UByte> = TODO()
2021-03-12 10:52:18,416 [main:95] - GENERATED = hashMapOf<ArrayList<ULong>, UByte>()
2021-03-12 10:52:18,596 [main:106] - GETTING Function1<Long, Long> from Long
2021-03-12 10:52:18,653 [main:106] - GETTING Function1<Long, Long> from List<Long>
2021-03-12 10:52:18,693 [main:106] - GETTING Function1<Long, Long> from Int
2021-03-12 10:52:18,756 [main:106] - GETTING Function1<Long, Long> from Int
2021-03-12 10:52:18,757 [main:106] - GETTING Function1<Long, Long> from List<Int>
2021-03-12 10:52:18,791 [main:61] - replacement of { it } of type Function1<Long, Long> is {a: Long -> -9163559572848409132}
2021-03-12 10:52:18,898 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 10:52:18,899 [main:66] - Compilation checking started
2021-03-12 10:52:19,261 [main:53] - Result = true
Text:
val intList = listOf(1, 2, -1500472122)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull {a: Int -> -1862662976} ?: -(longList).size.takeLowestOneBit()
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:19,263 [main:53] - replacing (longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1, Long)
2021-03-12 10:52:19,264 [main:50] - replacing longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1 Long
2021-03-12 10:52:19,264 [main:54] - Getting value of type Long
2021-03-12 10:52:19,367 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:19,367 [main:58] - GENERATED VALUE OF TYPE Long = 58481930202280520
2021-03-12 10:52:19,367 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:19,369 [main:67] - randomType = Int
2021-03-12 10:52:19,485 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:19,538 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:19,641 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:19,642 [main:78] - Generated call from random type = (104360475).div(8257282366397418082)
2021-03-12 10:52:19,644 [main:106] - GETTING Long from List<Long>
2021-03-12 10:52:19,695 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2186360e]]
2021-03-12 10:52:19,696 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:19,696 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2186360e]
2021-03-12 10:52:19,787 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:19,787 [main:117] - GENERATED CALL = (longList).get(intListMax).div(-104)
2021-03-12 10:52:19,787 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7dd8713e]]
2021-03-12 10:52:19,788 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWith(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7dd8713e]
2021-03-12 10:52:19,891 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 10:52:19,992 [main:43] - GENERATING CALL OF fun <T> nullsFirst(): Comparator<T> = TODO()
2021-03-12 10:52:19,993 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsFirst(): Comparator<T> = TODO()
2021-03-12 10:52:20,125 [main:95] - GENERATED = nullsFirst<T>()
2021-03-12 10:52:20,126 [main:117] - GENERATED CALL = (longList).maxWith(nullsFirst<T>())
2021-03-12 10:52:20,126 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c5a438e]]
2021-03-12 10:52:20,126 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:20,222 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:20,223 [main:149] - GENERATING call of type public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c5a438e]
2021-03-12 10:52:20,223 [main:117] - GENERATED CALL = (longList).get(-366589137).inv()
2021-03-12 10:52:20,223 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final infix fun ushr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@69cba1cf]]
2021-03-12 10:52:20,223 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:20,223 [main:149] - GENERATING call of type public final infix fun ushr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@69cba1cf]
2021-03-12 10:52:20,224 [main:117] - GENERATED CALL = (longList).get(intListMin).ushr(intListMax)
2021-03-12 10:52:20,224 [main:113] - Case = [@kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ba66d0]]
2021-03-12 10:52:20,224 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T> kotlin.collections.Iterable<T>.maxWithOrNull(comparator: kotlin.Comparator<in T>): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2ba66d0]
2021-03-12 10:52:20,324 [main:302] - generating value of type = Comparator<in T> false depth = 0
2021-03-12 10:52:20,425 [main:43] - GENERATING CALL OF fun <T> nullsLast(): Comparator<T> = TODO()
2021-03-12 10:52:20,427 [main:61] - WITHOUT TYPE PARAMS = fun <T> nullsLast(): Comparator<T> = TODO()
2021-03-12 10:52:20,553 [main:95] - GENERATED = nullsLast<T>()
2021-03-12 10:52:20,553 [main:117] - GENERATED CALL = (longList).maxWithOrNull(nullsLast<T>())
2021-03-12 10:52:20,553 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ca3957a]]
2021-03-12 10:52:20,553 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.first(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ca3957a]
2021-03-12 10:52:20,554 [main:117] - GENERATED CALL = (longList).first()
2021-03-12 10:52:20,554 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Long.rotateLeft(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@726c543]]
2021-03-12 10:52:20,554 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:20,554 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Long.rotateLeft(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@726c543]
2021-03-12 10:52:20,668 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:20,669 [main:117] - GENERATED CALL = (longList).get(intListMin).rotateLeft(-1076784323)
2021-03-12 10:52:20,670 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@da79d11]]
2021-03-12 10:52:20,670 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:20,670 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@da79d11]
2021-03-12 10:52:20,771 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:20,772 [main:117] - GENERATED CALL = (longList).get(intListMin).rotateRight(-914283120)
2021-03-12 10:52:20,773 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.getOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@37f3a34b]]
2021-03-12 10:52:20,773 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.getOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@37f3a34b]
2021-03-12 10:52:20,890 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:20,999 [main:302] - generating value of type = Function1<Int, T> false depth = 0
2021-03-12 10:52:21,000 [main:302] - generating value of type = T false depth = 1
2021-03-12 10:52:21,311 [main:43] - GENERATING CALL OF fun <T> checkNotNull(value: Array<Float>): T = TODO()
2021-03-12 10:52:21,313 [main:61] - WITHOUT TYPE PARAMS = fun <T> checkNotNull(value: Array<Float>): T = TODO()
2021-03-12 10:52:21,434 [main:302] - generating value of type = Array<Float> false depth = 4
2021-03-12 10:52:21,537 [main:43] - GENERATING CALL OF fun <T> arrayOf(elements: Float): Array<Float> = TODO()
2021-03-12 10:52:21,538 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOf(elements: Float): Array<Float> = TODO()
2021-03-12 10:52:21,648 [main:302] - generating value of type = Float true depth = 7
2021-03-12 10:52:21,649 [main:95] - GENERATED = arrayOf<Float>(0.31911045f)
2021-03-12 10:52:21,649 [main:95] - GENERATED = checkNotNull<Array<Float>>(arrayOf<Float>(0.31911045f))
2021-03-12 10:52:21,650 [main:117] - GENERATED CALL = (longList).getOrElse(-1956370801, {a: Int -> checkNotNull<Array<Float>>(arrayOf<Float>(0.31911045f))})
2021-03-12 10:52:21,650 [main:113] - Case = [@kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.maxBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7229e508]]
2021-03-12 10:52:21,650 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.DeprecatedSinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.maxBy(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7229e508]
2021-03-12 10:52:21,766 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-12 10:52:21,767 [main:302] - generating value of type = R false depth = 1
2021-03-12 10:52:22,455 [main:43] - GENERATING CALL OF fun <R> run(block: ()->MutableMap<MutableMap<Short, UInt>, Double>): R = TODO()
2021-03-12 10:52:22,456 [main:61] - WITHOUT TYPE PARAMS = fun <R> run(block: ()->MutableMap<MutableMap<Short, UInt>, Double>): R = TODO()
2021-03-12 10:52:22,687 [main:302] - generating value of type = Function0<MutableMap<MutableMap<Short, UInt>, Double>> false depth = 4
2021-03-12 10:52:22,688 [main:302] - generating value of type = MutableMap<MutableMap<Short, UInt>, Double> false depth = 5
2021-03-12 10:52:22,806 [main:43] - GENERATING CALL OF fun <K, V> mutableMapOf(): MutableMap<MutableMap<Short, UInt>, Double> = TODO()
2021-03-12 10:52:22,807 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> mutableMapOf(): MutableMap<MutableMap<Short, UInt>, Double> = TODO()
2021-03-12 10:52:22,908 [main:95] - GENERATED = mutableMapOf<MutableMap<Short, UInt>, Double>()
2021-03-12 10:52:22,909 [main:95] - GENERATED = run<MutableMap<MutableMap<Short, UInt>, Double>>({ mutableMapOf<MutableMap<Short, UInt>, Double>()})
2021-03-12 10:52:22,909 [main:117] - GENERATED CALL = (longList).maxBy({a: T -> run<MutableMap<MutableMap<Short, UInt>, Double>>({ mutableMapOf<MutableMap<Short, UInt>, Double>()})})
2021-03-12 10:52:22,909 [main:61] - replacement of longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1 of type Long is (longList).get(intListMin).ushr(intListMax)
2021-03-12 10:52:23,013 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:23,013 [main:66] - Compilation checking started
2021-03-12 10:52:23,406 [main:53] - Result = true
Text:
val intList = listOf(1, 2, -1500472122)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull {a: Int -> -1862662976} ?: -(longList).size.takeLowestOneBit()
    if (1427367738 != 1) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:23,407 [main:53] - replacing (1, Int)
2021-03-12 10:52:23,408 [main:50] - replacing 1 Int
2021-03-12 10:52:23,408 [main:54] - Getting value of type Int
2021-03-12 10:52:23,509 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:23,510 [main:58] - GENERATED VALUE OF TYPE Int = -342314295
2021-03-12 10:52:23,510 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:23,639 [main:67] - randomType = Boolean?
2021-03-12 10:52:23,752 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:52:23,774 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]
2021-03-12 10:52:23,886 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:52:23,887 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3b31d4cf]
2021-03-12 10:52:23,887 [main:78] - Generated call from random type = (true)?.compareTo(true).unaryPlus()
2021-03-12 10:52:23,887 [main:106] - GETTING Int from Int
2021-03-12 10:52:23,940 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e6ebf10]]
2021-03-12 10:52:23,940 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:52:23,940 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e6ebf10]
2021-03-12 10:52:24,033 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:24,034 [main:117] - GENERATED CALL = (intListMin).toInt().minus(-70)
2021-03-12 10:52:24,034 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1062338c]]
2021-03-12 10:52:24,034 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:52:24,034 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1062338c]
2021-03-12 10:52:24,034 [main:117] - GENERATED CALL = (intListMin).compareTo(intListMin).unaryMinus()
2021-03-12 10:52:24,035 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4e2c656a]]
2021-03-12 10:52:24,035 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4e2c656a]
2021-03-12 10:52:24,035 [main:117] - GENERATED CALL = (intListMin).rotateLeft(intListMin)
2021-03-12 10:52:24,035 [main:113] - Case = [public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3780cdef]]
2021-03-12 10:52:24,035 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3780cdef]
2021-03-12 10:52:24,129 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:24,130 [main:117] - GENERATED CALL = (intListMin).plus(-15)
2021-03-12 10:52:24,130 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]]
2021-03-12 10:52:24,130 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:52:24,131 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]
2021-03-12 10:52:24,131 [main:117] - GENERATED CALL = (intListMin).toInt().toInt()
2021-03-12 10:52:24,131 [main:113] - Case = [public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@185ea2dd]]
2021-03-12 10:52:24,131 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@185ea2dd]
2021-03-12 10:52:24,242 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:24,243 [main:117] - GENERATED CALL = (intListMin).div(-81)
2021-03-12 10:52:24,243 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1a799c73]]
2021-03-12 10:52:24,243 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:52:24,243 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtMost(maximumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@1a799c73]
2021-03-12 10:52:24,243 [main:117] - GENERATED CALL = (intListMin).toInt().coerceAtMost(intListMin)
2021-03-12 10:52:24,243 [main:113] - Case = [public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5b9bd44a]]
2021-03-12 10:52:24,244 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5b9bd44a]
2021-03-12 10:52:24,348 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:24,348 [main:117] - GENERATED CALL = (intListMin).xor(160440941)
2021-03-12 10:52:24,349 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@486262a4]]
2021-03-12 10:52:24,349 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:52:24,349 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@486262a4]
2021-03-12 10:52:24,349 [main:117] - GENERATED CALL = (intListMin).compareTo(intListMin).takeHighestOneBit()
2021-03-12 10:52:24,349 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2de55285]]
2021-03-12 10:52:24,349 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:52:24,349 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2de55285]
2021-03-12 10:52:24,350 [main:117] - GENERATED CALL = (intListMin).compareTo(intListMin).takeLowestOneBit()
2021-03-12 10:52:24,350 [main:61] - replacement of 1 of type Int is (intListMin).rotateLeft(intListMin)
2021-03-12 10:52:24,471 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:24,472 [main:66] - Compilation checking started
2021-03-12 10:52:24,843 [main:53] - Result = true
Text:
val intList = listOf(1, 2, -1500472122)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull {a: Int -> -1862662976} ?: -(longList).size.takeLowestOneBit()
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:24,844 [main:53] - replacing (-(longList).size.takeLowestOneBit(), Int)
2021-03-12 10:52:24,845 [main:50] - replacing -(longList).size.takeLowestOneBit() Int
2021-03-12 10:52:24,845 [main:54] - Getting value of type Int
2021-03-12 10:52:24,930 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:24,931 [main:58] - GENERATED VALUE OF TYPE Int = -1048917765
2021-03-12 10:52:24,931 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:25,019 [main:67] - randomType = LinkedHashSet<String>
2021-03-12 10:52:25,101 [main:302] - generating value of type = LinkedHashSet<String> false depth = 0
2021-03-12 10:52:25,193 [main:43] - GENERATING CALL OF fun linkedStringSetOf(elements: String): LkedHashSet<Strg> = TODO()
2021-03-12 10:52:25,194 [main:61] - WITHOUT TYPE PARAMS = fun linkedStringSetOf(elements: String): LkedHashSet<Strg> = TODO()
2021-03-12 10:52:25,283 [main:302] - generating value of type = String true depth = 3
2021-03-12 10:52:25,284 [main:95] - GENERATED = linkedStringSetOf("winuz")
2021-03-12 10:52:25,520 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3bff0935]
2021-03-12 10:52:25,622 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:25,622 [main:78] - Generated call from random type = (linkedStringSetOf("winuz")).size.rem(-119)
2021-03-12 10:52:25,623 [main:106] - GETTING Int from List<Long>
2021-03-12 10:52:25,660 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3780cdef]]
2021-03-12 10:52:25,660 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3780cdef]
2021-03-12 10:52:25,761 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:25,762 [main:117] - GENERATED CALL = (longList).size.plus(73)
2021-03-12 10:52:25,762 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]]
2021-03-12 10:52:25,762 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]
2021-03-12 10:52:25,762 [main:117] - GENERATED CALL = (longList).size.toInt()
2021-03-12 10:52:25,762 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@75852d33]]
2021-03-12 10:52:25,762 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@75852d33]
2021-03-12 10:52:25,863 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 10:52:25,864 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:52:25,865 [main:117] - GENERATED CALL = (longList).sumBy({a: T -> 444987121})
2021-03-12 10:52:25,865 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f8a57c2]]
2021-03-12 10:52:25,865 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.collections.Iterable<kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2f8a57c2]
2021-03-12 10:52:25,865 [main:117] - GENERATED CALL = (longList).sum()
2021-03-12 10:52:25,865 [main:113] - Case = [public abstract fun contains(element: kotlin.Long): kotlin.Boolean defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2d79b8ad], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]]
2021-03-12 10:52:25,865 [main:149] - GENERATING call of type public abstract fun contains(element: kotlin.Long): kotlin.Boolean defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@2d79b8ad]
2021-03-12 10:52:25,951 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:25,952 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]
2021-03-12 10:52:26,032 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:52:26,033 [main:117] - GENERATED CALL = (longList).contains(4532553261694695172).compareTo(true)
2021-03-12 10:52:26,033 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@404f665e]]
2021-03-12 10:52:26,033 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:26,033 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@404f665e]
2021-03-12 10:52:26,033 [main:117] - GENERATED CALL = (longList).get(intListMin).countLeadingZeroBits()
2021-03-12 10:52:26,033 [main:113] - Case = [public val <T> kotlin.collections.List<T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@4e639564]]
2021-03-12 10:52:26,033 [main:117] - GENERATED CALL = (longList).lastIndex
2021-03-12 10:52:26,033 [main:113] - Case = [public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d29a22d]]
2021-03-12 10:52:26,034 [main:149] - GENERATING call of type public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d29a22d]
2021-03-12 10:52:26,115 [main:302] - generating value of type = K false depth = 0
2021-03-12 10:52:26,201 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:26,284 [main:302] - generating value of type = Function1<T, K?> false depth = 0
2021-03-12 10:52:26,284 [main:302] - generating value of type = K false depth = 1
2021-03-12 10:52:26,287 [main:158] - CANT GENERATE PARAMS FOR public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d29a22d]
2021-03-12 10:52:26,288 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@6b9f203c]]
2021-03-12 10:52:26,288 [main:117] - GENERATED CALL = (longList).size.sign
2021-03-12 10:52:26,288 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@486262a4]]
2021-03-12 10:52:26,288 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@486262a4]
2021-03-12 10:52:26,288 [main:117] - GENERATED CALL = (longList).size.takeHighestOneBit()
2021-03-12 10:52:26,288 [main:61] - replacement of -(longList).size.takeLowestOneBit() of type Int is (longList).contains(4532553261694695172).compareTo(true)
2021-03-12 10:52:26,367 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:26,367 [main:66] - Compilation checking started
2021-03-12 10:52:26,758 [main:53] - Result = true
Text:
val intList = listOf(1, 2, -1500472122)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull {a: Int -> -1862662976} ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:26,759 [main:53] - replacing (intList.minByOrNull {a: Int -> -1862662976}, Int?)
2021-03-12 10:52:26,759 [main:50] - replacing intList.minByOrNull {a: Int -> -1862662976} Int?
2021-03-12 10:52:26,760 [main:54] - Getting value of type Int?
2021-03-12 10:52:26,859 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:26,859 [main:58] - GENERATED VALUE OF TYPE Int? = 1512087353
2021-03-12 10:52:26,860 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:26,994 [main:67] - randomType = UShort
2021-03-12 10:52:27,095 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:52:27,142 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@7eb18578]
2021-03-12 10:52:27,236 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:52:27,237 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3bff0935]
2021-03-12 10:52:27,320 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:27,320 [main:78] - Generated call from random type = (23294.toUShort()).compareTo(5.toUByte()).rem(5)
2021-03-12 10:52:27,321 [main:106] - GETTING Int? from List<Int>
2021-03-12 10:52:27,349 [main:113] - Case = [public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d29a22d]]
2021-03-12 10:52:27,349 [main:149] - GENERATING call of type public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d29a22d]
2021-03-12 10:52:27,430 [main:302] - generating value of type = K false depth = 0
2021-03-12 10:52:27,512 [main:302] - generating value of type = Function1<T, K?> false depth = 0
2021-03-12 10:52:27,512 [main:302] - generating value of type = K false depth = 1
2021-03-12 10:52:27,517 [main:158] - CANT GENERATE PARAMS FOR public inline fun <T, K : kotlin.Comparable<K>> kotlin.collections.List<T>.binarySearchBy(key: K?, fromIndex: kotlin.Int = ..., toIndex: kotlin.Int = ..., crossinline selector: (T) -> K?): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3d29a22d]
2021-03-12 10:52:27,517 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component3(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@69c51a7b]]
2021-03-12 10:52:27,517 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component3(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@69c51a7b]
2021-03-12 10:52:27,517 [main:117] - GENERATED CALL = (intList)?.component3()
2021-03-12 10:52:27,517 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1d6b5be4], @kotlin.SinceKotlin public val kotlin.Int.sign: kotlin.Int defined in kotlin.math[DeserializedPropertyDescriptor@6b9f203c]]
2021-03-12 10:52:27,517 [main:117] - GENERATED CALL = (intList)?.size.sign
2021-03-12 10:52:27,518 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6848faeb]]
2021-03-12 10:52:27,518 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.minByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6848faeb]
2021-03-12 10:52:27,603 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-12 10:52:27,603 [main:302] - generating value of type = R false depth = 1
2021-03-12 10:52:27,696 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->String): R = TODO()
2021-03-12 10:52:27,697 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->String): R = TODO()
2021-03-12 10:52:28,020 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:52:28,020 [main:302] - generating value of type = Function0<String> false depth = 4
2021-03-12 10:52:28,021 [main:302] - generating value of type = String true depth = 5
2021-03-12 10:52:28,021 [main:95] - GENERATED = synchronized<String>("siumz", { "zxtkp"})
2021-03-12 10:52:28,022 [main:117] - GENERATED CALL = (intList)?.minByOrNull({a: T -> synchronized<String>("siumz", { "zxtkp"})})
2021-03-12 10:52:28,022 [main:113] - Case = [@kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.maxOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@216cc310]]
2021-03-12 10:52:28,022 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun <T : kotlin.Comparable<T>> kotlin.collections.Iterable<T>.maxOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@216cc310]
2021-03-12 10:52:28,022 [main:117] - GENERATED CALL = (intList)?.maxOrNull()
2021-03-12 10:52:28,022 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1d6b5be4], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]]
2021-03-12 10:52:28,022 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]
2021-03-12 10:52:28,023 [main:117] - GENERATED CALL = (intList)?.size.and(intListMin)
2021-03-12 10:52:28,023 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1d6b5be4], public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]]
2021-03-12 10:52:28,023 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@517b41f]
2021-03-12 10:52:28,023 [main:117] - GENERATED CALL = (intList)?.size.toInt()
2021-03-12 10:52:28,023 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@1d6b5be4], public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6d7625db]]
2021-03-12 10:52:28,023 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@6d7625db]
2021-03-12 10:52:28,109 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:28,109 [main:117] - GENERATED CALL = (intList)?.size.compareTo(-2)
2021-03-12 10:52:28,109 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@11208f5e]]
2021-03-12 10:52:28,110 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@11208f5e]
2021-03-12 10:52:28,197 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:28,280 [main:302] - generating value of type = Function1<Int, T> false depth = 0
2021-03-12 10:52:28,281 [main:302] - generating value of type = T false depth = 1
2021-03-12 10:52:28,364 [main:43] - GENERATING CALL OF fun <T> maxOf(a: Int, b: Int, comparator: kotlin.Comparator<Int>): T = TODO()
2021-03-12 10:52:28,365 [main:61] - WITHOUT TYPE PARAMS = fun <T> maxOf(a: Int, b: Int, comparator: kotlin.Comparator<Int>): T = TODO()
2021-03-12 10:52:28,559 [main:302] - generating value of type = Int true depth = 4
2021-03-12 10:52:28,560 [main:302] - generating value of type = Int true depth = 4
2021-03-12 10:52:28,560 [main:302] - generating value of type = Comparator<Int> false depth = 4
2021-03-12 10:52:28,647 [main:43] - GENERATING CALL OF fun <T> compareBy(selectors: Function1<Int, Comparable<*>?>): Comparator<Int> = TODO()
2021-03-12 10:52:28,649 [main:61] - WITHOUT TYPE PARAMS = fun <T> compareBy(selectors: Function1<Int, Comparable<*>?>): Comparator<Int> = TODO()
2021-03-12 10:52:28,762 [main:302] - generating value of type = Function1<Int, Comparable<*>?> false depth = 7
2021-03-12 10:52:28,763 [main:302] - generating value of type = Comparable<*> false depth = 8
2021-03-12 10:52:28,767 [main:95] - GENERATED = compareBy<Int>({a: Int -> 0.9097188f})
2021-03-12 10:52:28,768 [main:95] - GENERATED = maxOf<Int>(-128900979, 344184260, compareBy<Int>({a: Int -> 0.9097188f}))
2021-03-12 10:52:28,768 [main:117] - GENERATED CALL = (intList)?.elementAtOrElse(368216140, {a: Int -> maxOf<Int>(-128900979, 344184260, compareBy<Int>({a: Int -> 0.9097188f}))})
2021-03-12 10:52:28,768 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bd3df07]]
2021-03-12 10:52:28,768 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bd3df07]
2021-03-12 10:52:28,862 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 10:52:28,862 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:52:28,863 [main:117] - GENERATED CALL = (intList)?.sumOf({a: T -> 168855997})
2021-03-12 10:52:28,863 [main:61] - replacement of intList.minByOrNull {a: Int -> -1862662976} of type Int? is (intList)?.maxOrNull()
2021-03-12 10:52:28,953 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(SAFE_ACCESS_EXPRESSION)
2021-03-12 10:52:28,953 [main:66] - Compilation checking started
2021-03-12 10:52:29,291 [main:53] - Result = true
Text:
val intList = listOf(1, 2, -1500472122)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:29,292 [main:53] - replacing (listOf(1, 2, -1500472122), List<Int>)
2021-03-12 10:52:29,292 [main:50] - replacing listOf(1, 2, -1500472122) List<Int>
2021-03-12 10:52:29,292 [main:54] - Getting value of type List<Int>
2021-03-12 10:52:29,386 [main:302] - generating value of type = List<Int> false depth = 0
2021-03-12 10:52:29,475 [main:43] - GENERATING CALL OF fun <E> ArrayList(): List<Int> = TODO()
2021-03-12 10:52:29,476 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): List<Int> = TODO()
2021-03-12 10:52:29,562 [main:95] - GENERATED = ArrayList<Int>()
2021-03-12 10:52:29,563 [main:58] - GENERATED VALUE OF TYPE List<Int> = ArrayList<Int>()
2021-03-12 10:52:29,563 [main:61] - GENERATED IS CALL =true
2021-03-12 10:52:29,652 [main:67] - randomType = ArrayDeque<Long>
2021-03-12 10:52:29,736 [main:302] - generating value of type = ArrayDeque<Long> false depth = 0
2021-03-12 10:52:29,835 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Long>): ArrayDeque<Long> = TODO()
2021-03-12 10:52:29,836 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Long>): ArrayDeque<Long> = TODO()
2021-03-12 10:52:30,024 [main:302] - generating value of type = Collection<Long> false depth = 3
2021-03-12 10:52:30,107 [main:43] - GENERATING CALL OF fun UByteArray(size: kotlin.Int): Collection<Long> = TODO()
2021-03-12 10:52:30,108 [main:61] - WITHOUT TYPE PARAMS = fun UByteArray(size: kotlin.Int): Collection<Long> = TODO()
2021-03-12 10:52:30,271 [main:302] - generating value of type = Int true depth = 6
2021-03-12 10:52:30,272 [main:95] - GENERATED = UByteArray(-1027147176)
2021-03-12 10:52:30,272 [main:95] - GENERATED = ArrayDeque<Long>(UByteArray(-1027147176))
2021-03-12 10:52:30,419 [main:106] - GETTING List<Int> from List<Int>
2021-03-12 10:52:30,442 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.dropWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76462bc3]]
2021-03-12 10:52:30,442 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.dropWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@76462bc3]
2021-03-12 10:52:30,522 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:52:30,523 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:52:30,523 [main:117] - GENERATED CALL = (intList).dropWhile({a: T -> false})
2021-03-12 10:52:30,524 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.takeWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@440bf250]]
2021-03-12 10:52:30,524 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.takeWhile(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@440bf250]
2021-03-12 10:52:30,601 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:52:30,602 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:52:30,602 [main:117] - GENERATED CALL = (intList).takeWhile({a: T -> false})
2021-03-12 10:52:30,602 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.toList(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@767dbe36]]
2021-03-12 10:52:30,602 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.toList(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@767dbe36]
2021-03-12 10:52:30,603 [main:117] - GENERATED CALL = (intList).toList()
2021-03-12 10:52:30,603 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ac44f33]]
2021-03-12 10:52:30,603 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6ac44f33]
2021-03-12 10:52:30,681 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-12 10:52:30,763 [main:43] - GENERATING CALL OF fun <T> MutableList(size: kotlin.Int, init: (index: kotlin.Int)->Int): Iterable<Int> = TODO()
2021-03-12 10:52:30,764 [main:61] - WITHOUT TYPE PARAMS = fun <T> MutableList(size: kotlin.Int, init: (index: kotlin.Int)->Int): Iterable<Int> = TODO()
2021-03-12 10:52:31,089 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:52:31,090 [main:302] - generating value of type = Function1<[@kotlin.ParameterName] Int, Int> false depth = 3
2021-03-12 10:52:31,090 [main:302] - generating value of type = Int true depth = 4
2021-03-12 10:52:31,091 [main:95] - GENERATED = MutableList<Int>(-1414891628, {a: Int -> 992639232})
2021-03-12 10:52:31,091 [main:117] - GENERATED CALL = (intList).slice(MutableList<Int>(-1414891628, {a: Int -> 992639232}))
2021-03-12 10:52:31,091 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.asReversed(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fe618cc]]
2021-03-12 10:52:31,092 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.asReversed(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@fe618cc]
2021-03-12 10:52:31,092 [main:117] - GENERATED CALL = (intList).asReversed()
2021-03-12 10:52:31,092 [main:113] - Case = [public fun <T : kotlin.Any> kotlin.collections.Iterable<T?>.filterNotNull(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7cbe3c73]]
2021-03-12 10:52:31,092 [main:149] - GENERATING call of type public fun <T : kotlin.Any> kotlin.collections.Iterable<T?>.filterNotNull(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7cbe3c73]
2021-03-12 10:52:31,093 [main:117] - GENERATED CALL = (intList).filterNotNull()
2021-03-12 10:52:31,093 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.takeLast(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41288da3]]
2021-03-12 10:52:31,093 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.takeLast(n: kotlin.Int): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@41288da3]
2021-03-12 10:52:31,197 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:31,198 [main:117] - GENERATED CALL = (intList).takeLast(57846389)
2021-03-12 10:52:31,198 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.filterNot(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71993eba]]
2021-03-12 10:52:31,198 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.filterNot(predicate: (T) -> kotlin.Boolean): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@71993eba]
2021-03-12 10:52:31,282 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:52:31,283 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:52:31,283 [main:117] - GENERATED CALL = (intList).filterNot({a: T -> false})
2021-03-12 10:52:31,284 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>?.orEmpty(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1894b733]]
2021-03-12 10:52:31,284 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>?.orEmpty(): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1894b733]
2021-03-12 10:52:31,284 [main:117] - GENERATED CALL = (intList).orEmpty()
2021-03-12 10:52:31,284 [main:113] - Case = [public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedByDescending(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@62cce6c0]]
2021-03-12 10:52:31,284 [main:149] - GENERATING call of type public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.sortedByDescending(crossinline selector: (T) -> R?): kotlin.collections.List<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@62cce6c0]
2021-03-12 10:52:31,380 [main:302] - generating value of type = Function1<T, R?> false depth = 0
2021-03-12 10:52:31,381 [main:302] - generating value of type = R false depth = 1
2021-03-12 10:52:31,724 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->MutableMap<Int?, ULong>): R = TODO()
2021-03-12 10:52:31,725 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->MutableMap<Int?, ULong>): R = TODO()
2021-03-12 10:52:32,001 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:52:32,002 [main:302] - generating value of type = Function0<MutableMap<Int?, ULong>> false depth = 4
2021-03-12 10:52:32,002 [main:302] - generating value of type = MutableMap<Int?, ULong> false depth = 5
2021-03-12 10:52:32,088 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): MutableMap<Int?, ULong> = TODO()
2021-03-12 10:52:32,089 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): MutableMap<Int?, ULong> = TODO()
2021-03-12 10:52:32,195 [main:95] - GENERATED = linkedMapOf<Int?, ULong>()
2021-03-12 10:52:32,196 [main:95] - GENERATED = synchronized<MutableMap<Int?, ULong>>("qgcbn", { linkedMapOf<Int?, ULong>()})
2021-03-12 10:52:32,196 [main:117] - GENERATED CALL = (intList).sortedByDescending({a: T -> synchronized<MutableMap<Int?, ULong>>("qgcbn", { linkedMapOf<Int?, ULong>()})})
2021-03-12 10:52:32,197 [main:61] - replacement of listOf(1, 2, -1500472122) of type List<Int> is ArrayList<Int>()
2021-03-12 10:52:32,289 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:52:32,289 [main:66] - Compilation checking started
2021-03-12 10:52:32,752 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:32,753 [main:53] - replacing (longListMin, Long)
2021-03-12 10:52:32,754 [main:50] - replacing longListMin Long
2021-03-12 10:52:32,754 [main:54] - Getting value of type Long
2021-03-12 10:52:32,873 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:32,873 [main:58] - GENERATED VALUE OF TYPE Long = -8666143612647948857
2021-03-12 10:52:32,873 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:33,015 [main:67] - randomType = Char
2021-03-12 10:52:33,115 [main:302] - generating value of type = Char true depth = 0
2021-03-12 10:52:33,159 [main:149] - GENERATING call of type public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@2586ccb7]
2021-03-12 10:52:33,159 [main:78] - Generated call from random type = ('╯').toLong()
2021-03-12 10:52:33,161 [main:106] - GETTING Long from Int
2021-03-12 10:52:33,235 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@654ca409]]
2021-03-12 10:52:33,235 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:33,349 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:33,350 [main:149] - GENERATING call of type public fun kotlin.Long.coerceAtLeast(minimumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@654ca409]
2021-03-12 10:52:33,450 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:33,451 [main:117] - GENERATED CALL = (intListMin).div(-2785384886787604514).coerceAtLeast(2039187449486211738)
2021-03-12 10:52:33,451 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@30c8ab4c]]
2021-03-12 10:52:33,451 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:52:33,452 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@30c8ab4c]
2021-03-12 10:52:33,547 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:33,548 [main:117] - GENERATED CALL = (intListMin).toLong().and(1593015038970284424)
2021-03-12 10:52:33,548 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c5a438e]]
2021-03-12 10:52:33,548 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:33,643 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:33,644 [main:149] - GENERATING call of type public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c5a438e]
2021-03-12 10:52:33,644 [main:117] - GENERATED CALL = (intListMin).div(7382672095160183001).inv()
2021-03-12 10:52:33,644 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], public fun kotlin.Long.coerceAtMost(maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@57ddbe75]]
2021-03-12 10:52:33,644 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:52:33,645 [main:149] - GENERATING call of type public fun kotlin.Long.coerceAtMost(maximumValue: kotlin.Long): kotlin.Long defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@57ddbe75]
2021-03-12 10:52:33,759 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:33,760 [main:117] - GENERATED CALL = (intListMin).toLong().coerceAtMost(-4156403320276504669)
2021-03-12 10:52:33,760 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@da79d11]]
2021-03-12 10:52:33,760 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:33,889 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:33,889 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@da79d11]
2021-03-12 10:52:34,001 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:34,001 [main:117] - GENERATED CALL = (intListMin).div(-6031859660984533090).rotateRight(-1165877486)
2021-03-12 10:52:34,001 [main:113] - Case = [public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4cea19ad], public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@36609325]]
2021-03-12 10:52:34,002 [main:149] - GENERATING call of type public abstract fun toFloat(): kotlin.Float defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4cea19ad]
2021-03-12 10:52:34,002 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@36609325]
2021-03-12 10:52:34,002 [main:117] - GENERATED CALL = (intListMin).toFloat().toLong()
2021-03-12 10:52:34,002 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], public final operator fun unaryMinus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7ee04ff5]]
2021-03-12 10:52:34,002 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:34,103 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:34,103 [main:149] - GENERATING call of type public final operator fun unaryMinus(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@7ee04ff5]
2021-03-12 10:52:34,103 [main:117] - GENERATED CALL = (intListMin).div(2795240099427113324).unaryMinus()
2021-03-12 10:52:34,104 [main:113] - Case = [public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3222e820], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@3dd34335]]
2021-03-12 10:52:34,104 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Double): kotlin.Double defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3222e820]
2021-03-12 10:52:34,203 [main:302] - generating value of type = Double true depth = 0
2021-03-12 10:52:34,204 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@3dd34335]
2021-03-12 10:52:34,204 [main:117] - GENERATED CALL = (intListMin).div(0.8740664175277576).toBits()
2021-03-12 10:52:34,204 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], public final infix fun shl(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5636f71b]]
2021-03-12 10:52:34,204 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:34,298 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:34,299 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5636f71b]
2021-03-12 10:52:34,299 [main:117] - GENERATED CALL = (intListMin).div(-8815990090580431151).shl(intListMax)
2021-03-12 10:52:34,299 [main:113] - Case = [public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@298e6a00], public open val endInclusive: kotlin.Long defined in kotlin.ranges.LongRange[DeserializedPropertyDescriptor@da1056e]]
2021-03-12 10:52:34,299 [main:149] - GENERATING call of type public final operator fun rangeTo(other: kotlin.Long): kotlin.ranges.LongRange defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@298e6a00]
2021-03-12 10:52:34,399 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:34,400 [main:117] - GENERATED CALL = (intListMin).rangeTo(2623664039187222188).endInclusive
2021-03-12 10:52:34,400 [main:61] - replacement of longListMin of type Long is (intListMin).rangeTo(2623664039187222188).endInclusive
2021-03-12 10:52:34,493 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:34,493 [main:66] - Compilation checking started
2021-03-12 10:52:34,867 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$longListMin"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:34,868 [main:53] - replacing (intList.maxByOrNull { it }, Int?)
2021-03-12 10:52:34,868 [main:50] - replacing intList.maxByOrNull { it } Int?
2021-03-12 10:52:34,868 [main:54] - Getting value of type Int?
2021-03-12 10:52:34,978 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:34,978 [main:58] - GENERATED VALUE OF TYPE Int? = -232214032
2021-03-12 10:52:34,979 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:35,174 [main:67] - randomType = UShort?
2021-03-12 10:52:35,283 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:52:35,341 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@435ac3e9]
2021-03-12 10:52:35,444 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:52:35,444 [main:78] - Generated call from random type = (10922.toUShort())?.compareTo(94.toUByte()).sign
2021-03-12 10:52:35,445 [main:61] - replacement of intList.maxByOrNull { it } of type Int? is -232214032
2021-03-12 10:52:35,546 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-12 10:52:35,546 [main:53] - replacing (longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1, Long)
2021-03-12 10:52:35,547 [main:50] - replacing longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1 Long
2021-03-12 10:52:35,547 [main:54] - Getting value of type Long
2021-03-12 10:52:35,666 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:35,667 [main:58] - GENERATED VALUE OF TYPE Long = 404139645713378853
2021-03-12 10:52:35,667 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:35,668 [main:67] - randomType = Int?
2021-03-12 10:52:35,767 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:35,846 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:35,934 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:35,935 [main:149] - GENERATING call of type public final operator fun dec(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6281472]
2021-03-12 10:52:35,935 [main:78] - Generated call from random type = (1590519940)?.div(-6340300351345592001).dec()
2021-03-12 10:52:35,935 [main:61] - replacement of longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1 of type Long is (1590519940)?.div(-6340300351345592001).dec()
2021-03-12 10:52:36,043 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:36,044 [main:53] - replacing ({ it }, Function1<Int, Int>)
2021-03-12 10:52:36,044 [main:50] - replacing { it } Function1<Int, Int>
2021-03-12 10:52:36,044 [main:54] - Getting value of type Function1<Int, Int>
2021-03-12 10:52:36,154 [main:302] - generating value of type = Function1<Int, Int> false depth = 0
2021-03-12 10:52:36,155 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:52:36,155 [main:58] - GENERATED VALUE OF TYPE Function1<Int, Int> = {a: Int -> -1799059936}
2021-03-12 10:52:36,155 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:36,156 [main:67] - randomType = String
2021-03-12 10:52:36,270 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:52:36,303 [main:61] - replacement of { it } of type Function1<Int, Int> is {a: Int -> -1799059936}
2021-03-12 10:52:36,415 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 10:52:36,416 [main:53] - replacing (1, Int)
2021-03-12 10:52:36,416 [main:50] - replacing 1 Int
2021-03-12 10:52:36,416 [main:54] - Getting value of type Int
2021-03-12 10:52:36,510 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:36,510 [main:58] - GENERATED VALUE OF TYPE Int = -370606026
2021-03-12 10:52:36,510 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:36,617 [main:67] - randomType = Boolean?
2021-03-12 10:52:36,701 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:52:36,715 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]
2021-03-12 10:52:36,811 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:52:36,811 [main:78] - Generated call from random type = (false)?.compareTo(false).sign
2021-03-12 10:52:36,811 [main:61] - replacement of 1 of type Int is -370606026
2021-03-12 10:52:36,916 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-12 10:52:36,917 [main:53] - replacing (longList.maxByOrNull { it }, Long?)
2021-03-12 10:52:36,917 [main:50] - replacing longList.maxByOrNull { it } Long?
2021-03-12 10:52:36,917 [main:54] - Getting value of type Long?
2021-03-12 10:52:37,018 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:37,019 [main:58] - GENERATED VALUE OF TYPE Long? = 4598665295011431747
2021-03-12 10:52:37,019 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:37,020 [main:67] - randomType = Boolean
2021-03-12 10:52:37,118 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:52:37,134 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]
2021-03-12 10:52:37,231 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:52:37,232 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:37,315 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:37,316 [main:78] - Generated call from random type = (true).compareTo(true).div(-8849729072931500591)
2021-03-12 10:52:37,316 [main:61] - replacement of longList.maxByOrNull { it } of type Long? is (true).compareTo(true).div(-8849729072931500591)
2021-03-12 10:52:37,411 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:37,411 [main:53] - replacing (intList.minByOrNull {a: Int -> -1862662976}, Int?)
2021-03-12 10:52:37,412 [main:50] - replacing intList.minByOrNull {a: Int -> -1862662976} Int?
2021-03-12 10:52:37,412 [main:54] - Getting value of type Int?
2021-03-12 10:52:37,509 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:37,509 [main:58] - GENERATED VALUE OF TYPE Int? = -1565843043
2021-03-12 10:52:37,509 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:37,606 [main:67] - randomType = ULong
2021-03-12 10:52:37,703 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:52:37,781 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toShort(): kotlin.Short defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@5b863882]
2021-03-12 10:52:37,781 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental @kotlin.internal.InlineOnly public inline fun kotlin.Short.countLeadingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@39d0670c]
2021-03-12 10:52:37,782 [main:78] - Generated call from random type = (5824995174468046594.toULong()).toShort().countLeadingZeroBits()
2021-03-12 10:52:37,782 [main:61] - replacement of intList.minByOrNull {a: Int -> -1862662976} of type Int? is (5824995174468046594.toULong()).toShort().countLeadingZeroBits()
2021-03-12 10:52:37,892 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:37,892 [main:53] - replacing (2L, Long)
2021-03-12 10:52:37,893 [main:50] - replacing 2L Long
2021-03-12 10:52:37,893 [main:54] - Getting value of type Long
2021-03-12 10:52:37,988 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:37,989 [main:58] - GENERATED VALUE OF TYPE Long = 3027524765413001168
2021-03-12 10:52:37,989 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:37,989 [main:67] - randomType = Double
2021-03-12 10:52:38,089 [main:302] - generating value of type = Double true depth = 0
2021-03-12 10:52:38,145 [main:149] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@43a0764a]
2021-03-12 10:52:38,145 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@698b0aa4]
2021-03-12 10:52:38,146 [main:78] - Generated call from random type = (0.12457779963176752).toShort().toLong()
2021-03-12 10:52:38,147 [main:106] - GETTING Long from List<Long>
2021-03-12 10:52:38,176 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final operator fun inc(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@53a3f470]]
2021-03-12 10:52:38,176 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:38,270 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:38,271 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@53a3f470]
2021-03-12 10:52:38,271 [main:117] - GENERATED CALL = (longList).get(767932214).inc()
2021-03-12 10:52:38,271 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c5a438e]]
2021-03-12 10:52:38,272 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:38,365 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:38,365 [main:149] - GENERATING call of type public final fun inv(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6c5a438e]
2021-03-12 10:52:38,366 [main:117] - GENERATED CALL = (longList).get(1682644997).inv()
2021-03-12 10:52:38,366 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@3057fb66]]
2021-03-12 10:52:38,366 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:38,459 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:38,460 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Long.takeHighestOneBit(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@3057fb66]
2021-03-12 10:52:38,460 [main:117] - GENERATED CALL = (longList).get(1803983745).takeHighestOneBit()
2021-03-12 10:52:38,460 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.getOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@72594e59]]
2021-03-12 10:52:38,461 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.getOrNull(index: kotlin.Int): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@72594e59]
2021-03-12 10:52:38,563 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:38,563 [main:117] - GENERATED CALL = (longList).getOrNull(1245701923)
2021-03-12 10:52:38,563 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.findLast(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@258184e7]]
2021-03-12 10:52:38,564 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.findLast(predicate: (T) -> kotlin.Boolean): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@258184e7]
2021-03-12 10:52:38,658 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:52:38,658 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:52:38,659 [main:117] - GENERATED CALL = (longList).findLast({a: T -> false})
2021-03-12 10:52:38,659 [main:113] - Case = [@kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.maxByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@55f48623]]
2021-03-12 10:52:38,659 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun <T, R : kotlin.Comparable<R>> kotlin.collections.Iterable<T>.maxByOrNull(selector: (T) -> R): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@55f48623]
2021-03-12 10:52:38,750 [main:302] - generating value of type = Function1<T, R> false depth = 0
2021-03-12 10:52:38,750 [main:302] - generating value of type = R false depth = 1
2021-03-12 10:52:39,287 [main:43] - GENERATING CALL OF fun <R> synchronized(lock: kotlin.Any, block: ()->Function1<Float, HashSet<UInt>>): R = TODO()
2021-03-12 10:52:39,288 [main:61] - WITHOUT TYPE PARAMS = fun <R> synchronized(lock: kotlin.Any, block: ()->Function1<Float, HashSet<UInt>>): R = TODO()
2021-03-12 10:52:39,578 [main:302] - generating value of type = Any false depth = 4
2021-03-12 10:52:39,579 [main:302] - generating value of type = Function0<Function1<Float, HashSet<UInt>>> false depth = 4
2021-03-12 10:52:39,579 [main:302] - generating value of type = Function1<Float, HashSet<UInt>> false depth = 5
2021-03-12 10:52:39,579 [main:302] - generating value of type = HashSet<UInt> false depth = 6
2021-03-12 10:52:39,668 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): HashSet<UInt> = TODO()
2021-03-12 10:52:39,669 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): HashSet<UInt> = TODO()
2021-03-12 10:52:39,783 [main:95] - GENERATED = linkedSetOf<UInt>()
2021-03-12 10:52:39,783 [main:95] - GENERATED = synchronized<Function1<Float, HashSet<UInt>>>("cerar", { {a: Float -> linkedSetOf<UInt>()}})
2021-03-12 10:52:39,784 [main:117] - GENERATED CALL = (longList).maxByOrNull({a: T -> synchronized<Function1<Float, HashSet<UInt>>>("cerar", { {a: Float -> linkedSetOf<UInt>()}})})
2021-03-12 10:52:39,784 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], public final operator fun times(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3a82ff5]]
2021-03-12 10:52:39,784 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:39,880 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:39,880 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3a82ff5]
2021-03-12 10:52:39,976 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:39,976 [main:117] - GENERATED CALL = (longList).get(2028087607).times(-7)
2021-03-12 10:52:39,976 [main:113] - Case = [public fun <T> kotlin.collections.List<T>.singleOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b61601d]]
2021-03-12 10:52:39,977 [main:149] - GENERATING call of type public fun <T> kotlin.collections.List<T>.singleOrNull(): T? defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@b61601d]
2021-03-12 10:52:39,977 [main:117] - GENERATED CALL = (longList).singleOrNull()
2021-03-12 10:52:39,977 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@da79d11]]
2021-03-12 10:52:39,977 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@4161d3f8]
2021-03-12 10:52:40,077 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:40,077 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Long.rotateRight(bitCount: kotlin.Int): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@da79d11]
2021-03-12 10:52:40,186 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:40,187 [main:117] - GENERATED CALL = (longList).get(508512833).rotateRight(1390237127)
2021-03-12 10:52:40,187 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component5(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626f0377]]
2021-03-12 10:52:40,187 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component5(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@626f0377]
2021-03-12 10:52:40,188 [main:117] - GENERATED CALL = (longList).component5()
2021-03-12 10:52:40,188 [main:61] - replacement of 2L of type Long is (longList).singleOrNull()
2021-03-12 10:52:40,297 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:40,297 [main:66] - Compilation checking started
2021-03-12 10:52:40,647 [main:49] - Result = false
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, (longList).singleOrNull(), 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$longListMin"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:40,648 [main:53] - replacing (it, Int)
2021-03-12 10:52:40,648 [main:50] - replacing it Int
2021-03-12 10:52:40,648 [main:54] - Getting value of type Int
2021-03-12 10:52:40,783 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:40,783 [main:58] - GENERATED VALUE OF TYPE Int = 253471956
2021-03-12 10:52:40,784 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:40,918 [main:67] - randomType = HashSet<Boolean>
2021-03-12 10:52:41,060 [main:302] - generating value of type = HashSet<Boolean> false depth = 0
2021-03-12 10:52:41,184 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Boolean): HashSet<Boolean> = TODO()
2021-03-12 10:52:41,185 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Boolean): HashSet<Boolean> = TODO()
2021-03-12 10:52:41,277 [main:302] - generating value of type = Boolean true depth = 3
2021-03-12 10:52:41,278 [main:95] - GENERATED = linkedSetOf<Boolean>(true)
2021-03-12 10:52:41,423 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@486262a4]
2021-03-12 10:52:41,423 [main:78] - Generated call from random type = (linkedSetOf<Boolean>(true)).size.takeHighestOneBit()
2021-03-12 10:52:41,423 [main:61] - replacement of it of type Int is (linkedSetOf<Boolean>(true)).size.takeHighestOneBit()
2021-03-12 10:52:41,515 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:41,517 [main:53] - replacing (longListMin, Long)
2021-03-12 10:52:41,517 [main:50] - replacing longListMin Long
2021-03-12 10:52:41,517 [main:54] - Getting value of type Long
2021-03-12 10:52:41,612 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:41,612 [main:58] - GENERATED VALUE OF TYPE Long = -5905039902841454235
2021-03-12 10:52:41,612 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:41,699 [main:67] - randomType = ULong
2021-03-12 10:52:41,797 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:52:41,840 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toByte(): kotlin.Byte defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@2a0d92f4]
2021-03-12 10:52:41,840 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@3fa5b22c]
2021-03-12 10:52:41,944 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:41,945 [main:78] - Generated call from random type = (9071084767472366377.toULong()).toByte().div(-6324559134659381455)
2021-03-12 10:52:41,946 [main:106] - GETTING Long from Int
2021-03-12 10:52:41,994 [main:113] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21aab942], @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@3dd34335]]
2021-03-12 10:52:41,994 [main:149] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21aab942]
2021-03-12 10:52:41,994 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.js.library public fun kotlin.Double.toBits(): kotlin.Long defined in kotlin[DeserializedSimpleFunctionDescriptor@3dd34335]
2021-03-12 10:52:41,995 [main:117] - GENERATED CALL = (intListMax).toDouble().toBits()
2021-03-12 10:52:41,995 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@30c8ab4c]]
2021-03-12 10:52:41,995 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:52:41,995 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Long): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@30c8ab4c]
2021-03-12 10:52:42,092 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:42,093 [main:117] - GENERATED CALL = (intListMax).toLong().and(4229491351030083694)
2021-03-12 10:52:42,093 [main:113] - Case = [public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e2a1bdc]]
2021-03-12 10:52:42,093 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2e2a1bdc]
2021-03-12 10:52:42,224 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:42,225 [main:117] - GENERATED CALL = (intListMax).minus(8391649093759060609)
2021-03-12 10:52:42,225 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@226dfffd]]
2021-03-12 10:52:42,225 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:52:42,225 [main:149] - GENERATING call of type @kotlin.SinceKotlin public final operator fun rem(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@226dfffd]
2021-03-12 10:52:42,336 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:42,337 [main:117] - GENERATED CALL = (intListMax).toInt().rem(3280862214840005591)
2021-03-12 10:52:42,337 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4], public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@780435b0]]
2021-03-12 10:52:42,337 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4]
2021-03-12 10:52:42,337 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Long): kotlin.Long defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@780435b0]
2021-03-12 10:52:42,436 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:42,437 [main:117] - GENERATED CALL = (intListMax).toShort().minus(-277818916755828573)
2021-03-12 10:52:42,437 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], public final infix fun shl(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5636f71b]]
2021-03-12 10:52:42,437 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:42,527 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:42,528 [main:149] - GENERATING call of type public final infix fun shl(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@5636f71b]
2021-03-12 10:52:42,528 [main:117] - GENERATED CALL = (intListMax).div(9055603940795170349).shl(intListMin)
2021-03-12 10:52:42,529 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], public open fun toLong(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3657b7b4]]
2021-03-12 10:52:42,529 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:52:42,529 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3657b7b4]
2021-03-12 10:52:42,529 [main:117] - GENERATED CALL = (intListMax).toLong().toLong()
2021-03-12 10:52:42,529 [main:113] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@519b645c]]
2021-03-12 10:52:42,529 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@519b645c]
2021-03-12 10:52:42,530 [main:117] - GENERATED CALL = (intListMax).toLong()
2021-03-12 10:52:42,530 [main:113] - Case = [public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1ba5b2a8]]
2021-03-12 10:52:42,530 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1ba5b2a8]
2021-03-12 10:52:42,617 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:42,618 [main:117] - GENERATED CALL = (intListMax).times(-9209664025183626614)
2021-03-12 10:52:42,618 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], public final infix fun shr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@13eb533b]]
2021-03-12 10:52:42,618 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:52:42,737 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:42,738 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@13eb533b]
2021-03-12 10:52:42,738 [main:117] - GENERATED CALL = (intListMax).div(2022310583222933393).shr(intListMax)
2021-03-12 10:52:42,738 [main:61] - replacement of longListMin of type Long is (intListMax).div(9055603940795170349).shl(intListMin)
2021-03-12 10:52:42,835 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:42,835 [main:66] - Compilation checking started
2021-03-12 10:52:43,186 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(9055603940795170349).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:52:43,186 [main:53] - replacing (longListMin, Long)
2021-03-12 10:52:43,186 [main:50] - replacing longListMin Long
2021-03-12 10:52:43,186 [main:54] - Getting value of type Long
2021-03-12 10:52:43,295 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:43,295 [main:58] - GENERATED VALUE OF TYPE Long = 3029450399561989966
2021-03-12 10:52:43,296 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:43,487 [main:67] - randomType = Set<Float>
2021-03-12 10:52:43,487 [main:61] - replacement of longListMin of type Long is 3029450399561989966
2021-03-12 10:52:43,589 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-12 10:52:43,590 [main:53] - replacing (listOf(1, 2, -1500472122), List<Int>)
2021-03-12 10:52:43,590 [main:50] - replacing listOf(1, 2, -1500472122) List<Int>
2021-03-12 10:52:43,590 [main:54] - Getting value of type List<Int>
2021-03-12 10:52:43,700 [main:302] - generating value of type = List<Int> false depth = 0
2021-03-12 10:52:43,792 [main:43] - GENERATING CALL OF fun <E> ArrayList(initialCapacity: kotlin.Int): List<Int> = TODO()
2021-03-12 10:52:43,793 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(initialCapacity: kotlin.Int): List<Int> = TODO()
2021-03-12 10:52:44,000 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:52:44,001 [main:95] - GENERATED = ArrayList<Int>(840159948)
2021-03-12 10:52:44,001 [main:58] - GENERATED VALUE OF TYPE List<Int> = ArrayList<Int>(840159948)
2021-03-12 10:52:44,001 [main:61] - GENERATED IS CALL =true
2021-03-12 10:52:44,002 [main:67] - randomType = Double
2021-03-12 10:52:44,094 [main:302] - generating value of type = Double true depth = 0
2021-03-12 10:52:44,130 [main:61] - replacement of listOf(1, 2, -1500472122) of type List<Int> is ArrayList<Int>(840159948)
2021-03-12 10:52:44,225 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:52:44,225 [main:53] - replacing (it, Int)
2021-03-12 10:52:44,225 [main:50] - replacing it Int
2021-03-12 10:52:44,225 [main:54] - Getting value of type Int
2021-03-12 10:52:44,324 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:44,325 [main:58] - GENERATED VALUE OF TYPE Int = -702849469
2021-03-12 10:52:44,325 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:44,618 [main:67] - randomType = Sequence<Short?>
2021-03-12 10:52:44,618 [main:61] - replacement of it of type Int is -702849469
2021-03-12 10:52:44,706 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-12 10:52:44,707 [main:53] - replacing (longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1, Long)
2021-03-12 10:52:44,707 [main:50] - replacing longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1 Long
2021-03-12 10:52:44,707 [main:54] - Getting value of type Long
2021-03-12 10:52:44,814 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:44,815 [main:58] - GENERATED VALUE OF TYPE Long = -7526255260273196158
2021-03-12 10:52:44,815 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:45,008 [main:67] - randomType = UShort?
2021-03-12 10:52:45,106 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:52:45,151 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@429d8837]
2021-03-12 10:52:45,270 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:52:45,271 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@20fc0bee]
2021-03-12 10:52:45,373 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:45,374 [main:78] - Generated call from random type = (20278.toUShort())?.compareTo(79.toUByte()).plus(5089902831099291726)
2021-03-12 10:52:45,374 [main:61] - replacement of longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1 of type Long is (20278.toUShort())?.compareTo(79.toUByte()).plus(5089902831099291726)
2021-03-12 10:52:45,472 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:45,472 [main:53] - replacing ({ (longList).get(-1251327640).countTrailingZeroBits() }, Function1<Int, Int>)
2021-03-12 10:52:45,472 [main:50] - replacing { (longList).get(-1251327640).countTrailingZeroBits() } Function1<Int, Int>
2021-03-12 10:52:45,472 [main:54] - Getting value of type Function1<Int, Int>
2021-03-12 10:52:45,576 [main:302] - generating value of type = Function1<Int, Int> false depth = 0
2021-03-12 10:52:45,577 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:52:45,577 [main:58] - GENERATED VALUE OF TYPE Function1<Int, Int> = {a: Int -> -2004372045}
2021-03-12 10:52:45,577 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:45,578 [main:67] - randomType = Boolean
2021-03-12 10:52:45,678 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:52:45,692 [main:61] - replacement of { (longList).get(-1251327640).countTrailingZeroBits() } of type Function1<Int, Int> is {a: Int -> -2004372045}
2021-03-12 10:52:45,792 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 10:52:45,793 [main:53] - replacing (longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1, Long)
2021-03-12 10:52:45,793 [main:50] - replacing longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1 Long
2021-03-12 10:52:45,793 [main:54] - Getting value of type Long
2021-03-12 10:52:45,880 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:45,880 [main:58] - GENERATED VALUE OF TYPE Long = -2282825552936564286
2021-03-12 10:52:45,880 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:45,881 [main:67] - randomType = Long
2021-03-12 10:52:45,979 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:52:46,037 [main:149] - GENERATING call of type public final operator fun times(other: kotlin.Byte): kotlin.Long defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@3a82ff5]
2021-03-12 10:52:46,137 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:46,138 [main:78] - Generated call from random type = (-247928677557134950).times(49)
2021-03-12 10:52:46,138 [main:61] - replacement of longList.minByOrNull {a: Long -> -9163559572848409132} ?: -1 of type Long is (-247928677557134950).times(49)
2021-03-12 10:52:46,239 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:46,239 [main:53] - replacing (intList.maxByOrNull {a: Int -> -1799059936}, Int?)
2021-03-12 10:52:46,240 [main:50] - replacing intList.maxByOrNull {a: Int -> -1799059936} Int?
2021-03-12 10:52:46,240 [main:54] - Getting value of type Int?
2021-03-12 10:52:46,345 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:46,345 [main:58] - GENERATED VALUE OF TYPE Int? = -863196593
2021-03-12 10:52:46,346 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:46,993 [main:67] - randomType = Triple<UInt?, Function1<ULong, String>, UByte>
2021-03-12 10:52:47,081 [main:302] - generating value of type = Triple<UInt?, Function1<ULong, String>, UByte> false depth = 0
2021-03-12 10:52:47,187 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: UInt?, second: Function1<ULong, String>, third: UByte): Triple<UInt?, Function1<ULong, String>, UByte> = TODO()
2021-03-12 10:52:47,188 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: UInt?, second: Function1<ULong, String>, third: UByte): Triple<UInt?, Function1<ULong, String>, UByte> = TODO()
2021-03-12 10:52:47,281 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:52:47,282 [main:302] - generating value of type = Function1<ULong, String> false depth = 3
2021-03-12 10:52:47,282 [main:302] - generating value of type = String true depth = 4
2021-03-12 10:52:47,282 [main:302] - generating value of type = UByte true depth = 3
2021-03-12 10:52:47,283 [main:95] - GENERATED = Triple<UInt?, Function1<ULong, String>, UByte>(928801864.toUInt(), {a: ULong -> "pthqr"}, 46.toUByte())
2021-03-12 10:52:47,325 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public open inline fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.UByte[DeserializedSimpleFunctionDescriptor@16846f06]
2021-03-12 10:52:47,413 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:52:47,413 [main:78] - Generated call from random type = (Triple<UInt?, Function1<ULong, String>, UByte>(928801864.toUInt(), {a: ULong -> "pthqr"}, 46.toUByte())).third.compareTo(103.toUByte())
2021-03-12 10:52:47,413 [main:61] - replacement of intList.maxByOrNull {a: Int -> -1799059936} of type Int? is -863196593
2021-03-12 10:52:47,515 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-12 10:52:47,516 [main:53] - replacing (listOf(1, 2, -1500472122), List<Int>)
2021-03-12 10:52:47,516 [main:50] - replacing listOf(1, 2, -1500472122) List<Int>
2021-03-12 10:52:47,516 [main:54] - Getting value of type List<Int>
2021-03-12 10:52:47,606 [main:302] - generating value of type = List<Int> false depth = 0
2021-03-12 10:52:47,693 [main:43] - GENERATING CALL OF fun <E> ArrayList(elements: kotlin.collections.Collection<Int>): List<Int> = TODO()
2021-03-12 10:52:47,694 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(elements: kotlin.collections.Collection<Int>): List<Int> = TODO()
2021-03-12 10:52:47,903 [main:302] - generating value of type = Collection<Int> false depth = 3
2021-03-12 10:52:48,009 [main:43] - GENERATING CALL OF fun UByteArray(size: kotlin.Int): Collection<Int> = TODO()
2021-03-12 10:52:48,010 [main:61] - WITHOUT TYPE PARAMS = fun UByteArray(size: kotlin.Int): Collection<Int> = TODO()
2021-03-12 10:52:48,226 [main:302] - generating value of type = Int true depth = 6
2021-03-12 10:52:48,227 [main:95] - GENERATED = UByteArray(1333114300)
2021-03-12 10:52:48,227 [main:95] - GENERATED = ArrayList<Int>(UByteArray(1333114300))
2021-03-12 10:52:48,228 [main:58] - GENERATED VALUE OF TYPE List<Int> = ArrayList<Int>(UByteArray(1333114300))
2021-03-12 10:52:48,228 [main:61] - GENERATED IS CALL =true
2021-03-12 10:52:48,340 [main:67] - randomType = UShort
2021-03-12 10:52:48,443 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:52:48,488 [main:61] - replacement of listOf(1, 2, -1500472122) of type List<Int> is ArrayList<Int>(UByteArray(1333114300))
2021-03-12 10:52:48,604 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:52:48,606 [main:53] - replacing ("Fail longListMax=$longListMax", String)
2021-03-12 10:52:48,606 [main:50] - replacing "Fail longListMax=$longListMax" String
2021-03-12 10:52:48,606 [main:54] - Getting value of type String
2021-03-12 10:52:48,707 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:52:48,708 [main:58] - GENERATED VALUE OF TYPE String = "cbrzx"
2021-03-12 10:52:48,708 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:48,893 [main:67] - randomType = Array<Double>
2021-03-12 10:52:48,985 [main:302] - generating value of type = Array<Double> false depth = 0
2021-03-12 10:52:49,086 [main:43] - GENERATING CALL OF fun <T> arrayOfNulls(size: kotlin.Int): Array<Double> = TODO()
2021-03-12 10:52:49,087 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayOfNulls(size: kotlin.Int): Array<Double> = TODO()
2021-03-12 10:52:49,282 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:52:49,283 [main:95] - GENERATED = arrayOfNulls<Double>(2106683233)
2021-03-12 10:52:49,299 [main:149] - GENERATING call of type public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@3343ad78]
2021-03-12 10:52:49,392 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:52:49,481 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:52:49,482 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 10:52:49,689 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:52:49,690 [main:95] - GENERATED = StringBuilder(-95901560)
2021-03-12 10:52:49,792 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:52:49,894 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:52:49,991 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:52:50,084 [main:78] - Generated call from random type = (arrayOfNulls<Double>(2106683233)).joinToString(StringBuilder(-95901560), "vkizc", "kjcsi", intListMax, "ookwy", null)
2021-03-12 10:52:50,085 [main:106] - GETTING String from Int
2021-03-12 10:52:50,154 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]]
2021-03-12 10:52:50,154 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:52:50,155 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]
2021-03-12 10:52:50,155 [main:117] - GENERATED CALL = (intListMin).toChar().lowercase()
2021-03-12 10:52:50,155 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:52:50,155 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:52:50,155 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:52:50,155 [main:117] - GENERATED CALL = (intListMin).toInt().toString(intListMin)
2021-03-12 10:52:50,155 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]]
2021-03-12 10:52:50,155 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4]
2021-03-12 10:52:50,156 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]
2021-03-12 10:52:50,156 [main:117] - GENERATED CALL = (intListMin).toShort().toString(intListMax)
2021-03-12 10:52:50,156 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]]
2021-03-12 10:52:50,156 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:52:50,156 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]
2021-03-12 10:52:50,156 [main:117] - GENERATED CALL = (intListMin).toChar().uppercase()
2021-03-12 10:52:50,156 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]]
2021-03-12 10:52:50,156 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:52:50,157 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]
2021-03-12 10:52:50,287 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:52:50,288 [main:117] - GENERATED CALL = (intListMin).toChar().plus("yszyf")
2021-03-12 10:52:50,288 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@abb1493], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4d1405ee]]
2021-03-12 10:52:50,288 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@abb1493]
2021-03-12 10:52:50,288 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4d1405ee]
2021-03-12 10:52:50,288 [main:117] - GENERATED CALL = (intListMin).toByte().toString(intListMin)
2021-03-12 10:52:50,289 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:52:50,289 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:52:50,289 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:52:50,289 [main:117] - GENERATED CALL = (intListMin).toLong().toString(intListMax)
2021-03-12 10:52:50,289 [main:113] - Case = [@kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:52:50,289 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:52:50,290 [main:117] - GENERATED CALL = (intListMin).toString(intListMin)
2021-03-12 10:52:50,290 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:52:50,290 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:52:50,290 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:52:50,290 [main:117] - GENERATED CALL = (intListMin).compareTo(intListMin).toString(intListMax)
2021-03-12 10:52:50,290 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]]
2021-03-12 10:52:50,290 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:52:50,291 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]
2021-03-12 10:52:50,291 [main:117] - GENERATED CALL = (intListMin).toChar().titlecase()
2021-03-12 10:52:50,291 [main:61] - replacement of "Fail longListMax=$longListMax" of type String is (intListMin).toInt().toString(intListMin)
2021-03-12 10:52:50,397 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:50,397 [main:66] - Compilation checking started
2021-03-12 10:52:50,739 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$intListMin"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(9055603940795170349).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:52:50,741 [main:53] - replacing (intListMin, Int)
2021-03-12 10:52:50,741 [main:50] - replacing intListMin Int
2021-03-12 10:52:50,741 [main:54] - Getting value of type Int
2021-03-12 10:52:50,863 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:50,864 [main:58] - GENERATED VALUE OF TYPE Int = 73107747
2021-03-12 10:52:50,864 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:51,289 [main:67] - randomType = MutableMap<Pair<String, Boolean>, Short>?
2021-03-12 10:52:51,291 [main:106] - GETTING Int from List<Long>
2021-03-12 10:52:51,333 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@75852d33]]
2021-03-12 10:52:51,333 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@75852d33]
2021-03-12 10:52:51,439 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 10:52:51,439 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:52:51,440 [main:117] - GENERATED CALL = (longList).sumBy({a: T -> -896809303})
2021-03-12 10:52:51,440 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e6ebf10]]
2021-03-12 10:52:51,440 [main:149] - GENERATING call of type public final operator fun minus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7e6ebf10]
2021-03-12 10:52:51,534 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:51,535 [main:117] - GENERATED CALL = (longList).size.minus(109)
2021-03-12 10:52:51,535 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]]
2021-03-12 10:52:51,535 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]
2021-03-12 10:52:51,535 [main:117] - GENERATED CALL = (longList).size.and(intListMin)
2021-03-12 10:52:51,535 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5b9bd44a]]
2021-03-12 10:52:51,535 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@5b9bd44a]
2021-03-12 10:52:51,618 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:51,619 [main:117] - GENERATED CALL = (longList).size.xor(-1363581514)
2021-03-12 10:52:51,619 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bd3df07]]
2021-03-12 10:52:51,619 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bd3df07]
2021-03-12 10:52:51,727 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 10:52:51,727 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:52:51,728 [main:117] - GENERATED CALL = (longList).sumOf({a: T -> 1473953769})
2021-03-12 10:52:51,728 [main:113] - Case = [public val <T> kotlin.collections.List<T>.lastIndex: kotlin.Int defined in kotlin.collections[DeserializedPropertyDescriptor@4e639564]]
2021-03-12 10:52:51,729 [main:117] - GENERATED CALL = (longList).lastIndex
2021-03-12 10:52:51,729 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7bc9a65e]]
2021-03-12 10:52:51,729 [main:149] - GENERATING call of type public fun kotlin.Int.coerceAtLeast(minimumValue: kotlin.Int): kotlin.Int defined in kotlin.ranges[DeserializedSimpleFunctionDescriptor@7bc9a65e]
2021-03-12 10:52:51,729 [main:117] - GENERATED CALL = (longList).size.coerceAtLeast(intListMin)
2021-03-12 10:52:51,729 [main:113] - Case = [public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@56104e84]]
2021-03-12 10:52:51,729 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.List<T>.indexOfFirst(predicate: (T) -> kotlin.Boolean): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@56104e84]
2021-03-12 10:52:51,828 [main:302] - generating value of type = Function1<T, Boolean> false depth = 0
2021-03-12 10:52:51,828 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:52:51,829 [main:117] - GENERATED CALL = (longList).indexOfFirst({a: T -> true})
2021-03-12 10:52:51,829 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@15f57269], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3780cdef]]
2021-03-12 10:52:51,829 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3780cdef]
2021-03-12 10:52:51,915 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:52:51,916 [main:117] - GENERATED CALL = (longList).size.plus(55)
2021-03-12 10:52:51,916 [main:113] - Case = [public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6114fc0f]]
2021-03-12 10:52:51,916 [main:149] - GENERATING call of type public fun <@kotlin.internal.OnlyInputTypes T> kotlin.collections.List<T>.lastIndexOf(element: T): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6114fc0f]
2021-03-12 10:52:52,013 [main:302] - generating value of type = T false depth = 0
2021-03-12 10:52:52,447 [main:43] - GENERATING CALL OF fun <T> checkNotNull(value: Collection<Set<Char>>): T = TODO()
2021-03-12 10:52:52,449 [main:61] - WITHOUT TYPE PARAMS = fun <T> checkNotNull(value: Collection<Set<Char>>): T = TODO()
2021-03-12 10:52:52,537 [main:302] - generating value of type = Collection<Set<Char>> false depth = 3
2021-03-12 10:52:52,645 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Set<Char>): Collection<Set<Char>> = TODO()
2021-03-12 10:52:52,646 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Set<Char>): Collection<Set<Char>> = TODO()
2021-03-12 10:52:52,751 [main:302] - generating value of type = Set<Char> false depth = 6
2021-03-12 10:52:52,844 [main:43] - GENERATING CALL OF fun <T> setOfNotNull(element: Char): Set<Char> = TODO()
2021-03-12 10:52:52,846 [main:61] - WITHOUT TYPE PARAMS = fun <T> setOfNotNull(element: Char): Set<Char> = TODO()
2021-03-12 10:52:52,958 [main:302] - generating value of type = Char true depth = 9
2021-03-12 10:52:52,959 [main:95] - GENERATED = setOfNotNull<Char>('ṷ')
2021-03-12 10:52:52,959 [main:95] - GENERATED = linkedSetOf<Set<Char>>(setOfNotNull<Char>('ṷ'))
2021-03-12 10:52:52,959 [main:95] - GENERATED = checkNotNull<Collection<Set<Char>>>(linkedSetOf<Set<Char>>(setOfNotNull<Char>('ṷ')))
2021-03-12 10:52:52,960 [main:117] - GENERATED CALL = (longList).lastIndexOf(checkNotNull<Collection<Set<Char>>>(linkedSetOf<Set<Char>>(setOfNotNull<Char>('ṷ'))))
2021-03-12 10:52:52,960 [main:61] - replacement of intListMin of type Int is (longList).size.coerceAtLeast(intListMin)
2021-03-12 10:52:53,059 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:53,060 [main:66] - Compilation checking started
2021-03-12 10:52:53,441 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((intListMax).countLeadingZeroBits() != 3) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(9055603940795170349).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:52:53,442 [main:53] - replacing ((intListMax).countLeadingZeroBits() != 3, Boolean)
2021-03-12 10:52:53,443 [main:50] - replacing (intListMax).countLeadingZeroBits() != 3 Boolean
2021-03-12 10:52:53,443 [main:54] - Getting value of type Boolean
2021-03-12 10:52:53,554 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:52:53,555 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 10:52:53,555 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:53,556 [main:67] - randomType = Double
2021-03-12 10:52:53,659 [main:302] - generating value of type = Double true depth = 0
2021-03-12 10:52:53,719 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@621d6441]
2021-03-12 10:52:53,836 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:52:53,836 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@4b831495]
2021-03-12 10:52:53,932 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:52:53,933 [main:78] - Generated call from random type = (0.8827861796814188).equals("gdwyv").or(false)
2021-03-12 10:52:53,933 [main:61] - replacement of (intListMax).countLeadingZeroBits() != 3 of type Boolean is (0.8827861796814188).equals("gdwyv").or(false)
2021-03-12 10:52:54,023 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:54,023 [main:66] - Compilation checking started
2021-03-12 10:52:54,358 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(57)
    if ((0.8827861796814188).equals("gdwyv").or(false)) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(9055603940795170349).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:52:54,358 [main:53] - replacing (1, Int)
2021-03-12 10:52:54,358 [main:50] - replacing 1 Int
2021-03-12 10:52:54,358 [main:54] - Getting value of type Int
2021-03-12 10:52:54,467 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:54,468 [main:58] - GENERATED VALUE OF TYPE Int = 945495791
2021-03-12 10:52:54,468 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:54,583 [main:67] - randomType = UInt
2021-03-12 10:52:54,675 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:52:54,727 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toLong(): kotlin.Long defined in kotlin.UInt[DeserializedSimpleFunctionDescriptor@2890d7c5]
2021-03-12 10:52:54,727 [main:78] - Generated call from random type = (904318179.toUInt()).toLong().sign
2021-03-12 10:52:54,727 [main:61] - replacement of 1 of type Int is 945495791
2021-03-12 10:52:54,830 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 10:52:54,830 [main:53] - replacing ("Fail longListMax=$longListMax", String)
2021-03-12 10:52:54,830 [main:50] - replacing "Fail longListMax=$longListMax" String
2021-03-12 10:52:54,830 [main:54] - Getting value of type String
2021-03-12 10:52:54,951 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:52:54,952 [main:58] - GENERATED VALUE OF TYPE String = "xxnvn"
2021-03-12 10:52:54,952 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:55,039 [main:67] - randomType = UShort
2021-03-12 10:52:55,140 [main:302] - generating value of type = UShort true depth = 0
2021-03-12 10:52:55,187 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun div(other: kotlin.UByte): kotlin.UInt defined in kotlin.UShort[DeserializedSimpleFunctionDescriptor@415457b7]
2021-03-12 10:52:55,282 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:52:55,283 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UInt.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b08457e]
2021-03-12 10:52:55,371 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:55,372 [main:78] - Generated call from random type = (12675.toUShort()).div(64.toUByte()).toString(-1243747902)
2021-03-12 10:52:55,372 [main:61] - replacement of "Fail longListMax=$longListMax" of type String is (12675.toUShort()).div(64.toUByte()).toString(-1243747902)
2021-03-12 10:52:55,467 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:55,468 [main:53] - replacing (1, Int)
2021-03-12 10:52:55,468 [main:50] - replacing 1 Int
2021-03-12 10:52:55,468 [main:54] - Getting value of type Int
2021-03-12 10:52:55,562 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:55,563 [main:58] - GENERATED VALUE OF TYPE Int = 1053512177
2021-03-12 10:52:55,563 [main:61] - GENERATED IS CALL =false
2021-03-12 10:52:55,851 [main:67] - randomType = ArrayList<UInt>
2021-03-12 10:52:55,945 [main:302] - generating value of type = ArrayList<UInt> false depth = 0
2021-03-12 10:52:56,050 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: UInt): ArrayList<UInt> = TODO()
2021-03-12 10:52:56,051 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: UInt): ArrayList<UInt> = TODO()
2021-03-12 10:52:56,146 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:52:56,147 [main:95] - GENERATED = arrayListOf<UInt>(537055342.toUInt())
2021-03-12 10:52:56,314 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@2f9d4357]
2021-03-12 10:52:56,409 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:52:56,410 [main:78] - Generated call from random type = (arrayListOf<UInt>(537055342.toUInt())).size.or(-1949180961)
2021-03-12 10:52:56,410 [main:61] - replacement of 1 of type Int is 1053512177
2021-03-12 10:52:56,500 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 10:52:56,586 [main:119] - TRYING TO REPLACE CONSTANT 57
2021-03-12 10:52:56,692 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(REFERENCE_EXPRESSION)
2021-03-12 10:52:56,692 [main:66] - Compilation checking started
2021-03-12 10:52:57,023 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(101) ?: -(intListMin).minus(intListMin)
    if ((0.8827861796814188).equals("gdwyv").or(false)) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(9055603940795170349).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:52:57,024 [main:119] - TRYING TO REPLACE CONSTANT 101
2021-03-12 10:52:57,120 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-12 10:52:57,121 [main:66] - Compilation checking started
2021-03-12 10:52:57,516 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(-(intListMin).minus(intListMin)) ?: -(intListMin).minus(intListMin)
    if ((0.8827861796814188).equals("gdwyv").or(false)) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(9055603940795170349).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:52:57,517 [main:119] - TRYING TO REPLACE CONSTANT 0.004666099695403325
2021-03-12 10:52:57,650 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-12 10:52:57,650 [main:66] - Compilation checking started
2021-03-12 10:52:57,952 [main:49] - Result = false
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo(true)
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(-(intListMin).minus(intListMin)) ?: -(intListMin).minus(intListMin)
    if ((0.8827861796814188).equals("gdwyv").or(false)) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(9055603940795170349).shl(intListMin)"

    val longListMax = (intListMax).div(div(0.004666099695403325)).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:52:57,952 [main:119] - TRYING TO REPLACE CONSTANT true
2021-03-12 10:52:58,060 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:58,060 [main:66] - Compilation checking started
2021-03-12 10:52:58,440 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo((0.8827861796814188).equals("gdwyv").or(false))
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(-(intListMin).minus(intListMin)) ?: -(intListMin).minus(intListMin)
    if ((0.8827861796814188).equals("gdwyv").or(false)) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(9055603940795170349).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:52:58,441 [main:119] - TRYING TO REPLACE CONSTANT 4532553261694695172
2021-03-12 10:52:58,585 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-12 10:52:58,585 [main:66] - Compilation checking started
2021-03-12 10:52:58,935 [main:49] - Result = false
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(get(intListMin)).compareTo((0.8827861796814188).equals("gdwyv").or(false))
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(-(intListMin).minus(intListMin)) ?: -(intListMin).minus(intListMin)
    if ((0.8827861796814188).equals("gdwyv").or(false)) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo(2623664039187222188).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(9055603940795170349).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:52:58,935 [main:119] - TRYING TO REPLACE CONSTANT 2623664039187222188
2021-03-12 10:52:59,048 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:52:59,048 [main:66] - Compilation checking started
2021-03-12 10:52:59,432 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo((0.8827861796814188).equals("gdwyv").or(false))
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(-(intListMin).minus(intListMin)) ?: -(intListMin).minus(intListMin)
    if ((0.8827861796814188).equals("gdwyv").or(false)) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo((intListMax).div(9055603940795170349).shl(intListMin)).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(9055603940795170349).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:52:59,432 [main:119] - TRYING TO REPLACE CONSTANT 9055603940795170349
2021-03-12 10:52:59,534 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-12 10:52:59,534 [main:66] - Compilation checking started
2021-03-12 10:52:59,934 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo((0.8827861796814188).equals("gdwyv").or(false))
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(-(intListMin).minus(intListMin)) ?: -(intListMin).minus(intListMin)
    if ((0.8827861796814188).equals("gdwyv").or(false)) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo((intListMax).div(9055603940795170349).shl(intListMin)).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(ushr(intListMax)).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:52:59,934 [main:119] - TRYING TO REPLACE CONSTANT 0.8827861796814188
2021-03-12 10:53:00,052 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:53:00,053 [main:66] - Compilation checking started
2021-03-12 10:53:00,442 [main:53] - Result = true
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo((0.8827861796814188).equals("gdwyv").or(false))
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(-(intListMin).minus(intListMin)) ?: -(intListMin).minus(intListMin)
    if (((intListMax).div(0.004666099695403325)).equals("gdwyv").or(false)) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo((intListMax).div(9055603940795170349).shl(intListMin)).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(ushr(intListMax)).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:53:00,442 [main:119] - TRYING TO REPLACE CONSTANT false
2021-03-12 10:53:00,587 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(CALL_EXPRESSION)
2021-03-12 10:53:00,587 [main:66] - Compilation checking started
2021-03-12 10:53:00,903 [main:49] - Result = false
Text:
val intList = ArrayList<Int>()
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = (intList)?.maxOrNull() ?: (longList).contains(4532553261694695172).compareTo((0.8827861796814188).equals("gdwyv").or(false))
    if (1427367738 != (intListMin).rotateLeft(intListMin)) return "Fail intListMin=$(longList).size.coerceAtLeast(intListMin)"

    val intListMax = (intListMin)?.toInt().times(-(intListMin).minus(intListMin)) ?: -(intListMin).minus(intListMin)
    if (((intListMax).div(0.004666099695403325)).equals("gdwyv").or(or(false))) return "Fail intListMax=$intListMax"

    val longListMin = (longList).get(intListMin).ushr(intListMax)
    if ((intListMin).rangeTo((intListMax).div(9055603940795170349).shl(intListMin)).endInclusive != 1L) return "Fail longListMin=$(intListMax).div(ushr(intListMax)).shl(intListMin)"

    val longListMax = (intListMax).div(0.004666099695403325).toLong()
    if (8420083382916090534 != 3L) return (intListMin).toInt().toString(intListMin)

    return "OK"
}


2021-03-12 10:53:00,936 [main:41] - AFTER TRY 0 res = val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}


2021-03-12 10:53:01,368 [main:43] - Try №0
2021-03-12 10:53:02,496 [main:69] - Trying to insert private fun fu0() = "K"
2021-03-12 10:53:02,685 [main:66] - Compilation checking started
2021-03-12 10:53:03,400 [main:103] - Trying to change 12 nodes
2021-03-12 10:53:03,400 [main:107] - replacing (1, Int)
2021-03-12 10:53:03,403 [main:50] - replacing 1 Int
2021-03-12 10:53:03,403 [main:54] - Getting value of type Int
2021-03-12 10:53:03,523 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:03,524 [main:58] - GENERATED VALUE OF TYPE Int = -63695091
2021-03-12 10:53:03,524 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:04,129 [main:67] - randomType = Function1<ArrayList<UShort>, UInt>
2021-03-12 10:53:04,131 [main:106] - GETTING Int from List<Int>
2021-03-12 10:53:04,168 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@606d06f], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2e2e20c]]
2021-03-12 10:53:04,168 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateRight(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@2e2e20c]
2021-03-12 10:53:04,169 [main:117] - GENERATED CALL = (intList).size.rotateRight(intListMin)
2021-03-12 10:53:04,169 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@606d06f], public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3780cdef]]
2021-03-12 10:53:04,169 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3780cdef]
2021-03-12 10:53:04,296 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:53:04,297 [main:117] - GENERATED CALL = (intList).size.plus(-60)
2021-03-12 10:53:04,297 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@606d06f], public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3b31d4cf]]
2021-03-12 10:53:04,297 [main:149] - GENERATING call of type public final operator fun unaryPlus(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3b31d4cf]
2021-03-12 10:53:04,298 [main:117] - GENERATED CALL = (intList).size.unaryPlus()
2021-03-12 10:53:04,298 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@1edaa89c], public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]]
2021-03-12 10:53:04,298 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.collections.Iterable[DeserializedSimpleFunctionDescriptor@1edaa89c]
2021-03-12 10:53:04,419 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:53:04,420 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]
2021-03-12 10:53:04,542 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:53:04,542 [main:117] - GENERATED CALL = (intList).equals("aedwz").compareTo(true)
2021-03-12 10:53:04,543 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@606d06f], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4e2c656a]]
2021-03-12 10:53:04,543 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@4e2c656a]
2021-03-12 10:53:04,543 [main:117] - GENERATED CALL = (intList).size.rotateLeft(intListMin)
2021-03-12 10:53:04,543 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bd3df07]]
2021-03-12 10:53:04,543 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.Iterable<T>.sumOf(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@bd3df07]
2021-03-12 10:53:04,674 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 10:53:04,675 [main:302] - generating value of type = Int true depth = 1
2021-03-12 10:53:04,675 [main:117] - GENERATED CALL = (intList).sumOf({a: T -> 751961583})
2021-03-12 10:53:04,676 [main:113] - Case = [public abstract fun listIterator(): kotlin.collections.ListIterator<kotlin.Int> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3b999c55], public abstract fun previous(): kotlin.Int defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@3cefc436]]
2021-03-12 10:53:04,676 [main:149] - GENERATING call of type public abstract fun listIterator(): kotlin.collections.ListIterator<kotlin.Int> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@3b999c55]
2021-03-12 10:53:04,676 [main:149] - GENERATING call of type public abstract fun previous(): kotlin.Int defined in kotlin.collections.ListIterator[DeserializedSimpleFunctionDescriptor@3cefc436]
2021-03-12 10:53:04,676 [main:117] - GENERATED CALL = (intList).listIterator().previous()
2021-03-12 10:53:04,676 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@606d06f], public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b9675be]]
2021-03-12 10:53:04,676 [main:149] - GENERATING call of type public final infix fun shr(bitCount: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@7b9675be]
2021-03-12 10:53:04,677 [main:117] - GENERATED CALL = (intList).size.shr(val intListMin = intList.minByOrNull { it } ?: -1
2021-03-12 10:53:04,678 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@11208f5e]]
2021-03-12 10:53:04,678 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun <T> kotlin.collections.List<T>.elementAtOrElse(index: kotlin.Int, defaultValue: (kotlin.Int) -> T): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@11208f5e]
2021-03-12 10:53:04,795 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:04,933 [main:302] - generating value of type = Function1<Int, T> false depth = 0
2021-03-12 10:53:04,933 [main:302] - generating value of type = T false depth = 1
2021-03-12 10:53:05,086 [main:43] - GENERATING CALL OF fun <T> checkNotNull(value: Long, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 10:53:05,087 [main:61] - WITHOUT TYPE PARAMS = fun <T> checkNotNull(value: Long, lazyMessage: ()->kotlin.Any): T = TODO()
2021-03-12 10:53:05,344 [main:302] - generating value of type = Long true depth = 4
2021-03-12 10:53:05,344 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 10:53:05,345 [main:302] - generating value of type = Any false depth = 5
2021-03-12 10:53:05,345 [main:95] - GENERATED = checkNotNull<Long>(4165233424968661621, { "uswpl"})
2021-03-12 10:53:05,346 [main:117] - GENERATED CALL = (intList).elementAtOrElse(-1190853183, {a: Int -> checkNotNull<Long>(4165233424968661621, { "uswpl"})})
2021-03-12 10:53:05,347 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7fd5109]]
2021-03-12 10:53:05,347 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun <T> kotlin.collections.List<T>.component2(): T defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7fd5109]
2021-03-12 10:53:05,347 [main:117] - GENERATED CALL = (intList).component2()
2021-03-12 10:53:05,347 [main:114] - replacement of 1 of type Int is (intList).equals("aedwz").compareTo(true)
2021-03-12 10:53:05,481 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:53:05,481 [main:66] - Compilation checking started
2021-03-12 10:53:06,003 [main:53] - Result = true
Text:

import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(true), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals("box", prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        prope0 + fu0()
    }()
}


2021-03-12 10:53:06,003 [main:107] - replacing (prope0, String)
2021-03-12 10:53:06,004 [main:50] - replacing prope0 String
2021-03-12 10:53:06,004 [main:54] - Getting value of type String
2021-03-12 10:53:06,173 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:06,174 [main:58] - GENERATED VALUE OF TYPE String = "ramdw"
2021-03-12 10:53:06,174 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:06,329 [main:67] - randomType = Double
2021-03-12 10:53:06,461 [main:302] - generating value of type = Double true depth = 0
2021-03-12 10:53:06,505 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@39a34a31]
2021-03-12 10:53:06,505 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]
2021-03-12 10:53:06,506 [main:78] - Generated call from random type = (0.9742547408200845).toChar().lowercase()
2021-03-12 10:53:06,507 [main:106] - GETTING String from List<Long>
2021-03-12 10:53:06,541 [main:113] - Case = [public abstract val size: kotlin.Int defined in kotlin.collections.List[DeserializedPropertyDescriptor@43f6b1c1], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:06,541 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:06,541 [main:117] - GENERATED CALL = (longList).size.toString(val intListMin = intList.minByOrNull { it } ?: -1
2021-03-12 10:53:06,541 [main:113] - Case = [public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5ed7d4ff], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:06,541 [main:149] - GENERATING call of type public abstract operator fun get(index: kotlin.Int): kotlin.Long defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5ed7d4ff]
2021-03-12 10:53:06,542 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:06,666 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:06,667 [main:117] - GENERATED CALL = (longList).get(intListMax).toString(-1190528195)
2021-03-12 10:53:06,667 [main:113] - Case = [public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@390eca81]]
2021-03-12 10:53:06,667 [main:149] - GENERATING call of type public fun <T> kotlin.collections.Iterable<T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@390eca81]
2021-03-12 10:53:06,787 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:53:06,891 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:53:07,035 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:53:07,162 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 10:53:07,285 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 10:53:07,286 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 10:53:07,292 [main:117] - GENERATED CALL = (longList).joinToString("gockw", "whfck", "bbspt", intListMin, "jlqyw", {a: T -> "xpogq"})
2021-03-12 10:53:07,292 [main:114] - replacement of prope0 of type String is (0.9742547408200845).toChar().lowercase()
2021-03-12 10:53:07,430 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:53:07,430 [main:66] - Compilation checking started
2021-03-12 10:53:08,005 [main:53] - Result = true
Text:

import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(true), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals("box", prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        (0.9742547408200845).toChar().lowercase() + fu0()
    }()
}


2021-03-12 10:53:08,006 [main:107] - replacing ("box", String)
2021-03-12 10:53:08,006 [main:50] - replacing "box" String
2021-03-12 10:53:08,006 [main:54] - Getting value of type String
2021-03-12 10:53:08,177 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:08,178 [main:58] - GENERATED VALUE OF TYPE String = "lznzr"
2021-03-12 10:53:08,178 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:08,318 [main:67] - randomType = Double
2021-03-12 10:53:08,437 [main:302] - generating value of type = Double true depth = 0
2021-03-12 10:53:08,501 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@39a34a31]
2021-03-12 10:53:08,501 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]
2021-03-12 10:53:08,501 [main:78] - Generated call from random type = (0.808260800798539).toChar().uppercase()
2021-03-12 10:53:08,502 [main:114] - replacement of "box" of type String is (0.808260800798539).toChar().uppercase()
2021-03-12 10:53:08,628 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:53:08,629 [main:66] - Compilation checking started
2021-03-12 10:53:09,170 [main:53] - Result = true
Text:

import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(true), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.808260800798539).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        (0.9742547408200845).toChar().lowercase() + fu0()
    }()
}


2021-03-12 10:53:09,170 [main:107] - replacing (fu0(), String)
2021-03-12 10:53:09,171 [main:50] - replacing fu0() String
2021-03-12 10:53:09,171 [main:54] - Getting value of type String
2021-03-12 10:53:09,303 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:09,304 [main:58] - GENERATED VALUE OF TYPE String = "qjvop"
2021-03-12 10:53:09,304 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:09,549 [main:67] - randomType = Pair<Int, UInt>
2021-03-12 10:53:09,710 [main:302] - generating value of type = Pair<Int, UInt> false depth = 0
2021-03-12 10:53:09,866 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Int, second: UInt): Pair<Int, UInt> = TODO()
2021-03-12 10:53:09,867 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Int, second: UInt): Pair<Int, UInt> = TODO()
2021-03-12 10:53:09,979 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:53:09,980 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 10:53:09,980 [main:95] - GENERATED = Pair<Int, UInt>(-1687153345, 847627940.toUInt())
2021-03-12 10:53:10,000 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:10,125 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:10,126 [main:78] - Generated call from random type = (Pair<Int, UInt>(-1687153345, 847627940.toUInt())).first.toString(309230407)
2021-03-12 10:53:10,127 [main:106] - GETTING String from Long
2021-03-12 10:53:10,184 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]]
2021-03-12 10:53:10,184 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a]
2021-03-12 10:53:10,185 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]
2021-03-12 10:53:10,185 [main:117] - GENERATED CALL = (longListMax).toChar().titlecase()
2021-03-12 10:53:10,185 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@d13ab4d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4d1405ee]]
2021-03-12 10:53:10,185 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@d13ab4d]
2021-03-12 10:53:10,185 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4d1405ee]
2021-03-12 10:53:10,185 [main:117] - GENERATED CALL = (longListMax).toByte().toString(val intListMin = intList.minByOrNull { it } ?: -1
2021-03-12 10:53:10,186 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]]
2021-03-12 10:53:10,186 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a]
2021-03-12 10:53:10,186 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]
2021-03-12 10:53:10,311 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:10,312 [main:117] - GENERATED CALL = (longListMax).toChar().plus("inpad")
2021-03-12 10:53:10,312 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2237dc21], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]]
2021-03-12 10:53:10,312 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2237dc21]
2021-03-12 10:53:10,312 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]
2021-03-12 10:53:10,434 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:10,435 [main:117] - GENERATED CALL = (longListMax).toShort().toString(93736356)
2021-03-12 10:53:10,435 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]]
2021-03-12 10:53:10,435 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a]
2021-03-12 10:53:10,435 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]
2021-03-12 10:53:10,435 [main:117] - GENERATED CALL = (longListMax).toChar().lowercase()
2021-03-12 10:53:10,435 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:10,435 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:53:10,436 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:10,436 [main:117] - GENERATED CALL = (longListMax).toLong().toString(val intListMin = intList.minByOrNull { it } ?: -1
2021-03-12 10:53:10,436 [main:113] - Case = [@kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:10,436 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:10,562 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:10,564 [main:117] - GENERATED CALL = (longListMax).toString(-1898021154)
2021-03-12 10:53:10,564 [main:113] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2025402], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:10,564 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2025402]
2021-03-12 10:53:10,688 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:53:10,688 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:10,823 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:10,824 [main:117] - GENERATED CALL = (longListMax).compareTo(76).toString(2037454260)
2021-03-12 10:53:10,824 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]]
2021-03-12 10:53:10,824 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a]
2021-03-12 10:53:10,824 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]
2021-03-12 10:53:10,825 [main:117] - GENERATED CALL = (longListMax).toChar().uppercase()
2021-03-12 10:53:10,825 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:10,825 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:53:10,825 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:10,944 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:10,945 [main:117] - GENERATED CALL = (longListMax).toInt().toString(1158812414)
2021-03-12 10:53:10,945 [main:114] - replacement of fu0() of type String is (longListMax).toChar().uppercase()
2021-03-12 10:53:11,051 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:53:11,051 [main:66] - Compilation checking started
2021-03-12 10:53:11,533 [main:53] - Result = true
Text:

import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(true), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.808260800798539).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        (0.9742547408200845).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}


2021-03-12 10:53:11,533 [main:107] - replacing ("Facade should have only box and getProp methods", String)
2021-03-12 10:53:11,534 [main:50] - replacing "Facade should have only box and getProp methods" String
2021-03-12 10:53:11,534 [main:54] - Getting value of type String
2021-03-12 10:53:11,699 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:11,699 [main:58] - GENERATED VALUE OF TYPE String = "kqvai"
2021-03-12 10:53:11,700 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:12,076 [main:67] - randomType = Function2<Boolean, Byte, HashSet<String>>
2021-03-12 10:53:12,077 [main:106] - GETTING String from Int?
2021-03-12 10:53:12,146 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]]
2021-03-12 10:53:12,147 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:12,147 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]
2021-03-12 10:53:12,147 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().lowercase()
2021-03-12 10:53:12,147 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:12,147 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]
2021-03-12 10:53:12,271 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:12,272 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:12,272 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).and(1307012475).toString(val intListMax = intList.maxByOrNull { it } ?: -1
2021-03-12 10:53:12,272 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:12,272 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:53:12,272 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:12,273 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).compareTo(intListMin).toString(val intListMax = intList.maxByOrNull { it } ?: -1
2021-03-12 10:53:12,273 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:12,273 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:53:12,273 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:12,274 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toInt().toString(val intListMax = intList.maxByOrNull { it } ?: -1
2021-03-12 10:53:12,274 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]]
2021-03-12 10:53:12,274 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:12,274 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]
2021-03-12 10:53:12,382 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:12,383 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().plus("vtwsl")
2021-03-12 10:53:12,383 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]]
2021-03-12 10:53:12,383 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:12,383 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]
2021-03-12 10:53:12,383 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().uppercase()
2021-03-12 10:53:12,383 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]]
2021-03-12 10:53:12,383 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4]
2021-03-12 10:53:12,384 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]
2021-03-12 10:53:12,384 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toShort().toString(val intListMax = intList.maxByOrNull { it } ?: -1
2021-03-12 10:53:12,384 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]]
2021-03-12 10:53:12,384 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:12,384 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]
2021-03-12 10:53:12,385 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().titlecase()
2021-03-12 10:53:12,385 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:12,385 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:53:12,385 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:12,533 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:12,534 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toLong().toString(-2019656511)
2021-03-12 10:53:12,534 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:12,534 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:53:12,681 [main:302] - generating value of type = Long true depth = 0
2021-03-12 10:53:12,681 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:12,786 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:12,787 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).div(-9156213092187248981).toString(1076673811)
2021-03-12 10:53:12,787 [main:114] - replacement of "Facade should have only box and getProp methods" of type String is (intList.minByOrNull { it }).toChar().lowercase()
2021-03-12 10:53:12,904 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:53:12,905 [main:66] - Compilation checking started
2021-03-12 10:53:13,301 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(true), prope1.declaredMethods.size, (intList.minByOrNull { it }).toChar().lowercase())
    assertEquals((0.808260800798539).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        (0.9742547408200845).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}


2021-03-12 10:53:13,302 [main:107] - replacing ("Facade should have only box and getProp methods", String)
2021-03-12 10:53:13,302 [main:50] - replacing "Facade should have only box and getProp methods" String
2021-03-12 10:53:13,302 [main:54] - Getting value of type String
2021-03-12 10:53:13,424 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:13,425 [main:58] - GENERATED VALUE OF TYPE String = "prsve"
2021-03-12 10:53:13,425 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:13,426 [main:67] - randomType = String
2021-03-12 10:53:13,544 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:13,578 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@4953382c]
2021-03-12 10:53:13,684 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:13,684 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:13,685 [main:78] - Generated call from random type = ("bvjfw").compareTo("ltyij").toString(intListMin)
2021-03-12 10:53:13,685 [main:106] - GETTING String from Int?
2021-03-12 10:53:13,746 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:13,746 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:53:13,746 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:13,861 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:13,862 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).div(longListMin).toString(-1828927048)
2021-03-12 10:53:13,862 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]]
2021-03-12 10:53:13,862 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:13,862 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]
2021-03-12 10:53:13,969 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:13,970 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().plus("dxrxj")
2021-03-12 10:53:13,970 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:13,970 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:53:13,970 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:13,971 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toInt().toString(val intListMax = intList.maxByOrNull { it } ?: -1
2021-03-12 10:53:13,971 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@abb1493], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4d1405ee]]
2021-03-12 10:53:13,971 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@abb1493]
2021-03-12 10:53:13,971 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4d1405ee]
2021-03-12 10:53:13,972 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toByte().toString(val intListMax = intList.maxByOrNull { it } ?: -1
2021-03-12 10:53:13,972 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]]
2021-03-12 10:53:13,972 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:13,972 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]
2021-03-12 10:53:13,973 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().lowercase()
2021-03-12 10:53:13,973 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:13,973 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]
2021-03-12 10:53:13,973 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:13,973 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).and(intListMax).toString(val intListMin = intList.minByOrNull { it } ?: -1
2021-03-12 10:53:13,973 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]]
2021-03-12 10:53:13,973 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4]
2021-03-12 10:53:13,974 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]
2021-03-12 10:53:14,082 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:14,083 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toShort().toString(672186654)
2021-03-12 10:53:14,083 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:14,083 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:53:14,084 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:14,183 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:14,184 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).compareTo(intListMin).toString(-687825143)
2021-03-12 10:53:14,184 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]]
2021-03-12 10:53:14,184 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:14,184 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]
2021-03-12 10:53:14,184 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().uppercase()
2021-03-12 10:53:14,185 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:14,185 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:53:14,185 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:14,185 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toLong().toString(intListMin)
2021-03-12 10:53:14,185 [main:114] - replacement of "Facade should have only box and getProp methods" of type String is (intList.minByOrNull { it }).toShort().toString(672186654)
2021-03-12 10:53:14,306 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:53:14,307 [main:66] - Compilation checking started
2021-03-12 10:53:14,642 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(true), prope1.declaredMethods.size, (intList.minByOrNull { it }).toShort().toString(672186654))
    assertEquals((0.808260800798539).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        (0.9742547408200845).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}


2021-03-12 10:53:14,643 [main:107] - replacing ("Facade should have only box method", String)
2021-03-12 10:53:14,643 [main:50] - replacing "Facade should have only box method" String
2021-03-12 10:53:14,643 [main:54] - Getting value of type String
2021-03-12 10:53:14,759 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:14,760 [main:58] - GENERATED VALUE OF TYPE String = "ojqyw"
2021-03-12 10:53:14,760 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:14,881 [main:67] - randomType = Short
2021-03-12 10:53:14,987 [main:302] - generating value of type = Short true depth = 0
2021-03-12 10:53:15,044 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@71dcfdfb]
2021-03-12 10:53:15,044 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]
2021-03-12 10:53:15,045 [main:78] - Generated call from random type = (-451).toChar().titlecase()
2021-03-12 10:53:15,046 [main:106] - GETTING String from Int?
2021-03-12 10:53:15,100 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:15,100 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:53:15,100 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:15,100 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toInt().toString(intListMax)
2021-03-12 10:53:15,100 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]]
2021-03-12 10:53:15,100 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:15,101 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]
2021-03-12 10:53:15,213 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:15,214 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().plus("mhwvq")
2021-03-12 10:53:15,214 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:15,214 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.Int): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@75a301c3]
2021-03-12 10:53:15,214 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:15,318 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:15,318 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).compareTo(intListMin).toString(-1260972780)
2021-03-12 10:53:15,318 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]]
2021-03-12 10:53:15,318 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@50dffc4]
2021-03-12 10:53:15,319 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]
2021-03-12 10:53:15,319 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toShort().toString(val intListMax = intList.maxByOrNull { it } ?: -1
2021-03-12 10:53:15,319 [main:113] - Case = [public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:15,319 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@3f5efaf8]
2021-03-12 10:53:15,319 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:15,426 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:15,427 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).and(val intListMax = intList.maxByOrNull { it } ?: -1.toString(-958108042)
2021-03-12 10:53:15,427 [main:113] - Case = [public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:15,427 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Long): kotlin.Long defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@1981a0cc]
2021-03-12 10:53:15,427 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:15,428 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).div(val longListMin = longList.minByOrNull { it } ?: -1.toString(val intListMax = intList.maxByOrNull { it } ?: -1
2021-03-12 10:53:15,428 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]]
2021-03-12 10:53:15,428 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:15,428 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]
2021-03-12 10:53:15,428 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().titlecase()
2021-03-12 10:53:15,428 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:15,428 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:53:15,428 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:15,429 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toLong().toString(intListMin)
2021-03-12 10:53:15,429 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]]
2021-03-12 10:53:15,429 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:15,429 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]
2021-03-12 10:53:15,429 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().lowercase()
2021-03-12 10:53:15,429 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]]
2021-03-12 10:53:15,429 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@edb5079]
2021-03-12 10:53:15,429 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]
2021-03-12 10:53:15,429 [main:117] - GENERATED CALL = (intList.minByOrNull { it }).toChar().uppercase()
2021-03-12 10:53:15,429 [main:114] - replacement of "Facade should have only box method" of type String is (intList.minByOrNull { it }).toChar().lowercase()
2021-03-12 10:53:15,542 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:53:15,542 [main:66] - Compilation checking started
2021-03-12 10:53:15,882 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(true), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.808260800798539).toChar().uppercase(), prope1.declaredMethods.first().name, (intList.minByOrNull { it }).toChar().lowercase())

    return {
        (0.9742547408200845).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}


2021-03-12 10:53:15,997 [main:141] - TRYING TO REPLACE CONSTANT true
2021-03-12 10:53:16,110 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(BINARY_EXPRESSION)
2021-03-12 10:53:16,110 [main:66] - Compilation checking started
2021-03-12 10:53:16,584 [main:53] - Result = true
Text:

import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.808260800798539).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        (0.9742547408200845).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}


2021-03-12 10:53:16,584 [main:141] - TRYING TO REPLACE CONSTANT 0.9742547408200845
2021-03-12 10:53:16,728 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(PARENTHESIZED)
2021-03-12 10:53:16,729 [main:66] - Compilation checking started
2021-03-12 10:53:17,214 [main:53] - Result = true
Text:

import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.808260800798539).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}


2021-03-12 10:53:17,214 [main:141] - TRYING TO REPLACE CONSTANT 0.808260800798539
2021-03-12 10:53:17,380 [main:33] - Trying to replace Element(FLOAT_CONSTANT) on Element(FLOAT_CONSTANT)
2021-03-12 10:53:17,381 [main:66] - Compilation checking started
2021-03-12 10:53:17,955 [main:53] - Result = true
Text:

import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}


2021-03-12 10:53:17,955 [main:41] - AFTER TRY 1 res = 
import kotlin.test.assertEquals
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}


2021-03-12 10:53:18,477 [main:43] - Try №1
2021-03-12 10:53:32,834 [main:48] - Already checked
2021-03-12 10:53:33,081 [main:48] - Already checked
2021-03-12 10:53:37,978 [main:69] - Trying to insert override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
2021-03-12 10:53:38,119 [main:66] - Compilation checking started
2021-03-12 10:53:39,661 [main:103] - Trying to change 189 nodes
2021-03-12 10:53:39,662 [main:107] - replacing ({
        fu10(it)
    }, Function1<Continuation<Unit>, Unit>)
2021-03-12 10:53:39,662 [main:50] - replacing {
        fu10(it)
    } Function1<Continuation<Unit>, Unit>
2021-03-12 10:53:39,662 [main:54] - Getting value of type Function1<Continuation<Unit>, Unit>
2021-03-12 10:53:39,888 [main:302] - generating value of type = Function1<Continuation<Unit>, Unit> false depth = 0
2021-03-12 10:53:39,891 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:53:40,123 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:53:40,130 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:53:40,619 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:53:40,622 [main:95] - GENERATED = require(false)
2021-03-12 10:53:40,622 [main:58] - GENERATED VALUE OF TYPE Function1<Continuation<Unit>, Unit> = {a: Continuation<Unit> -> require(false)}
2021-03-12 10:53:40,622 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:41,144 [main:67] - randomType = Float?
2021-03-12 10:53:41,406 [main:302] - generating value of type = Float true depth = 0
2021-03-12 10:53:41,502 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Double
2021-03-12 10:53:41,569 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Int
2021-03-12 10:53:41,638 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Function0<String>
2021-03-12 10:53:41,654 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Char
2021-03-12 10:53:41,681 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from String
2021-03-12 10:53:41,704 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Int?
2021-03-12 10:53:41,742 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from String
2021-03-12 10:53:41,744 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Long?
2021-03-12 10:53:41,795 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Char
2021-03-12 10:53:41,796 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from List<Long>
2021-03-12 10:53:41,839 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Double
2021-03-12 10:53:41,840 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Long
2021-03-12 10:53:41,892 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Char
2021-03-12 10:53:41,894 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Long
2021-03-12 10:53:41,896 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Int?
2021-03-12 10:53:41,898 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from List<Int>
2021-03-12 10:53:41,936 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Int
2021-03-12 10:53:41,938 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Long
2021-03-12 10:53:41,940 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Boolean
2021-03-12 10:53:41,956 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from List<Int>
2021-03-12 10:53:41,958 [main:106] - GETTING Function1<Continuation<Unit>, Unit> from Long?
2021-03-12 10:53:41,958 [main:114] - replacement of {
        fu10(it)
    } of type Function1<Continuation<Unit>, Unit> is {a: Continuation<Unit> -> require(false)}
2021-03-12 10:53:42,159 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 10:53:42,160 [main:66] - Compilation checking started
2021-03-12 10:53:43,177 [main:53] - Result = true
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:53:43,179 [main:107] - replacing (prope8, Boolean)
2021-03-12 10:53:43,183 [main:50] - replacing prope8 Boolean
2021-03-12 10:53:43,187 [main:54] - Getting value of type Boolean
2021-03-12 10:53:43,475 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:53:43,478 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 10:53:43,479 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:43,719 [main:67] - randomType = HashSet<Int?>
2021-03-12 10:53:43,995 [main:302] - generating value of type = HashSet<Int?> false depth = 0
2021-03-12 10:53:44,267 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: Int?): HashSet<Int?> = TODO()
2021-03-12 10:53:44,271 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: Int?): HashSet<Int?> = TODO()
2021-03-12 10:53:44,562 [main:302] - generating value of type = Int true depth = 3
2021-03-12 10:53:44,567 [main:95] - GENERATED = linkedSetOf<Int?>(-423583693)
2021-03-12 10:53:44,781 [main:149] - GENERATING call of type public open fun iterator(): kotlin.collections.MutableIterator<kotlin.Int?> defined in kotlin.collections.HashSet[DeserializedSimpleFunctionDescriptor@76002fd]
2021-03-12 10:53:44,781 [main:149] - GENERATING call of type public abstract fun hasNext(): kotlin.Boolean defined in kotlin.collections.MutableIterator[DeserializedSimpleFunctionDescriptor@6585dea6]
2021-03-12 10:53:44,781 [main:78] - Generated call from random type = (linkedSetOf<Int?>(-423583693)).iterator().hasNext()
2021-03-12 10:53:44,782 [main:106] - GETTING Boolean from Double
2021-03-12 10:53:44,831 [main:113] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21aab942], public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@2aaa4574]]
2021-03-12 10:53:44,831 [main:149] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21aab942]
2021-03-12 10:53:44,832 [main:149] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@2aaa4574]
2021-03-12 10:53:44,832 [main:117] - GENERATED CALL = ((0.9742547408200845)).toDouble().isInfinite()
2021-03-12 10:53:44,832 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@39a34a31], public fun kotlin.Char.isUpperCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@726173f3]]
2021-03-12 10:53:44,832 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@39a34a31]
2021-03-12 10:53:44,832 [main:149] - GENERATING call of type public fun kotlin.Char.isUpperCase(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@726173f3]
2021-03-12 10:53:44,832 [main:117] - GENERATED CALL = ((0.9742547408200845)).toChar().isUpperCase()
2021-03-12 10:53:44,832 [main:113] - Case = [@kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@43a0764a], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5e982143]]
2021-03-12 10:53:44,832 [main:149] - GENERATING call of type @kotlin.Deprecated public open fun toShort(): kotlin.Short defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@43a0764a]
2021-03-12 10:53:44,832 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@5e982143]
2021-03-12 10:53:45,077 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:53:45,078 [main:117] - GENERATED CALL = ((0.9742547408200845)).toShort().equals("oiftv")
2021-03-12 10:53:45,078 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@621d6441], public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1c8a47f3]]
2021-03-12 10:53:45,078 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@621d6441]
2021-03-12 10:53:45,318 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:53:45,319 [main:149] - GENERATING call of type public final infix fun and(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1c8a47f3]
2021-03-12 10:53:45,516 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:53:45,519 [main:117] - GENERATED CALL = ((0.9742547408200845)).equals("xcudn").and(true)
2021-03-12 10:53:45,519 [main:113] - Case = [public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@1a671c3d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@65113eab]]
2021-03-12 10:53:45,519 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@1a671c3d]
2021-03-12 10:53:45,519 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@65113eab]
2021-03-12 10:53:45,708 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:53:45,708 [main:117] - GENERATED CALL = ((0.9742547408200845)).toLong().equals("ddwow")
2021-03-12 10:53:45,708 [main:113] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@703fc1df], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@400b100d]]
2021-03-12 10:53:45,708 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@703fc1df]
2021-03-12 10:53:45,886 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:53:45,889 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@400b100d]
2021-03-12 10:53:46,107 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:53:46,108 [main:117] - GENERATED CALL = ((0.9742547408200845)).compareTo(60).equals("tnycy")
2021-03-12 10:53:46,108 [main:113] - Case = [public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21aab942], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@621d6441]]
2021-03-12 10:53:46,108 [main:149] - GENERATING call of type public abstract fun toDouble(): kotlin.Double defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@21aab942]
2021-03-12 10:53:46,108 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@621d6441]
2021-03-12 10:53:46,312 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:53:46,313 [main:117] - GENERATED CALL = ((0.9742547408200845)).toDouble().equals("ksrit")
2021-03-12 10:53:46,313 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@39a34a31], public fun kotlin.Char.isLetterOrDigit(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cad897f]]
2021-03-12 10:53:46,313 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@39a34a31]
2021-03-12 10:53:46,313 [main:149] - GENERATING call of type public fun kotlin.Char.isLetterOrDigit(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cad897f]
2021-03-12 10:53:46,314 [main:117] - GENERATED CALL = ((0.9742547408200845)).toChar().isLetterOrDigit()
2021-03-12 10:53:46,314 [main:113] - Case = [public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@2aaa4574]]
2021-03-12 10:53:46,314 [main:149] - GENERATING call of type public fun kotlin.Double.isInfinite(): kotlin.Boolean defined in kotlin[DeserializedSimpleFunctionDescriptor@2aaa4574]
2021-03-12 10:53:46,314 [main:117] - GENERATED CALL = ((0.9742547408200845)).isInfinite()
2021-03-12 10:53:46,314 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@621d6441], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5807766d]]
2021-03-12 10:53:46,314 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@621d6441]
2021-03-12 10:53:46,520 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:53:46,617 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@5807766d]
2021-03-12 10:53:46,618 [main:117] - GENERATED CALL = ((0.9742547408200845)).equals("tpftr").xor((intList).equals("aedwz"))
2021-03-12 10:53:46,618 [main:114] - replacement of prope8 of type Boolean is ((0.9742547408200845)).toShort().equals("oiftv")
2021-03-12 10:53:46,798 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:53:46,798 [main:66] - Compilation checking started
2021-03-12 10:53:47,323 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        ((0.9742547408200845)).toShort().equals("oiftv") = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:53:47,326 [main:107] - replacing ({ error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }, Function0<Nothing>)
2021-03-12 10:53:47,329 [main:50] - replacing { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) } Function0<Nothing>
2021-03-12 10:53:47,329 [main:54] - Getting value of type Function0<Nothing>
2021-03-12 10:53:47,542 [main:302] - generating value of type = Function0<Nothing> false depth = 0
2021-03-12 10:53:47,544 [main:302] - generating value of type = Nothing false depth = 1
2021-03-12 10:53:47,751 [main:43] - GENERATING CALL OF fun TODO(reason: kotlin.String): Nothg = TODO()
2021-03-12 10:53:47,755 [main:61] - WITHOUT TYPE PARAMS = fun TODO(reason: kotlin.String): Nothg = TODO()
2021-03-12 10:53:48,227 [main:302] - generating value of type = String true depth = 4
2021-03-12 10:53:48,231 [main:95] - GENERATED = TODO("suxii")
2021-03-12 10:53:48,231 [main:58] - GENERATED VALUE OF TYPE Function0<Nothing> = { TODO("suxii")}
2021-03-12 10:53:48,231 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:48,471 [main:67] - randomType = Sequence<Double>
2021-03-12 10:53:48,473 [main:106] - GETTING Function0<Nothing> from Int
2021-03-12 10:53:48,555 [main:106] - GETTING Function0<Nothing> from List<Int>
2021-03-12 10:53:48,600 [main:106] - GETTING Function0<Nothing> from Long?
2021-03-12 10:53:48,663 [main:106] - GETTING Function0<Nothing> from Long?
2021-03-12 10:53:48,666 [main:106] - GETTING Function0<Nothing> from List<Long>
2021-03-12 10:53:48,711 [main:106] - GETTING Function0<Nothing> from Char
2021-03-12 10:53:48,737 [main:106] - GETTING Function0<Nothing> from Long
2021-03-12 10:53:48,773 [main:106] - GETTING Function0<Nothing> from List<Int>
2021-03-12 10:53:48,774 [main:106] - GETTING Function0<Nothing> from Int?
2021-03-12 10:53:48,815 [main:106] - GETTING Function0<Nothing> from Double
2021-03-12 10:53:48,850 [main:106] - GETTING Function0<Nothing> from Function0<String>
2021-03-12 10:53:48,863 [main:106] - GETTING Function0<Nothing> from Int?
2021-03-12 10:53:48,864 [main:106] - GETTING Function0<Nothing> from String
2021-03-12 10:53:48,882 [main:106] - GETTING Function0<Nothing> from Char
2021-03-12 10:53:48,883 [main:106] - GETTING Function0<Nothing> from Int
2021-03-12 10:53:48,885 [main:106] - GETTING Function0<Nothing> from Boolean
2021-03-12 10:53:48,897 [main:106] - GETTING Function0<Nothing> from Char
2021-03-12 10:53:48,898 [main:106] - GETTING Function0<Nothing> from Double
2021-03-12 10:53:48,900 [main:106] - GETTING Function0<Nothing> from String
2021-03-12 10:53:48,901 [main:106] - GETTING Function0<Nothing> from Long
2021-03-12 10:53:48,902 [main:106] - GETTING Function0<Nothing> from Long
2021-03-12 10:53:48,902 [main:114] - replacement of { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) } of type Function0<Nothing> is { TODO("suxii")}
2021-03-12 10:53:49,105 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 10:53:49,105 [main:66] - Compilation checking started
2021-03-12 10:53:49,693 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope6.find { it?.methodName?.startsWith(method) == true }?.let { TODO("suxii")}
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:53:49,696 [main:107] - replacing (this, Kla4)
2021-03-12 10:53:49,700 [main:50] - replacing this Kla4
2021-03-12 10:53:49,700 [main:54] - Getting value of type Kla4
2021-03-12 10:53:49,918 [main:302] - generating value of type = Kla4 false depth = 0
2021-03-12 10:53:49,921 [main:112] - generating klass Kla4 text = class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}
2021-03-12 10:53:49,922 [main:58] - GENERATED VALUE OF TYPE Kla4 = Kla4()
2021-03-12 10:53:49,922 [main:61] - GENERATED IS CALL =true
2021-03-12 10:53:50,141 [main:67] - randomType = UByte
2021-03-12 10:53:50,447 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 10:53:50,509 [main:106] - GETTING Kla4 from String
2021-03-12 10:53:50,551 [main:106] - GETTING Kla4 from Int?
2021-03-12 10:53:50,607 [main:106] - GETTING Kla4 from Boolean
2021-03-12 10:53:50,619 [main:106] - GETTING Kla4 from Char
2021-03-12 10:53:50,644 [main:106] - GETTING Kla4 from Long
2021-03-12 10:53:50,688 [main:106] - GETTING Kla4 from Long?
2021-03-12 10:53:50,747 [main:106] - GETTING Kla4 from Long?
2021-03-12 10:53:50,748 [main:106] - GETTING Kla4 from Int?
2021-03-12 10:53:50,749 [main:106] - GETTING Kla4 from List<Int>
2021-03-12 10:53:50,788 [main:106] - GETTING Kla4 from Double
2021-03-12 10:53:50,847 [main:106] - GETTING Kla4 from List<Long>
2021-03-12 10:53:50,891 [main:106] - GETTING Kla4 from List<Int>
2021-03-12 10:53:50,891 [main:106] - GETTING Kla4 from Long
2021-03-12 10:53:50,892 [main:106] - GETTING Kla4 from Int
2021-03-12 10:53:50,956 [main:106] - GETTING Kla4 from Char
2021-03-12 10:53:50,956 [main:106] - GETTING Kla4 from Double
2021-03-12 10:53:50,957 [main:106] - GETTING Kla4 from Char
2021-03-12 10:53:50,958 [main:106] - GETTING Kla4 from Function0<String>
2021-03-12 10:53:50,974 [main:106] - GETTING Kla4 from Int
2021-03-12 10:53:50,975 [main:106] - GETTING Kla4 from Long
2021-03-12 10:53:50,976 [main:106] - GETTING Kla4 from String
2021-03-12 10:53:50,976 [main:114] - replacement of this of type Kla4 is Kla4()
2021-03-12 10:53:51,228 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 10:53:51,229 [main:66] - Compilation checking started
2021-03-12 10:53:51,890 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
Kla4().prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope6.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:53:51,893 [main:107] - replacing (getOrThrow(), Any?)
2021-03-12 10:53:51,893 [main:50] - replacing getOrThrow() Any?
2021-03-12 10:53:51,893 [main:54] - Getting value of type Any?
2021-03-12 10:53:52,134 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:53:52,135 [main:58] - GENERATED VALUE OF TYPE Any? = "whinu"
2021-03-12 10:53:52,135 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:52,395 [main:67] - randomType = ArrayDeque<Kla1>
2021-03-12 10:53:52,631 [main:302] - generating value of type = ArrayDeque<Kla1> false depth = 0
2021-03-12 10:53:52,855 [main:43] - GENERATING CALL OF fun <E> ArrayDeque(elements: kotlin.collections.Collection<Kla1>): ArrayDeque<Kla1> = TODO()
2021-03-12 10:53:52,860 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayDeque(elements: kotlin.collections.Collection<Kla1>): ArrayDeque<Kla1> = TODO()
2021-03-12 10:53:53,475 [main:302] - generating value of type = Collection<Kla1> false depth = 3
2021-03-12 10:53:53,748 [main:43] - GENERATING CALL OF fun <T> mutableSetOf(): Collection<Kla1> = TODO()
2021-03-12 10:53:53,755 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableSetOf(): Collection<Kla1> = TODO()
2021-03-12 10:53:54,002 [main:95] - GENERATED = mutableSetOf<Kla1>()
2021-03-12 10:53:54,002 [main:95] - GENERATED = ArrayDeque<Kla1>(mutableSetOf<Kla1>())
2021-03-12 10:53:54,238 [main:149] - GENERATING call of type @kotlin.js.JsName public open fun toJSON(): kotlin.Any defined in kotlin.collections.ArrayDeque[DeserializedSimpleFunctionDescriptor@41955833]
2021-03-12 10:53:54,238 [main:78] - Generated call from random type = (ArrayDeque<Kla1>(mutableSetOf<Kla1>())).toJSON()
2021-03-12 10:53:54,238 [main:114] - replacement of getOrThrow() of type Any? is (ArrayDeque<Kla1>(mutableSetOf<Kla1>())).toJSON()
2021-03-12 10:53:54,473 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:53:54,473 [main:66] - Compilation checking started
2021-03-12 10:53:55,188 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
this.prope2 = prope2.(ArrayDeque<Kla1>(mutableSetOf<Kla1>())).toJSON()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope6.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:53:55,192 [main:107] - replacing ("tail-call optimization miss: method at " + it + " has state-machine ", String)
2021-03-12 10:53:55,192 [main:50] - replacing "tail-call optimization miss: method at " + it + " has state-machine " String
2021-03-12 10:53:55,193 [main:54] - Getting value of type String
2021-03-12 10:53:55,437 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:55,442 [main:58] - GENERATED VALUE OF TYPE String = "qhwif"
2021-03-12 10:53:55,442 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:56,225 [main:67] - randomType = MutableMap<Set<Byte>, Double>
2021-03-12 10:53:56,226 [main:106] - GETTING String from Long
2021-03-12 10:53:56,284 [main:113] - Case = [public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@d13ab4d], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4d1405ee]]
2021-03-12 10:53:56,284 [main:149] - GENERATING call of type public open fun toByte(): kotlin.Byte defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@d13ab4d]
2021-03-12 10:53:56,284 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4d1405ee]
2021-03-12 10:53:56,561 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:56,566 [main:117] - GENERATED CALL = ((longListMax)).toByte().toString(1569976638)
2021-03-12 10:53:56,566 [main:113] - Case = [@kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:56,566 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:56,567 [main:117] - GENERATED CALL = ((longListMax)).toString(val intListMin = intList.minByOrNull { it } ?: -1
2021-03-12 10:53:56,567 [main:113] - Case = [public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:56,567 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7dcc664d]
2021-03-12 10:53:56,567 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:56,829 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:56,832 [main:117] - GENERATED CALL = ((longListMax)).toInt().toString(99235514)
2021-03-12 10:53:56,833 [main:113] - Case = [public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2025402], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:53:56,833 [main:149] - GENERATING call of type public final operator fun compareTo(other: kotlin.Byte): kotlin.Int defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2025402]
2021-03-12 10:53:57,084 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 10:53:57,089 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:53:57,090 [main:117] - GENERATED CALL = ((longListMax)).compareTo(79).toString(val intListMin = intList.minByOrNull { it } ?: -1
2021-03-12 10:53:57,090 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]]
2021-03-12 10:53:57,090 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a]
2021-03-12 10:53:57,090 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]
2021-03-12 10:53:57,090 [main:117] - GENERATED CALL = ((longListMax)).toChar().uppercase()
2021-03-12 10:53:57,090 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]]
2021-03-12 10:53:57,090 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a]
2021-03-12 10:53:57,090 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]
2021-03-12 10:53:57,091 [main:117] - GENERATED CALL = ((longListMax)).toChar().lowercase()
2021-03-12 10:53:57,091 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a], @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]]
2021-03-12 10:53:57,091 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a]
2021-03-12 10:53:57,091 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]
2021-03-12 10:53:57,091 [main:117] - GENERATED CALL = ((longListMax)).toChar().plus(private var prope0 =
2021-03-12 10:53:57,091 [main:113] - Case = [public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2237dc21], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]]
2021-03-12 10:53:57,091 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@2237dc21]
2021-03-12 10:53:57,092 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]
2021-03-12 10:53:57,318 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:57,321 [main:117] - GENERATED CALL = ((longListMax)).toShort().toString(1711501588)
2021-03-12 10:53:57,321 [main:113] - Case = [public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:53:57,321 [main:149] - GENERATING call of type public abstract fun toLong(): kotlin.Long defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@4979223e]
2021-03-12 10:53:57,321 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:53:57,527 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:53:57,531 [main:117] - GENERATED CALL = ((longListMax)).toLong().toString(1836881853)
2021-03-12 10:53:57,531 [main:113] - Case = [public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]]
2021-03-12 10:53:57,531 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6308699a]
2021-03-12 10:53:57,531 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]
2021-03-12 10:53:57,531 [main:117] - GENERATED CALL = ((longListMax)).toChar().titlecase()
2021-03-12 10:53:57,531 [main:114] - replacement of "tail-call optimization miss: method at " + it + " has state-machine " of type String is ((longListMax)).compareTo(79).toString(val intListMin = intList.minByOrNull { it } ?: -1
2021-03-12 10:53:57,759 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(BINARY_EXPRESSION)
2021-03-12 10:53:57,760 [main:66] - Compilation checking started
2021-03-12 10:53:57,770 [main:71] - Wrong syntax or breaks conditions
2021-03-12 10:53:57,771 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope6.find { it?.methodName?.startsWith(method) == true }?.let { error(((longListMax)).compareTo(79).toString(val intListMin = intList.minByOrNull { it } ?: -1 +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:53:57,774 [main:107] - replacing (getOrThrow(), Ty0)
2021-03-12 10:53:57,778 [main:50] - replacing getOrThrow() Ty0
2021-03-12 10:53:57,778 [main:54] - Getting value of type Ty0
2021-03-12 10:53:58,105 [main:302] - generating value of type = Ty0 false depth = 0
2021-03-12 10:53:58,114 [main:58] - GENERATED VALUE OF TYPE Ty0 = 
2021-03-12 10:53:58,922 [main:67] - randomType = Map<UInt?, Kla0>
2021-03-12 10:53:58,923 [main:106] - GETTING Ty0 from Long?
2021-03-12 10:53:58,993 [main:106] - GETTING Ty0 from Long
2021-03-12 10:53:59,051 [main:106] - GETTING Ty0 from Long
2021-03-12 10:53:59,051 [main:106] - GETTING Ty0 from Int?
2021-03-12 10:53:59,107 [main:106] - GETTING Ty0 from Function0<String>
2021-03-12 10:53:59,122 [main:106] - GETTING Ty0 from List<Long>
2021-03-12 10:53:59,159 [main:106] - GETTING Ty0 from Long?
2021-03-12 10:53:59,160 [main:106] - GETTING Ty0 from Double
2021-03-12 10:53:59,200 [main:106] - GETTING Ty0 from Char
2021-03-12 10:53:59,222 [main:106] - GETTING Ty0 from List<Int>
2021-03-12 10:53:59,250 [main:106] - GETTING Ty0 from Boolean
2021-03-12 10:53:59,259 [main:106] - GETTING Ty0 from Int
2021-03-12 10:53:59,302 [main:106] - GETTING Ty0 from Long
2021-03-12 10:53:59,303 [main:106] - GETTING Ty0 from Double
2021-03-12 10:53:59,303 [main:106] - GETTING Ty0 from Int?
2021-03-12 10:53:59,304 [main:106] - GETTING Ty0 from Char
2021-03-12 10:53:59,304 [main:106] - GETTING Ty0 from List<Int>
2021-03-12 10:53:59,305 [main:106] - GETTING Ty0 from Int
2021-03-12 10:53:59,306 [main:106] - GETTING Ty0 from Char
2021-03-12 10:53:59,306 [main:106] - GETTING Ty0 from String
2021-03-12 10:53:59,337 [main:106] - GETTING Ty0 from String
2021-03-12 10:53:59,337 [main:111] - Cant find and generate replacement for getOrThrow() type Ty0
2021-03-12 10:53:59,337 [main:107] - replacing ("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7, String)
2021-03-12 10:53:59,340 [main:50] - replacing "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7 String
2021-03-12 10:53:59,340 [main:54] - Getting value of type String
2021-03-12 10:53:59,615 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:59,618 [main:58] - GENERATED VALUE OF TYPE String = "eyskp"
2021-03-12 10:53:59,619 [main:61] - GENERATED IS CALL =false
2021-03-12 10:53:59,625 [main:67] - randomType = String
2021-03-12 10:53:59,847 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:53:59,889 [main:149] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7c47a5f0]
2021-03-12 10:54:00,153 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 10:54:00,156 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 10:54:00,160 [main:78] - Generated call from random type = ("zqqas").takeLastWhile({a: Char -> false})
2021-03-12 10:54:00,160 [main:114] - replacement of "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7 of type String is ("zqqas").takeLastWhile({a: Char -> false})
2021-03-12 10:54:00,412 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:54:00,412 [main:66] - Compilation checking started
2021-03-12 10:54:01,203 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope6.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error(("zqqas").takeLastWhile({a: Char -> false}))
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:54:01,207 [main:107] - replacing (prope3, Continuation<*>)
2021-03-12 10:54:01,210 [main:50] - replacing prope3 Continuation<*>
2021-03-12 10:54:01,210 [main:54] - Getting value of type Continuation<*>
2021-03-12 10:54:01,492 [main:302] - generating value of type = Continuation<*> false depth = 0
2021-03-12 10:54:01,709 [main:43] - GENERATING CALL OF fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-12 10:54:01,714 [main:61] - WITHOUT TYPE PARAMS = fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-12 10:54:02,669 [main:302] - generating value of type = CoroutineContext false depth = 3
2021-03-12 10:54:02,942 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:54:02,947 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:54:03,600 [main:302] - generating value of type = Key<*> false depth = 6
2021-03-12 10:54:03,899 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:54:03,905 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:54:04,895 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 10:54:04,895 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 10:54:04,895 [main:385] - Cant generate call of fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Any?>)->kotlin.Unit): Contuation<*> = TODO()
2021-03-12 10:54:04,896 [main:58] - GENERATED VALUE OF TYPE Continuation<*> = 
2021-03-12 10:54:04,906 [main:67] - randomType = Int
2021-03-12 10:54:05,223 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:54:05,308 [main:106] - GETTING Continuation<*> from Long?
2021-03-12 10:54:05,382 [main:106] - GETTING Continuation<*> from Int
2021-03-12 10:54:05,446 [main:106] - GETTING Continuation<*> from List<Long>
2021-03-12 10:54:05,496 [main:106] - GETTING Continuation<*> from Char
2021-03-12 10:54:05,538 [main:106] - GETTING Continuation<*> from Boolean
2021-03-12 10:54:05,555 [main:106] - GETTING Continuation<*> from String
2021-03-12 10:54:05,593 [main:106] - GETTING Continuation<*> from Double
2021-03-12 10:54:05,656 [main:106] - GETTING Continuation<*> from Double
2021-03-12 10:54:05,657 [main:106] - GETTING Continuation<*> from Long?
2021-03-12 10:54:05,659 [main:106] - GETTING Continuation<*> from Long
2021-03-12 10:54:05,718 [main:106] - GETTING Continuation<*> from Char
2021-03-12 10:54:05,719 [main:106] - GETTING Continuation<*> from Long
2021-03-12 10:54:05,721 [main:106] - GETTING Continuation<*> from Long
2021-03-12 10:54:05,722 [main:106] - GETTING Continuation<*> from String
2021-03-12 10:54:05,723 [main:106] - GETTING Continuation<*> from Int
2021-03-12 10:54:05,724 [main:106] - GETTING Continuation<*> from Char
2021-03-12 10:54:05,725 [main:106] - GETTING Continuation<*> from List<Int>
2021-03-12 10:54:05,758 [main:106] - GETTING Continuation<*> from Function0<String>
2021-03-12 10:54:05,772 [main:106] - GETTING Continuation<*> from Int?
2021-03-12 10:54:05,828 [main:106] - GETTING Continuation<*> from Int?
2021-03-12 10:54:05,829 [main:106] - GETTING Continuation<*> from List<Int>
2021-03-12 10:54:05,829 [main:111] - Cant find and generate replacement for prope3 type Continuation<*>
2021-03-12 10:54:05,829 [main:107] - replacing (resumeWithException(IllegalStateException("OK")), Unit?)
2021-03-12 10:54:05,832 [main:50] - replacing resumeWithException(IllegalStateException("OK")) Unit?
2021-03-12 10:54:05,832 [main:54] - Getting value of type Unit?
2021-03-12 10:54:06,102 [main:302] - generating value of type = Unit false depth = 0
2021-03-12 10:54:06,347 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 10:54:06,352 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 10:54:06,914 [main:302] - generating value of type = Any false depth = 3
2021-03-12 10:54:06,914 [main:95] - GENERATED = println("mvnrv")
2021-03-12 10:54:06,914 [main:58] - GENERATED VALUE OF TYPE Unit? = println("mvnrv")
2021-03-12 10:54:06,914 [main:61] - GENERATED IS CALL =true
2021-03-12 10:54:07,216 [main:67] - randomType = UInt
2021-03-12 10:54:07,432 [main:302] - generating value of type = UInt true depth = 0
2021-03-12 10:54:07,472 [main:106] - GETTING Unit? from Int?
2021-03-12 10:54:07,518 [main:106] - GETTING Unit? from Int
2021-03-12 10:54:07,557 [main:106] - GETTING Unit? from Double
2021-03-12 10:54:07,593 [main:106] - GETTING Unit? from List<Long>
2021-03-12 10:54:07,622 [main:113] - Case = [public inline fun <T> kotlin.collections.Iterable<T>.forEachIndexed(action: (index: kotlin.Int, T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@53f0d946]]
2021-03-12 10:54:07,622 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterable<T>.forEachIndexed(action: (index: kotlin.Int, T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@53f0d946]
2021-03-12 10:54:07,928 [main:302] - generating value of type = Function2<[@kotlin.ParameterName] Int, T, Unit> false depth = 0
2021-03-12 10:54:07,933 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:54:08,194 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:54:08,198 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:54:08,739 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-12 10:54:08,742 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 10:54:09,018 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:54:09,037 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:54:09,635 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 8
2021-03-12 10:54:09,639 [main:302] - generating value of type = Unit false depth = 9
2021-03-12 10:54:09,863 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:54:09,868 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:54:10,435 [main:302] - generating value of type = Boolean true depth = 12
2021-03-12 10:54:10,438 [main:95] - GENERATED = require(false)
2021-03-12 10:54:10,438 [main:95] - GENERATED = contract({ require(false)})
2021-03-12 10:54:10,438 [main:95] - GENERATED = contract({ contract({ require(false)})})
2021-03-12 10:54:10,439 [main:117] - GENERATED CALL = (longList)?.forEachIndexed({a: Int, b: T -> contract({ contract({ require(false)})})})
2021-03-12 10:54:10,439 [main:113] - Case = [public abstract fun iterator(): kotlin.collections.Iterator<kotlin.Long> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5d137c3c], public inline fun <T> kotlin.collections.Iterator<T>.forEach(operation: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5772a790]]
2021-03-12 10:54:10,439 [main:149] - GENERATING call of type public abstract fun iterator(): kotlin.collections.Iterator<kotlin.Long> defined in kotlin.collections.List[DeserializedSimpleFunctionDescriptor@5d137c3c]
2021-03-12 10:54:10,439 [main:149] - GENERATING call of type public inline fun <T> kotlin.collections.Iterator<T>.forEach(operation: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@5772a790]
2021-03-12 10:54:10,731 [main:302] - generating value of type = Function1<T, Unit> false depth = 0
2021-03-12 10:54:10,736 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:54:10,975 [main:43] - GENERATING CALL OF fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:54:10,980 [main:61] - WITHOUT TYPE PARAMS = fun contract(builder: kotlin.contracts.ContractBuilder.()->kotlin.Unit): Unit = TODO()
2021-03-12 10:54:11,497 [main:302] - generating value of type = [@kotlin.ExtensionFunctionType] Function1<ContractBuilder, Unit> false depth = 4
2021-03-12 10:54:11,500 [main:302] - generating value of type = Unit false depth = 5
2021-03-12 10:54:11,762 [main:43] - GENERATING CALL OF fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:54:11,767 [main:61] - WITHOUT TYPE PARAMS = fun repeat(times: kotlin.Int, action: (kotlin.Int)->kotlin.Unit): Unit = TODO()
2021-03-12 10:54:12,582 [main:302] - generating value of type = Int true depth = 8
2021-03-12 10:54:12,586 [main:302] - generating value of type = Function1<Int, Unit> false depth = 8
2021-03-12 10:54:12,589 [main:302] - generating value of type = Unit false depth = 9
2021-03-12 10:54:12,852 [main:43] - GENERATING CALL OF fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 10:54:12,857 [main:61] - WITHOUT TYPE PARAMS = fun println(message: kotlin.Any?): Unit = TODO()
2021-03-12 10:54:13,438 [main:302] - generating value of type = Any false depth = 12
2021-03-12 10:54:13,439 [main:95] - GENERATED = println("scuqs")
2021-03-12 10:54:13,439 [main:95] - GENERATED = repeat(1869707078, {a: Int -> println("scuqs")})
2021-03-12 10:54:13,439 [main:95] - GENERATED = contract({ repeat(1869707078, {a: Int -> println("scuqs")})})
2021-03-12 10:54:13,440 [main:117] - GENERATED CALL = (longList)?.iterator().forEach({a: T -> contract({ repeat(1869707078, {a: Int -> println("scuqs")})})})
2021-03-12 10:54:13,440 [main:113] - Case = [@kotlin.internal.HidesMembers public inline fun <T> kotlin.collections.Iterable<T>.forEach(action: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2814bb39]]
2021-03-12 10:54:13,440 [main:149] - GENERATING call of type @kotlin.internal.HidesMembers public inline fun <T> kotlin.collections.Iterable<T>.forEach(action: (T) -> kotlin.Unit): kotlin.Unit defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2814bb39]
2021-03-12 10:54:13,710 [main:302] - generating value of type = Function1<T, Unit> false depth = 0
2021-03-12 10:54:13,715 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:54:14,076 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:54:14,081 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean): Unit = TODO()
2021-03-12 10:54:14,686 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:54:14,690 [main:95] - GENERATED = require(true)
2021-03-12 10:54:14,691 [main:117] - GENERATED CALL = (longList)?.forEach({a: T -> require(true)})
2021-03-12 10:54:14,691 [main:114] - replacement of resumeWithException(IllegalStateException("OK")) of type Unit? is (longList)?.iterator().forEach({a: T -> contract({ repeat(1869707078, {a: Int -> println("scuqs")})})})
2021-03-12 10:54:14,959 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:54:14,959 [main:66] - Compilation checking started
2021-03-12 10:54:15,679 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.(longList)?.iterator().forEach({a: T -> contract({ repeat(1869707078, {a: Int -> println("scuqs")})})})
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope6.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:54:15,685 [main:107] - replacing ("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected ", String)
2021-03-12 10:54:15,685 [main:50] - replacing "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " String
2021-03-12 10:54:15,685 [main:54] - Getting value of type String
2021-03-12 10:54:16,009 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:54:16,013 [main:58] - GENERATED VALUE OF TYPE String = "unbij"
2021-03-12 10:54:16,014 [main:61] - GENERATED IS CALL =false
2021-03-12 10:54:16,022 [main:67] - randomType = Boolean
2021-03-12 10:54:16,276 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:54:16,294 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Boolean): kotlin.Int defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@3a5d4375]
2021-03-12 10:54:16,567 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:54:16,570 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:54:16,833 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:54:16,836 [main:78] - Generated call from random type = (true).compareTo(true).toString(618480159)
2021-03-12 10:54:16,837 [main:106] - GETTING String from Char
2021-03-12 10:54:16,868 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]]
2021-03-12 10:54:16,868 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@66042eba]
2021-03-12 10:54:16,868 [main:117] - GENERATED CALL = ((0.9742547408200845).toChar()).uppercase()
2021-03-12 10:54:16,868 [main:113] - Case = [public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@5bacbc0f], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]]
2021-03-12 10:54:16,868 [main:149] - GENERATING call of type public final fun toShort(): kotlin.Short defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@5bacbc0f]
2021-03-12 10:54:16,868 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6cbad185]
2021-03-12 10:54:16,869 [main:117] - GENERATED CALL = ((0.9742547408200845).toChar()).toShort().toString(val intListMax = intList.maxByOrNull { it } ?: -1
2021-03-12 10:54:16,869 [main:113] - Case = [public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@3d034f01], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]]
2021-03-12 10:54:16,869 [main:149] - GENERATING call of type public open fun compareTo(other: kotlin.Char): kotlin.Int defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@3d034f01]
2021-03-12 10:54:16,869 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@152e4dbc]
2021-03-12 10:54:17,139 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:54:17,155 [main:117] - GENERATED CALL = ((0.9742547408200845).toChar()).compareTo((longListMax).toChar()).toString(1522461666)
2021-03-12 10:54:17,155 [main:113] - Case = [@kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]]
2021-03-12 10:54:17,155 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3af92f31]
2021-03-12 10:54:17,155 [main:117] - GENERATED CALL = ((0.9742547408200845).toChar()).plus(fu0())
2021-03-12 10:54:17,155 [main:113] - Case = [public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@1f1d480e], @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4d1405ee]]
2021-03-12 10:54:17,155 [main:149] - GENERATING call of type public final fun toByte(): kotlin.Byte defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@1f1d480e]
2021-03-12 10:54:17,155 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Byte.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4d1405ee]
2021-03-12 10:54:17,156 [main:117] - GENERATED CALL = ((0.9742547408200845).toChar()).toByte().toString(val intListMax = intList.maxByOrNull { it } ?: -1
2021-03-12 10:54:17,156 [main:113] - Case = [public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@2586ccb7], @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]]
2021-03-12 10:54:17,156 [main:149] - GENERATING call of type public final fun toLong(): kotlin.Long defined in kotlin.Char[DeserializedSimpleFunctionDescriptor@2586ccb7]
2021-03-12 10:54:17,156 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3189b933]
2021-03-12 10:54:17,394 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:54:17,397 [main:117] - GENERATED CALL = ((0.9742547408200845).toChar()).toLong().toString(1333406644)
2021-03-12 10:54:17,398 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]]
2021-03-12 10:54:17,398 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@8302832]
2021-03-12 10:54:17,398 [main:117] - GENERATED CALL = ((0.9742547408200845).toChar()).lowercase()
2021-03-12 10:54:17,398 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]]
2021-03-12 10:54:17,398 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Char.titlecase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@695618d5]
2021-03-12 10:54:17,398 [main:117] - GENERATED CALL = ((0.9742547408200845).toChar()).titlecase()
2021-03-12 10:54:17,398 [main:114] - replacement of "Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " of type String is ((0.9742547408200845).toChar()).compareTo((longListMax).toChar()).toString(1522461666)
2021-03-12 10:54:17,657 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 10:54:17,658 [main:66] - Compilation checking started
2021-03-12 10:54:18,372 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope6.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error(((0.9742547408200845).toChar()).compareTo((longListMax).toChar()).toString(1522461666) + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:54:18,375 [main:107] - replacing ({
            prope5.prope8 = true
        }, Function0<Unit>)
2021-03-12 10:54:18,377 [main:50] - replacing {
            prope5.prope8 = true
        } Function0<Unit>
2021-03-12 10:54:18,378 [main:54] - Getting value of type Function0<Unit>
2021-03-12 10:54:18,699 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-12 10:54:18,703 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:54:18,943 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:54:18,948 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:54:19,839 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:54:19,842 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 10:54:19,861 [main:302] - generating value of type = Any false depth = 5
2021-03-12 10:54:19,861 [main:95] - GENERATED = require(false, { "vofij"})
2021-03-12 10:54:19,861 [main:58] - GENERATED VALUE OF TYPE Function0<Unit> = { require(false, { "vofij"})}
2021-03-12 10:54:19,861 [main:61] - GENERATED IS CALL =false
2021-03-12 10:54:20,502 [main:67] - randomType = ULong?
2021-03-12 10:54:20,750 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:54:20,802 [main:106] - GETTING Function0<Unit> from Char
2021-03-12 10:54:20,844 [main:106] - GETTING Function0<Unit> from Function0<String>
2021-03-12 10:54:20,866 [main:106] - GETTING Function0<Unit> from Char
2021-03-12 10:54:20,868 [main:106] - GETTING Function0<Unit> from Long
2021-03-12 10:54:20,926 [main:106] - GETTING Function0<Unit> from Double
2021-03-12 10:54:20,966 [main:106] - GETTING Function0<Unit> from Long?
2021-03-12 10:54:21,003 [main:106] - GETTING Function0<Unit> from Int?
2021-03-12 10:54:21,047 [main:106] - GETTING Function0<Unit> from Long
2021-03-12 10:54:21,048 [main:106] - GETTING Function0<Unit> from String
2021-03-12 10:54:21,075 [main:106] - GETTING Function0<Unit> from String
2021-03-12 10:54:21,076 [main:106] - GETTING Function0<Unit> from Double
2021-03-12 10:54:21,077 [main:106] - GETTING Function0<Unit> from List<Int>
2021-03-12 10:54:21,106 [main:106] - GETTING Function0<Unit> from Long?
2021-03-12 10:54:21,107 [main:106] - GETTING Function0<Unit> from Long
2021-03-12 10:54:21,108 [main:106] - GETTING Function0<Unit> from Boolean
2021-03-12 10:54:21,118 [main:106] - GETTING Function0<Unit> from Int?
2021-03-12 10:54:21,119 [main:106] - GETTING Function0<Unit> from Int
2021-03-12 10:54:21,161 [main:106] - GETTING Function0<Unit> from Char
2021-03-12 10:54:21,163 [main:106] - GETTING Function0<Unit> from List<Int>
2021-03-12 10:54:21,165 [main:106] - GETTING Function0<Unit> from List<Long>
2021-03-12 10:54:21,192 [main:106] - GETTING Function0<Unit> from Int
2021-03-12 10:54:21,192 [main:114] - replacement of {
            prope5.prope8 = true
        } of type Function0<Unit> is { require(false, { "vofij"})}
2021-03-12 10:54:21,475 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 10:54:21,476 [main:66] - Compilation checking started
2021-03-12 10:54:22,179 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope6.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope5.prope9 = { require(false, { "vofij"})}
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:54:22,183 [main:107] - replacing (x, Function1<Throwable, Unit>)
2021-03-12 10:54:22,185 [main:50] - replacing x Function1<Throwable, Unit>
2021-03-12 10:54:22,185 [main:54] - Getting value of type Function1<Throwable, Unit>
2021-03-12 10:54:22,480 [main:302] - generating value of type = Function1<Throwable, Unit> false depth = 0
2021-03-12 10:54:22,484 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 10:54:22,773 [main:43] - GENERATING CALL OF fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:54:22,778 [main:61] - WITHOUT TYPE PARAMS = fun require(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 10:54:23,709 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 10:54:23,713 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 10:54:23,717 [main:302] - generating value of type = Any false depth = 5
2021-03-12 10:54:23,717 [main:95] - GENERATED = require(false, { "pxaez"})
2021-03-12 10:54:23,717 [main:58] - GENERATED VALUE OF TYPE Function1<Throwable, Unit> = {a: Throwable -> require(false, { "pxaez"})}
2021-03-12 10:54:23,717 [main:61] - GENERATED IS CALL =false
2021-03-12 10:54:23,991 [main:67] - randomType = ULong
2021-03-12 10:54:24,309 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 10:54:24,365 [main:106] - GETTING Function1<Throwable, Unit> from String
2021-03-12 10:54:24,402 [main:106] - GETTING Function1<Throwable, Unit> from Boolean
2021-03-12 10:54:24,422 [main:106] - GETTING Function1<Throwable, Unit> from Long
2021-03-12 10:54:24,483 [main:106] - GETTING Function1<Throwable, Unit> from Double
2021-03-12 10:54:24,539 [main:106] - GETTING Function1<Throwable, Unit> from Long?
2021-03-12 10:54:24,595 [main:106] - GETTING Function1<Throwable, Unit> from Int
2021-03-12 10:54:24,640 [main:106] - GETTING Function1<Throwable, Unit> from Long?
2021-03-12 10:54:24,641 [main:106] - GETTING Function1<Throwable, Unit> from Char
2021-03-12 10:54:24,670 [main:106] - GETTING Function1<Throwable, Unit> from Function0<String>
2021-03-12 10:54:24,684 [main:106] - GETTING Function1<Throwable, Unit> from Double
2021-03-12 10:54:24,685 [main:106] - GETTING Function1<Throwable, Unit> from Long
2021-03-12 10:54:24,686 [main:106] - GETTING Function1<Throwable, Unit> from String
2021-03-12 10:54:24,687 [main:106] - GETTING Function1<Throwable, Unit> from Long
2021-03-12 10:54:24,688 [main:106] - GETTING Function1<Throwable, Unit> from Int?
2021-03-12 10:54:24,737 [main:106] - GETTING Function1<Throwable, Unit> from List<Int>
2021-03-12 10:54:24,765 [main:106] - GETTING Function1<Throwable, Unit> from List<Int>
2021-03-12 10:54:24,767 [main:106] - GETTING Function1<Throwable, Unit> from Int?
2021-03-12 10:54:24,768 [main:106] - GETTING Function1<Throwable, Unit> from Char
2021-03-12 10:54:24,769 [main:106] - GETTING Function1<Throwable, Unit> from Int
2021-03-12 10:54:24,770 [main:106] - GETTING Function1<Throwable, Unit> from Char
2021-03-12 10:54:24,771 [main:106] - GETTING Function1<Throwable, Unit> from List<Long>
2021-03-12 10:54:24,804 [main:114] - replacement of x of type Function1<Throwable, Unit> is {a: Throwable -> require(false, { "pxaez"})}
2021-03-12 10:54:25,107 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on LAMBDA_EXPRESSION
2021-03-12 10:54:25,107 [main:66] - Compilation checking started
2021-03-12 10:54:25,793 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope2.exceptionOrNull()?.let({a: Throwable -> require(false, { "pxaez"})})
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) {
        prope2.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope6.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:54:25,797 [main:107] - replacing ({
        prope2.getOrThrow()
    }, Any?)
2021-03-12 10:54:25,800 [main:50] - replacing {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope2.getOrThrow()
    } Any?
2021-03-12 10:54:25,800 [main:54] - Getting value of type Any?
2021-03-12 10:54:26,091 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:54:26,091 [main:58] - GENERATED VALUE OF TYPE Any? = "zrkgy"
2021-03-12 10:54:26,092 [main:61] - GENERATED IS CALL =false
2021-03-12 10:54:27,601 [main:67] - randomType = LinkedHashSet<LinkedHashSet<Pair<Int, Kla8>>?>
2021-03-12 10:54:27,888 [main:302] - generating value of type = LinkedHashSet<LinkedHashSet<Pair<Int, Kla8>>?> false depth = 0
2021-03-12 10:54:28,131 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: LinkedHashSet<Pair<Int, Kla8>>?): LkedHashSet<LkedHashSet<Pair<Int, Kla8>>?> = TODO()
2021-03-12 10:54:28,137 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: LinkedHashSet<Pair<Int, Kla8>>?): LkedHashSet<LkedHashSet<Pair<Int, Kla8>>?> = TODO()
2021-03-12 10:54:28,433 [main:302] - generating value of type = LinkedHashSet<Pair<Int, Kla8>> false depth = 3
2021-03-12 10:54:28,671 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(): LkedHashSet<Pair<Int, Kla8>> = TODO()
2021-03-12 10:54:28,675 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(): LkedHashSet<Pair<Int, Kla8>> = TODO()
2021-03-12 10:54:28,973 [main:95] - GENERATED = linkedSetOf<Pair<Int, Kla8>>()
2021-03-12 10:54:28,973 [main:95] - GENERATED = linkedSetOf<LinkedHashSet<Pair<Int, Kla8>>?>(linkedSetOf<Pair<Int, Kla8>>())
2021-03-12 10:54:29,211 [main:149] - GENERATING call of type @kotlin.js.JsName protected open fun toArray(): kotlin.Array<kotlin.Any?> defined in kotlin.collections.LinkedHashSet[DeserializedSimpleFunctionDescriptor@3993c177]
2021-03-12 10:54:29,211 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.Any? defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@36781343]
2021-03-12 10:54:29,488 [main:302] - generating value of type = Int true depth = 0
2021-03-12 10:54:29,492 [main:78] - Generated call from random type = (linkedSetOf<LinkedHashSet<Pair<Int, Kla8>>?>(linkedSetOf<Pair<Int, Kla8>>())).toArray().get(1153025285)
2021-03-12 10:54:29,494 [main:106] - GETTING Any? from Double
2021-03-12 10:54:29,544 [main:106] - GETTING Any? from Long?
2021-03-12 10:54:29,605 [main:106] - GETTING Any? from Int?
2021-03-12 10:54:29,645 [main:106] - GETTING Any? from List<Long>
2021-03-12 10:54:29,671 [main:106] - GETTING Any? from Long?
2021-03-12 10:54:29,673 [main:106] - GETTING Any? from Char
2021-03-12 10:54:29,710 [main:106] - GETTING Any? from Double
2021-03-12 10:54:29,712 [main:106] - GETTING Any? from Long
2021-03-12 10:54:29,771 [main:106] - GETTING Any? from String
2021-03-12 10:54:29,799 [main:106] - GETTING Any? from String
2021-03-12 10:54:29,800 [main:106] - GETTING Any? from Long
2021-03-12 10:54:29,801 [main:106] - GETTING Any? from Function0<String>
2021-03-12 10:54:29,813 [main:106] - GETTING Any? from Boolean
2021-03-12 10:54:29,828 [main:106] - GETTING Any? from List<Int>
2021-03-12 10:54:29,868 [main:106] - GETTING Any? from Int
2021-03-12 10:54:29,919 [main:106] - GETTING Any? from List<Int>
2021-03-12 10:54:29,921 [main:106] - GETTING Any? from Char
2021-03-12 10:54:29,922 [main:106] - GETTING Any? from Long
2021-03-12 10:54:29,923 [main:106] - GETTING Any? from Char
2021-03-12 10:54:29,924 [main:106] - GETTING Any? from Int?
2021-03-12 10:54:29,925 [main:106] - GETTING Any? from Int
2021-03-12 10:54:29,925 [main:114] - replacement of {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope2.getOrThrow()
    } of type Any? is "zrkgy"
2021-03-12 10:54:30,192 [main:33] - Trying to replace BLOCK on Element(STRING_TEMPLATE)
2021-03-12 10:54:30,193 [main:66] - Compilation checking started
2021-03-12 10:54:30,203 [main:71] - Wrong syntax or breaks conditions
2021-03-12 10:54:30,203 [main:49] - Result = false
Text:

import kotlin.test.assertEquals
import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame

val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)

fun box(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
    if (intListMin != 1) return "Fail intListMin=$intListMin"

    val intListMax = intList.maxByOrNull { it } ?: -1
    if (intListMax != 3) return "Fail intListMax=$intListMax"

    val longListMin = longList.minByOrNull { it } ?: -1
    if (longListMin != 1L) return "Fail longListMin=$longListMin"

    val longListMax = longList.maxByOrNull { it } ?: -1
    if (longListMax != 3L) return "Fail longListMax=$longListMax"

    return "OK"
}

private var prope0 = "O"

private fun fu0() = "K"

fun box579(): String {

    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
val prope1 = Class.forName("test.TestKt")
    assertEquals((intList).equals("aedwz").compareTo(longListMax != 3L), prope1.declaredMethods.size, "Facade should have only box and getProp methods")
    assertEquals((0.9742547408200845).toChar().uppercase(), prope1.declaredMethods.first().name, "Facade should have only box method")

    return {
        ((0.9742547408200845)).toChar().lowercase() + (longListMax).toChar().uppercase()
    }()
}

var prope2 = "FAIL"

fun fu1(prope3: suspend () -> Unit) {
    prope3.startCoroutine(fu4 {
        prope2 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: String)

var prope3: Continuation<Any>? = null

suspend fun <Ty0> fu2(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope3 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Kla0?
}

class Kla2() : Kla1 {

    override suspend fun fu5(): Kla0 = fu2()

    suspend fun fu6(): String {
        val prope10: Kla1 = this
        return prope10.fu5()!!.s
    }

    suspend fun fu7(): String {
        return fu5().s
    }
}

fun box801(): String {
    val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
fu1 {
        Kla2().fu6()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 1 $prope2"

    prope2 = "FAIL2"
    fu1 {
        Kla2().fu7()
    }
    prope3?.resumeWithException(IllegalStateException("OK"))
    if (prope2 != "OK") return "FAIL 2 $prope2"

    return prope2
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        x(prope2.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope2.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope2: Result<Any?>) "zrkgy"
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Any?>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
this.prope2 = prope2.getOrThrow()
    }

    var prope2: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope2: Result<Ty0>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope2.isSuccess) {
            resume(prope2.getOrThrow())
        } else {
            resumeWithException(prope2.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope6 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {a: Continuation<Unit> -> require(false)}

    fun fu10(prope3: Continuation<*>) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
if (prope3 !is CoroutineStackFrame) error("Continuation " + prope3 + " is not subtype of CoroutineStackFrame")
        prope6.clear()
        var prope11: CoroutineStackFrame? = prope3
        while (prope11 != null) {
            prope6.add(prope11.getStackTraceElement())
            prope11 = prope11.callerFrame
        }
    }

    fun fu11(method: String) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope6.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope6.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope6.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope6.joinToString(separator = "\n"))
    }
}

val prope4 = Kla6()

class Kla7 {
    private var prope7 = 0
    var prope8 = false

    var prope9: () -> Unit = {}

    fun fu13() {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope7 = 0
        prope8 = false
        prope9 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope3 ->
        prope7++
        prope9 = { prope3.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
for (i in 1..numberOfSuspensions) {
            if (prope7 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope7)
            prope9()
        }
        if (prope7 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + numberOfSuspensions + ", got " + prope7)
        if (prope8) error("Wrong state-machine generated: it is finished early")
        prope9()
        if (checkFinished && !prope8) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope5 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val intListMin = intList.minByOrNull { it } ?: -1
val intListMax = intList.maxByOrNull { it } ?: -1
val longListMin = longList.minByOrNull { it } ?: -1
val longListMax = longList.maxByOrNull { it } ?: -1
val intList = listOf(1, 2, 3)
val longList = listOf(1L, 2L, 3L)
private var prope0 = "O"
prope5.prope9 = {
            prope5.prope8 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 10:54:30,207 [main:107] - replacing (isSuccess, Boolean)
2021-03-12 10:54:30,207 [main:50] - replacing isSuccess Boolean
2021-03-12 10:54:30,207 [main:54] - Getting value of type Boolean
2021-03-12 10:54:30,457 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 10:54:30,461 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 10:54:30,461 [main:61] - GENERATED IS CALL =false
2021-03-12 10:54:30,468 [main:67] - randomType = Double
2021-03-12 10:54:30,757 [main:302] - generating value of type = Double true depth = 0
2021-03-12 10:54:30,818 [main:149] - GENERATING call of type @kotlin.Deprecated public open fun toByte(): kotlin.Byte defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@2b327f1c]
2021-03-12 10:54:30,818 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Byte[DeserializedSimpleFunctionDescriptor@1f879928]
2021-03-12 10:54:31,041 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:54:31,042 [main:78] - Generated call from random type = (0.7125204664621332).toByte().equals("giyrp")
2021-03-12 10:54:31,043 [main:106] - GETTING Boolean from String
2021-03-12 10:54:31,063 [main:113] - Case = [public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@4953382c], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@400b100d]]
2021-03-12 10:54:31,063 [main:149] - GENERATING call of type public abstract operator fun compareTo(other: kotlin.String): kotlin.Int defined in kotlin.Comparable[DeserializedSimpleFunctionDescriptor@4953382c]
2021-03-12 10:54:31,350 [main:302] - generating value of type = String true depth = 0
2021-03-12 10:54:31,353 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@400b100d]
2021-03-12 10:54:31,581 [main:302] - generating value of type = Any false depth = 0
2021-03-12 10:54:31,581 [main:117] - GENERATED CALL = (((0.9742547408200845)).toChar().lowercase()).compareTo("ujxhr").equals("hiedk")
2021-03-12 10:54:31,581 [main:113] - Case = [public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@1cfb1d4e], public fun kotlin.Char.isLetter(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5faf6c3e]]
2021-03-12 10:54:31,581 [main:149] - GENERATING call of type public open fun get(index: kotlin.Int): kotlin.Char defined in kotlin.String[DeserializedSimpleFunctionDescriptor@1cfb1d4e]
2021-03-12 10:54:31,582 [main:149] - GENERATING call of type public fun kotlin.Char.isLetter(): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5faf6c3e]
2021-03-12 10:54:31,582 [main:117] - GENERATED CALL = (((0.9742547408200845)).toChar().lowercase()).get(val intListMax = intList.maxByOrNull { it } ?: -1.isLetter()
2021-03-12 10:54:31,582 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@2d363251], public fun kotlin.CharSequence.hasSurrogatePairAt(index: kotlin.Int): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6adb4d85]]
2021-03-12 10:54:31,582 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.String[DeserializedSimpleFunctionDescriptor@2d363251]
