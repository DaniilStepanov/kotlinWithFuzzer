2021-03-12 09:12:25,098 [main:66] - Compilation checking started
2021-03-12 09:12:27,241 [main:45] - Trying to change 19 nodes
2021-03-12 09:12:27,244 [main:53] - replacing ("d", String)
2021-03-12 09:12:27,245 [main:50] - replacing "d" String
2021-03-12 09:12:27,245 [main:54] - Getting value of type String
2021-03-12 09:12:27,386 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:27,390 [main:58] - GENERATED VALUE OF TYPE String = "pssrm"
2021-03-12 09:12:27,391 [main:61] - GENERATED IS CALL =false
2021-03-12 09:12:27,966 [main:67] - randomType = Short
2021-03-12 09:12:28,120 [main:302] - generating value of type = Short true depth = 0
2021-03-12 09:12:28,261 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Short[DeserializedSimpleFunctionDescriptor@60b7dc7c]
2021-03-12 09:12:28,263 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eba01f5]
2021-03-12 09:12:28,429 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:28,431 [main:78] - Generated call from random type = (1816).toChar().plus("jllpy")
2021-03-12 09:12:28,452 [main:106] - GETTING String from Array<String>
2021-03-12 09:12:28,493 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@307997a4]]
2021-03-12 09:12:28,494 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@307997a4]
2021-03-12 09:12:28,495 [main:117] - GENERATED CALL = (arr).contentDeepToString()
2021-03-12 09:12:28,496 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37a98c77]]
2021-03-12 09:12:28,496 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:28,655 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:28,656 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37a98c77]
2021-03-12 09:12:28,794 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-12 09:12:28,972 [main:43] - GENERATING CALL OF fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->Int): Iterable<Int> = TODO()
2021-03-12 09:12:28,975 [main:61] - WITHOUT TYPE PARAMS = fun <T> List(size: kotlin.Int, init: (index: kotlin.Int)->Int): Iterable<Int> = TODO()
2021-03-12 09:12:29,463 [main:302] - generating value of type = Int true depth = 3
2021-03-12 09:12:29,464 [main:302] - generating value of type = Function1<[@kotlin.ParameterName] Int, Int> false depth = 3
2021-03-12 09:12:29,464 [main:302] - generating value of type = Int true depth = 4
2021-03-12 09:12:29,467 [main:95] - GENERATED = List<Int>(-1116658256, {a: Int -> 386103175})
2021-03-12 09:12:29,469 [main:117] - GENERATED CALL = (arr).get(-1363233582).slice(List<Int>(-1116658256, {a: Int -> 386103175}))
2021-03-12 09:12:29,470 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@57bae294]]
2021-03-12 09:12:29,470 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:29,596 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:29,597 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toLowerCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@57bae294]
2021-03-12 09:12:29,598 [main:117] - GENERATED CALL = (arr).get(-378611088).toLowerCase()
2021-03-12 09:12:29,598 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@682d85e8]]
2021-03-12 09:12:29,598 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:29,753 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:29,754 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@682d85e8]
2021-03-12 09:12:29,856 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:29,982 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:30,111 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:30,113 [main:117] - GENERATED CALL = (arr).get(781249625).replaceAfter('', "fiszt", "mzagr")
2021-03-12 09:12:30,113 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52636d82]]
2021-03-12 09:12:30,113 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:30,231 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:30,231 [main:149] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52636d82]
2021-03-12 09:12:30,330 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:30,441 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:30,541 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:30,543 [main:117] - GENERATED CALL = (arr).get(6815132).replaceBefore('℟', "pwnzk", "spcem")
2021-03-12 09:12:30,543 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cd2d738]]
2021-03-12 09:12:30,543 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:30,655 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:30,656 [main:149] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cd2d738]
2021-03-12 09:12:30,763 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:30,865 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:30,975 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 09:12:30,976 [main:117] - GENERATED CALL = (arr).get(479342358).replace('ᒳ', '䭨', true)
2021-03-12 09:12:30,977 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63d2fb15]]
2021-03-12 09:12:30,977 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:31,090 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:31,091 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63d2fb15]
2021-03-12 09:12:31,195 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:31,298 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:31,300 [main:117] - GENERATED CALL = (arr).get(1065943757).removeRange(526938309, 337482258)
2021-03-12 09:12:31,300 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1195e3b5]]
2021-03-12 09:12:31,300 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:31,413 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:31,414 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1195e3b5]
2021-03-12 09:12:31,518 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:31,630 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:31,631 [main:117] - GENERATED CALL = (arr).get(693046110).padEnd(-475516212, '좋')
2021-03-12 09:12:31,631 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6c68575b]]
2021-03-12 09:12:31,631 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:31,746 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:31,747 [main:149] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6c68575b]
2021-03-12 09:12:31,841 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:31,842 [main:117] - GENERATED CALL = (arr).get(1294203850).takeLast(1345465703)
2021-03-12 09:12:31,842 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20d9755f]]
2021-03-12 09:12:31,842 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:31,941 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:31,942 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20d9755f]
2021-03-12 09:12:32,038 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:32,039 [main:117] - GENERATED CALL = (arr).get(1839731912).drop(955060574)
2021-03-12 09:12:32,039 [main:61] - replacement of "d" of type String is (arr).get(781249625).replaceAfter('', "fiszt", "mzagr")
2021-03-12 09:12:32,128 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:12:32,128 [main:66] - Compilation checking started
2021-03-12 09:12:32,544 [main:49] - Result = false
Text:
val arr = arrayOf("a", "b", "c", (arr).get(781249625).replaceAfter('', "fiszt", "mzagr"))

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) {
        s.append("$x;")
    }

    val ss = s.toString()
    return if (ss == "a;b;c;d;") "OK" else "fail: '$ss'"
}


2021-03-12 09:12:32,546 [main:53] - replacing (ss == "a;b;c;d;", Boolean)
2021-03-12 09:12:32,546 [main:50] - replacing ss == "a;b;c;d;" Boolean
2021-03-12 09:12:32,546 [main:54] - Getting value of type Boolean
2021-03-12 09:12:32,667 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 09:12:32,667 [main:58] - GENERATED VALUE OF TYPE Boolean = false
2021-03-12 09:12:32,668 [main:61] - GENERATED IS CALL =false
2021-03-12 09:12:32,872 [main:67] - randomType = Sequence<Int>
2021-03-12 09:12:32,873 [main:106] - GETTING Boolean from Array<String>
2021-03-12 09:12:32,891 [main:113] - Case = [public final operator fun set(index: kotlin.Int, value: kotlin.String): kotlin.Unit defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@1d4fdc5d], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Unit[DeserializedSimpleFunctionDescriptor@eee9fa9]]
2021-03-12 09:12:32,891 [main:149] - GENERATING call of type public final operator fun set(index: kotlin.Int, value: kotlin.String): kotlin.Unit defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@1d4fdc5d]
2021-03-12 09:12:33,002 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:33,106 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:33,107 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Unit[DeserializedSimpleFunctionDescriptor@eee9fa9]
2021-03-12 09:12:33,199 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:33,200 [main:117] - GENERATED CALL = (arr).set(1771194755, "jvyay").equals("eshay")
2021-03-12 09:12:33,200 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Array<*>?.isNullOrEmpty(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2e0d2566]]
2021-03-12 09:12:33,200 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Array<*>?.isNullOrEmpty(): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@2e0d2566]
2021-03-12 09:12:33,200 [main:117] - GENERATED CALL = (arr).isNullOrEmpty()
2021-03-12 09:12:33,201 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@3e7afcc], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@177b38b9]]
2021-03-12 09:12:33,201 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@177b38b9]
2021-03-12 09:12:33,331 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:33,332 [main:117] - GENERATED CALL = (arr).size.equals("nbdok")
2021-03-12 09:12:33,333 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@4d0bbae5]]
2021-03-12 09:12:33,333 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@4d0bbae5]
2021-03-12 09:12:33,461 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:33,462 [main:117] - GENERATED CALL = (arr).equals("pdypj")
2021-03-12 09:12:33,462 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@4d0bbae5], public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@22772e51]]
2021-03-12 09:12:33,462 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@4d0bbae5]
2021-03-12 09:12:33,569 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:33,569 [main:149] - GENERATING call of type public final operator fun not(): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@22772e51]
2021-03-12 09:12:33,570 [main:117] - GENERATED CALL = (arr).equals("fyugb").not()
2021-03-12 09:12:33,570 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@4d0bbae5], public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1df17415]]
2021-03-12 09:12:33,571 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@4d0bbae5]
2021-03-12 09:12:33,687 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:33,688 [main:149] - GENERATING call of type public final infix fun xor(other: kotlin.Boolean): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@1df17415]
2021-03-12 09:12:33,795 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 09:12:33,796 [main:117] - GENERATED CALL = (arr).equals("izzmd").xor(true)
2021-03-12 09:12:33,797 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public infix fun <T> kotlin.Array<out T>.contentDeepEquals(other: kotlin.Array<out T>): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c5d314d]]
2021-03-12 09:12:33,797 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public infix fun <T> kotlin.Array<out T>.contentDeepEquals(other: kotlin.Array<out T>): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c5d314d]
2021-03-12 09:12:33,889 [main:302] - generating value of type = Array<out T> false depth = 0
2021-03-12 09:12:34,038 [main:43] - GENERATING CALL OF fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->out T): Array<out T> = TODO()
2021-03-12 09:12:34,040 [main:61] - WITHOUT TYPE PARAMS = fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->out T): Array<out T> = TODO()
2021-03-12 09:12:34,398 [main:385] - Cant generate call of fun <T> Array(size: kotlin.Int, init: (kotlin.Int)->out T): Array<out T> = TODO()
2021-03-12 09:12:34,399 [main:158] - CANT GENERATE PARAMS FOR @kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public infix fun <T> kotlin.Array<out T>.contentDeepEquals(other: kotlin.Array<out T>): kotlin.Boolean defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1c5d314d]
2021-03-12 09:12:34,399 [main:113] - Case = [public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@4d0bbae5], public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2930969a]]
2021-03-12 09:12:34,399 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@4d0bbae5]
2021-03-12 09:12:34,486 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:34,486 [main:149] - GENERATING call of type public open fun equals(other: kotlin.Any?): kotlin.Boolean defined in kotlin.Boolean[DeserializedSimpleFunctionDescriptor@2930969a]
2021-03-12 09:12:34,607 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:34,608 [main:117] - GENERATED CALL = (arr).equals("dpsgg").equals("kjwdj")
2021-03-12 09:12:34,608 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ca5d88]]
2021-03-12 09:12:34,609 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:34,703 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:34,704 [main:149] - GENERATING call of type public fun kotlin.String.startsWith(prefix: kotlin.String, ignoreCase: kotlin.Boolean = ...): kotlin.Boolean defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1ca5d88]
2021-03-12 09:12:34,797 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 09:12:34,798 [main:117] - GENERATED CALL = (arr).get(371976064).startsWith(ss, false)
2021-03-12 09:12:34,798 [main:113] - Case = [public final operator fun iterator(): kotlin.collections.Iterator<kotlin.String> defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@1944391c], public abstract operator fun hasNext(): kotlin.Boolean defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3df040b1]]
2021-03-12 09:12:34,799 [main:149] - GENERATING call of type public final operator fun iterator(): kotlin.collections.Iterator<kotlin.String> defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@1944391c]
2021-03-12 09:12:34,799 [main:149] - GENERATING call of type public abstract operator fun hasNext(): kotlin.Boolean defined in kotlin.collections.Iterator[DeserializedSimpleFunctionDescriptor@3df040b1]
2021-03-12 09:12:34,799 [main:117] - GENERATED CALL = (arr).iterator().hasNext()
2021-03-12 09:12:34,799 [main:61] - replacement of ss == "a;b;c;d;" of type Boolean is (arr).get(371976064).startsWith(ss, false)
2021-03-12 09:12:34,895 [main:33] - Trying to replace Element(BINARY_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:12:34,896 [main:66] - Compilation checking started
2021-03-12 09:12:35,389 [main:53] - Result = true
Text:
val arr = arrayOf("a", "b", "c", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) {
        s.append("$x;")
    }

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, false)) "OK" else "fail: '$ss'"
}


2021-03-12 09:12:35,390 [main:53] - replacing ({
        s.append("$x;")
    }, StringBuilder)
2021-03-12 09:12:35,391 [main:50] - replacing {
        s.append("$x;")
    } StringBuilder
2021-03-12 09:12:35,391 [main:54] - Getting value of type StringBuilder
2021-03-12 09:12:35,495 [main:302] - generating value of type = StringBuilder false depth = 0
2021-03-12 09:12:35,599 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): StringBuilder = TODO()
2021-03-12 09:12:35,602 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): StringBuilder = TODO()
2021-03-12 09:12:35,825 [main:302] - generating value of type = Int true depth = 3
2021-03-12 09:12:35,826 [main:95] - GENERATED = StringBuilder(1703838437)
2021-03-12 09:12:35,826 [main:58] - GENERATED VALUE OF TYPE StringBuilder = StringBuilder(1703838437)
2021-03-12 09:12:35,826 [main:61] - GENERATED IS CALL =true
2021-03-12 09:12:35,936 [main:67] - randomType = UByte
2021-03-12 09:12:36,059 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 09:12:36,139 [main:106] - GETTING StringBuilder from Array<String>
2021-03-12 09:12:36,165 [main:106] - GETTING StringBuilder from StringBuilder
2021-03-12 09:12:36,209 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.appendRange(value: kotlin.CharArray, startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e9ece79]]
2021-03-12 09:12:36,209 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.appendRange(value: kotlin.CharArray, startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e9ece79]
2021-03-12 09:12:36,301 [main:302] - generating value of type = CharArray false depth = 0
2021-03-12 09:12:36,403 [main:43] - GENERATING CALL OF fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-12 09:12:36,406 [main:61] - WITHOUT TYPE PARAMS = fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-12 09:12:36,507 [main:302] - generating value of type = Char true depth = 3
2021-03-12 09:12:36,508 [main:95] - GENERATED = charArrayOf('䛝')
2021-03-12 09:12:36,615 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:36,742 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:36,744 [main:117] - GENERATED CALL = (s).appendRange(charArrayOf('䛝'), 644515908, -1699901203)
2021-03-12 09:12:36,744 [main:113] - Case = [@kotlin.Deprecated @kotlin.internal.InlineOnly public inline fun kotlin.text.StringBuilder.append(obj: kotlin.Any?): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@320ed7fe]]
2021-03-12 09:12:36,745 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.internal.InlineOnly public inline fun kotlin.text.StringBuilder.append(obj: kotlin.Any?): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@320ed7fe]
2021-03-12 09:12:36,839 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:36,840 [main:117] - GENERATED CALL = (s).append("wpazj")
2021-03-12 09:12:36,840 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun insert(index: kotlin.Int, value: kotlin.Any?): kotlin.text.StringBuilder defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@6e56bd6b]]
2021-03-12 09:12:36,840 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun insert(index: kotlin.Int, value: kotlin.Any?): kotlin.text.StringBuilder defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@6e56bd6b]
2021-03-12 09:12:36,929 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:37,013 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:37,014 [main:117] - GENERATED CALL = (s).insert(727199165, "osjpa")
2021-03-12 09:12:37,014 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.insertRange(index: kotlin.Int, value: kotlin.CharArray, startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b70a1e3]]
2021-03-12 09:12:37,014 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.insertRange(index: kotlin.Int, value: kotlin.CharArray, startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b70a1e3]
2021-03-12 09:12:37,100 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:37,209 [main:302] - generating value of type = CharArray false depth = 0
2021-03-12 09:12:37,341 [main:43] - GENERATING CALL OF fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-12 09:12:37,342 [main:61] - WITHOUT TYPE PARAMS = fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-12 09:12:37,432 [main:302] - generating value of type = Char true depth = 3
2021-03-12 09:12:37,433 [main:95] - GENERATED = charArrayOf('ݡ')
2021-03-12 09:12:37,521 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:37,614 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:37,615 [main:117] - GENERATED CALL = (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)
2021-03-12 09:12:37,615 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.deleteRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@16b9082a]]
2021-03-12 09:12:37,615 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.deleteRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@16b9082a]
2021-03-12 09:12:37,732 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:37,833 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:37,834 [main:117] - GENERATED CALL = (s).deleteRange(1124722776, 374475613)
2021-03-12 09:12:37,834 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.deleteAt(index: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1c027129]]
2021-03-12 09:12:37,835 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.deleteAt(index: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1c027129]
2021-03-12 09:12:37,961 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:37,963 [main:117] - GENERATED CALL = (s).deleteAt(-1185006690)
2021-03-12 09:12:37,963 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.setRange(startIndex: kotlin.Int, endIndex: kotlin.Int, value: kotlin.String): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9202ed7]]
2021-03-12 09:12:37,963 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.setRange(startIndex: kotlin.Int, endIndex: kotlin.Int, value: kotlin.String): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9202ed7]
2021-03-12 09:12:38,067 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:38,153 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:38,243 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:38,244 [main:117] - GENERATED CALL = (s).setRange(814148983, -2032295899, "fylwd")
2021-03-12 09:12:38,244 [main:113] - Case = [public final fun reverse(): kotlin.text.StringBuilder defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@2250d88e]]
2021-03-12 09:12:38,244 [main:149] - GENERATING call of type public final fun reverse(): kotlin.text.StringBuilder defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@2250d88e]
2021-03-12 09:12:38,245 [main:117] - GENERATED CALL = (s).reverse()
2021-03-12 09:12:38,245 [main:113] - Case = [@kotlin.SinceKotlin public inline fun kotlin.text.StringBuilder.clear(): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@61634350]]
2021-03-12 09:12:38,245 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun kotlin.text.StringBuilder.clear(): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@61634350]
2021-03-12 09:12:38,245 [main:117] - GENERATED CALL = (s).clear()
2021-03-12 09:12:38,246 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.text.StringBuilder.appendLine(): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@785bcc58]]
2021-03-12 09:12:38,246 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.text.StringBuilder.appendLine(): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@785bcc58]
2021-03-12 09:12:38,246 [main:117] - GENERATED CALL = (s).appendLine()
2021-03-12 09:12:38,246 [main:61] - replacement of {
        s.append("$x;")
    } of type StringBuilder is (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)
2021-03-12 09:12:38,353 [main:33] - Trying to replace BLOCK on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:12:38,353 [main:66] - Compilation checking started
2021-03-12 09:12:38,851 [main:53] - Result = true
Text:
val arr = arrayOf("a", "b", "c", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, false)) "OK" else "fail: '$ss'"
}


2021-03-12 09:12:38,852 [main:53] - replacing (s.append("$x;"), StringBuilder)
2021-03-12 09:12:38,852 [main:50] - replacing s.append("$x;") StringBuilder
2021-03-12 09:12:38,852 [main:54] - Getting value of type StringBuilder
2021-03-12 09:12:38,951 [main:302] - generating value of type = StringBuilder false depth = 0
2021-03-12 09:12:38,956 [main:58] - GENERATED VALUE OF TYPE StringBuilder = StringBuilder()
2021-03-12 09:12:38,956 [main:61] - GENERATED IS CALL =true
2021-03-12 09:12:39,160 [main:67] - randomType = Long?
2021-03-12 09:12:39,261 [main:302] - generating value of type = Long true depth = 0
2021-03-12 09:12:39,352 [main:61] - replacement of s.append("$x;") of type StringBuilder is StringBuilder()
2021-03-12 09:12:39,446 [main:33] - Trying to replace Element(DOT_QUALIFIED_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 09:12:39,448 [main:53] - replacing ("fail: '$ss'", String)
2021-03-12 09:12:39,448 [main:50] - replacing "fail: '$ss'" String
2021-03-12 09:12:39,448 [main:54] - Getting value of type String
2021-03-12 09:12:39,542 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:39,542 [main:58] - GENERATED VALUE OF TYPE String = "ozdmn"
2021-03-12 09:12:39,543 [main:61] - GENERATED IS CALL =false
2021-03-12 09:12:39,850 [main:67] - randomType = LinkedHashSet<UInt>
2021-03-12 09:12:39,993 [main:302] - generating value of type = LinkedHashSet<UInt> false depth = 0
2021-03-12 09:12:40,115 [main:43] - GENERATING CALL OF fun <T> linkedSetOf(elements: UInt): LkedHashSet<UInt> = TODO()
2021-03-12 09:12:40,117 [main:61] - WITHOUT TYPE PARAMS = fun <T> linkedSetOf(elements: UInt): LkedHashSet<UInt> = TODO()
2021-03-12 09:12:40,212 [main:302] - generating value of type = UInt true depth = 3
2021-03-12 09:12:40,213 [main:95] - GENERATED = linkedSetOf<UInt>(500057250.toUInt())
2021-03-12 09:12:40,437 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@10658b09]
2021-03-12 09:12:40,530 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:40,531 [main:78] - Generated call from random type = (linkedSetOf<UInt>(500057250.toUInt())).size.toString(-259471185)
2021-03-12 09:12:40,532 [main:106] - GETTING String from Array<String>
2021-03-12 09:12:40,551 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@682d85e8]]
2021-03-12 09:12:40,552 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:40,639 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:40,639 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@682d85e8]
2021-03-12 09:12:40,733 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:40,834 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:40,835 [main:117] - GENERATED CALL = (arr).get(-1018325731).replaceAfter('', ss, "wlrtl")
2021-03-12 09:12:40,836 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5611c552]]
2021-03-12 09:12:40,836 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:40,920 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:40,920 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.uppercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5611c552]
2021-03-12 09:12:40,921 [main:117] - GENERATED CALL = (arr).get(660056100).uppercase()
2021-03-12 09:12:40,921 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@65ae25bd]]
2021-03-12 09:12:40,921 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:41,003 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:41,003 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfterLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@65ae25bd]
2021-03-12 09:12:41,097 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:41,183 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:41,184 [main:117] - GENERATED CALL = (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
2021-03-12 09:12:41,184 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52636d82]]
2021-03-12 09:12:41,185 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:41,268 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:41,268 [main:149] - GENERATING call of type public fun kotlin.String.replaceBefore(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@52636d82]
2021-03-12 09:12:41,376 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:41,376 [main:117] - GENERATED CALL = (arr).get(-998702846).replaceBefore('쪒', ss, ss)
2021-03-12 09:12:41,377 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20d9755f]]
2021-03-12 09:12:41,377 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:41,475 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:41,476 [main:149] - GENERATING call of type public fun kotlin.String.drop(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@20d9755f]
2021-03-12 09:12:41,574 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:41,574 [main:117] - GENERATED CALL = (arr).get(-111599790).drop(-1213499408)
2021-03-12 09:12:41,575 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2271bc76]]
2021-03-12 09:12:41,575 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:41,656 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:41,656 [main:149] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2271bc76]
2021-03-12 09:12:41,737 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 09:12:41,742 [main:117] - GENERATED CALL = (arr).get(-242944296).removeSurrounding("wlupv")
2021-03-12 09:12:41,742 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@3e7afcc], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@10658b09]]
2021-03-12 09:12:41,742 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@10658b09]
2021-03-12 09:12:41,824 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:41,824 [main:117] - GENERATED CALL = (arr).size.toString(-991950674)
2021-03-12 09:12:41,825 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d329a1a]]
2021-03-12 09:12:41,825 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:41,931 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:41,932 [main:149] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d329a1a]
2021-03-12 09:12:42,029 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:42,030 [main:117] - GENERATED CALL = (arr).get(-1618524135).substringBefore('췯', ss)
2021-03-12 09:12:42,030 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63d2fb15]]
2021-03-12 09:12:42,030 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:42,122 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:42,122 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.removeRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@63d2fb15]
2021-03-12 09:12:42,212 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:42,293 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:42,294 [main:117] - GENERATED CALL = (arr).get(-1119317181).removeRange(13219737, 811303141)
2021-03-12 09:12:42,295 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@56150005]]
2021-03-12 09:12:42,295 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:42,381 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:42,381 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.OverloadResolutionByLambdaReturnType @kotlin.jvm.JvmName @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceFirstChar(transform: (kotlin.Char) -> kotlin.Char): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@56150005]
2021-03-12 09:12:42,461 [main:302] - generating value of type = Function1<Char, Char> false depth = 0
2021-03-12 09:12:42,462 [main:302] - generating value of type = Char true depth = 1
2021-03-12 09:12:42,463 [main:117] - GENERATED CALL = (arr).get(2028120707).replaceFirstChar({a: Char -> '⧟'})
2021-03-12 09:12:42,463 [main:61] - replacement of "fail: '$ss'" of type String is (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
2021-03-12 09:12:42,560 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:12:42,561 [main:66] - Compilation checking started
2021-03-12 09:12:42,973 [main:53] - Result = true
Text:
val arr = arrayOf("a", "b", "c", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, false)) "OK" else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:12:42,974 [main:53] - replacing ("c", String)
2021-03-12 09:12:42,974 [main:50] - replacing "c" String
2021-03-12 09:12:42,974 [main:54] - Getting value of type String
2021-03-12 09:12:43,109 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:43,109 [main:58] - GENERATED VALUE OF TYPE String = "vpblo"
2021-03-12 09:12:43,110 [main:61] - GENERATED IS CALL =false
2021-03-12 09:12:44,111 [main:67] - randomType = LinkedHashMap<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte>
2021-03-12 09:12:44,247 [main:302] - generating value of type = LinkedHashMap<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte> false depth = 0
2021-03-12 09:12:44,367 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(pairs: Pair<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte>): LkedHashMap<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, Strg>, ArrayList<Int>>, UByte> = TODO()
2021-03-12 09:12:44,369 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(pairs: Pair<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte>): LkedHashMap<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, Strg>, ArrayList<Int>>, UByte> = TODO()
2021-03-12 09:12:44,460 [main:302] - generating value of type = Pair<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte> false depth = 3
2021-03-12 09:12:44,559 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, second: UByte): Pair<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte> = TODO()
2021-03-12 09:12:44,561 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, second: UByte): Pair<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte> = TODO()
2021-03-12 09:12:44,648 [main:302] - generating value of type = Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>> false depth = 6
2021-03-12 09:12:44,648 [main:302] - generating value of type = ArrayList<Int> false depth = 7
2021-03-12 09:12:44,759 [main:43] - GENERATING CALL OF fun <T> arrayListOf(elements: Int): ArrayList<Int> = TODO()
2021-03-12 09:12:44,760 [main:61] - WITHOUT TYPE PARAMS = fun <T> arrayListOf(elements: Int): ArrayList<Int> = TODO()
2021-03-12 09:12:44,853 [main:302] - generating value of type = Int true depth = 10
2021-03-12 09:12:44,853 [main:95] - GENERATED = arrayListOf<Int>(2091976552)
2021-03-12 09:12:44,854 [main:302] - generating value of type = UByte true depth = 6
2021-03-12 09:12:44,854 [main:95] - GENERATED = Pair<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte>({a: Short, b: MutableMap<Function2<UInt, UShort, Array<Char>>, String> -> arrayListOf<Int>(2091976552)}, 115.toUByte())
2021-03-12 09:12:44,855 [main:95] - GENERATED = linkedMapOf<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte>(Pair<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte>({a: Short, b: MutableMap<Function2<UInt, UShort, Array<Char>>, String> -> arrayListOf<Int>(2091976552)}, 115.toUByte()))
2021-03-12 09:12:45,204 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@10658b09]
2021-03-12 09:12:45,300 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:45,301 [main:78] - Generated call from random type = (linkedMapOf<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte>(Pair<Function2<Short, MutableMap<Function2<UInt, UShort, Array<Char>>, String>, ArrayList<Int>>, UByte>({a: Short, b: MutableMap<Function2<UInt, UShort, Array<Char>>, String> -> arrayListOf<Int>(2091976552)}, 115.toUByte()))).size.toString(1082070101)
2021-03-12 09:12:45,302 [main:106] - GETTING String from Array<String>
2021-03-12 09:12:45,316 [main:113] - Case = [@kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d549137]]
2021-03-12 09:12:45,316 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d549137]
2021-03-12 09:12:45,316 [main:117] - GENERATED CALL = (arr).contentToString()
2021-03-12 09:12:45,317 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6f6e9f2e]]
2021-03-12 09:12:45,317 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:45,400 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:45,401 [main:149] - GENERATING call of type public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6f6e9f2e]
2021-03-12 09:12:45,486 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:45,582 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:45,583 [main:117] - GENERATED CALL = (arr).get(1489784452).substringAfterLast('ㅸ', "izmoo")
2021-03-12 09:12:45,583 [main:113] - Case = [public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f82bb78]]
2021-03-12 09:12:45,583 [main:149] - GENERATING call of type public fun <T> kotlin.Array<out T>.joinToString(separator: kotlin.CharSequence = ..., prefix: kotlin.CharSequence = ..., postfix: kotlin.CharSequence = ..., limit: kotlin.Int = ..., truncated: kotlin.CharSequence = ..., transform: ((T) -> kotlin.CharSequence)? = ...): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6f82bb78]
2021-03-12 09:12:45,704 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 09:12:45,830 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 09:12:45,939 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 09:12:45,941 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 09:12:46,112 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 09:12:46,116 [main:95] - GENERATED = StringBuilder("ebzxb")
2021-03-12 09:12:46,197 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 09:12:46,313 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 09:12:46,315 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 09:12:46,500 [main:302] - generating value of type = Int true depth = 3
2021-03-12 09:12:46,501 [main:95] - GENERATED = StringBuilder(-480887978)
2021-03-12 09:12:46,586 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:46,682 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 09:12:46,779 [main:43] - GENERATING CALL OF fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 09:12:46,780 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(capacity: kotlin.Int): CharSequence = TODO()
2021-03-12 09:12:46,949 [main:302] - generating value of type = Int true depth = 3
2021-03-12 09:12:46,949 [main:95] - GENERATED = StringBuilder(-1328725770)
2021-03-12 09:12:47,033 [main:302] - generating value of type = Function1<T, CharSequence> false depth = 0
2021-03-12 09:12:47,034 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 09:12:47,039 [main:117] - GENERATED CALL = (arr).joinToString("yglkr", StringBuilder("ebzxb"), StringBuilder(-480887978), 587640459, StringBuilder(-1328725770), {a: T -> "wyhos"})
2021-03-12 09:12:47,039 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]]
2021-03-12 09:12:47,039 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:47,140 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:47,141 [main:117] - GENERATED CALL = (arr).get(1512104614)
2021-03-12 09:12:47,141 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2271bc76]]
2021-03-12 09:12:47,142 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:47,239 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:47,240 [main:149] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2271bc76]
2021-03-12 09:12:47,320 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 09:12:47,403 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 09:12:47,404 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 09:12:47,604 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 09:12:47,608 [main:95] - GENERATED = StringBuilder("oqgvt")
2021-03-12 09:12:47,608 [main:117] - GENERATED CALL = (arr).get(544529301).removeSurrounding(StringBuilder("oqgvt"))
2021-03-12 09:12:47,608 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@13da4a60]]
2021-03-12 09:12:47,608 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:47,692 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:47,692 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndent(newIndent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@13da4a60]
2021-03-12 09:12:47,776 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:47,777 [main:117] - GENERATED CALL = (arr).get(446760286).replaceIndent("lzxjl")
2021-03-12 09:12:47,777 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2aeb23af]]
2021-03-12 09:12:47,777 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:47,858 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:47,858 [main:149] - GENERATING call of type public fun kotlin.String.replaceFirst(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2aeb23af]
2021-03-12 09:12:47,952 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:48,059 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:48,150 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 09:12:48,150 [main:117] - GENERATED CALL = (arr).get(-1520856864).replaceFirst('넓', '쫕', false)
2021-03-12 09:12:48,151 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@366dc68b]]
2021-03-12 09:12:48,151 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:48,230 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:48,230 [main:149] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@366dc68b]
2021-03-12 09:12:48,331 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 09:12:48,331 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 09:12:48,332 [main:117] - GENERATED CALL = (arr).get(1585609322).dropWhile({a: Char -> false})
2021-03-12 09:12:48,333 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24acadae]]
2021-03-12 09:12:48,333 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:48,427 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:48,428 [main:149] - GENERATING call of type public fun kotlin.String.replaceIndentByMargin(newIndent: kotlin.String = ..., marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@24acadae]
2021-03-12 09:12:48,516 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:48,601 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:48,602 [main:117] - GENERATED CALL = (arr).get(894763667).replaceIndentByMargin("mpqpr", "vetpn")
2021-03-12 09:12:48,602 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1195e3b5]]
2021-03-12 09:12:48,602 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:48,689 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:48,690 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1195e3b5]
2021-03-12 09:12:48,784 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:48,879 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:48,880 [main:117] - GENERATED CALL = (arr).get(1602715506).padEnd(-1437825875, 'ଟ')
2021-03-12 09:12:48,880 [main:61] - replacement of "c" of type String is "vpblo"
2021-03-12 09:12:48,962 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 09:12:48,962 [main:66] - Compilation checking started
2021-03-12 09:12:49,310 [main:53] - Result = true
Text:
val arr = arrayOf("a", "b", "vpblo", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, false)) "OK" else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:12:49,311 [main:53] - replacing (arrayOf("a", "b", "vpblo", "d"), Array<String>)
2021-03-12 09:12:49,311 [main:50] - replacing arrayOf("a", "b", "vpblo", "d") Array<String>
2021-03-12 09:12:49,311 [main:54] - Getting value of type Array<String>
2021-03-12 09:12:49,420 [main:302] - generating value of type = Array<String> false depth = 0
2021-03-12 09:12:49,516 [main:43] - GENERATING CALL OF fun <T> enumValues(): Array<Strg> = TODO()
2021-03-12 09:12:49,517 [main:61] - WITHOUT TYPE PARAMS = fun <T> enumValues(): Array<Strg> = TODO()
2021-03-12 09:12:49,628 [main:95] - GENERATED = enumValues<String>()
2021-03-12 09:12:49,628 [main:58] - GENERATED VALUE OF TYPE Array<String> = enumValues<String>()
2021-03-12 09:12:49,628 [main:61] - GENERATED IS CALL =true
2021-03-12 09:12:49,735 [main:67] - randomType = Long
2021-03-12 09:12:49,843 [main:302] - generating value of type = Long true depth = 0
2021-03-12 09:12:49,888 [main:106] - GETTING Array<String> from Array<String>
2021-03-12 09:12:49,903 [main:113] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6811a128]]
2021-03-12 09:12:49,903 [main:149] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6811a128]
2021-03-12 09:12:49,903 [main:117] - GENERATED CALL = (arr).sortedArray()
2021-03-12 09:12:49,903 [main:113] - Case = [public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6a15d338]]
2021-03-12 09:12:49,903 [main:149] - GENERATING call of type public fun <T> kotlin.Array<T>.sliceArray(indices: kotlin.collections.Collection<kotlin.Int>): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6a15d338]
2021-03-12 09:12:49,983 [main:302] - generating value of type = Collection<Int> false depth = 0
2021-03-12 09:12:50,069 [main:43] - GENERATING CALL OF fun <T> setOfNotNull(elements: Int): Collection<Int> = TODO()
2021-03-12 09:12:50,070 [main:61] - WITHOUT TYPE PARAMS = fun <T> setOfNotNull(elements: Int): Collection<Int> = TODO()
2021-03-12 09:12:50,155 [main:302] - generating value of type = Int true depth = 3
2021-03-12 09:12:50,155 [main:95] - GENERATED = setOfNotNull<Int>(-531532618)
2021-03-12 09:12:50,156 [main:117] - GENERATED CALL = (arr).sliceArray(setOfNotNull<Int>(-531532618))
2021-03-12 09:12:50,156 [main:113] - Case = [public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4386305c]]
2021-03-12 09:12:50,156 [main:149] - GENERATING call of type public fun <T : kotlin.Comparable<T>> kotlin.Array<T>.sortedArrayDescending(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@4386305c]
2021-03-12 09:12:50,156 [main:117] - GENERATED CALL = (arr).sortedArrayDescending()
2021-03-12 09:12:50,156 [main:113] - Case = [public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@565e0e8f]]
2021-03-12 09:12:50,156 [main:149] - GENERATING call of type public fun <T> kotlin.Array<T>.reversedArray(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@565e0e8f]
2021-03-12 09:12:50,156 [main:117] - GENERATED CALL = (arr).reversedArray()
2021-03-12 09:12:50,156 [main:113] - Case = [public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7a5073f8]]
2021-03-12 09:12:50,156 [main:149] - GENERATING call of type public fun <T : kotlin.Any> kotlin.Array<T?>.requireNoNulls(): kotlin.Array<T> defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@7a5073f8]
2021-03-12 09:12:50,157 [main:117] - GENERATED CALL = (arr).requireNoNulls()
2021-03-12 09:12:50,157 [main:61] - replacement of arrayOf("a", "b", "vpblo", "d") of type Array<String> is (arr).requireNoNulls()
2021-03-12 09:12:50,284 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:12:50,285 [main:66] - Compilation checking started
2021-03-12 09:12:50,506 [main:49] - Result = false
Text:
val arr = (arr).requireNoNulls()

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, false)) "OK" else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:12:50,506 [main:53] - replacing (StringBuilder(), StringBuilder)
2021-03-12 09:12:50,507 [main:50] - replacing StringBuilder() StringBuilder
2021-03-12 09:12:50,507 [main:54] - Getting value of type StringBuilder
2021-03-12 09:12:50,595 [main:302] - generating value of type = StringBuilder false depth = 0
2021-03-12 09:12:50,682 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): StringBuilder = TODO()
2021-03-12 09:12:50,683 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): StringBuilder = TODO()
2021-03-12 09:12:50,853 [main:302] - generating value of type = String true depth = 3
2021-03-12 09:12:50,854 [main:95] - GENERATED = StringBuilder("nmpdr")
2021-03-12 09:12:50,854 [main:58] - GENERATED VALUE OF TYPE StringBuilder = StringBuilder("nmpdr")
2021-03-12 09:12:50,854 [main:61] - GENERATED IS CALL =true
2021-03-12 09:12:50,855 [main:67] - randomType = String
2021-03-12 09:12:50,951 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:50,980 [main:106] - GETTING StringBuilder from Array<String>
2021-03-12 09:12:50,994 [main:106] - GETTING StringBuilder from StringBuilder
2021-03-12 09:12:51,016 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun insert(index: kotlin.Int, value: kotlin.Any?): kotlin.text.StringBuilder defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@6e56bd6b]]
2021-03-12 09:12:51,016 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun insert(index: kotlin.Int, value: kotlin.Any?): kotlin.text.StringBuilder defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@6e56bd6b]
2021-03-12 09:12:51,119 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:51,208 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:51,209 [main:117] - GENERATED CALL = (s).insert(56502423, "znrtd")
2021-03-12 09:12:51,209 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.setRange(startIndex: kotlin.Int, endIndex: kotlin.Int, value: kotlin.String): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9202ed7]]
2021-03-12 09:12:51,209 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.setRange(startIndex: kotlin.Int, endIndex: kotlin.Int, value: kotlin.String): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@9202ed7]
2021-03-12 09:12:51,305 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:51,387 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:51,474 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:51,475 [main:117] - GENERATED CALL = (s).setRange(-538026728, -305032833, "uoihu")
2021-03-12 09:12:51,475 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.deleteAt(index: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1c027129]]
2021-03-12 09:12:51,475 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.deleteAt(index: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1c027129]
2021-03-12 09:12:51,552 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:51,552 [main:117] - GENERATED CALL = (s).deleteAt(703457907)
2021-03-12 09:12:51,553 [main:113] - Case = [public final fun reverse(): kotlin.text.StringBuilder defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@2250d88e]]
2021-03-12 09:12:51,553 [main:149] - GENERATING call of type public final fun reverse(): kotlin.text.StringBuilder defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@2250d88e]
2021-03-12 09:12:51,553 [main:117] - GENERATED CALL = (s).reverse()
2021-03-12 09:12:51,553 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.deleteRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@16b9082a]]
2021-03-12 09:12:51,553 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.deleteRange(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@16b9082a]
2021-03-12 09:12:51,632 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:51,730 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:51,731 [main:117] - GENERATED CALL = (s).deleteRange(-1894176243, -692717061)
2021-03-12 09:12:51,731 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.appendRange(value: kotlin.CharArray, startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e9ece79]]
2021-03-12 09:12:51,731 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.appendRange(value: kotlin.CharArray, startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@e9ece79]
2021-03-12 09:12:51,821 [main:302] - generating value of type = CharArray false depth = 0
2021-03-12 09:12:51,906 [main:43] - GENERATING CALL OF fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-12 09:12:51,907 [main:61] - WITHOUT TYPE PARAMS = fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-12 09:12:51,990 [main:302] - generating value of type = Char true depth = 3
2021-03-12 09:12:51,991 [main:95] - GENERATED = charArrayOf('芎')
2021-03-12 09:12:52,073 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:52,175 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:52,176 [main:117] - GENERATED CALL = (s).appendRange(charArrayOf('芎'), -1665584336, 55771727)
2021-03-12 09:12:52,176 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.text.StringBuilder.appendLine(): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@785bcc58]]
2021-03-12 09:12:52,176 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.text.StringBuilder.appendLine(): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@785bcc58]
2021-03-12 09:12:52,176 [main:117] - GENERATED CALL = (s).appendLine()
2021-03-12 09:12:52,176 [main:113] - Case = [@kotlin.Deprecated @kotlin.internal.InlineOnly public inline fun kotlin.text.StringBuilder.append(obj: kotlin.Any?): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@320ed7fe]]
2021-03-12 09:12:52,176 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.internal.InlineOnly public inline fun kotlin.text.StringBuilder.append(obj: kotlin.Any?): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@320ed7fe]
2021-03-12 09:12:52,289 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:52,289 [main:117] - GENERATED CALL = (s).append("zdpgv")
2021-03-12 09:12:52,290 [main:113] - Case = [@kotlin.SinceKotlin public inline fun kotlin.text.StringBuilder.clear(): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@61634350]]
2021-03-12 09:12:52,290 [main:149] - GENERATING call of type @kotlin.SinceKotlin public inline fun kotlin.text.StringBuilder.clear(): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@61634350]
2021-03-12 09:12:52,290 [main:117] - GENERATED CALL = (s).clear()
2021-03-12 09:12:52,290 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.insertRange(index: kotlin.Int, value: kotlin.CharArray, startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b70a1e3]]
2021-03-12 09:12:52,290 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public inline fun kotlin.text.StringBuilder.insertRange(index: kotlin.Int, value: kotlin.CharArray, startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.text.StringBuilder defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1b70a1e3]
2021-03-12 09:12:52,390 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:52,472 [main:302] - generating value of type = CharArray false depth = 0
2021-03-12 09:12:52,556 [main:43] - GENERATING CALL OF fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-12 09:12:52,557 [main:61] - WITHOUT TYPE PARAMS = fun charArrayOf(elements: Char): CharArray = TODO()
2021-03-12 09:12:52,639 [main:302] - generating value of type = Char true depth = 3
2021-03-12 09:12:52,640 [main:95] - GENERATED = charArrayOf('눮')
2021-03-12 09:12:52,718 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:52,800 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:52,801 [main:117] - GENERATED CALL = (s).insertRange(-232372518, charArrayOf('눮'), 1146659005, 690864752)
2021-03-12 09:12:52,801 [main:61] - replacement of StringBuilder() of type StringBuilder is (s).insert(56502423, "znrtd")
2021-03-12 09:12:52,907 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:12:52,907 [main:66] - Compilation checking started
2021-03-12 09:12:53,168 [main:49] - Result = false
Text:
val arr = arrayOf("a", "b", "vpblo", "d")

fun box(): String {
    val s = (s).insert(56502423, "znrtd")

    for ((_, x) in arr.withIndex()) (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, false)) "OK" else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:12:53,169 [main:53] - replacing ({
        StringBuilder()
    }, StringBuilder)
2021-03-12 09:12:53,169 [main:50] - replacing {
        StringBuilder()
    } StringBuilder
2021-03-12 09:12:53,169 [main:54] - Getting value of type StringBuilder
2021-03-12 09:12:53,250 [main:302] - generating value of type = StringBuilder false depth = 0
2021-03-12 09:12:53,340 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): StringBuilder = TODO()
2021-03-12 09:12:53,341 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): StringBuilder = TODO()
2021-03-12 09:12:53,518 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 09:12:53,523 [main:95] - GENERATED = StringBuilder("seomk")
2021-03-12 09:12:53,523 [main:58] - GENERATED VALUE OF TYPE StringBuilder = StringBuilder("seomk")
2021-03-12 09:12:53,523 [main:61] - GENERATED IS CALL =true
2021-03-12 09:12:53,609 [main:67] - randomType = Short
2021-03-12 09:12:53,728 [main:302] - generating value of type = Short true depth = 0
2021-03-12 09:12:53,790 [main:61] - replacement of {
        StringBuilder()
    } of type StringBuilder is StringBuilder("seomk")
2021-03-12 09:12:53,913 [main:33] - Trying to replace BLOCK on Element(CALL_EXPRESSION)
2021-03-12 09:12:53,913 [main:53] - replacing ("a;b;c;d;", String)
2021-03-12 09:12:53,913 [main:50] - replacing "a;b;c;d;" String
2021-03-12 09:12:53,913 [main:54] - Getting value of type String
2021-03-12 09:12:53,994 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:53,994 [main:58] - GENERATED VALUE OF TYPE String = "wopor"
2021-03-12 09:12:53,995 [main:61] - GENERATED IS CALL =false
2021-03-12 09:12:54,160 [main:67] - randomType = Double?
2021-03-12 09:12:54,239 [main:302] - generating value of type = Double true depth = 0
2021-03-12 09:12:54,284 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Double[DeserializedSimpleFunctionDescriptor@3887479d]
2021-03-12 09:12:54,285 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.Char.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@58e9da15]
2021-03-12 09:12:54,285 [main:78] - Generated call from random type = (0.29406509339669007)?.toChar().lowercase()
2021-03-12 09:12:54,285 [main:61] - replacement of "a;b;c;d;" of type String is "wopor"
2021-03-12 09:12:54,369 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 09:12:54,371 [main:53] - replacing ("OK", String)
2021-03-12 09:12:54,371 [main:50] - replacing "OK" String
2021-03-12 09:12:54,371 [main:54] - Getting value of type String
2021-03-12 09:12:54,478 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:54,478 [main:58] - GENERATED VALUE OF TYPE String = "ykhsr"
2021-03-12 09:12:54,479 [main:61] - GENERATED IS CALL =false
2021-03-12 09:12:54,578 [main:67] - randomType = Float
2021-03-12 09:12:54,660 [main:302] - generating value of type = Float true depth = 0
2021-03-12 09:12:54,700 [main:149] - GENERATING call of type public open fun toLong(): kotlin.Long defined in kotlin.Float[DeserializedSimpleFunctionDescriptor@246b6267]
2021-03-12 09:12:54,700 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Long.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@17de7178]
2021-03-12 09:12:54,781 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:54,782 [main:78] - Generated call from random type = (0.908136f).toLong().toString(-259777016)
2021-03-12 09:12:54,782 [main:106] - GETTING String from StringBuilder
2021-03-12 09:12:54,808 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe], public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1195e3b5]]
2021-03-12 09:12:54,808 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe]
2021-03-12 09:12:54,887 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:54,887 [main:149] - GENERATING call of type public fun kotlin.String.padEnd(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1195e3b5]
2021-03-12 09:12:54,965 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:55,043 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:55,044 [main:117] - GENERATED CALL = (s).substring(590084625).padEnd(-2049561994, '㜌')
2021-03-12 09:12:55,044 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1c9bce81]]
2021-03-12 09:12:55,044 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe]
2021-03-12 09:12:55,144 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:55,144 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1c9bce81]
2021-03-12 09:12:55,145 [main:117] - GENERATED CALL = (s).substring(-839860711).lowercase()
2021-03-12 09:12:55,145 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe], public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1bba7219]]
2021-03-12 09:12:55,145 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe]
2021-03-12 09:12:55,257 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:55,258 [main:149] - GENERATING call of type public inline fun kotlin.String.takeWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1bba7219]
2021-03-12 09:12:55,339 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 09:12:55,340 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 09:12:55,341 [main:117] - GENERATED CALL = (s).substring(-635336740).takeWhile({a: Char -> true})
2021-03-12 09:12:55,341 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe], public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d329a1a]]
2021-03-12 09:12:55,341 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe]
2021-03-12 09:12:55,421 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:55,422 [main:149] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d329a1a]
2021-03-12 09:12:55,508 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:55,591 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:55,592 [main:117] - GENERATED CALL = (s).substring(473908072).substringBefore('掰', "viqny")
2021-03-12 09:12:55,592 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe], public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cd2d738]]
2021-03-12 09:12:55,592 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe]
2021-03-12 09:12:55,684 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:55,685 [main:149] - GENERATING call of type public fun kotlin.String.replace(oldChar: kotlin.Char, newChar: kotlin.Char, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5cd2d738]
2021-03-12 09:12:55,785 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:55,869 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:55,951 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 09:12:55,952 [main:117] - GENERATED CALL = (s).substring(784497083).replace('㏔', '?', true)
2021-03-12 09:12:55,952 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe], public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2271bc76]]
2021-03-12 09:12:55,952 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe]
2021-03-12 09:12:56,039 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:56,039 [main:149] - GENERATING call of type public fun kotlin.String.removeSurrounding(delimiter: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2271bc76]
2021-03-12 09:12:56,116 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 09:12:56,119 [main:117] - GENERATED CALL = (s).substring(892150254).removeSurrounding("dtuma")
2021-03-12 09:12:56,120 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe], @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@f371d55]]
2021-03-12 09:12:56,120 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe]
2021-03-12 09:12:56,196 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:56,197 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.reversed(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@f371d55]
2021-03-12 09:12:56,197 [main:117] - GENERATED CALL = (s).substring(284344540).reversed()
2021-03-12 09:12:56,197 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@32ee748e]]
2021-03-12 09:12:56,197 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe]
2021-03-12 09:12:56,290 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:56,290 [main:149] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@32ee748e]
2021-03-12 09:12:56,291 [main:117] - GENERATED CALL = (s).substring(2120479265).decapitalize()
2021-03-12 09:12:56,291 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe], public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@682d85e8]]
2021-03-12 09:12:56,291 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe]
2021-03-12 09:12:56,378 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:56,379 [main:149] - GENERATING call of type public fun kotlin.String.replaceAfter(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@682d85e8]
2021-03-12 09:12:56,459 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:56,536 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:56,615 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:56,615 [main:117] - GENERATED CALL = (s).substring(-443208108).replaceAfter('', "nnkur", "ustlp")
2021-03-12 09:12:56,615 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe], public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4b7b4edb]]
2021-03-12 09:12:56,615 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@23aee2fe]
2021-03-12 09:12:56,703 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:56,704 [main:149] - GENERATING call of type public inline fun kotlin.String.filter(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4b7b4edb]
2021-03-12 09:12:56,802 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 09:12:56,802 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 09:12:56,803 [main:117] - GENERATED CALL = (s).substring(-1007915927).filter({a: Char -> true})
2021-03-12 09:12:56,803 [main:61] - replacement of "OK" of type String is (s).substring(-443208108).replaceAfter('', "nnkur", "ustlp")
2021-03-12 09:12:56,901 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:12:56,901 [main:66] - Compilation checking started
2021-03-12 09:12:57,287 [main:53] - Result = true
Text:
val arr = arrayOf("a", "b", "vpblo", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, false)) (s).substring(-443208108).replaceAfter('', "nnkur", "ustlp") else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:12:57,288 [main:53] - replacing (ss, String)
2021-03-12 09:12:57,288 [main:50] - replacing ss String
2021-03-12 09:12:57,288 [main:54] - Getting value of type String
2021-03-12 09:12:57,375 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:57,376 [main:58] - GENERATED VALUE OF TYPE String = "gvaom"
2021-03-12 09:12:57,376 [main:61] - GENERATED IS CALL =false
2021-03-12 09:12:57,467 [main:67] - randomType = Short
2021-03-12 09:12:57,549 [main:302] - generating value of type = Short true depth = 0
2021-03-12 09:12:57,599 [main:149] - GENERATING call of type public abstract fun toInt(): kotlin.Int defined in kotlin.Number[DeserializedSimpleFunctionDescriptor@7e317103]
2021-03-12 09:12:57,599 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@10658b09]
2021-03-12 09:12:57,678 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:57,679 [main:78] - Generated call from random type = (11755).toInt().toString(529289892)
2021-03-12 09:12:57,679 [main:61] - replacement of ss of type String is "gvaom"
2021-03-12 09:12:57,778 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-12 09:12:57,779 [main:53] - replacing ("b", String)
2021-03-12 09:12:57,779 [main:50] - replacing "b" String
2021-03-12 09:12:57,779 [main:54] - Getting value of type String
2021-03-12 09:12:57,869 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:57,870 [main:58] - GENERATED VALUE OF TYPE String = "rivky"
2021-03-12 09:12:57,870 [main:61] - GENERATED IS CALL =false
2021-03-12 09:12:57,956 [main:67] - randomType = Long
2021-03-12 09:12:58,035 [main:302] - generating value of type = Long true depth = 0
2021-03-12 09:12:58,071 [main:149] - GENERATING call of type public open fun toShort(): kotlin.Short defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@6559faf1]
2021-03-12 09:12:58,072 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.InlineOnly public inline fun kotlin.Short.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@30a5d3c]
2021-03-12 09:12:58,150 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:58,150 [main:78] - Generated call from random type = (7814788449247723938).toShort().toString(494886196)
2021-03-12 09:12:58,151 [main:106] - GETTING String from Array<String>
2021-03-12 09:12:58,168 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@57b8e0ac]]
2021-03-12 09:12:58,168 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:58,245 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:58,246 [main:149] - GENERATING call of type public inline fun kotlin.String.takeLastWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@57b8e0ac]
2021-03-12 09:12:58,322 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 09:12:58,322 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 09:12:58,323 [main:117] - GENERATED CALL = (arr).get(-1808031951).takeLastWhile({a: Char -> true})
2021-03-12 09:12:58,323 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59484635]]
2021-03-12 09:12:58,323 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:58,401 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:58,402 [main:149] - GENERATING call of type public fun kotlin.String.removeSuffix(suffix: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@59484635]
2021-03-12 09:12:58,497 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 09:12:58,501 [main:117] - GENERATED CALL = (arr).get(-99931765).removeSuffix("zhpfh")
2021-03-12 09:12:58,501 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@31fc8c5e]]
2021-03-12 09:12:58,501 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:58,595 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:58,596 [main:149] - GENERATING call of type public final operator fun plus(other: kotlin.Any?): kotlin.String defined in kotlin.String[DeserializedSimpleFunctionDescriptor@31fc8c5e]
2021-03-12 09:12:58,681 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:12:58,681 [main:117] - GENERATED CALL = (arr).get(475025760).plus("wrtel")
2021-03-12 09:12:58,682 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@366dc68b]]
2021-03-12 09:12:58,682 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:58,769 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:58,769 [main:149] - GENERATING call of type public inline fun kotlin.String.dropWhile(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@366dc68b]
2021-03-12 09:12:58,856 [main:302] - generating value of type = Function1<Char, Boolean> false depth = 0
2021-03-12 09:12:58,856 [main:302] - generating value of type = Boolean true depth = 1
2021-03-12 09:12:58,857 [main:117] - GENERATED CALL = (arr).get(-1895074008).dropWhile({a: Char -> false})
2021-03-12 09:12:58,857 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@479c9c00]]
2021-03-12 09:12:58,857 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:58,944 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:58,945 [main:149] - GENERATING call of type public fun kotlin.String.dropLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@479c9c00]
2021-03-12 09:12:59,021 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:59,022 [main:117] - GENERATED CALL = (arr).get(-741927784).dropLast(-1127700215)
2021-03-12 09:12:59,022 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6c68575b]]
2021-03-12 09:12:59,022 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:59,115 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:59,116 [main:149] - GENERATING call of type public fun kotlin.String.takeLast(n: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6c68575b]
2021-03-12 09:12:59,206 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:59,206 [main:117] - GENERATED CALL = (arr).get(118304542).takeLast(137568418)
2021-03-12 09:12:59,206 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64930c56]]
2021-03-12 09:12:59,207 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:59,289 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:59,289 [main:149] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64930c56]
2021-03-12 09:12:59,381 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:59,463 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:59,464 [main:117] - GENERATED CALL = (arr).get(714399717).substringBeforeLast('㧖', "lcvkm")
2021-03-12 09:12:59,464 [main:113] - Case = [@kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d549137]]
2021-03-12 09:12:59,464 [main:149] - GENERATING call of type @kotlin.Deprecated @kotlin.SinceKotlin @kotlin.DeprecatedSinceKotlin public fun <T> kotlin.Array<out T>.contentToString(): kotlin.String defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@6d549137]
2021-03-12 09:12:59,464 [main:117] - GENERATED CALL = (arr).contentToString()
2021-03-12 09:12:59,464 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d329a1a]]
2021-03-12 09:12:59,464 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:59,547 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:59,548 [main:149] - GENERATING call of type public fun kotlin.String.substringBefore(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@2d329a1a]
2021-03-12 09:12:59,631 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:12:59,736 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:59,737 [main:117] - GENERATED CALL = (arr).get(1524408396).substringBefore('部', "oxjrn")
2021-03-12 09:12:59,737 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69a7b40b]]
2021-03-12 09:12:59,737 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:12:59,828 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:12:59,828 [main:149] - GENERATING call of type public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69a7b40b]
2021-03-12 09:12:59,905 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:12:59,906 [main:117] - GENERATED CALL = (arr).get(-1042198689).prependIndent("mntso")
2021-03-12 09:12:59,906 [main:61] - replacement of "b" of type String is (7814788449247723938).toShort().toString(494886196)
2021-03-12 09:12:59,982 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:12:59,983 [main:66] - Compilation checking started
2021-03-12 09:13:00,329 [main:53] - Result = true
Text:
val arr = arrayOf("a", (7814788449247723938).toShort().toString(494886196), "vpblo", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, false)) (s).substring(-443208108).replaceAfter('', "nnkur", "ustlp") else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:13:00,329 [main:53] - replacing ("b", String)
2021-03-12 09:13:00,329 [main:50] - replacing "b" String
2021-03-12 09:13:00,330 [main:54] - Getting value of type String
2021-03-12 09:13:00,413 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:13:00,413 [main:58] - GENERATED VALUE OF TYPE String = "zsdza"
2021-03-12 09:13:00,413 [main:61] - GENERATED IS CALL =false
2021-03-12 09:13:00,709 [main:67] - randomType = Map<UByte, Long>
2021-03-12 09:13:00,709 [main:61] - replacement of "b" of type String is "zsdza"
2021-03-12 09:13:00,788 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(STRING_TEMPLATE)
2021-03-12 09:13:00,789 [main:53] - replacing ("d", String)
2021-03-12 09:13:00,789 [main:50] - replacing "d" String
2021-03-12 09:13:00,789 [main:54] - Getting value of type String
2021-03-12 09:13:00,869 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:13:00,869 [main:58] - GENERATED VALUE OF TYPE String = "ohsyo"
2021-03-12 09:13:00,869 [main:61] - GENERATED IS CALL =false
2021-03-12 09:13:00,950 [main:67] - randomType = ULong
2021-03-12 09:13:01,028 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 09:13:01,063 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline fun toUShort(): kotlin.UShort defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@7caf6d6]
2021-03-12 09:13:01,063 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalUnsignedTypes public fun kotlin.UShort.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@4291260f]
2021-03-12 09:13:01,147 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:01,147 [main:78] - Generated call from random type = (1281145195464302233.toULong()).toUShort().toString(917288821)
2021-03-12 09:13:01,148 [main:106] - GETTING String from Array<String>
2021-03-12 09:13:01,164 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5d2cda10]]
2021-03-12 09:13:01,165 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:13:01,252 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:01,253 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.replaceRange(startIndex: kotlin.Int, endIndex: kotlin.Int, replacement: kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@5d2cda10]
2021-03-12 09:13:01,355 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:01,444 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:01,526 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 09:13:01,609 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 09:13:01,610 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.String): CharSequence = TODO()
2021-03-12 09:13:01,772 [main:302] - generating value of type = String true depth = 3
2021-03-12 09:13:01,773 [main:95] - GENERATED = StringBuilder("yuybd")
2021-03-12 09:13:01,773 [main:117] - GENERATED CALL = (arr).get(-1469779063).replaceRange(-58061385, -535729351, StringBuilder("yuybd"))
2021-03-12 09:13:01,773 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1c9bce81]]
2021-03-12 09:13:01,773 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:13:01,850 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:01,851 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi @kotlin.internal.InlineOnly public inline fun kotlin.String.lowercase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@1c9bce81]
2021-03-12 09:13:01,851 [main:117] - GENERATED CALL = (arr).get(-1915612561).lowercase()
2021-03-12 09:13:01,851 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3cfe955d]]
2021-03-12 09:13:01,851 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:13:01,945 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:01,946 [main:149] - GENERATING call of type public fun kotlin.String.padStart(length: kotlin.Int, padChar: kotlin.Char = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@3cfe955d]
2021-03-12 09:13:02,033 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:02,113 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:13:02,113 [main:117] - GENERATED CALL = (arr).get(1707659316).padStart(-389971242, '』')
2021-03-12 09:13:02,113 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64f28e49]]
2021-03-12 09:13:02,113 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:13:02,192 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:02,192 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trim(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64f28e49]
2021-03-12 09:13:02,193 [main:117] - GENERATED CALL = (arr).get(1024233472).trim()
2021-03-12 09:13:02,193 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@32ee748e]]
2021-03-12 09:13:02,193 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:13:02,277 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:02,277 [main:149] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@32ee748e]
2021-03-12 09:13:02,277 [main:117] - GENERATED CALL = (arr).get(2099333243).decapitalize()
2021-03-12 09:13:02,277 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f35b080]]
2021-03-12 09:13:02,277 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:13:02,353 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:02,354 [main:149] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f35b080]
2021-03-12 09:13:02,432 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:13:02,433 [main:117] - GENERATED CALL = (arr).get(172576413).trimMargin("nevhm")
2021-03-12 09:13:02,433 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d00e56c]]
2021-03-12 09:13:02,433 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:13:02,556 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:02,557 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.concat(str: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6d00e56c]
2021-03-12 09:13:02,679 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:13:02,680 [main:117] - GENERATED CALL = (arr).get(41683915).concat("oypkb")
2021-03-12 09:13:02,680 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37a98c77]]
2021-03-12 09:13:02,680 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:13:02,790 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:02,790 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.slice(indices: kotlin.collections.Iterable<kotlin.Int>): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@37a98c77]
2021-03-12 09:13:02,887 [main:302] - generating value of type = Iterable<Int> false depth = 0
2021-03-12 09:13:04,510 [main:43] - GENERATING CALL OF fun <E> ArrayList(): Iterable<Int> = TODO()
2021-03-12 09:13:04,590 [main:61] - WITHOUT TYPE PARAMS = fun <E> ArrayList(): Iterable<Int> = TODO()
2021-03-12 09:13:04,673 [main:95] - GENERATED = ArrayList<Triple<Function1<Long, Function1<ULong, Triple<Pair<Float, Function1<Set<Short>, Byte?>>, String?, Boolean?>>>, LinkedHashMap<Float, String>, UInt?>>()
2021-03-12 09:13:04,673 [main:117] - GENERATED CALL = (arr).get(1311435606).slice(ArrayList<Triple<Function1<Long, Function1<ULong, Triple<Pair<Float, Function1<Set<Short>, Byte?>>, String?, Boolean?>>>, LinkedHashMap<Float, String>, UInt?>>())
2021-03-12 09:13:04,673 [main:113] - Case = [public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2], public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64a8b378]]
2021-03-12 09:13:04,673 [main:149] - GENERATING call of type public final operator fun get(index: kotlin.Int): kotlin.String defined in kotlin.Array[DeserializedSimpleFunctionDescriptor@18bca8c2]
2021-03-12 09:13:04,750 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:04,751 [main:149] - GENERATING call of type public fun kotlin.String.substringAfter(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64a8b378]
2021-03-12 09:13:04,827 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:13:04,904 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:13:04,905 [main:117] - GENERATED CALL = (arr).get(1379192584).substringAfter('嵠', "unqrz")
2021-03-12 09:13:04,905 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@3e7afcc], @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@10658b09]]
2021-03-12 09:13:04,905 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@10658b09]
2021-03-12 09:13:04,982 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:04,982 [main:117] - GENERATED CALL = (arr).size.toString(659304336)
2021-03-12 09:13:04,982 [main:61] - replacement of "d" of type String is (arr).get(1379192584).substringAfter('嵠', "unqrz")
2021-03-12 09:13:05,080 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:13:05,080 [main:66] - Compilation checking started
2021-03-12 09:13:05,343 [main:49] - Result = false
Text:
val arr = arrayOf("a", (7814788449247723938).toShort().toString(494886196), "vpblo", (arr).get(1379192584).substringAfter('嵠', "unqrz"))

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, false)) (s).substring(-443208108).replaceAfter('', "nnkur", "ustlp") else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:13:05,438 [main:119] - TRYING TO REPLACE CONSTANT false
2021-03-12 09:13:05,522 [main:33] - Trying to replace Element(BOOLEAN_CONSTANT) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:13:05,522 [main:66] - Compilation checking started
2021-03-12 09:13:05,883 [main:53] - Result = true
Text:
val arr = arrayOf("a", (7814788449247723938).toShort().toString(494886196), "vpblo", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(436620125, charArrayOf('ݡ'), 1705435149, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, (arr).get(371976064).startsWith(ss, false))) (s).substring(-443208108).replaceAfter('', "nnkur", "ustlp") else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:13:05,883 [main:119] - TRYING TO REPLACE CONSTANT 371976064
2021-03-12 09:13:05,968 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 09:13:05,968 [main:66] - Compilation checking started
2021-03-12 09:13:06,340 [main:119] - TRYING TO REPLACE CONSTANT 436620125
2021-03-12 09:13:06,430 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 09:13:06,430 [main:66] - Compilation checking started
2021-03-12 09:13:06,767 [main:53] - Result = true
Text:
val arr = arrayOf("a", (7814788449247723938).toShort().toString(494886196), "vpblo", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(1508386796, charArrayOf('ݡ'), 1705435149, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, (arr).get(371976064).startsWith(ss, false))) (s).substring(-443208108).replaceAfter('', "nnkur", "ustlp") else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:13:06,768 [main:119] - TRYING TO REPLACE CONSTANT 1705435149
2021-03-12 09:13:06,851 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 09:13:06,852 [main:66] - Compilation checking started
2021-03-12 09:13:07,212 [main:53] - Result = true
Text:
val arr = arrayOf("a", (7814788449247723938).toShort().toString(494886196), "vpblo", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(1508386796, charArrayOf('ݡ'), 494886196, -1802276395)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, (arr).get(371976064).startsWith(ss, false))) (s).substring(-443208108).replaceAfter('', "nnkur", "ustlp") else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:13:07,213 [main:119] - TRYING TO REPLACE CONSTANT 1802276395
2021-03-12 09:13:07,293 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(INTEGER_CONSTANT)
2021-03-12 09:13:07,294 [main:66] - Compilation checking started
2021-03-12 09:13:07,610 [main:53] - Result = true
Text:
val arr = arrayOf("a", (7814788449247723938).toShort().toString(494886196), "vpblo", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(1508386796, charArrayOf('ݡ'), 494886196, 1508386796)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, (arr).get(371976064).startsWith(ss, false))) (s).substring(-443208108).replaceAfter('', "nnkur", "ustlp") else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:13:07,610 [main:119] - TRYING TO REPLACE CONSTANT 'ݡ'
2021-03-12 09:13:07,702 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(CHARACTER_CONSTANT)
2021-03-12 09:13:07,702 [main:66] - Compilation checking started
2021-03-12 09:13:08,019 [main:119] - TRYING TO REPLACE CONSTANT '⟞'
2021-03-12 09:13:08,102 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(CHARACTER_CONSTANT)
2021-03-12 09:13:08,102 [main:66] - Compilation checking started
2021-03-12 09:13:08,468 [main:119] - TRYING TO REPLACE CONSTANT 1508386796
2021-03-12 09:13:08,567 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-12 09:13:08,567 [main:66] - Compilation checking started
2021-03-12 09:13:08,889 [main:119] - TRYING TO REPLACE CONSTANT ''
2021-03-12 09:13:08,967 [main:33] - Trying to replace Element(CHARACTER_CONSTANT) on Element(CHARACTER_CONSTANT)
2021-03-12 09:13:08,967 [main:66] - Compilation checking started
2021-03-12 09:13:09,266 [main:119] - TRYING TO REPLACE CONSTANT 443208108
2021-03-12 09:13:09,359 [main:33] - Trying to replace Element(PREFIX_EXPRESSION) on Element(PREFIX_EXPRESSION)
2021-03-12 09:13:09,359 [main:66] - Compilation checking started
2021-03-12 09:13:09,702 [main:53] - Result = true
Text:
val arr = arrayOf("a", (7814788449247723938).toShort().toString(494886196), "vpblo", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(1508386796, charArrayOf('ݡ'), 494886196, 1508386796)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, (arr).get(371976064).startsWith(ss, false))) (s).substring(-1802276395).replaceAfter('', "nnkur", "ustlp") else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:13:09,703 [main:119] - TRYING TO REPLACE CONSTANT 7814788449247723938
2021-03-12 09:13:09,782 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(INTEGER_CONSTANT)
2021-03-12 09:13:09,782 [main:66] - Compilation checking started
2021-03-12 09:13:10,102 [main:119] - TRYING TO REPLACE CONSTANT 494886196
2021-03-12 09:13:10,179 [main:33] - Trying to replace Element(INTEGER_CONSTANT) on Element(PREFIX_EXPRESSION)
2021-03-12 09:13:10,180 [main:66] - Compilation checking started
2021-03-12 09:13:10,481 [main:53] - Result = true
Text:
val arr = arrayOf("a", (7814788449247723938).toShort().toString(-443208108), "vpblo", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) (s).insertRange(1508386796, charArrayOf('ݡ'), 494886196, 1508386796)

    val ss = s.toString()
    return if ((arr).get(371976064).startsWith(ss, (arr).get(371976064).startsWith(ss, false))) (s).substring(-1802276395).replaceAfter('', "nnkur", "ustlp") else (arr).get(-1508386796).replaceAfterLast('⟞', "otipu", ss)
}


2021-03-12 09:13:10,515 [main:41] - AFTER TRY 0 res = val arr = arrayOf("a", "b", "c", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) {
        s.append("$x;")
    }

    val ss = s.toString()
    return if (ss == "a;b;c;d;") "OK" else "fail: '$ss'"
}
2021-03-12 09:13:10,831 [main:43] - Try №0
2021-03-12 09:13:25,295 [main:48] - Already checked
2021-03-12 09:13:25,542 [main:48] - Already checked
2021-03-12 09:13:30,316 [main:69] - Trying to insert override fun resumeWith(prope0: Result<Any?>) {
        this.prope0 = prope0.getOrThrow()
    }
2021-03-12 09:13:30,613 [main:66] - Compilation checking started
2021-03-12 09:13:31,862 [main:103] - Trying to change 208 nodes
2021-03-12 09:13:31,862 [main:107] - replacing (numberOfSuspensions, Int)
2021-03-12 09:13:31,865 [main:50] - replacing numberOfSuspensions Int
2021-03-12 09:13:31,865 [main:54] - Getting value of type Int
2021-03-12 09:13:32,052 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:32,054 [main:58] - GENERATED VALUE OF TYPE Int = 1641223589
2021-03-12 09:13:32,055 [main:61] - GENERATED IS CALL =false
2021-03-12 09:13:32,410 [main:67] - randomType = ULong?
2021-03-12 09:13:32,588 [main:302] - generating value of type = ULong true depth = 0
2021-03-12 09:13:32,640 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public final inline operator fun compareTo(other: kotlin.UByte): kotlin.Int defined in kotlin.ULong[DeserializedSimpleFunctionDescriptor@6cf8708a]
2021-03-12 09:13:32,802 [main:302] - generating value of type = UByte true depth = 0
2021-03-12 09:13:32,805 [main:149] - GENERATING call of type public open fun toInt(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@69292ca6]
2021-03-12 09:13:32,805 [main:78] - Generated call from random type = (870651381158620021.toULong())?.compareTo(14.toUByte()).toInt()
2021-03-12 09:13:32,806 [main:106] - GETTING Int from Array<String>
2021-03-12 09:13:32,826 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@148e4805], public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18221338]]
2021-03-12 09:13:32,826 [main:149] - GENERATING call of type public final operator fun div(other: kotlin.Byte): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@18221338]
2021-03-12 09:13:32,980 [main:302] - generating value of type = Byte true depth = 0
2021-03-12 09:13:32,983 [main:117] - GENERATED CALL = (arr).size.div(62)
2021-03-12 09:13:32,984 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@148e4805], public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@dbdeeea]]
2021-03-12 09:13:32,984 [main:149] - GENERATING call of type public final infix fun or(other: kotlin.Int): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@dbdeeea]
2021-03-12 09:13:33,144 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:33,147 [main:117] - GENERATED CALL = (arr).size.or(-1554639901)
2021-03-12 09:13:33,147 [main:113] - Case = [@kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61ca95ab]]
2021-03-12 09:13:33,147 [main:149] - GENERATING call of type @kotlin.jvm.JvmName public fun kotlin.Array<out kotlin.Byte>.sum(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@61ca95ab]
2021-03-12 09:13:33,147 [main:117] - GENERATED CALL = (arr).sum()
2021-03-12 09:13:33,147 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@148e4805], @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5dc4089d]]
2021-03-12 09:13:33,147 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.ExperimentalStdlibApi public fun kotlin.Int.rotateLeft(bitCount: kotlin.Int): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5dc4089d]
2021-03-12 09:13:33,297 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:33,300 [main:117] - GENERATED CALL = (arr).size.rotateLeft(2107654787)
2021-03-12 09:13:33,300 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@148e4805], public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@46241f9]]
2021-03-12 09:13:33,300 [main:149] - GENERATING call of type public final operator fun inc(): kotlin.Int defined in kotlin.Int[DeserializedSimpleFunctionDescriptor@46241f9]
2021-03-12 09:13:33,300 [main:117] - GENERATED CALL = (arr).size.inc()
2021-03-12 09:13:33,301 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepHashCode(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1346d3ae]]
2021-03-12 09:13:33,301 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.internal.LowPriorityInOverloadResolution public fun <T> kotlin.Array<out T>.contentDeepHashCode(): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@1346d3ae]
2021-03-12 09:13:33,301 [main:117] - GENERATED CALL = (arr).contentDeepHashCode()
2021-03-12 09:13:33,301 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@148e4805], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5556f4af]]
2021-03-12 09:13:33,301 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeLowestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5556f4af]
2021-03-12 09:13:33,301 [main:117] - GENERATED CALL = (arr).size.takeLowestOneBit()
2021-03-12 09:13:33,301 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@148e4805], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5460abb0]]
2021-03-12 09:13:33,301 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.takeHighestOneBit(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@5460abb0]
2021-03-12 09:13:33,302 [main:117] - GENERATED CALL = (arr).size.takeHighestOneBit()
2021-03-12 09:13:33,302 [main:113] - Case = [public inline fun <T> kotlin.Array<out T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31ae2cf]]
2021-03-12 09:13:33,302 [main:149] - GENERATING call of type public inline fun <T> kotlin.Array<out T>.sumBy(selector: (T) -> kotlin.Int): kotlin.Int defined in kotlin.collections[DeserializedSimpleFunctionDescriptor@31ae2cf]
2021-03-12 09:13:33,533 [main:302] - generating value of type = Function1<T, Int> false depth = 0
2021-03-12 09:13:33,536 [main:302] - generating value of type = Int true depth = 1
2021-03-12 09:13:33,538 [main:117] - GENERATED CALL = (arr).sumBy({a: T -> 1528302704})
2021-03-12 09:13:33,538 [main:113] - Case = [public final val size: kotlin.Int defined in kotlin.Array[DeserializedPropertyDescriptor@148e4805], @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@738fb8e8]]
2021-03-12 09:13:33,538 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public fun kotlin.Int.countTrailingZeroBits(): kotlin.Int defined in kotlin[DeserializedSimpleFunctionDescriptor@738fb8e8]
2021-03-12 09:13:33,539 [main:117] - GENERATED CALL = (arr).size.countTrailingZeroBits()
2021-03-12 09:13:33,539 [main:114] - replacement of numberOfSuspensions of type Int is (arr).contentDeepHashCode()
2021-03-12 09:13:33,688 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:13:33,688 [main:66] - Compilation checking started
2021-03-12 09:13:34,503 [main:53] - Result = true
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
val arr = arrayOf("a", "b", "c", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) {
        s.append("$x;")
    }

    val ss = s.toString()
    return if (ss == "a;b;c;d;") "OK" else "fail: '$ss'"
}

var prope0 = "FAIL"

fun fu0(prope1: suspend () -> Unit) {
    prope1.startCoroutine(fu4 {
        prope0 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: Int)

var prope1: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope1 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Any
}

class Kla2() : Kla1 {
    override suspend fun fu5(): Kla0 = fu1()

    suspend fun fu6(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }

    suspend fun fu7(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }
}

fun Int.fu2() =
    if (this == 42) "OK" else toString()

fun box785(): String {
    fu0 {
        Kla2().fu6().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 1 $prope0"

    prope0 = "FAIL2"
    fu0 {
        Kla2().fu7().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 2 $prope0"

    return prope0 as String
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        x(prope0.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        prope0.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope0: Result<Any?>) {
        prope0.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        this.prope0 = prope0.getOrThrow()
    }

    var prope0: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        if (prope0.isSuccess) {
            resume(prope0.getOrThrow())
        } else {
            resumeWithException(prope0.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(prope1: Continuation<*>) {
        if (prope1 !is CoroutineStackFrame) error("Continuation " + prope1 + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope9: CoroutineStackFrame? = prope1
        while (prope9 != null) {
            prope4.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu11(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope2 = Kla6()

class Kla7 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu13() {
        prope5 = 0
        prope6 = false
        prope7 = {}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope1 ->
        prope5++
        prope7 = { prope1.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + (arr).contentDeepHashCode() + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope3 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope3.prope7 = {
            prope3.prope6 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 09:13:34,505 [main:107] - replacing ({}, Function0<Unit>)
2021-03-12 09:13:34,506 [main:50] - replacing {} Function0<Unit>
2021-03-12 09:13:34,506 [main:54] - Getting value of type Function0<Unit>
2021-03-12 09:13:34,660 [main:302] - generating value of type = Function0<Unit> false depth = 0
2021-03-12 09:13:34,663 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 09:13:34,828 [main:43] - GENERATING CALL OF fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 09:13:34,831 [main:61] - WITHOUT TYPE PARAMS = fun print(message: kotlin.Any?): Unit = TODO()
2021-03-12 09:13:35,149 [main:302] - generating value of type = Any false depth = 4
2021-03-12 09:13:35,149 [main:95] - GENERATED = print("qimri")
2021-03-12 09:13:35,149 [main:58] - GENERATED VALUE OF TYPE Function0<Unit> = { print("qimri")}
2021-03-12 09:13:35,150 [main:61] - GENERATED IS CALL =false
2021-03-12 09:13:35,159 [main:67] - randomType = Kla1
2021-03-12 09:13:35,160 [main:106] - GETTING Function0<Unit> from StringBuilder
2021-03-12 09:13:35,193 [main:106] - GETTING Function0<Unit> from StringBuilder
2021-03-12 09:13:35,194 [main:106] - GETTING Function0<Unit> from Array<String>
2021-03-12 09:13:35,212 [main:106] - GETTING Function0<Unit> from String
2021-03-12 09:13:35,272 [main:114] - replacement of {} of type Function0<Unit> is { print("qimri")}
2021-03-12 09:13:35,464 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 09:13:35,465 [main:66] - Compilation checking started
2021-03-12 09:13:36,272 [main:53] - Result = true
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
val arr = arrayOf("a", "b", "c", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) {
        s.append("$x;")
    }

    val ss = s.toString()
    return if (ss == "a;b;c;d;") "OK" else "fail: '$ss'"
}

var prope0 = "FAIL"

fun fu0(prope1: suspend () -> Unit) {
    prope1.startCoroutine(fu4 {
        prope0 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: Int)

var prope1: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope1 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Any
}

class Kla2() : Kla1 {
    override suspend fun fu5(): Kla0 = fu1()

    suspend fun fu6(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }

    suspend fun fu7(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }
}

fun Int.fu2() =
    if (this == 42) "OK" else toString()

fun box785(): String {
    fu0 {
        Kla2().fu6().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 1 $prope0"

    prope0 = "FAIL2"
    fu0 {
        Kla2().fu7().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 2 $prope0"

    return prope0 as String
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        x(prope0.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        prope0.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope0: Result<Any?>) {
        prope0.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        this.prope0 = prope0.getOrThrow()
    }

    var prope0: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        if (prope0.isSuccess) {
            resume(prope0.getOrThrow())
        } else {
            resumeWithException(prope0.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(prope1: Continuation<*>) {
        if (prope1 !is CoroutineStackFrame) error("Continuation " + prope1 + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope9: CoroutineStackFrame? = prope1
        while (prope9 != null) {
            prope4.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu11(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope2 = Kla6()

class Kla7 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu13() {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope5 = 0
        prope6 = false
        prope7 = { print("qimri")}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope1 ->
        prope5++
        prope7 = { prope1.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + (arr).contentDeepHashCode() + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope3 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope3.prope7 = {
            prope3.prope6 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 09:13:36,274 [main:107] - replacing ("\n", String)
2021-03-12 09:13:36,276 [main:50] - replacing "\n" String
2021-03-12 09:13:36,276 [main:54] - Getting value of type String
2021-03-12 09:13:36,432 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:13:36,434 [main:58] - GENERATED VALUE OF TYPE String = "dskia"
2021-03-12 09:13:36,434 [main:61] - GENERATED IS CALL =false
2021-03-12 09:13:36,786 [main:67] - randomType = LinkedHashMap<String, Char>
2021-03-12 09:13:36,932 [main:302] - generating value of type = LinkedHashMap<String, Char> false depth = 0
2021-03-12 09:13:37,095 [main:43] - GENERATING CALL OF fun <K, V> LinkedHashMap(): LinkedHashMap<String, Char> = TODO()
2021-03-12 09:13:37,099 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> LinkedHashMap(): LinkedHashMap<String, Char> = TODO()
2021-03-12 09:13:37,274 [main:95] - GENERATED = LinkedHashMap<String, Char>()
2021-03-12 09:13:37,434 [main:149] - GENERATING call of type @kotlin.SinceKotlin public fun kotlin.Int.toString(radix: kotlin.Int): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@10658b09]
2021-03-12 09:13:37,612 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:37,616 [main:78] - Generated call from random type = (LinkedHashMap<String, Char>()).size.toString(285940995)
2021-03-12 09:13:37,617 [main:106] - GETTING String from StringBuilder
2021-03-12 09:13:37,657 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4], public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69a7b40b]]
2021-03-12 09:13:37,657 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4]
2021-03-12 09:13:37,797 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:37,799 [main:149] - GENERATING call of type public fun kotlin.String.prependIndent(indent: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@69a7b40b]
2021-03-12 09:13:37,799 [main:117] - GENERATED CALL = (s.append("$x;")).substring(1648485167).prependIndent(ss)
2021-03-12 09:13:37,799 [main:113] - Case = [public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@5511ed88], @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b3bda6b]]
2021-03-12 09:13:37,800 [main:149] - GENERATING call of type public open fun subSequence(startIndex: kotlin.Int, endIndex: kotlin.Int): kotlin.CharSequence defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@5511ed88]
2021-03-12 09:13:37,944 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:38,080 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:38,083 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.substring(startIndex: kotlin.Int, endIndex: kotlin.Int = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7b3bda6b]
2021-03-12 09:13:38,224 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:38,369 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:38,372 [main:117] - GENERATED CALL = (s.append("$x;")).subSequence(-139042636, -1782311735).substring(-693547503, -1724795961)
2021-03-12 09:13:38,372 [main:113] - Case = [public fun kotlin.CharSequence.commonSuffixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@d015c5b]]
2021-03-12 09:13:38,373 [main:149] - GENERATING call of type public fun kotlin.CharSequence.commonSuffixWith(other: kotlin.CharSequence, ignoreCase: kotlin.Boolean = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@d015c5b]
2021-03-12 09:13:38,523 [main:302] - generating value of type = CharSequence false depth = 0
2021-03-12 09:13:38,712 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 09:13:38,716 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 09:13:39,087 [main:302] - generating value of type = CharSequence false depth = 3
2021-03-12 09:13:39,237 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 09:13:39,240 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 09:13:39,531 [main:302] - generating value of type = CharSequence false depth = 6
2021-03-12 09:13:39,674 [main:43] - GENERATING CALL OF fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 09:13:39,678 [main:61] - WITHOUT TYPE PARAMS = fun StringBuilder(content: kotlin.CharSequence): CharSequence = TODO()
2021-03-12 09:13:39,971 [main:302] - generating value of type = CharSequence false depth = 9
2021-03-12 09:13:39,977 [main:95] - GENERATED = StringBuilder("vwmwx")
2021-03-12 09:13:39,977 [main:95] - GENERATED = StringBuilder(StringBuilder("vwmwx"))
2021-03-12 09:13:39,978 [main:95] - GENERATED = StringBuilder(StringBuilder(StringBuilder("vwmwx")))
2021-03-12 09:13:40,184 [main:302] - generating value of type = Boolean true depth = 0
2021-03-12 09:13:40,186 [main:117] - GENERATED CALL = (s.append("$x;")).commonSuffixWith(StringBuilder(StringBuilder(StringBuilder("vwmwx"))), true)
2021-03-12 09:13:40,187 [main:113] - Case = [@kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replace(regex: kotlin.text.Regex, noinline transform: (kotlin.text.MatchResult) -> kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7087ef06]]
2021-03-12 09:13:40,187 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.CharSequence.replace(regex: kotlin.text.Regex, noinline transform: (kotlin.text.MatchResult) -> kotlin.CharSequence): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7087ef06]
2021-03-12 09:13:40,316 [main:302] - generating value of type = Regex false depth = 0
2021-03-12 09:13:40,459 [main:43] - GENERATING CALL OF fun Regex(pattern: kotlin.String, options: kotlin.collections.Set<kotlin.text.RegexOption>): Regex = TODO()
2021-03-12 09:13:40,463 [main:61] - WITHOUT TYPE PARAMS = fun Regex(pattern: kotlin.String, options: kotlin.collections.Set<kotlin.text.RegexOption>): Regex = TODO()
2021-03-12 09:13:40,930 [main:302] - generating value of type = String true depth = 3
2021-03-12 09:13:40,932 [main:302] - generating value of type = Set<RegexOption> false depth = 3
2021-03-12 09:13:41,078 [main:43] - GENERATING CALL OF fun <T> mutableSetOf(): Set<RegexOption> = TODO()
2021-03-12 09:13:41,082 [main:61] - WITHOUT TYPE PARAMS = fun <T> mutableSetOf(): Set<RegexOption> = TODO()
2021-03-12 09:13:41,220 [main:95] - GENERATED = mutableSetOf<RegexOption>()
2021-03-12 09:13:41,220 [main:95] - GENERATED = Regex("ytpdh", mutableSetOf<RegexOption>())
2021-03-12 09:13:41,357 [main:302] - generating value of type = Function1<MatchResult, CharSequence> false depth = 0
2021-03-12 09:13:41,359 [main:302] - generating value of type = CharSequence false depth = 1
2021-03-12 09:13:41,365 [main:117] - GENERATED CALL = (s.append("$x;")).replace(Regex("ytpdh", mutableSetOf<RegexOption>()), {a: MatchResult -> "vlhos"})
2021-03-12 09:13:41,365 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4], public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@32ee748e]]
2021-03-12 09:13:41,365 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4]
2021-03-12 09:13:41,529 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:41,532 [main:149] - GENERATING call of type public fun kotlin.String.decapitalize(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@32ee748e]
2021-03-12 09:13:41,532 [main:117] - GENERATED CALL = (s.append("$x;")).substring(-590760902).decapitalize()
2021-03-12 09:13:41,533 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4], public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6f6e9f2e]]
2021-03-12 09:13:41,533 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4]
2021-03-12 09:13:41,706 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:41,708 [main:149] - GENERATING call of type public fun kotlin.String.substringAfterLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@6f6e9f2e]
2021-03-12 09:13:41,838 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:13:41,840 [main:117] - GENERATED CALL = (s.append("$x;")).substring(-1163879781).substringAfterLast('ؾ', ss)
2021-03-12 09:13:41,841 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4], public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64930c56]]
2021-03-12 09:13:41,841 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4]
2021-03-12 09:13:41,969 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:41,972 [main:149] - GENERATING call of type public fun kotlin.String.substringBeforeLast(delimiter: kotlin.Char, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@64930c56]
2021-03-12 09:13:42,103 [main:302] - generating value of type = Char true depth = 0
2021-03-12 09:13:42,106 [main:117] - GENERATED CALL = (s.append("$x;")).substring(-258003122).substringBeforeLast('ҫ', ss)
2021-03-12 09:13:42,106 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4], public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f35b080]]
2021-03-12 09:13:42,106 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4]
2021-03-12 09:13:42,239 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:42,241 [main:149] - GENERATING call of type public fun kotlin.String.trimMargin(marginPrefix: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7f35b080]
2021-03-12 09:13:42,372 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:13:42,374 [main:117] - GENERATED CALL = (s.append("$x;")).substring(1655836261).trimMargin("yfcui")
2021-03-12 09:13:42,374 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4], @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7fcd302b]]
2021-03-12 09:13:42,375 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4]
2021-03-12 09:13:42,550 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:42,553 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.trimEnd(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7fcd302b]
2021-03-12 09:13:42,553 [main:117] - GENERATED CALL = (s.append("$x;")).substring(902861172).trimEnd()
2021-03-12 09:13:42,553 [main:113] - Case = [@kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4], @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68adf98b]]
2021-03-12 09:13:42,553 [main:149] - GENERATING call of type @kotlin.SinceKotlin @kotlin.WasExperimental public final fun substring(startIndex: kotlin.Int): kotlin.String defined in kotlin.text.StringBuilder[DeserializedSimpleFunctionDescriptor@50b9eef4]
2021-03-12 09:13:42,703 [main:302] - generating value of type = Int true depth = 0
2021-03-12 09:13:42,705 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline fun kotlin.String.toUpperCase(): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@68adf98b]
2021-03-12 09:13:42,705 [main:117] - GENERATED CALL = (s.append("$x;")).substring(-1634492920).toUpperCase()
2021-03-12 09:13:42,705 [main:114] - replacement of "\n" of type String is (s.append("$x;")).substring(1648485167).prependIndent(ss)
2021-03-12 09:13:42,837 [main:33] - Trying to replace Element(STRING_TEMPLATE) on Element(DOT_QUALIFIED_EXPRESSION)
2021-03-12 09:13:42,838 [main:66] - Compilation checking started
2021-03-12 09:13:43,224 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
val arr = arrayOf("a", "b", "c", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) {
        s.append("$x;")
    }

    val ss = s.toString()
    return if (ss == "a;b;c;d;") "OK" else "fail: '$ss'"
}

var prope0 = "FAIL"

fun fu0(prope1: suspend () -> Unit) {
    prope1.startCoroutine(fu4 {
        prope0 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: Int)

var prope1: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope1 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Any
}

class Kla2() : Kla1 {
    override suspend fun fu5(): Kla0 = fu1()

    suspend fun fu6(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }

    suspend fun fu7(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }
}

fun Int.fu2() =
    if (this == 42) "OK" else toString()

fun box785(): String {
    fu0 {
        Kla2().fu6().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 1 $prope0"

    prope0 = "FAIL2"
    fu0 {
        Kla2().fu7().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 2 $prope0"

    return prope0 as String
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        x(prope0.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        prope0.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope0: Result<Any?>) {
        prope0.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        this.prope0 = prope0.getOrThrow()
    }

    var prope0: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        if (prope0.isSuccess) {
            resume(prope0.getOrThrow())
        } else {
            resumeWithException(prope0.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(prope1: Continuation<*>) {
        if (prope1 !is CoroutineStackFrame) error("Continuation " + prope1 + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope9: CoroutineStackFrame? = prope1
        while (prope9 != null) {
            prope4.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu11(method: String) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = (s.append("$x;")).substring(1648485167).prependIndent(ss))) }
    }

    fun fu12(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope2 = Kla6()

class Kla7 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu13() {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope5 = 0
        prope6 = false
        prope7 = { print("qimri")}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope1 ->
        prope5++
        prope7 = { prope1.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + (arr).contentDeepHashCode() + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope3 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope3.prope7 = {
            prope3.prope6 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 09:13:43,226 [main:107] - replacing (it, Continuation<Unit>)
2021-03-12 09:13:43,226 [main:50] - replacing it Continuation<Unit>
2021-03-12 09:13:43,226 [main:54] - Getting value of type Continuation<Unit>
2021-03-12 09:13:43,356 [main:302] - generating value of type = Continuation<Unit> false depth = 0
2021-03-12 09:13:43,494 [main:43] - GENERATING CALL OF fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Unit>)->kotlin.Unit): Contuation<Unit> = TODO()
2021-03-12 09:13:43,497 [main:61] - WITHOUT TYPE PARAMS = fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Unit>)->kotlin.Unit): Contuation<Unit> = TODO()
2021-03-12 09:13:43,948 [main:302] - generating value of type = CoroutineContext false depth = 3
2021-03-12 09:13:44,079 [main:43] - GENERATING CALL OF fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 09:13:44,082 [main:61] - WITHOUT TYPE PARAMS = fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 09:13:44,366 [main:302] - generating value of type = Key<*> false depth = 6
2021-03-12 09:13:44,505 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 09:13:44,508 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 09:13:44,986 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 9
2021-03-12 09:13:45,146 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-12 09:13:45,160 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-12 09:13:45,631 [main:302] - generating value of type = Key<ContinuationInterceptor> false depth = 12
2021-03-12 09:13:45,769 [main:43] - GENERATING CALL OF fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-12 09:13:45,773 [main:61] - WITHOUT TYPE PARAMS = fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-12 09:13:46,316 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<Element>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-12 09:13:46,316 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->ContinuationInterceptor): Key<ContinuationInterceptor> = TODO()
2021-03-12 09:13:46,316 [main:385] - Cant generate call of fun <B, E> AbstractCoroutineContextKey(baseKey: kotlin.coroutines.CoroutineContext.Key<ContinuationInterceptor>, safeCast: (element: kotlin.coroutines.CoroutineContext.Element)->*): Key<*> = TODO()
2021-03-12 09:13:46,316 [main:385] - Cant generate call of fun AbstractCoroutineContextElement(key: kotlin.coroutines.CoroutineContext.Key<*>): CoroutineContext = TODO()
2021-03-12 09:13:46,316 [main:385] - Cant generate call of fun <T> Continuation(context: kotlin.coroutines.CoroutineContext, resumeWith: (kotlin.Result<Unit>)->kotlin.Unit): Contuation<Unit> = TODO()
2021-03-12 09:13:46,317 [main:58] - GENERATED VALUE OF TYPE Continuation<Unit> = 
2021-03-12 09:13:47,284 [main:67] - randomType = Triple<Kla0, Function1<Function1<Char, Kla4>, Int>, HashMap<UByte, String>>
2021-03-12 09:13:47,439 [main:302] - generating value of type = Triple<Kla0, Function1<Function1<Char, Kla4>, Int>, HashMap<UByte, String>> false depth = 0
2021-03-12 09:13:47,601 [main:43] - GENERATING CALL OF fun <A, B, C> Triple(first: Kla0, second: Function1<Function1<Char, Kla4>, Int>, third: HashMap<UByte, String>): Triple<Kla0, Function1<Function1<Char, Kla4>, Int>, HashMap<UByte, String>> = TODO()
2021-03-12 09:13:47,604 [main:61] - WITHOUT TYPE PARAMS = fun <A, B, C> Triple(first: Kla0, second: Function1<Function1<Char, Kla4>, Int>, third: HashMap<UByte, String>): Triple<Kla0, Function1<Function1<Char, Kla4>, Int>, HashMap<UByte, String>> = TODO()
2021-03-12 09:13:47,745 [main:302] - generating value of type = Kla0 false depth = 3
2021-03-12 09:13:47,747 [main:112] - generating klass Kla0 text = @Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: Int)
2021-03-12 09:13:47,873 [main:194] - Type params = []
2021-03-12 09:13:48,000 [main:302] - generating value of type = Int true depth = 5
2021-03-12 09:13:48,003 [main:302] - generating value of type = Function1<Function1<Char, Kla4>, Int> false depth = 3
2021-03-12 09:13:48,005 [main:302] - generating value of type = Int true depth = 4
2021-03-12 09:13:48,007 [main:302] - generating value of type = HashMap<UByte, String> false depth = 3
2021-03-12 09:13:48,140 [main:43] - GENERATING CALL OF fun <K, V> hashMapOf(pairs: Pair<UByte, String>): HashMap<UByte, Strg> = TODO()
2021-03-12 09:13:48,143 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> hashMapOf(pairs: Pair<UByte, String>): HashMap<UByte, Strg> = TODO()
2021-03-12 09:13:48,274 [main:302] - generating value of type = Pair<UByte, String> false depth = 6
2021-03-12 09:13:48,408 [main:43] - GENERATING CALL OF fun <A, B> Pair(first: UByte, second: String): Pair<UByte, String> = TODO()
2021-03-12 09:13:48,411 [main:61] - WITHOUT TYPE PARAMS = fun <A, B> Pair(first: UByte, second: String): Pair<UByte, String> = TODO()
2021-03-12 09:13:48,591 [main:302] - generating value of type = UByte true depth = 9
2021-03-12 09:13:48,594 [main:302] - generating value of type = String true depth = 9
2021-03-12 09:13:48,596 [main:95] - GENERATED = Pair<UByte, String>(75.toUByte(), "buisq")
2021-03-12 09:13:48,596 [main:95] - GENERATED = hashMapOf<UByte, String>(Pair<UByte, String>(75.toUByte(), "buisq"))
2021-03-12 09:13:48,597 [main:95] - GENERATED = Triple<Kla0, Function1<Function1<Char, Kla4>, Int>, HashMap<UByte, String>>(Kla0(1626524729), {a: Function1<Char, Kla4> -> -1661034011}, hashMapOf<UByte, String>(Pair<UByte, String>(75.toUByte(), "buisq")))
2021-03-12 09:13:48,646 [main:106] - GETTING Continuation<Unit> from String
2021-03-12 09:13:48,685 [main:106] - GETTING Continuation<Unit> from StringBuilder
2021-03-12 09:13:48,719 [main:106] - GETTING Continuation<Unit> from Array<String>
2021-03-12 09:13:48,739 [main:106] - GETTING Continuation<Unit> from StringBuilder
2021-03-12 09:13:48,739 [main:111] - Cant find and generate replacement for it type Continuation<Unit>
2021-03-12 09:13:48,739 [main:107] - replacing (getOrThrow(), Any?)
2021-03-12 09:13:48,740 [main:50] - replacing getOrThrow() Any?
2021-03-12 09:13:48,740 [main:54] - Getting value of type Any?
2021-03-12 09:13:48,873 [main:302] - generating value of type = Any false depth = 0
2021-03-12 09:13:48,874 [main:58] - GENERATED VALUE OF TYPE Any? = "zwpev"
2021-03-12 09:13:48,874 [main:61] - GENERATED IS CALL =false
2021-03-12 09:13:49,039 [main:67] - randomType = HashMap<Boolean, Kla0>
2021-03-12 09:13:49,175 [main:302] - generating value of type = HashMap<Boolean, Kla0> false depth = 0
2021-03-12 09:13:49,308 [main:43] - GENERATING CALL OF fun <K, V> linkedMapOf(): HashMap<Boolean, Kla0> = TODO()
2021-03-12 09:13:49,311 [main:61] - WITHOUT TYPE PARAMS = fun <K, V> linkedMapOf(): HashMap<Boolean, Kla0> = TODO()
2021-03-12 09:13:49,446 [main:95] - GENERATED = linkedMapOf<Boolean, Kla0>()
2021-03-12 09:13:49,580 [main:106] - GETTING Any? from String
2021-03-12 09:13:49,611 [main:106] - GETTING Any? from StringBuilder
2021-03-12 09:13:49,637 [main:106] - GETTING Any? from Array<String>
2021-03-12 09:13:49,648 [main:106] - GETTING Any? from StringBuilder
2021-03-12 09:13:49,648 [main:114] - replacement of getOrThrow() of type Any? is "zwpev"
2021-03-12 09:13:49,778 [main:33] - Trying to replace Element(CALL_EXPRESSION) on Element(STRING_TEMPLATE)
2021-03-12 09:13:49,778 [main:66] - Compilation checking started
2021-03-12 09:13:50,179 [main:49] - Result = false
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
val arr = arrayOf("a", "b", "c", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) {
        s.append("$x;")
    }

    val ss = s.toString()
    return if (ss == "a;b;c;d;") "OK" else "fail: '$ss'"
}

var prope0 = "FAIL"

fun fu0(prope1: suspend () -> Unit) {
    prope1.startCoroutine(fu4 {
        prope0 = it.message!!
    })
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: Int)

var prope1: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope1 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Any
}

class Kla2() : Kla1 {
    override suspend fun fu5(): Kla0 = fu1()

    suspend fun fu6(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }

    suspend fun fu7(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }
}

fun Int.fu2() =
    if (this == 42) "OK" else toString()

fun box785(): String {
    fu0 {
        Kla2().fu6().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 1 $prope0"

    prope0 = "FAIL2"
    fu0 {
        Kla2().fu7().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 2 $prope0"

    return prope0 as String
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        x(prope0.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        prope0.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope0: Result<Any?>) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope0."zwpev"
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        this.prope0 = prope0.getOrThrow()
    }

    var prope0: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        if (prope0.isSuccess) {
            resume(prope0.getOrThrow())
        } else {
            resumeWithException(prope0.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(prope1: Continuation<*>) {
        if (prope1 !is CoroutineStackFrame) error("Continuation " + prope1 + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope9: CoroutineStackFrame? = prope1
        while (prope9 != null) {
            prope4.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu11(method: String) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope2 = Kla6()

class Kla7 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu13() {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope5 = 0
        prope6 = false
        prope7 = { print("qimri")}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope1 ->
        prope5++
        prope7 = { prope1.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + (arr).contentDeepHashCode() + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope3 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope3.prope7 = {
            prope3.prope6 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 09:13:50,181 [main:107] - replacing ({
        prope0 = it.message!!
    }, Function1<Throwable, Unit>)
2021-03-12 09:13:50,182 [main:50] - replacing {
        prope0 = it.message!!
    } Function1<Throwable, Unit>
2021-03-12 09:13:50,182 [main:54] - Getting value of type Function1<Throwable, Unit>
2021-03-12 09:13:50,313 [main:302] - generating value of type = Function1<Throwable, Unit> false depth = 0
2021-03-12 09:13:50,315 [main:302] - generating value of type = Unit false depth = 1
2021-03-12 09:13:50,452 [main:43] - GENERATING CALL OF fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 09:13:50,455 [main:61] - WITHOUT TYPE PARAMS = fun check(value: kotlin.Boolean, lazyMessage: ()->kotlin.Any): Unit = TODO()
2021-03-12 09:13:50,884 [main:302] - generating value of type = Boolean true depth = 4
2021-03-12 09:13:50,887 [main:302] - generating value of type = Function0<Any> false depth = 4
2021-03-12 09:13:50,889 [main:302] - generating value of type = Any false depth = 5
2021-03-12 09:13:50,890 [main:95] - GENERATED = check(false, { "ndtul"})
2021-03-12 09:13:50,890 [main:58] - GENERATED VALUE OF TYPE Function1<Throwable, Unit> = {a: Throwable -> check(false, { "ndtul"})}
2021-03-12 09:13:50,890 [main:61] - GENERATED IS CALL =false
2021-03-12 09:13:50,899 [main:67] - randomType = Kla2
2021-03-12 09:13:51,025 [main:302] - generating value of type = Kla2 false depth = 0
2021-03-12 09:13:51,028 [main:112] - generating klass Kla2 text = class Kla2() : Kla1 {
    override suspend fun fu5(): Kla0 = fu1()

    suspend fun fu6(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }

    suspend fun fu7(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }
}
2021-03-12 09:13:51,155 [main:194] - Type params = []
2021-03-12 09:13:51,294 [main:106] - GETTING Function1<Throwable, Unit> from StringBuilder
2021-03-12 09:13:51,319 [main:106] - GETTING Function1<Throwable, Unit> from String
2021-03-12 09:13:51,349 [main:106] - GETTING Function1<Throwable, Unit> from StringBuilder
2021-03-12 09:13:51,350 [main:106] - GETTING Function1<Throwable, Unit> from Array<String>
2021-03-12 09:13:51,365 [main:114] - replacement of {
        prope0 = it.message!!
    } of type Function1<Throwable, Unit> is {a: Throwable -> check(false, { "ndtul"})}
2021-03-12 09:13:51,506 [main:33] - Trying to replace LAMBDA_EXPRESSION on LAMBDA_EXPRESSION
2021-03-12 09:13:51,507 [main:66] - Compilation checking started
2021-03-12 09:13:52,202 [main:53] - Result = true
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
val arr = arrayOf("a", "b", "c", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) {
        s.append("$x;")
    }

    val ss = s.toString()
    return if (ss == "a;b;c;d;") "OK" else "fail: '$ss'"
}

var prope0 = "FAIL"

fun fu0(prope1: suspend () -> Unit) {
    val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope1.startCoroutine(fu4 {a: Throwable -> check(false, { "ndtul"})})
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: Int)

var prope1: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope1 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Any
}

class Kla2() : Kla1 {
    override suspend fun fu5(): Kla0 = fu1()

    suspend fun fu6(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }

    suspend fun fu7(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }
}

fun Int.fu2() =
    if (this == 42) "OK" else toString()

fun box785(): String {
    fu0 {
        Kla2().fu6().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 1 $prope0"

    prope0 = "FAIL2"
    fu0 {
        Kla2().fu7().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 2 $prope0"

    return prope0 as String
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        x(prope0.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        prope0.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope0: Result<Any?>) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope0.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        this.prope0 = prope0.getOrThrow()
    }

    var prope0: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        if (prope0.isSuccess) {
            resume(prope0.getOrThrow())
        } else {
            resumeWithException(prope0.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(prope1: Continuation<*>) {
        if (prope1 !is CoroutineStackFrame) error("Continuation " + prope1 + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope9: CoroutineStackFrame? = prope1
        while (prope9 != null) {
            prope4.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu11(method: String) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope2 = Kla6()

class Kla7 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu13() {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope5 = 0
        prope6 = false
        prope7 = { print("qimri")}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope1 ->
        prope5++
        prope7 = { prope1.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + (arr).contentDeepHashCode() + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope3 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        prope3.prope7 = {
            prope3.prope6 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 09:13:52,206 [main:107] - replacing (prope3, Kla7)
2021-03-12 09:13:52,208 [main:50] - replacing prope3 Kla7
2021-03-12 09:13:52,208 [main:54] - Getting value of type Kla7
2021-03-12 09:13:52,358 [main:302] - generating value of type = Kla7 false depth = 0
2021-03-12 09:13:52,361 [main:112] - generating klass Kla7 text = class Kla7 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu13() {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope5 = 0
        prope6 = false
        prope7 = { print("qimri")}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope1 ->
        prope5++
        prope7 = { prope1.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + (arr).contentDeepHashCode() + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}
2021-03-12 09:13:52,361 [main:58] - GENERATED VALUE OF TYPE Kla7 = Kla7()
2021-03-12 09:13:52,361 [main:61] - GENERATED IS CALL =true
2021-03-12 09:13:52,525 [main:67] - randomType = Long
2021-03-12 09:13:52,657 [main:302] - generating value of type = Long true depth = 0
2021-03-12 09:13:52,698 [main:106] - GETTING Kla7 from StringBuilder
2021-03-12 09:13:52,730 [main:106] - GETTING Kla7 from StringBuilder
2021-03-12 09:13:52,731 [main:106] - GETTING Kla7 from Array<String>
2021-03-12 09:13:52,747 [main:106] - GETTING Kla7 from String
2021-03-12 09:13:52,772 [main:114] - replacement of prope3 of type Kla7 is Kla7()
2021-03-12 09:13:52,907 [main:33] - Trying to replace Element(REFERENCE_EXPRESSION) on Element(CALL_EXPRESSION)
2021-03-12 09:13:52,908 [main:66] - Compilation checking started
2021-03-12 09:13:53,582 [main:53] - Result = true
Text:

import kotlin.coroutines.*
import kotlin.coroutines.intrinsics.*
import kotlin.coroutines.jvm.internal.CoroutineStackFrame
val arr = arrayOf("a", "b", "c", "d")

fun box(): String {
    val s = StringBuilder()

    for ((_, x) in arr.withIndex()) {
        s.append("$x;")
    }

    val ss = s.toString()
    return if (ss == "a;b;c;d;") "OK" else "fail: '$ss'"
}

var prope0 = "FAIL"

fun fu0(prope1: suspend () -> Unit) {
    val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope1.startCoroutine(fu4 {a: Throwable -> check(false, { "ndtul"})})
}

@Suppress("UNSUPPORTED_FEATURE")
inline class Kla0(val s: Int)

var prope1: Continuation<Any>? = null

suspend fun <Ty0> fu1(): Ty0 = suspendCoroutine {
    @Suppress("UNCHECKED_CAST")
    prope1 = it as Continuation<Any>
}

interface Kla1 {
    suspend fun fu5(): Any
}

class Kla2() : Kla1 {
    override suspend fun fu5(): Kla0 = fu1()

    suspend fun fu6(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }

    suspend fun fu7(): Int {
        val prope8: Kla1 = this
        return (prope8.fu5() as Kla0).s
    }
}

fun Int.fu2() =
    if (this == 42) "OK" else toString()

fun box785(): String {
    fu0 {
        Kla2().fu6().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 1 $prope0"

    prope0 = "FAIL2"
    fu0 {
        Kla2().fu7().fu2()
    }
    prope1?.resumeWithException(IllegalStateException("OK"))
    if (prope0 != "OK") return "FAIL 2 $prope0"

    return prope0 as String
}

fun <Ty0> fu3(x: (Ty0) -> Unit): Continuation<Ty0> = object: Continuation<Ty0> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        x(prope0.getOrThrow())
    }
}

fun fu4(x: (Throwable) -> Unit): Continuation<Any?> = object: Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        prope0.exceptionOrNull()?.let(x)
    }
}

open class Kla3(override val context: CoroutineContext = EmptyCoroutineContext) : Continuation<Any?> {
    companion object Kla9 : Kla3()
    override fun resumeWith(prope0: Result<Any?>) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope0.getOrThrow()
    }
}

class Kla4 : Continuation<Any?> {
    override val context = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Any?>) {
        this.prope0 = prope0.getOrThrow()
    }

    var prope0: Any? = null
}

abstract class Kla5<in Ty0> : Continuation<Ty0> {
    override val context: CoroutineContext = EmptyCoroutineContext
    override fun resumeWith(prope0: Result<Ty0>) {
        if (prope0.isSuccess) {
            resume(prope0.getOrThrow())
        } else {
            resumeWithException(prope0.exceptionOrNull()!!)
        }
    }

    abstract fun resumeWithException(exception: Throwable)
    abstract fun resume(value: Ty0)
}

class Kla6 {
    private val prope4 = arrayListOf<StackTraceElement?>()

    suspend fun fu10() = suspendCoroutineUninterceptedOrReturn<Unit> {
        fu10(it)
    }

    fun fu10(prope1: Continuation<*>) {
        if (prope1 !is CoroutineStackFrame) error("Continuation " + prope1 + " is not subtype of CoroutineStackFrame")
        prope4.clear()
        var prope9: CoroutineStackFrame? = prope1
        while (prope9 != null) {
            prope4.add(prope9.getStackTraceElement())
            prope9 = prope9.callerFrame
        }
    }

    fun fu11(method: String) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope4.find { it?.methodName?.startsWith(method) == true }?.let { error("tail-call optimization miss: method at " + it + " has state-machine " +
                prope4.joinToString(separator = "\n")) }
    }

    fun fu12(method: String) {
        prope4.find { it?.methodName?.startsWith(method) == true } ?: error("tail-call optimization hit: method " + method + " has no state-machine " +
                prope4.joinToString(separator = "\n"))
    }
}

val prope2 = Kla6()

class Kla7 {
    private var prope5 = 0
    var prope6 = false

    var prope7: () -> Unit = {}

    fun fu13() {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope5 = 0
        prope6 = false
        prope7 = { print("qimri")}
    }

    suspend fun fu14() = suspendCoroutine<Unit> { prope1 ->
        prope5++
        prope7 = { prope1.resume(Unit) }
    }

    fun fu15(numberOfSuspensions: Int, checkFinished: Boolean = true) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
for (i in 1..numberOfSuspensions) {
            if (prope5 != i) error("Wrong state-machine generated: suspendHere should be called exactly once in one state. Expected " + i + ", got " + prope5)
            prope7()
        }
        if (prope5 != numberOfSuspensions)
            error("Wrong state-machine generated: wrong number of overall suspensions. Expected " + (arr).contentDeepHashCode() + ", got " + prope5)
        if (prope6) error("Wrong state-machine generated: it is finished early")
        prope7()
        if (checkFinished && !prope6) error("Wrong state-machine generated: it is not finished yet")
    }
}

val prope3 = Kla7()

object Kla8: Kla5<Unit>() {
    override val context: CoroutineContext
        get() = EmptyCoroutineContext

    override fun resume(value: Unit) {
        val s = StringBuilder()
val ss = s.toString()
val arr = arrayOf("a", "b", "c", "d")
prope3.prope7 = {
            Kla7().prope6 = true
        }
    }

    override fun resumeWithException(exception: Throwable) {
        throw exception
    }
}


2021-03-12 09:13:53,587 [main:107] - replacing ("Wrong state-machine generated: wrong number of overall suspensions. Expected " + (arr).contentDeepHashCode() + ", got " + prope5, String)
2021-03-12 09:13:53,587 [main:50] - replacing "Wrong state-machine generated: wrong number of overall suspensions. Expected " + (arr).contentDeepHashCode() + ", got " + prope5 String
2021-03-12 09:13:53,587 [main:54] - Getting value of type String
2021-03-12 09:13:53,745 [main:302] - generating value of type = String true depth = 0
2021-03-12 09:13:53,747 [main:58] - GENERATED VALUE OF TYPE String = "xhlaa"
2021-03-12 09:13:53,747 [main:61] - GENERATED IS CALL =false
2021-03-12 09:13:53,892 [main:67] - randomType = Long
2021-03-12 09:13:54,025 [main:302] - generating value of type = Long true depth = 0
2021-03-12 09:13:54,077 [main:149] - GENERATING call of type public open fun toChar(): kotlin.Char defined in kotlin.Long[DeserializedSimpleFunctionDescriptor@4883c638]
2021-03-12 09:13:54,077 [main:149] - GENERATING call of type @kotlin.internal.InlineOnly public inline operator fun kotlin.Char.plus(other: kotlin.String): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@7eba01f5]
2021-03-12 09:13:54,078 [main:78] - Generated call from random type = (8661862071829940132).toChar().plus(val ss = s.toString()
2021-03-12 09:13:54,078 [main:106] - GETTING String from String
2021-03-12 09:13:54,105 [main:113] - Case = [public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@16012652]]
2021-03-12 09:13:54,105 [main:149] - GENERATING call of type public fun kotlin.String.replaceBeforeLast(delimiter: kotlin.Char, replacement: kotlin.String, missingDelimiterValue: kotlin.String = ...): kotlin.String defined in kotlin.text[DeserializedSimpleFunctionDescriptor@16012652]
2021-03-12 09:13:54,239 [main:302] - generating value of type = Char true depth = 0
