// Bug happens on JVM 
// FILE: 1.kt
package b


import a.Foo
// IGNORE_BACKEND_FIR: JVM_IR
class My {
    lateinit var x: String
        private set

    fun init(arg: String, f: (String) -> String) { x = f(arg) }
}

fun box0(): String {
    return Foo(42.0).x
}

// Auto-generated by GeneratePrimitiveVsObjectEqualityTestData. Do not edit!
//KT-2997 Automatically cast error (Array)
// FILE: 2.kt

@file:Suppress("SECONDARY_CONSTRUCTOR_WITH_BODY_INSIDE_INLINE_CLASS")package a


import b.My


inline class Foo(val x: String) {
    constructor(y: Int) : this("OK") {
        {
        101
    }
        
val asIterable = List<Int>::asIterable
try
{if (y != 11) "OK"}
catch (e: UnsupportedOperationException) { }
finally{
    val xs = listOf<Any?>(x)
    val ys = listOf<Any?>(y)
    if (!xs.contains(y)) throw AssertionError()
    if (xs[0] != ys[0]) throw AssertionError()
    if (xs[0] !== ys[0]) throw AssertionError()
}

        
val longProgression = 1L downTo 1L
try
{return Unit}
catch(intProgression: Exception){}
finally { "hmmm" }

    }

    constructor(B: Double) : this("")
}

fun box() = if(arrayOfNulls<Int>(10).isArrayOf<java.lang.Integer>()) "OK" else "fail"
