{"initTreeText":"// WITH_REFLECT\n// TARGET_BACKEND: JVM\n\npackage root\n\nimport kotlin.reflect.KClass\n\ninline class IcInt(val x: Int)\ninline class IcLong(val l: Long)\ninline class IcAny(val a: Any?)\ninline class IcOverIc(val o: IcLong)\n\nfun check(c: KClass<*>, s: String) {\n    if (c.toString() != s) error(\"Fail, expected: $s, actual: $c\")\n}\n\nfun check(actual: String?, expected: String) {\n    if (actual != expected) error(\"Fail, expected: $expected, actual: $actual\")\n}\n\ninline fun <reified T> reifiedCheck(asString: String, simpleName: String) {\n    check(T::class, asString)\n    check(T::class.simpleName, simpleName)\n}\n\nfun box(): String {\n    val i = IcInt(0)\n    val l = IcLong(0)\n    val a = IcAny(\"foo\")\n    val o = IcOverIc(IcLong(0))\n\n    check(i::class, \"class root.IcInt\")\n    check(l::class, \"class root.IcLong\")\n    check(a::class, \"class root.IcAny\")\n    check(o::class, \"class root.IcOverIc\")\n    check(1u::class, \"class kotlin.UInt\")\n\n    check(i::class.simpleName, \"IcInt\")\n    check(l::class.simpleName, \"IcLong\")\n    check(a::class.simpleName, \"IcAny\")\n    check(o::class.simpleName, \"IcOverIc\")\n    check(1u::class.simpleName, \"UInt\")\n\n    reifiedCheck<IcInt>(\"class root.IcInt\", \"IcInt\")\n    reifiedCheck<IcLong>(\"class root.IcLong\", \"IcLong\")\n    reifiedCheck<IcAny>(\"class root.IcAny\", \"IcAny\")\n    reifiedCheck<IcOverIc>(\"class root.IcOverIc\", \"IcOverIc\")\n    reifiedCheck<UInt>(\"class kotlin.UInt\", \"UInt\")\n\n    val arrI = arrayOf(i)\n    check(arrI[0]::class, \"class root.IcInt\")\n\n    val arrL = arrayOf(l)\n    check(arrL[0]::class, \"class root.IcLong\")\n\n    val arrA = arrayOf(a)\n    check(arrA[0]::class, \"class root.IcAny\")\n\n    val arrO = arrayOf(o)\n    check(arrO[0]::class, \"class root.IcOverIc\")\n\n    val arrU = arrayOf(1u)\n    check(arrU[0]::class, \"class kotlin.UInt\")\n\n    check(IcInt::class, \"class root.IcInt\")\n    check(IcLong::class, \"class root.IcLong\")\n    check(IcAny::class, \"class root.IcAny\")\n    check(IcOverIc::class, \"class root.IcOverIc\")\n    check(UInt::class, \"class kotlin.UInt\")\n\n    return \"OK\"\n}","mutationList":[{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"KClass<*>"},"to":{"first":"NULLABLE_TYPE","second":"(KClass<*>)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"String"},"to":{"first":"NULLABLE_TYPE","second":"(String)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"String"},"to":{"first":"NULLABLE_TYPE","second":"(String)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"String"},"to":{"first":"NULLABLE_TYPE","second":"(String)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"String"},"to":{"first":"NULLABLE_TYPE","second":"(String)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"Int"},"to":{"first":"NULLABLE_TYPE","second":"(Int)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"Long"},"to":{"first":"NULLABLE_TYPE","second":"(Long)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"IcLong"},"to":{"first":"NULLABLE_TYPE","second":"(IcLong)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"IcInt"},"to":{"first":"NULLABLE_TYPE","second":"(IcInt)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"IcLong"},"to":{"first":"NULLABLE_TYPE","second":"(IcLong)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"IcAny"},"to":{"first":"NULLABLE_TYPE","second":"(IcAny)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"IcOverIc"},"to":{"first":"NULLABLE_TYPE","second":"(IcOverIc)?"}}},{"first":"REPLACE","second":{"from":{"first":"USER_TYPE","second":"UInt"},"to":{"first":"NULLABLE_TYPE","second":"(UInt)?"}}},{"first":"REPLACE","second":{"from":{"first":"CALL_EXPRESSION","second":"error(\"Fail, expected: $expected, actual: $actual\")"},"to":{"first":"POSTFIX_EXPRESSION","second":"error(\"Fail, expected: $expected, actual: $actual\")!!"}}},{"first":"REPLACE","second":{"from":{"first":"CALL_EXPRESSION","second":"check(a::class, \"class root.IcAny\")"},"to":{"first":"POSTFIX_EXPRESSION","second":"check(a::class, \"class root.IcAny\")!!"}}},{"first":"REPLACE","second":{"from":{"first":"CALL_EXPRESSION","second":"check(o::class, \"class root.IcOverIc\")"},"to":{"first":"POSTFIX_EXPRESSION","second":"check(o::class, \"class root.IcOverIc\")!!"}}},{"first":"REPLACE","second":{"from":{"first":"CALL_EXPRESSION","second":"check(1u::class.simpleName, \"UInt\")"},"to":{"first":"POSTFIX_EXPRESSION","second":"check(1u::class.simpleName, \"UInt\")!!"}}},{"first":"REPLACE","second":{"from":{"first":"CALL_EXPRESSION","second":"reifiedCheck<(UInt)?>(\"class kotlin.UInt\", \"UInt\")"},"to":{"first":"POSTFIX_EXPRESSION","second":"reifiedCheck<(UInt)?>(\"class kotlin.UInt\", \"UInt\")!!"}}},{"first":"REPLACE","second":{"from":{"first":"CALL_EXPRESSION","second":"check(IcInt::class, \"class root.IcInt\")"},"to":{"first":"POSTFIX_EXPRESSION","second":"check(IcInt::class, \"class root.IcInt\")!!"}}},{"first":"REPLACE","second":{"from":{"first":"CALL_EXPRESSION","second":"IcInt(0)"},"to":{"first":"POSTFIX_EXPRESSION","second":"IcInt(0)!!"}}},{"first":"REPLACE","second":{"from":{"first":"REFERENCE_EXPRESSION","second":"s"},"to":{"first":"POSTFIX_EXPRESSION","second":"s!!"}}},{"first":"REPLACE","second":{"from":{"first":"STRING_TEMPLATE","second":"\"IcInt\""},"to":{"first":"POSTFIX_EXPRESSION","second":"\"IcInt\"!!"}}},{"first":"REPLACE","second":{"from":{"first":"CLASS_LITERAL_EXPRESSION","second":"arrO[0]::class"},"to":{"first":"POSTFIX_EXPRESSION","second":"arrO[0]::class!!"}}},{"first":"REPLACE","second":{"from":{"first":"STRING_TEMPLATE","second":"\"class kotlin.UInt\""},"to":{"first":"POSTFIX_EXPRESSION","second":"\"class kotlin.UInt\"!!"}}},{"first":"REPLACE","second":{"from":{"first":"STRING_TEMPLATE","second":"\"class kotlin.UInt\""},"to":{"first":"POSTFIX_EXPRESSION","second":"\"class kotlin.UInt\"!!"}}},{"first":"REPLACE","second":{"from":{"first":"ARRAY_ACCESS_EXPRESSION","second":"arrL[0]"},"to":{"first":"POSTFIX_EXPRESSION","second":"arrL[0]!!"}}},{"first":"REPLACE","second":{"from":{"first":"REFERENCE_EXPRESSION","second":"o"},"to":{"first":"POSTFIX_EXPRESSION","second":"o!!"}}},{"first":"REPLACE","second":{"from":{"first":"REFERENCE_EXPRESSION","second":"a"},"to":{"first":"POSTFIX_EXPRESSION","second":"a!!"}}},{"first":"REPLACE","second":{"from":{"first":"REFERENCE_EXPRESSION","second":"arrU"},"to":{"first":"POSTFIX_EXPRESSION","second":"arrU!!"}}},{"first":"REPLACE","second":{"from":{"first":"INTEGER_CONSTANT","second":"0"},"to":{"first":"POSTFIX_EXPRESSION","second":"0!!"}}},{"first":"REPLACE","second":{"from":{"first":"INTEGER_LITERAL","second":"0"},"to":{"first":"INTEGER_LITERAL","second":"1452575500"}}},{"first":"REPLACE","second":{"from":{"first":"INTEGER_LITERAL","second":"1u"},"to":{"first":"INTEGER_LITERAL","second":"361414884"}}},{"first":"REPLACE","second":{"from":{"first":"INTEGER_CONSTANT","second":"0"},"to":{"first":"PREFIX_EXPRESSION","second":"-1203870582"}}},{"first":"REPLACE","second":{"from":{"first":"INTEGER_LITERAL","second":"1u"},"to":{"first":"INTEGER_LITERAL","second":"106993208"}}},{"first":"REPLACE","second":{"from":{"first":"INTEGER_CONSTANT","second":"0"},"to":{"first":"PREFIX_EXPRESSION","second":"-1491256291"}}},{"first":"REPLACE","second":{"from":{"first":"INTEGER_CONSTANT","second":"0"},"to":{"first":"PREFIX_EXPRESSION","second":"-401723781"}}},{"first":"REPLACE","second":{"from":{"first":"INTEGER_LITERAL","second":"0"},"to":{"first":"INTEGER_LITERAL","second":"1459737104"}}},{"first":"REPLACE","second":{"from":{"first":"INTEGER_LITERAL","second":"0"},"to":{"first":"INTEGER_LITERAL","second":"1874986958"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"IcOverIc"},"to":{"first":"REGULAR_STRING_PART","second":"wbozg"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"IcInt"},"to":{"first":"REGULAR_STRING_PART","second":"rvhab"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"IcAny"},"to":{"first":"REGULAR_STRING_PART","second":"phruh"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"IcOverIc"},"to":{"first":"REGULAR_STRING_PART","second":"ufbgz"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"class root.IcInt"},"to":{"first":"REGULAR_STRING_PART","second":"kcupq"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"class root.IcLong"},"to":{"first":"REGULAR_STRING_PART","second":"msmuo"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"class root.IcOverIc"},"to":{"first":"REGULAR_STRING_PART","second":"lcjbb"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"class kotlin.UInt"},"to":{"first":"REGULAR_STRING_PART","second":"rggxd"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"UInt"},"to":{"first":"REGULAR_STRING_PART","second":"eelxg"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"class kotlin.UInt"},"to":{"first":"REGULAR_STRING_PART","second":"nyqlj"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"class root.IcInt"},"to":{"first":"REGULAR_STRING_PART","second":"jncvv"}}},{"first":"REPLACE","second":{"from":{"first":"REGULAR_STRING_PART","second":"class kotlin.UInt"},"to":{"first":"REGULAR_STRING_PART","second":"kpuzu"}}},{"first":"REPLACE","second":{"from":{"first":"STRING_TEMPLATE","second":"\"Fail, expected: $expected, actual: $actual\""},"to":{"first":"STRING_TEMPLATE","second":"\"Fail, expected: $expected, actual: nbjli\""}}},{"first":"SWAPLINES","second":{"from":{"first":null,"second":""},"to":{"first":null,"second":"    check(UInt::class, \"kpuzu\"!!)"}}},{"first":"SWAPLINES","second":{"from":{"first":null,"second":"    check(o::class, \"class root.IcOverIc\")!!"},"to":{"first":null,"second":"    check(o::class.simpleName, \"wbozg\")"}}},{"first":"SWAPLINES","second":{"from":{"first":null,"second":""},"to":{"first":null,"second":"    val arrO = arrayOf(o!!)"}}},{"first":"SWAPLINES","second":{"from":{"first":null,"second":"    check(l::class, \"class root.IcLong\")"},"to":{"first":null,"second":"    check(o::class.simpleName, \"wbozg\")"}}},{"first":"SWAPLINES","second":{"from":{"first":null,"second":"    reifiedCheck<(IcOverIc)?>(\"class root.IcOverIc\", \"ufbgz\")"},"to":{"first":null,"second":""}}},{"first":"SWAPLINES","second":{"from":{"first":null,"second":"    check(361414884::class, \"class kotlin.UInt\")"},"to":{"first":null,"second":"    check(IcLong::class, \"class root.IcLong\")"}}},{"first":"SWAPLINES","second":{"from":{"first":null,"second":"    reifiedCheck<(IcAny)?>(\"class root.IcAny\", \"phruh\")"},"to":{"first":null,"second":""}}},{"first":"SWAPLINES","second":{"from":{"first":null,"second":""},"to":{"first":null,"second":"inline class IcInt(val x: (Int)?)"}}},{"first":"SWAPLINES","second":{"from":{"first":null,"second":"    check(l::class.simpleName, \"IcLong\")"},"to":{"first":null,"second":""}}},{"first":"SWAPLINES","second":{"from":{"first":null,"second":"// TARGET_BACKEND: JVM"},"to":{"first":null,"second":""}}},{"first":"SWAP","second":{"from":{"first":"IDENTIFIER","second":"IcInt"},"to":{"first":"REGULAR_STRING_PART","second":"l"}}},{"first":"SWAP","second":{"from":{"first":"REGULAR_STRING_PART","second":"eelxg"},"to":{"first":"REGULAR_STRING_PART","second":"wbozg"}}},{"first":"INSERT","second":{"from":null,"to":{"first":"PACKAGE_DIRECTIVE","second":""}}}],"finalText":"\nfun \n()  {\narrayOf([]!!)\n}"}